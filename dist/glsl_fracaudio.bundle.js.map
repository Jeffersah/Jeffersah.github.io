{"version":3,"file":"glsl_fracaudio.bundle.js","mappings":"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","sources":["webpack://trading-game/./node_modules/classnames/index.js","webpack://trading-game/./node_modules/react-dropdown/dist/index.js","webpack://trading-game/./src/projects/common/3d/GlslHelpers.ts","webpack://trading-game/./src/projects/glsl-fracaudio/ColorFunctions/FireColor.ts","webpack://trading-game/./src/projects/glsl-fracaudio/ColorFunctions/GrayscaleColor.ts","webpack://trading-game/./src/projects/glsl-fracaudio/ColorFunctions/HueColor.ts","webpack://trading-game/./src/projects/glsl-fracaudio/ColorFunctions/PaperColor.ts","webpack://trading-game/./src/views/common/ObjDropdownComponent.tsx","webpack://trading-game/./src/projects/glsl-fracaudio/AmplitudeMode.ts","webpack://trading-game/./src/projects/glsl-fracaudio/FractalAudioPlayer.ts","webpack://trading-game/./src/projects/glsl-fracaudio/Fractals/BurningShip.ts","webpack://trading-game/./src/projects/glsl-fracaudio/Fractals/Feather.ts","webpack://trading-game/./src/projects/glsl-fracaudio/Fractals/Mandelbrot.ts","webpack://trading-game/./src/projects/glsl-fracaudio/Fractals/Square.ts","webpack://trading-game/./src/projects/glsl-fracaudio/GlslFrameRenderer.ts","webpack://trading-game/./src/projects/glsl-fracaudio/ShaderCode.ts","webpack://trading-game/./src/projects/glsl-fracaudio/RendererWrapperComponent.ts","webpack://trading-game/./src/views/projects/glsl-fracaudio/GlslFractalAudioComponent.tsx"],"sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar DEFAULT_PLACEHOLDER_STRING = 'Select...';\n\nvar Dropdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dropdown, _Component);\n\n  function Dropdown(props) {\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dropdown).call(this, props));\n    _this.state = {\n      selected: _this.parseValue(props.value, props.options) || {\n        label: typeof props.placeholder === 'undefined' ? DEFAULT_PLACEHOLDER_STRING : props.placeholder,\n        value: ''\n      },\n      isOpen: false\n    };\n    _this.dropdownRef = (0, _react.createRef)();\n    _this.mounted = true;\n    _this.handleDocumentClick = _this.handleDocumentClick.bind(_assertThisInitialized(_this));\n    _this.fireChangeEvent = _this.fireChangeEvent.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.value !== prevProps.value) {\n        if (this.props.value) {\n          var selected = this.parseValue(this.props.value, this.props.options);\n\n          if (selected !== this.state.selected) {\n            this.setState({\n              selected: selected\n            });\n          }\n        } else {\n          this.setState({\n            selected: {\n              label: typeof this.props.placeholder === 'undefined' ? DEFAULT_PLACEHOLDER_STRING : this.props.placeholder,\n              value: ''\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('click', this.handleDocumentClick, false);\n      document.addEventListener('touchend', this.handleDocumentClick, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n      document.removeEventListener('click', this.handleDocumentClick, false);\n      document.removeEventListener('touchend', this.handleDocumentClick, false);\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(event) {\n      if (this.props.onFocus && typeof this.props.onFocus === 'function') {\n        this.props.onFocus(this.state.isOpen);\n      }\n\n      if (event.type === 'mousedown' && event.button !== 0) return;\n      event.stopPropagation();\n      event.preventDefault();\n\n      if (!this.props.disabled) {\n        this.setState({\n          isOpen: !this.state.isOpen\n        });\n      }\n    }\n  }, {\n    key: \"parseValue\",\n    value: function parseValue(value, options) {\n      var option;\n\n      if (typeof value === 'string') {\n        for (var i = 0, num = options.length; i < num; i++) {\n          if (options[i].type === 'group') {\n            var match = options[i].items.filter(function (item) {\n              return item.value === value;\n            });\n\n            if (match.length) {\n              option = match[0];\n            }\n          } else if (typeof options[i].value !== 'undefined' && options[i].value === value) {\n            option = options[i];\n          }\n        }\n      }\n\n      return option || value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value, label) {\n      var newState = {\n        selected: {\n          value: value,\n          label: label\n        },\n        isOpen: false\n      };\n      this.fireChangeEvent(newState);\n      this.setState(newState);\n    }\n  }, {\n    key: \"fireChangeEvent\",\n    value: function fireChangeEvent(newState) {\n      if (newState.selected !== this.state.selected && this.props.onChange) {\n        this.props.onChange(newState.selected);\n      }\n    }\n  }, {\n    key: \"renderOption\",\n    value: function renderOption(option) {\n      var _classes;\n\n      var value = option.value;\n\n      if (typeof value === 'undefined') {\n        value = option.label || option;\n      }\n\n      var label = option.label || option.value || option;\n      var isSelected = value === this.state.selected.value || value === this.state.selected;\n      var classes = (_classes = {}, _defineProperty(_classes, \"\".concat(this.props.baseClassName, \"-option\"), true), _defineProperty(_classes, option.className, !!option.className), _defineProperty(_classes, 'is-selected', isSelected), _classes);\n      var optionClass = (0, _classnames[\"default\"])(classes);\n      return _react[\"default\"].createElement(\"div\", {\n        key: value,\n        className: optionClass,\n        onMouseDown: this.setValue.bind(this, value, label),\n        onClick: this.setValue.bind(this, value, label),\n        role: \"option\",\n        \"aria-selected\": isSelected ? 'true' : 'false'\n      }, label);\n    }\n  }, {\n    key: \"buildMenu\",\n    value: function buildMenu() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          options = _this$props.options,\n          baseClassName = _this$props.baseClassName;\n      var ops = options.map(function (option) {\n        if (option.type === 'group') {\n          var groupTitle = _react[\"default\"].createElement(\"div\", {\n            className: \"\".concat(baseClassName, \"-title\")\n          }, option.name);\n\n          var _options = option.items.map(function (item) {\n            return _this2.renderOption(item);\n          });\n\n          return _react[\"default\"].createElement(\"div\", {\n            className: \"\".concat(baseClassName, \"-group\"),\n            key: option.name,\n            role: \"listbox\",\n            tabIndex: \"-1\"\n          }, groupTitle, _options);\n        } else {\n          return _this2.renderOption(option);\n        }\n      });\n      return ops.length ? ops : _react[\"default\"].createElement(\"div\", {\n        className: \"\".concat(baseClassName, \"-noresults\")\n      }, \"No options found\");\n    }\n  }, {\n    key: \"handleDocumentClick\",\n    value: function handleDocumentClick(event) {\n      if (this.mounted) {\n        if (!this.dropdownRef.current.contains(event.target)) {\n          if (this.state.isOpen) {\n            this.setState({\n              isOpen: false\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isValueSelected\",\n    value: function isValueSelected() {\n      return typeof this.state.selected === 'string' || this.state.selected.value !== '';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames, _classNames2, _classNames3, _classNames4, _classNames5;\n\n      var _this$props2 = this.props,\n          baseClassName = _this$props2.baseClassName,\n          controlClassName = _this$props2.controlClassName,\n          placeholderClassName = _this$props2.placeholderClassName,\n          menuClassName = _this$props2.menuClassName,\n          arrowClassName = _this$props2.arrowClassName,\n          arrowClosed = _this$props2.arrowClosed,\n          arrowOpen = _this$props2.arrowOpen,\n          className = _this$props2.className;\n      var disabledClass = this.props.disabled ? 'Dropdown-disabled' : '';\n      var placeHolderValue = typeof this.state.selected === 'string' ? this.state.selected : this.state.selected.label;\n      var dropdownClass = (0, _classnames[\"default\"])((_classNames = {}, _defineProperty(_classNames, \"\".concat(baseClassName, \"-root\"), true), _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, 'is-open', this.state.isOpen), _classNames));\n      var controlClass = (0, _classnames[\"default\"])((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(baseClassName, \"-control\"), true), _defineProperty(_classNames2, controlClassName, !!controlClassName), _defineProperty(_classNames2, disabledClass, !!disabledClass), _classNames2));\n      var placeholderClass = (0, _classnames[\"default\"])((_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(baseClassName, \"-placeholder\"), true), _defineProperty(_classNames3, placeholderClassName, !!placeholderClassName), _defineProperty(_classNames3, 'is-selected', this.isValueSelected()), _classNames3));\n      var menuClass = (0, _classnames[\"default\"])((_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(baseClassName, \"-menu\"), true), _defineProperty(_classNames4, menuClassName, !!menuClassName), _classNames4));\n      var arrowClass = (0, _classnames[\"default\"])((_classNames5 = {}, _defineProperty(_classNames5, \"\".concat(baseClassName, \"-arrow\"), true), _defineProperty(_classNames5, arrowClassName, !!arrowClassName), _classNames5));\n\n      var value = _react[\"default\"].createElement(\"div\", {\n        className: placeholderClass\n      }, placeHolderValue);\n\n      var menu = this.state.isOpen ? _react[\"default\"].createElement(\"div\", {\n        className: menuClass,\n        \"aria-expanded\": \"true\"\n      }, this.buildMenu()) : null;\n      return _react[\"default\"].createElement(\"div\", {\n        ref: this.dropdownRef,\n        className: dropdownClass\n      }, _react[\"default\"].createElement(\"div\", {\n        className: controlClass,\n        onMouseDown: this.handleMouseDown.bind(this),\n        onTouchEnd: this.handleMouseDown.bind(this),\n        \"aria-haspopup\": \"listbox\"\n      }, value, _react[\"default\"].createElement(\"div\", {\n        className: \"\".concat(baseClassName, \"-arrow-wrapper\")\n      }, arrowOpen && arrowClosed ? this.state.isOpen ? arrowOpen : arrowClosed : _react[\"default\"].createElement(\"span\", {\n        className: arrowClass\n      }))), menu);\n    }\n  }]);\n\n  return Dropdown;\n}(_react.Component);\n\nDropdown.defaultProps = {\n  baseClassName: 'Dropdown'\n};\nvar _default = Dropdown;\nexports[\"default\"] = _default;\n","export function loadShader(gl: WebGLRenderingContext, type: number, source: string) {\r\n    const shader = gl.createShader(type);\r\n    // Send the source to the shader object\r\n    gl.shaderSource(shader, source);\r\n    // Compile the shader program\r\n    gl.compileShader(shader);\r\n    // See if it compiled successfully\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n      console.error(source);\r\n      alert(`An error occurred compiling the ${(type === gl.VERTEX_SHADER ? 'vertex' : type === gl.FRAGMENT_SHADER ? 'fragment' : '')} shaders: ` + gl.getShaderInfoLog(shader));\r\n      gl.deleteShader(shader);\r\n      return undefined;\r\n    }\r\n\r\n    return shader;\r\n}\r\n\r\n\r\nexport function initShaderProgram(gl: WebGLRenderingContext, vertexShaderSource: string, fragmentShaderSource: string) {\r\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\r\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\r\n\r\n    // Create the shader program\r\n\r\n    const shaderProgram = gl.createProgram();\r\n    gl.attachShader(shaderProgram, vertexShader);\r\n    gl.attachShader(shaderProgram, fragmentShader);\r\n    gl.linkProgram(shaderProgram);\r\n\r\n    // If creating the shader program failed, alert\r\n\r\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n      alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\r\n      return undefined;\r\n    }\r\n\r\n    return shaderProgram;\r\n  }\r\n\r\n\r\nexport function shaderDraw(gl: WebGLRenderingContext, shader: WebGLProgram, positionBuffer: WebGLBuffer, positionNumComponents: number, renderMode: 'triangle'|'tristrip'|'trifan', bufferOffset: number, bufferCount: number, bindUniforms: (gl: WebGLRenderingContext) => void) {\r\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);  // Clear to black, fully opaque\r\n    gl.clearDepth(1.0);                 // Clear everything\r\n    gl.enable(gl.DEPTH_TEST);           // Enable depth testing\r\n    gl.depthFunc(gl.LEQUAL);            // Near things obscure far things\r\n\r\n    // Clear the canvas before we start drawing on it.\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    // Tell WebGL how to pull out the positions from the position\r\n    // buffer into the vertexPosition attribute.\r\n    {\r\n      const type = gl.FLOAT;    // the data in the buffer is 32bit floats\r\n      const normalize = false;  // don't normalize\r\n      const stride = 0;         // how many bytes to get from one set of values to the next\r\n                                // 0 = use type and numComponents above\r\n      const offset = 0;         // how many bytes inside the buffer to start from\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n      gl.vertexAttribPointer(\r\n            gl.getAttribLocation(shader, 'aVertexPosition'),\r\n            positionNumComponents,\r\n            type,\r\n            normalize,\r\n            stride,\r\n            offset);\r\n      gl.enableVertexAttribArray(\r\n        gl.getAttribLocation(shader, 'aVertexPosition'));\r\n    }\r\n\r\n    // Tell WebGL to use our program when drawing\r\n\r\n    gl.useProgram(shader);\r\n    bindUniforms(gl);\r\n    gl.drawArrays(\r\n      renderMode === 'triangle' ? gl.TRIANGLES :\r\n      renderMode === 'tristrip' ? gl.TRIANGLE_STRIP :\r\n      gl.TRIANGLE_FAN, bufferOffset, bufferCount);\r\n}\r\n\r\n\r\nexport function shaderDrawMultiple(gl: WebGLRenderingContext, shader: WebGLProgram, positionBuffer: WebGLBuffer, positionNumComponents: number, renderMode: 'triangle'|'tristrip'|'trifan', drawCounts: number, getGeom: (i: number) => {bufferOffset: number, bufferCount: number}, bindUniforms: (gl: WebGLRenderingContext, i: number) => void) {\r\n  gl.clearColor(0.0, 0.0, 0.0, 1.0);  // Clear to black, fully opaque\r\n  gl.clearDepth(1.0);                 // Clear everything\r\n  gl.enable(gl.DEPTH_TEST);           // Enable depth testing\r\n  gl.depthFunc(gl.LEQUAL);            // Near things obscure far things\r\n\r\n  // Clear the canvas before we start drawing on it.\r\n\r\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n  // Tell WebGL how to pull out the positions from the position\r\n  // buffer into the vertexPosition attribute.\r\n  {\r\n    const type = gl.FLOAT;    // the data in the buffer is 32bit floats\r\n    const normalize = false;  // don't normalize\r\n    const stride = 0;         // how many bytes to get from one set of values to the next\r\n                              // 0 = use type and numComponents above\r\n    const offset = 0;         // how many bytes inside the buffer to start from\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n    gl.vertexAttribPointer(\r\n          gl.getAttribLocation(shader, 'aVertexPosition'),\r\n          positionNumComponents,\r\n          type,\r\n          normalize,\r\n          stride,\r\n          offset);\r\n    gl.enableVertexAttribArray(\r\n      gl.getAttribLocation(shader, 'aVertexPosition'));\r\n  }\r\n\r\n  // Tell WebGL to use our program when drawing\r\n\r\n  gl.useProgram(shader);\r\n  for(let i = 0; i < drawCounts; i++) {\r\n    bindUniforms(gl, i);\r\n    let {bufferOffset, bufferCount} = getGeom(i);\r\n    gl.drawArrays(\r\n      renderMode === 'triangle' ? gl.TRIANGLES :\r\n      renderMode === 'tristrip' ? gl.TRIANGLE_STRIP :\r\n      gl.TRIANGLE_FAN, bufferOffset, bufferCount);\r\n  }\r\n}\r\n\r\nexport function fragmentShaderOnlyDraw(gl: WebGLRenderingContext, shader: WebGLProgram, positionBuffer: WebGLBuffer, bindUniforms: (gl: WebGLRenderingContext) => void) {\r\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);  // Clear to black, fully opaque\r\n    gl.clearDepth(1.0);                 // Clear everything\r\n    gl.enable(gl.DEPTH_TEST);           // Enable depth testing\r\n    gl.depthFunc(gl.LEQUAL);            // Near things obscure far things\r\n\r\n    // Clear the canvas before we start drawing on it.\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    // Tell WebGL how to pull out the positions from the position\r\n    // buffer into the vertexPosition attribute.\r\n    {\r\n      const numComponents = 2;  // pull out 2 values per iteration\r\n      const type = gl.FLOAT;    // the data in the buffer is 32bit floats\r\n      const normalize = false;  // don't normalize\r\n      const stride = 0;         // how many bytes to get from one set of values to the next\r\n                                // 0 = use type and numComponents above\r\n      const offset = 0;         // how many bytes inside the buffer to start from\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n      gl.vertexAttribPointer(\r\n            gl.getAttribLocation(shader, 'aVertexPosition'),\r\n            numComponents,\r\n            type,\r\n            normalize,\r\n            stride,\r\n            offset);\r\n      gl.enableVertexAttribArray(\r\n        gl.getAttribLocation(shader, 'aVertexPosition'));\r\n    }\r\n\r\n    // Tell WebGL to use our program when drawing\r\n\r\n    gl.useProgram(shader);\r\n    bindUniforms(gl);\r\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\r\n}\r\n\r\nexport function fragmentShaderOnlyInitBuffer(gl: WebGLRenderingContext, left?: number, top?: number, right?: number, bottom?: number) {\r\n     // Create a buffer for the square's positions.\r\n     const positionBuffer = gl.createBuffer();\r\n\r\n     // Select the positionBuffer as the one to apply buffer\r\n     // operations to from here out.\r\n     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n\r\n     const l = left ?? -1.0;\r\n     const r = right ?? 1.0;\r\n     const t = top ?? -1.0;\r\n     const b = bottom ?? 1.0;\r\n \r\n     // Now create an array of positions for the square.\r\n     const positions = [\r\n         b, r,\r\n         t, r,\r\n         b, l,\r\n         t, l,\r\n     ];\r\n \r\n     // Now pass the list of positions into WebGL to build the\r\n     // shape. We do this by creating a Float32Array from the\r\n     // JavaScript array, then use it to fill the current buffer.\r\n     gl.bufferData(gl.ARRAY_BUFFER,\r\n                   new Float32Array(positions),\r\n                   gl.STATIC_DRAW);\r\n \r\n     return positionBuffer;\r\n}\r\n\r\nexport function initGLBuffer(gl: WebGLRenderingContext, components: number[]) {\r\n  const positionBuffer = gl.createBuffer();\r\n\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n\r\n  gl.bufferData(gl.ARRAY_BUFFER,\r\n                new Float32Array(components),\r\n                gl.STATIC_DRAW);\r\n\r\n  return positionBuffer;\r\n}\r\n\r\nexport const defaultVertexShader = `attribute vec4 aVertexPosition;\r\nvarying vec3 vPos;\r\nvoid main() {\r\n  vPos = vec3(aVertexPosition.xy, 0.0);\r\n  gl_Position = aVertexPosition;\r\n}`;\r\n\r\nexport const defaultWebGl2VertexShader = `#version 300 es\r\nin vec4 aVertexPosition;\r\nout vec3 vPos;\r\nvoid main() {\r\n  vPos = vec3(aVertexPosition.xy, 0.0);\r\n  gl_Position = aVertexPosition;\r\n}`;","import { IColorFunction } from \"./IColorFunction\";\r\n\r\nclass FireColor implements IColorFunction {\r\n    Name = 'Fire';\r\n    shaderFunction = `\r\nvec3 floatToColor(float perc) {\r\n    if(perc <= 0.5) {\r\n        return vec3(perc * 2.0, perc, 0.0);\r\n    }\r\n    perc = (perc - 0.5) * 2.0;\r\n    return vec3(1.0, 0.5 + perc / 2.0, perc);\r\n}\r\n    `;\r\n}\r\n\r\nconst fireColor = new FireColor();\r\nexport default fireColor;","import { IColorFunction } from \"./IColorFunction\";\r\n\r\nclass GrayscaleColor implements IColorFunction {\r\n    Name = 'Grayscale';\r\n    shaderFunction = `\r\nvec3 floatToColor(float perc) {\r\n    return vec3(perc, perc, perc);\r\n}\r\n    `;\r\n}\r\n\r\nconst grayscaleColor = new GrayscaleColor();\r\nexport default grayscaleColor;","import { IColorFunction } from \"./IColorFunction\";\r\n\r\nclass HueColor implements IColorFunction {\r\n    Name = 'Hue';\r\n    shaderFunction = `\r\n\r\nfloat fmod(float a, float b) {\r\n    return a - (b * floor(a/b));\r\n}\r\n\r\nfloat hsvComponentToRgb(vec3 hsv, float n) {\r\n    float k = fmod((n + hsv.x * 6.0), 6.0);\r\n    return hsv.z - hsv.z * hsv.y * max(min(min(k, 4.0-k),1.0), 0.0);\r\n}\r\n\r\nvec3 floatToColor(float perc) {\r\n    if(perc == 1.0) {\r\n        return vec3(0, 0, 0);\r\n    }\r\n    vec3 hsv = vec3(perc, 1.0, 1.0);\r\n    return vec3(\r\n        hsvComponentToRgb(hsv, 5.0),\r\n        hsvComponentToRgb(hsv, 3.0),\r\n        hsvComponentToRgb(hsv, 1.0)\r\n    );\r\n}\r\n    `;\r\n}\r\n\r\nconst hueColor = new HueColor();\r\nexport default hueColor;","import { IColorFunction } from \"./IColorFunction\";\r\n\r\nclass PaperColor implements IColorFunction {\r\n    Name = 'Paper';\r\n    shaderFunction = `\r\nvec3 floatToColor(float perc) {\r\n    if(perc == 1.0) {\r\n        return vec3(0, 0, 0);\r\n    }\r\n    return vec3(0.8, 0.8, 0.8) - (perc * 0.8);\r\n}\r\n    `;\r\n}\r\n\r\nconst pueColor = new PaperColor();\r\nexport default pueColor;","import * as React from 'react';\r\nimport Dropdown from 'react-dropdown';\r\n\r\nexport function ObjDropdownComponent<T>(props: {options: T[], getName: (item:T) => string, value: T, onChange: (item:T)=>void}) {\r\n    const names = props.options.map(props.getName);\r\n    return <Dropdown options={names} value={props.getName(props.value)} onChange={chng => props.onChange(props.options.find(v => props.getName(v) === chng.value))}></Dropdown>\r\n}","import { Complex } from \"../common\";\r\nimport { IFractal } from \"./Fractals/IFractal\";\r\n\r\nexport interface IAmplitudeFunction {\r\n    Name: string;\r\n    GetAmplitude(min: Complex, max: Complex, fractal: IFractal): { min: Complex, max: Complex };\r\n}\r\n\r\nclass DefaultAmplitudeFunction implements IAmplitudeFunction {\r\n    Name: string = 'Fill';\r\n    GetAmplitude(min: Complex, max: Complex, fractal: IFractal): {min: Complex, max: Complex}\r\n    {\r\n        return {min, max};\r\n    }\r\n}\r\n\r\nclass FixedAspectAmplitudeFunction implements IAmplitudeFunction {\r\n    Name: string = 'Square';\r\n    GetAmplitude(min: Complex, max: Complex, fractal: IFractal): {min: Complex, max: Complex}\r\n    {\r\n        const range = Complex.subtract(max, min);\r\n        if(range.real === range.imaginary) return {min, max};\r\n        if(range.real > range.imaginary) {\r\n            var deltaSize = (range.real - range.imaginary)/2;\r\n            var delta = new Complex(0, deltaSize);\r\n\r\n            return { min: Complex.subtract(min, delta), max: Complex.add(max, delta) };\r\n        }\r\n        else {\r\n            var deltaSize = (range.imaginary - range.real)/2;\r\n            var delta = new Complex(deltaSize, 0);\r\n\r\n            return { min: Complex.subtract(min, delta), max: Complex.add(max, delta) };\r\n        }\r\n    }\r\n}\r\n\r\nclass AbsoluteAmplitudeFunction implements IAmplitudeFunction {\r\n    Name: string = 'Absolute';\r\n    GetAmplitude(min: Complex, max: Complex, fractal: IFractal): {min: Complex, max: Complex}\r\n    {\r\n        return {\r\n            min: new Complex(-fractal.MaxAmplitude, -fractal.MaxAmplitude),\r\n            max: new Complex(fractal.MaxAmplitude, fractal.MaxAmplitude)\r\n        };\r\n    }\r\n}\r\n\r\nconst AllAspectFunctions = [ new DefaultAmplitudeFunction(), new FixedAspectAmplitudeFunction(), new AbsoluteAmplitudeFunction() ];\r\nexport default AllAspectFunctions;","import { start } from \"repl\";\r\nimport { ResizeCanvas } from \"../common/CanvasHelpers\";\r\nimport { Complex } from \"../common/Complex\";\r\nimport { IAmplitudeFunction } from \"./AmplitudeMode\";\r\nimport { IFractal } from \"./Fractals/IFractal\";\r\n\r\nconst sampleRate = 8820; // 44100;\r\nconst upsampleRate = 8820;\r\nconst sampleTimeSeconds = 1;\r\nconst GAIN = 0.3;\r\n\r\nexport default class FractalAudioPlayer {\r\n    private ctx: CanvasRenderingContext2D;\r\n    private currentAudio: PlayingAudio;\r\n    private audio: AudioContext;\r\n    private gain: GainNode;\r\n\r\n    constructor(private canvas: HTMLCanvasElement, private amplitude: IAmplitudeFunction)\r\n    {\r\n        ResizeCanvas(canvas, canvas.clientWidth, canvas.clientHeight);\r\n        this.ctx = canvas.getContext('2d');\r\n        this.audio = new AudioContext();\r\n        this.gain = this.audio.createGain();\r\n        this.gain.gain.value = GAIN;\r\n        this.gain.connect(this.audio.destination);\r\n    }\r\n\r\n    public Cleanup() {\r\n        this.audio.close();\r\n    }\r\n\r\n    public Play(point: Complex, fractal: IFractal){\r\n        this.currentAudio?.stop();\r\n        this.currentAudio = new PlayingAudio(this.audio, point, fractal, this.amplitude);\r\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n        this.ctx.strokeStyle = 'red';\r\n\r\n        this.currentAudio.start(this.gain);\r\n\r\n        this.ctx.beginPath();\r\n        const range = Complex.add(this.currentAudio.maxBounds, Complex.negate(this.currentAudio.minBounds));\r\n        for(let i = 0; i < this.currentAudio.arr.length; i++) {\r\n            const xp = (this.currentAudio.arr[i].real - this.currentAudio.minBounds.real) / range.real;\r\n            const yp = (this.currentAudio.arr[i].imaginary - this.currentAudio.minBounds.imaginary) / range.imaginary ;\r\n            \r\n            const tgtX = xp * this.canvas.width;\r\n            const tgtY = yp * this.canvas.height;\r\n            if(i === 0) this.ctx.moveTo(tgtX, tgtY);\r\n            else this.ctx.lineTo(tgtX, tgtY);\r\n        }\r\n        this.ctx.stroke();\r\n    }\r\n}\r\n\r\nclass PlayingAudio {\r\n    arr: Complex[];\r\n    minBounds: Complex;\r\n    maxBounds: Complex;\r\n    source: AudioBufferSourceNode;\r\n    constructor(private audio: AudioContext, private point: Complex, private fractal: IFractal, private amplitude: IAmplitudeFunction) {\r\n        this.arr = new Array(sampleRate * sampleTimeSeconds);\r\n\r\n        const init = point;\r\n        let z = fractal.Init(init);\r\n        this.minBounds = new Complex(Infinity,Infinity);\r\n        this.maxBounds = new Complex(-Infinity,-Infinity);\r\n        for(let i = 0; i < this.arr.length; i++) {\r\n            z = fractal.Iterate(z, init);\r\n            this.arr[i] = new Complex(z.real, z.imaginary);\r\n            this.minBounds.real = Math.min(this.minBounds.real, z.real);\r\n            this.minBounds.imaginary = Math.min(this.minBounds.imaginary, z.imaginary);\r\n            \r\n            this.maxBounds.real = Math.max(this.maxBounds.real, z.real);\r\n            this.maxBounds.imaginary = Math.max(this.maxBounds.imaginary, z.imaginary);\r\n        }\r\n\r\n        const result = amplitude.GetAmplitude(this.minBounds, this.maxBounds, fractal);\r\n        this.minBounds = result.min;\r\n        this.maxBounds = result.max;\r\n    }\r\n\r\n    start(tgt: GainNode) {\r\n        const buffer = this.audio.createBuffer(2, upsampleRate * sampleTimeSeconds, upsampleRate);\r\n        const source = this.audio.createBufferSource();\r\n\r\n        const channelData = [buffer.getChannelData(0), buffer.getChannelData(1)];\r\n        const range = Complex.add(this.maxBounds, Complex.negate(this.minBounds));\r\n        for(let i = 0; i < channelData[0].length; i++) {\r\n\r\n            const index = (i * sampleRate)/upsampleRate;\r\n            const prev = Math.max(0, Math.floor(index));\r\n            const next = Math.min(this.arr.length - 1, Math.ceil(index));\r\n            const percent = index % 1;\r\n\r\n            const interpReal = upsampleRate != sampleRate ? interp(this.arr[prev].real, this.arr[next].real, percent) : this.arr[prev].real;\r\n            const interpImaginary = upsampleRate != sampleRate ? interp(this.arr[prev].imaginary, this.arr[next].imaginary, percent) : this.arr[prev].imaginary;\r\n\r\n            const xp = (interpReal - this.minBounds.real) / range.real;\r\n            const yp = (interpImaginary - this.minBounds.imaginary) / range.imaginary;\r\n \r\n            channelData[0][i] = xp * 2 - 1; \r\n            channelData[1][i] = yp * 2 - 1;\r\n        }\r\n\r\n        source.buffer = buffer;\r\n\r\n        source.connect(tgt);\r\n        source.start();\r\n\r\n        this.source = source;\r\n    }\r\n\r\n    stop() {\r\n        this.source?.stop();\r\n    }\r\n}\r\n\r\n\r\nfunction interp(prev: number, next: number, perc: number)\r\n{\r\n    perc = (-Math.cos(perc) + 1) / 2;\r\n    return prev * (1-perc) + next * perc;\r\n}","import { Complex } from \"../../common\";\r\nimport { IFractal } from \"./IFractal\";\r\n\r\nclass BurningShip implements IFractal\r\n{\r\n    Name: string = 'Burning Ship';\r\n    ShaderCode: string = `\r\n    vec2 init_fractal(vec2 coords) {\r\n        return vec2(0,0);\r\n    }\r\n\r\n    vec2 step_fractal(vec2 v, vec2 c) {\r\n        float tx = v.x * v.x - v.y * v.y - c.x;\r\n        float ty = 2.0 * abs(v.x * v.y) - c.y;\r\n        return vec2(tx, ty);\r\n    }\r\n    `;\r\n\r\n    MaxAmplitude: number = 16;\r\n\r\n    Init (c: Complex):Complex{\r\n        return c;\r\n    }\r\n\r\n    Iterate(z: Complex, c: Complex): Complex\r\n    {\r\n        const tx = z.real * z.real - z.imaginary * z.imaginary - c.real;\r\n        const ty = 2 * Math.abs(z.real * z.imaginary) - c.imaginary;\r\n        return new Complex(tx, ty);\r\n    }\r\n}\r\n\r\nconst burningShip = new BurningShip();\r\nexport default burningShip;","import { Complex } from \"../../common\";\r\nimport { IFractal } from \"./IFractal\";\r\n\r\nclass FeatherFractal implements IFractal\r\n{\r\n    Name: string = 'Feather';\r\n    ShaderCode: string = `\r\n    vec2 init_fractal(vec2 coords) {\r\n        return coords;\r\n    }\r\n\r\n    vec2 step_fractal(vec2 v, vec2 c) {\r\n        vec2 denom = scalar_mult(v, v);\r\n        denom.x += 1.0;\r\n        vec2 num = cplx_mult(cplx_mult(v, v), v);\r\n        vec2 result = cplx_div(num, denom);\r\n        return result + c;\r\n    }\r\n    `;\r\n\r\n    MaxAmplitude: number = 32;\r\n\r\n    Init (c: Complex):Complex{\r\n        return c;\r\n    }\r\n\r\n    Iterate(z: Complex, c: Complex): Complex\r\n    {\r\n        return Complex.div(\r\n            Complex.mult(z, z).multiplyWith(z),\r\n            Complex.scalarMultiply(z, z).addWith(new Complex(1, 0))\r\n        ).addWith(c);\r\n    }\r\n}\r\n\r\nconst featherFractal = new FeatherFractal();\r\nexport default featherFractal;","import { Complex } from \"../../common\";\r\nimport { IFractal } from \"./IFractal\";\r\n\r\nclass Mandelbrot implements IFractal\r\n{\r\n    Name: string = 'Mandelbrot';\r\n    ShaderCode: string = `\r\n    vec2 init_fractal(vec2 coords) {\r\n        return coords;\r\n    }\r\n\r\n    vec2 step_fractal(vec2 v, vec2 c) {\r\n        return cplx_mult(v, v) + c;\r\n    }\r\n    `;\r\n\r\n    MaxAmplitude: number = 2;\r\n\r\n    Init (c: Complex):Complex{\r\n        return c;\r\n    }\r\n\r\n    Iterate(z: Complex, c: Complex): Complex\r\n    {\r\n        return Complex.mult(z, z).addWith(c);\r\n    }\r\n}\r\n\r\nconst mandelbrot = new Mandelbrot();\r\nexport default mandelbrot;","import { Complex } from \"../../common\";\r\nimport { IFractal } from \"./IFractal\";\r\n\r\nclass SqureFractal implements IFractal\r\n{\r\n    Name: string = 'Square';\r\n    ShaderCode: string = `\r\n    vec2 init_fractal(vec2 coords) {\r\n        return coords;\r\n    }\r\n\r\n    vec2 step_fractal(vec2 v, vec2 c) {\r\n        float dotz = dot(v, v);\r\n        vec2 scalarc = scalar_mult(c, c);\r\n        return v * dotz - cplx_mult(v, scalarc);\r\n    }\r\n    `;\r\n\r\n    MaxAmplitude: number = 32;\r\n\r\n    Init (c: Complex):Complex{\r\n        return c;\r\n    }\r\n\r\n    Iterate(z: Complex, c: Complex): Complex\r\n    {\r\n        const dotz = z.absSq();\r\n        const dotc = Complex.scalarMultiply(c, c);\r\n        return Complex.subtract(\r\n            Complex.scalarMultiply(z, dotz, dotz),\r\n            Complex.mult(c, dotc)\r\n        );\r\n    }\r\n}\r\n\r\nconst squareFractal = new SqureFractal();\r\nexport default squareFractal;","import { Range, Range2d } from \"../common\";\r\nimport * as GLSL from \"../common/3d/GlslHelpers\";\r\nimport { ResizeCanvas } from \"../common/CanvasHelpers\";\r\nimport Point from \"../common/position/Point\";\r\nimport Rect from \"../common/position/Rectangle\";\r\nimport { IColorFunction } from \"./ColorFunctions/IColorFunction\";\r\nimport { IFractal } from \"./Fractals/IFractal\";\r\nimport { CreateShaderCode } from \"./ShaderCode\";\r\n\r\nconst SCROLL_DIV = 8;\r\nconst SCROLL_POW = 1.1;\r\n\r\nexport default class GlslFrameRenderer {\r\n    protected gl: WebGLRenderingContext;\r\n    protected program: WebGLProgram;\r\n    protected buffer: WebGLBuffer;\r\n\r\n    private cursor_anchor: Point | null;\r\n    private mm_down: boolean;\r\n\r\n    protected canvasRange: Range2d;\r\n    protected windowRange: Range2d;\r\n\r\n    private fragment_code:string;\r\n\r\n    private touch_anchors: { [key: number]: Point }\r\n\r\n    constructor(private canvas: HTMLCanvasElement, private fractal: IFractal, private color: IColorFunction, private bounds: { x: number, y: number, w: number, h: number}, private onMiddleClick?: (pt: Point) => void) {\r\n        ResizeCanvas(canvas, canvas.clientWidth, canvas.clientHeight);\r\n        this.cursor_anchor = null;\r\n        this.mm_down = false;\r\n        this.gl = canvas.getContext('webgl');\r\n        this.touch_anchors = {};\r\n        \r\n        this.canvasRange = new Range2d(new Range(0, canvas.clientWidth), new Range(0, canvas.clientHeight));\r\n        this.windowRange = new Range2d(new Range(-1, 1), new Range(-1, (canvas.height / canvas.width)));\r\n\r\n        this.fragment_code = CreateShaderCode(fractal, color);\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\r\n        this.initProgram();\r\n    }\r\n\r\n    initProgram() {\r\n        this.program = GLSL.initShaderProgram(this.gl, GLSL.defaultVertexShader, this.fragment_code);\r\n        this.buffer = GLSL.fragmentShaderOnlyInitBuffer(this.gl);\r\n    }\r\n\r\n    run() {\r\n        this.renderFrame();\r\n\r\n        this.canvas.addEventListener('mousedown', e => {\r\n            if(e.button === 0) {\r\n                this.cursor_anchor = new Point(e.offsetX, e.offsetY);\r\n            }\r\n            else if(e.button === 1) {\r\n                this.mm_down = true;\r\n                let perc = this.canvasRange.GetPercentage(e.offsetX, e.offsetY);\r\n                perc = this.windowRange.GetValue(perc.x, 1-perc.y);\r\n                if(this.onMiddleClick !== undefined) {\r\n                    this.onMiddleClick(new Point(perc.x, perc.y));\r\n                }\r\n            }\r\n            e.preventDefault();\r\n        });\r\n        this.canvas.addEventListener('mouseup', e => {\r\n            if(e.button === 0)\r\n                this.cursor_anchor = null;\r\n            else if(e.button === 1)\r\n                this.mm_down = false;\r\n            e.preventDefault();\r\n        });\r\n        this.canvas.addEventListener('mousemove', e => {\r\n            if(this.cursor_anchor != null) {\r\n                const dx = e.offsetX - this.cursor_anchor.x;\r\n                const dy = e.offsetY - this.cursor_anchor.y;\r\n                this.panCameraByScreenDelta(new Point(dx, dy));\r\n                this.cursor_anchor = new Point(e.offsetX, e.offsetY);\r\n                this.renderFrame();\r\n                e.preventDefault();\r\n            }\r\n            if(this.mm_down && this.onMiddleClick !== undefined){\r\n                let perc = this.canvasRange.GetPercentage(e.offsetX, e.offsetY);\r\n                perc = this.windowRange.GetValue(perc.x, 1-perc.y);\r\n                this.onMiddleClick(new Point(perc.x, perc.y));\r\n            }\r\n        });\r\n        this.canvas.addEventListener('wheel', e => {\r\n            const scalePercentage = e.deltaY / SCROLL_DIV;\r\n            const scalePerc = Math.pow(SCROLL_POW, scalePercentage);\r\n            const perc = this.canvasRange.GetPercentage(e.offsetX, e.offsetY);\r\n\r\n            this.windowRange.AspectScale(scalePerc, perc.x, 1-perc.y);\r\n            this.renderFrame();\r\n            e.preventDefault();\r\n        });\r\n        this.canvas.addEventListener('touchstart', ev => { \r\n            if(ev.targetTouches.length >= 3 || ev.targetTouches.length === 0) return;\r\n            for(let i = 0; i < ev.targetTouches.length; i++){\r\n                const touch = ev.targetTouches.item(i);\r\n                this.touch_anchors[touch.identifier] = touchOffset(touch);\r\n            }\r\n            ev.preventDefault();\r\n        });\r\n        this.canvas.addEventListener('touchmove', ev => {\r\n            if(ev.touches.length >= 3 || ev.touches.length === 0) return;\r\n            const moves: [Point, Point][] = [];\r\n            for(let i = 0; i < ev.targetTouches.length; i++){\r\n                const touch = ev.targetTouches.item(i);\r\n                const pos = touchOffset(touch);\r\n                const oldPos = this.touch_anchors[touch.identifier];\r\n                if(oldPos === undefined) return;\r\n                moves.push([oldPos, pos]);\r\n                this.touch_anchors[touch.identifier] = pos;\r\n            }\r\n\r\n            if(moves.length === 1) {\r\n                // Just pan the camera\r\n                this.panCameraByScreenDelta(Point.subtract(moves[0][1], moves[0][0]));\r\n            }\r\n            else if(moves.length === 2) {\r\n                // Average the start + End positions to find the move amt\r\n                const dragStart = Point.multiply(Point.add(moves[0][0], moves[1][0]), 0.5, 0.5);\r\n                const dragEnd = Point.multiply(Point.add(moves[0][1], moves[1][1]), 0.5, 0.5);\r\n                const worldPos = this.panCameraByScreenDelta(dragEnd.subtractWith(dragStart));\r\n                const startDist = Point.subtract(moves[0][0], moves[1][0]).length();\r\n                const endDist = Point.subtract(moves[0][1], moves[1][1]).length();\r\n                const scaleAmt = startDist / endDist;\r\n                this.windowRange.AspectScale(scaleAmt, worldPos.x, 1-worldPos.y);\r\n            }\r\n\r\n            this.renderFrame();\r\n            ev.preventDefault();\r\n        });\r\n        this.canvas.addEventListener('touchend', ev => {\r\n            this.touch_anchors = {};\r\n            ev.preventDefault();\r\n        });\r\n        this.canvas.addEventListener('touchcancel', ev => {\r\n            this.touch_anchors = {};\r\n            ev.preventDefault();\r\n        });\r\n    }\r\n\r\n    private panCameraByScreenDelta(delta: Point) {\r\n        const perc = this.canvasRange.GetPercentage(delta.x, delta.y);\r\n        this.windowRange.ShiftByPercentage(-perc.x, perc.y);\r\n        return perc;\r\n    }\r\n\r\n    renderFrame() {\r\n        GLSL.fragmentShaderOnlyDraw(this.gl, this.program, this.buffer, gl => {\r\n            gl.uniform1f(gl.getUniformLocation(this.program, 'MAX_ABSSQ'), this.fractal.MaxAmplitude);\r\n            gl.uniform2fv(gl.getUniformLocation(this.program, 'window_pos'), [this.windowRange.xRange.min, this.windowRange.yRange.min]);\r\n            gl.uniform2fv(gl.getUniformLocation(this.program, 'window_size'), [this.windowRange.xRange.Length(), this.windowRange.yRange.Length()]);\r\n        });\r\n    }\r\n\r\n    cleanup() {\r\n        \r\n    }\r\n}\r\n\r\nfunction touchOffset(touch: Touch): Point {\r\n    const tgt = (touch.target as HTMLElement).getBoundingClientRect();\r\n    return new Point(touch.pageX - tgt.left, touch.pageY - tgt.top);\r\n}","import { IColorFunction } from \"./ColorFunctions/IColorFunction\";\r\nimport { IFractal } from \"./Fractals/IFractal\";\r\n\r\nexport function CreateShaderCode(fractal: IFractal, color: IColorFunction): string {\r\n    return GENERAL_SHADER\r\n        .replace(\"[[[FRACTAL_CODE]]]\", fractal.ShaderCode)\r\n        .replace(\"[[[COLOR_CODE]]]\", color.shaderFunction);;\r\n}\r\n\r\nexport const GENERAL_SHADER = `\r\nprecision highp float;\r\nvarying vec3 vPos;\r\nuniform vec2 window_pos;\r\nuniform vec2 window_size;\r\nuniform float MAX_ABSSQ;\r\n\r\nconst int MAX_ITER = 256;\r\n\r\nvec2 cplx_mult(vec2 a, vec2 b) {\r\n    return vec2(a.x * b.x - a.y * b.y, a.x * b.y + a.y * b.x);\r\n}\r\n\r\nvec2 cplx_div(vec2 a, vec2 b) {\r\n    float denom = dot(b, b);\r\n    return vec2 (\r\n        (a.x * b.x + a.y * b.y) / denom,\r\n        (a.y * b.x - a.x * b.y) / denom \r\n    );\r\n}\r\n\r\nvec2 scalar_mult(vec2 a, vec2 b) {\r\n    return vec2( a.x * b.x, a.y * b.y);\r\n}\r\n\r\nfloat cplx_abssq(vec2 v) {\r\n    return dot(v, v);\r\n}\r\n\r\n[[[FRACTAL_CODE]]]\r\n\r\nfloat calcIterations(vec2 coords) {\r\n    vec2 roll = init_fractal(coords);\r\n    for(int iter = 0; iter < MAX_ITER; iter++) {\r\n        roll = step_fractal(roll, coords);\r\n        if (cplx_abssq(roll) >= MAX_ABSSQ) {\r\n            return float(iter)/float(MAX_ITER);\r\n        }\r\n    }\r\n    return 1.0;\r\n}\r\n\r\n[[[COLOR_CODE]]]\r\n\r\nvoid main() {\r\n    vec2 adjpos = vPos.xy;\r\n    adjpos += 1.0;\r\n    adjpos /= 2.0;\r\n    // adjpos is now 0, 1\r\n    // Convert that to world-space\r\n    adjpos = window_pos + adjpos * window_size;\r\n\r\n    float mb_perc = calcIterations(adjpos);\r\n    gl_FragColor = vec4(floatToColor(mb_perc), 1.0);\r\n}`;","import { Complex, Range, Range2d } from \"../common\";\r\nimport * as GLSL from \"../common/3d/GlslHelpers\";\r\nimport { ResizeCanvas } from \"../common/CanvasHelpers\";\r\nimport Point from \"../common/position/Point\";\r\nimport { IColorFunction } from \"./ColorFunctions/IColorFunction\";\r\nimport FractalAudioPlayer from \"./FractalAudioPlayer\";\r\nimport { IFractal } from \"./Fractals/IFractal\";\r\nimport GlslFrameRenderer from \"./GlslFrameRenderer\";\r\nimport { CreateShaderCode } from \"./ShaderCode\";\r\n\r\nexport default class RendererWrapperComponent {\r\n    private mandelbrot: GlslFrameRenderer;\r\n\r\n    constructor(private canvas: HTMLCanvasElement, fractal: IFractal, private colorFunction: IColorFunction, private audioPlayer: FractalAudioPlayer) {\r\n\r\n        this.mandelbrot = new GlslFrameRenderer(canvas, fractal, colorFunction, { x: -2, y: -2, w: 4, h:4 }, (jpt) => {\r\n            this.playSound(jpt, fractal);\r\n        });\r\n        this.mandelbrot.run();\r\n    }\r\n\r\n    cleanup() {\r\n        this.mandelbrot.cleanup();\r\n    }\r\n\r\n    playSound(pt: Point, fractal: IFractal)\r\n    {\r\n        this.audioPlayer.Play(new Complex(pt.x, pt.y), fractal);\r\n    }\r\n}","import * as React from 'react';\r\nimport AllAmplitudeFunctions, { IAmplitudeFunction } from '../../../projects/glsl-fracaudio/AmplitudeMode';\r\nimport fireColor from '../../../projects/glsl-fracaudio/ColorFunctions/FireColor';\r\nimport grayscaleColor from '../../../projects/glsl-fracaudio/ColorFunctions/GrayscaleColor';\r\nimport hueColor from '../../../projects/glsl-fracaudio/ColorFunctions/HueColor';\r\nimport paperColor from '../../../projects/glsl-fracaudio/ColorFunctions/PaperColor';\r\nimport { IColorFunction } from '../../../projects/glsl-fracaudio/ColorFunctions/IColorFunction';\r\nimport FractalAudioPlayer from '../../../projects/glsl-fracaudio/FractalAudioPlayer';\r\nimport burningShip from '../../../projects/glsl-fracaudio/Fractals/BurningShip';\r\nimport featherFractal from '../../../projects/glsl-fracaudio/Fractals/Feather';\r\nimport { IFractal } from '../../../projects/glsl-fracaudio/Fractals/IFractal';\r\nimport mandelbrot from '../../../projects/glsl-fracaudio/Fractals/Mandelbrot';\r\nimport squareFractal from '../../../projects/glsl-fracaudio/Fractals/Square';\r\nimport RendererWrapperComponent from '../../../projects/glsl-fracaudio/RendererWrapperComponent';\r\nimport { ObjDropdownComponent } from '../../common/ObjDropdownComponent';\r\n\r\nconst fractals: IFractal[] = [\r\n    mandelbrot,\r\n    burningShip,\r\n    featherFractal,\r\n    squareFractal\r\n];\r\nconst colors: IColorFunction[] = [\r\n    grayscaleColor,\r\n    fireColor,\r\n    hueColor,\r\n    paperColor\r\n];\r\n\r\nexport default function GlslFractalAudioComponent() {\r\n    const canvas = React.useRef<HTMLCanvasElement>();\r\n    const overlayCanvas = React.useRef<HTMLCanvasElement>();\r\n    const [frac, setFrac] = React.useState<IFractal>(mandelbrot);\r\n    const [amplitude, setAmplitude] = React.useState<IAmplitudeFunction>(AllAmplitudeFunctions[0]);\r\n    const [color, setColor] = React.useState<IColorFunction>(fireColor);\r\n\r\n    React.useEffect(() => {\r\n        const audio = new FractalAudioPlayer(overlayCanvas.current, amplitude);\r\n        const renderer = new RendererWrapperComponent(canvas.current, frac, color, audio);\r\n        return () => \r\n        {\r\n            renderer.cleanup();\r\n            audio.Cleanup();\r\n        }\r\n    }, [canvas, frac, amplitude, color]);\r\n\r\n\r\n    return <div className='conway conway_body full_body'>\r\n        <div style={{ width: '80%', height: '100%', position: 'absolute' }}>\r\n            <canvas ref={canvas} style={{ position: 'absolute', width: '100%', height: '100%', top:0, left:0 }}></canvas>\r\n            <canvas ref={overlayCanvas} style={{ position: 'absolute', width: '100%', height: '100%', pointerEvents: 'none', top:0, left:0}}></canvas>\r\n        </div>\r\n        <div style={{ width: '20%', height: '100%', background: '#333', position: 'absolute', left: '80%' }}>\r\n            <label>Fractal:</label>\r\n            <ObjDropdownComponent options={fractals} value={frac} getName={f => f.Name} onChange={f => setFrac(f)} />\r\n            <label>Color:</label>\r\n            <ObjDropdownComponent options={colors} value={color} getName={c => c.Name} onChange={c => setColor(c)} />\r\n            <label>Amplitude Function:</label>\r\n            <ObjDropdownComponent options={AllAmplitudeFunctions} value={amplitude} getName={a => a.Name} onChange={a => setAmplitude(a)} />\r\n\r\n            <div style={{ bottom: 0, position: 'absolute', color: '#999', textAlign: 'center', width: '100%' }}>Inspired by <a href='https://www.youtube.com/watch?v=GiAj9WW1OfQ'>this video</a></div>\r\n        </div>\r\n    </div>;\r\n}"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","obj","_react","__esModule","_typeof","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","prototype","desc","set","_interopRequireWildcard","_classnames","WeakMap","Symbol","iterator","constructor","_defineProperty","value","enumerable","configurable","writable","_defineProperties","target","props","descriptor","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","DEFAULT_PLACEHOLDER_STRING","Dropdown","_Component","_this","instance","Constructor","TypeError","_classCallCheck","this","_possibleConstructorReturn","state","selected","parseValue","options","label","placeholder","isOpen","dropdownRef","createRef","mounted","handleDocumentClick","bind","fireChangeEvent","protoProps","subClass","superClass","create","_inherits","prevProps","setState","document","addEventListener","removeEventListener","event","onFocus","type","button","stopPropagation","preventDefault","disabled","option","num","match","items","filter","item","newState","onChange","_classes","isSelected","concat","baseClassName","className","optionClass","createElement","onMouseDown","setValue","onClick","role","_this2","_this$props","ops","map","groupTitle","name","_options","renderOption","tabIndex","current","contains","_classNames","_classNames2","_classNames3","_classNames4","_classNames5","_this$props2","controlClassName","placeholderClassName","menuClassName","arrowClassName","arrowClosed","arrowOpen","disabledClass","placeHolderValue","dropdownClass","controlClass","placeholderClass","isValueSelected","menuClass","arrowClass","menu","buildMenu","ref","handleMouseDown","onTouchEnd","Component","defaultProps","_default","loadShader","gl","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","alert","VERTEX_SHADER","FRAGMENT_SHADER","getShaderInfoLog","deleteShader","initShaderProgram","vertexShaderSource","fragmentShaderSource","vertexShader","fragmentShader","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","shaderDrawMultiple","positionBuffer","positionNumComponents","renderMode","drawCounts","getGeom","bindUniforms","clearColor","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","FLOAT","normalize","stride","offset","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","getAttribLocation","enableVertexAttribArray","useProgram","bufferOffset","bufferCount","drawArrays","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","fragmentShaderOnlyDraw","numComponents","fragmentShaderOnlyInitBuffer","left","top","right","bottom","createBuffer","l","r","t","b","positions","bufferData","Float32Array","STATIC_DRAW","initGLBuffer","components","defaultVertexShader","defaultWebGl2VertexShader","Name","shaderFunction","ObjDropdownComponent","names","getName","chng","find","v","GetAmplitude","min","max","fractal","range","real","imaginary","deltaSize","delta","MaxAmplitude","FractalAudioPlayer","canvas","amplitude","clientWidth","clientHeight","ctx","getContext","audio","AudioContext","gain","createGain","connect","destination","Cleanup","close","Play","point","currentAudio","stop","PlayingAudio","clearRect","width","height","strokeStyle","start","beginPath","Complex","maxBounds","minBounds","arr","xp","yp","tgtX","tgtY","moveTo","lineTo","stroke","sampleRate","init","z","Init","Infinity","Iterate","Math","result","tgt","buffer","upsampleRate","createBufferSource","channelData","getChannelData","index","prev","floor","interpReal","ceil","interpImaginary","ShaderCode","c","tx","ty","abs","multiplyWith","addWith","dotz","absSq","dotc","GlslFrameRenderer","color","bounds","onMiddleClick","cursor_anchor","mm_down","touch_anchors","canvasRange","windowRange","fragment_code","replace","CreateShaderCode","initProgram","program","run","renderFrame","e","Point","offsetX","offsetY","perc","GetPercentage","GetValue","x","y","undefined","dx","dy","panCameraByScreenDelta","scalePercentage","deltaY","scalePerc","pow","AspectScale","ev","targetTouches","touch","identifier","touchOffset","touches","moves","pos","oldPos","dragStart","dragEnd","worldPos","subtractWith","scaleAmt","ShiftByPercentage","uniform1f","getUniformLocation","uniform2fv","xRange","yRange","Length","cleanup","getBoundingClientRect","pageX","pageY","RendererWrapperComponent","colorFunction","audioPlayer","mandelbrot","w","h","jpt","playSound","pt","fractals","colors","GlslFractalAudioComponent","overlayCanvas","frac","setFrac","setAmplitude","setColor","renderer","style","position","pointerEvents","background","f","a","textAlign","href"],"sourceRoot":""}