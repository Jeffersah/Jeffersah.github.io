{"version":3,"sources":["webpack:///./src/projects/common/position/Point.ts","webpack:///./src/projects/common/input/KeyState.ts","webpack:///./src/projects/common/input/KeyWatcher.ts","webpack:///./src/projects/common/input/KeyboardManager.ts","webpack:///./src/projects/common/Color.ts","webpack:///./src/projects/bullets/const.ts","webpack:///./src/projects/bullets/assets/bullets_entities.png","webpack:///./src/projects/common/position/Angle.ts","webpack:///./src/projects/bullets/Player.ts","webpack:///./src/projects/bullets/ETeam.ts","webpack:///./src/projects/bullets/GameState.ts","webpack:///./src/projects/common/interpolation/Interpolated.ts","webpack:///./src/projects/bullets/Effects/SingleExplosion.ts","webpack:///./src/projects/common/interpolation/TimingFunction.ts","webpack:///./src/projects/common/interpolation/InterpolationFunction.ts","webpack:///./src/projects/common/interpolation/Keyframes.ts","webpack:///./src/projects/bullets/Effects/Explosion.ts","webpack:///./src/projects/bullets/index.ts"],"names":["Point","x","y","Dot","this","Math","sqrt","LengthSq","p1","p2","other","atan2","nx","undefined","ny","a","b","sy","KeyState","keys","changes","key","indexOf","attachedElement","logKeyNames","addEventListener","k","onKeyDown","onKeyUp","downKeys","console","log","push","change","idx","splice","storeKeys","storeChanges","slice","element","watcher","prvState","currentState","Update","isKeyDown","isKeyUp","Color","vals","h","s","v","hsv","rgb","r","g","reqRgb","reqHsv","n","max","min","calcRgb","componentToRgb","calcHsv","mx","mn","toByte","component","floor","twoPi","PI","Angle","angle","relativeNormalize","PHYS","sprites","position","velocity","angularVelocity","rotation","engineDeflect","tgtDeflect","isEngineOn","vDirection","diffDir","relativeAngle","diffPerc","friction","abs","MultWith","cos","sin","vTotal","Length","vAngle","Direction","anglePullAmt","AddWith","ctx","save","rotrender","random","render","restore","ETeam","player","Player","Entities","neutral","ally","enemy","Effects","i","length","tick","draw","Interpolated","range","timingFunction","InterpolationTimer","totalTime","elapsedTime","animation","sample","outerRadius","innerRadius","fillColor","timing","outer","inner","fill","beginPath","arc","closePath","fillStyle","toString","TimingFunctions","linear","t","clamp","fastIn","Bezier","fastOut","pts","b_recurse","p","pi","pc","numberInterpolator","fastColorInterpolator","EvenlySpacedKeyframes","interpolator","args","arguments","percPer","keyframes","addKeyFrame","start","time","value","keyIndex","sampleRange","samplePerc","burstXVariance","burstYVariance","numBursts","burstDelay","burstLifetime","burstOuterRadius","currentBurstDelay","maxExplosionIndex","nb","GetValue","explosions","Array","triggerExplosions","spawnBurst","bx","by","lifetime","startingOuterRadius","anyStillRunning","scalingHelper","Run","assetLoader","AssetLoader","entitySheet","SpriteSheet","registerAssetLoadCallback","onAllFinished","canvas","document","getElementById","getContext","NearestNeighborScalingHelper","KeyboardManager","body","gs","repaintLoop","gameState","update","fillRect","focusPoint","Add","Multiply","translate","ty","tx","repaint","requestAnimationFrame","onLoadDone"],"mappings":"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","file":"bullets.bundle.js","sourcesContent":["export default class Point {\r\n    constructor(public x: number, public y: number) {\r\n\r\n    }\r\n\r\n    public LengthSq(): number {\r\n        return Point.Dot(this, this);\r\n    }\r\n\r\n    public Length(): number {\r\n        return Math.sqrt(this.LengthSq());\r\n    }\r\n\r\n    public Clone(): Point {\r\n        return new Point(this.x, this.y);\r\n    }\r\n\r\n    public Negate(): Point {\r\n        return new Point(-this.x, -this.y);\r\n    }\r\n\r\n    public NegateInPlace(): this {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        return this;\r\n    }\r\n\r\n    public static Dot(p1: Point, p2: Point): number {\r\n        return p1.x * p2.x + p1.y * p2.y;\r\n    }\r\n\r\n    public DotWith(other: Point): number {\r\n        return Point.Dot(this, other);\r\n    }\r\n\r\n\r\n    public Direction(): number {\r\n        return Math.atan2(this.y, this.x);\r\n    }\r\n\r\n    public AddWith(x: number, y: number): this;\r\n    public AddWith(other: Point): this;\r\n    public AddWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x += nx;\r\n        this.y += ny;\r\n        return this;\r\n    }\r\n\r\n    public MultWith(x: number, y: number): this;\r\n    public MultWith(other: Point): this;\r\n    public MultWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x *= nx;\r\n        this.y *= ny;\r\n        return this;\r\n    }\r\n\r\n    public SubtractWith(x: number, y: number): this;\r\n    public SubtractWith(other: Point): this;\r\n    public SubtractWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x -= nx;\r\n        this.y -= ny;\r\n        return this;\r\n    }\r\n\r\n    public DivideWith(x: number, y: number): this;\r\n    public DivideWith(other: Point): this;\r\n    public DivideWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x /= nx;\r\n        this.y /= ny;\r\n        return this;\r\n    }\r\n\r\n    public Equals(other: Point): boolean {\r\n        return this.x === other.x && this.y === other.y;\r\n    }\r\n\r\n    static Add(a: Point, b: Point): Point {\r\n        return new Point(a.x + b.x, a.y + b.y);\r\n    }\r\n\r\n    static Multiply(a: Point, s: number, sy?: number): Point;\r\n    static Multiply(a: Point, b: Point): Point;\r\n    static Multiply(a: Point, b: Point|number, sy ?: number): Point {\r\n        if (sy !== undefined) {\r\n            return new Point(a.x * (b as number), a.y * sy);\r\n        }\r\n        else if ((b as any).x !== undefined) {\r\n            return new Point(a.x * (b as Point).x, a.y * (b as Point).y);\r\n        } else {\r\n            return new Point(a.x * (b as number), a.y * (b as number));\r\n        }\r\n    }\r\n}","import { IKeyChange } from './KeyWatcher';\r\n\r\nexport default class KeyState {\r\n    constructor(public keys: string[], public changes: IKeyChange[]) {\r\n\r\n    }\r\n\r\n    public isKeyDown(key: string) {\r\n        return this.keys.indexOf(key) !== -1;\r\n    }\r\n\r\n    public isKeyUp(key: string) {\r\n        return this.keys.indexOf(key) === -1;\r\n    }\r\n}","import KeyState from './KeyState';\r\n\r\nexport interface IKeyChange {\r\n    key: string;\r\n    change: 'press'|'release';\r\n}\r\n\r\nexport default class KeyWatcher {\r\n    downKeys: string[];\r\n    changes: IKeyChange[];\r\n\r\n    constructor(public attachedElement: HTMLElement, private logKeyNames?: boolean) {\r\n        if  (this.logKeyNames === undefined) {\r\n            this.logKeyNames = false;\r\n        }\r\n        attachedElement.addEventListener('keydown', k => this.onKeyDown(k));\r\n        attachedElement.addEventListener('keyup', k => this.onKeyUp(k));\r\n\r\n        this.downKeys = [];\r\n        this.changes = [];\r\n    }\r\n\r\n    private onKeyDown(key: KeyboardEvent) {\r\n        if (this.logKeyNames) {\r\n            // tslint:disable-next-line: no-console\r\n            console.log(key.key);\r\n        }\r\n        const idx = this.downKeys.indexOf(key.key);\r\n        if (idx === -1) {\r\n            this.changes.push({ key: key.key, change: 'press' });\r\n            this.downKeys.push(key.key);\r\n        }\r\n    }\r\n\r\n    private onKeyUp(key: KeyboardEvent) {\r\n        this.changes.push({ key: key.key, change: 'release' });\r\n        const idx = this.downKeys.indexOf(key.key);\r\n        this.downKeys.splice(idx, 1);\r\n    }\r\n\r\n    public Update(): KeyState {\r\n        const storeKeys = this.downKeys;\r\n        const storeChanges = this.changes;\r\n\r\n        this.downKeys = storeKeys.slice();\r\n        this.changes = [];\r\n\r\n        return new KeyState(storeKeys, storeChanges);\r\n    }\r\n}","import KeyWatcher, { IKeyChange } from './KeyWatcher';\r\nimport KeyState from './KeyState';\r\n\r\nexport default class KeyboardManager {\r\n\r\n    watcher: KeyWatcher;\r\n    prvState: KeyState;\r\n    currentState: KeyState;\r\n\r\n    constructor(element: HTMLElement, logKeyNames?: boolean) {\r\n        this.watcher = new KeyWatcher(element, logKeyNames);\r\n        this.prvState = this.currentState = this.watcher.Update();\r\n    }\r\n\r\n    public update(): void {\r\n        this.prvState = this.currentState;\r\n        this.currentState = this.watcher.Update();\r\n    }\r\n\r\n    public isKeyDown(key: string): boolean {\r\n        return this.currentState.isKeyDown(key);\r\n    }\r\n\r\n    public isKeyUp(key: string): boolean {\r\n        return this.currentState.isKeyUp(key);\r\n    }\r\n\r\n    public isKeyPressed(key: string): boolean {\r\n        return this.currentState.isKeyDown(key) && this.prvState.isKeyUp(key);\r\n    }\r\n\r\n    public isKeyReleased(key: string): boolean {\r\n        return this.currentState.isKeyUp(key) && this.prvState.isKeyDown(key);\r\n    }\r\n\r\n    public changes(): IKeyChange[] {\r\n        return this.currentState.changes;\r\n    }\r\n}","export class Color {\r\n    private rgb?: { r: number, g: number, b: number };\r\n    private hsv?: { h: number, s: number, v: number };\r\n\r\n    constructor(vals: {r: number, g: number, b: number}|{h: number, s: number, v: number}) {\r\n        if ((vals as any).h || (vals as any).s || (vals as any).v) {\r\n            this.hsv = vals as any;\r\n            this.rgb = undefined;\r\n        }\r\n        else  {\r\n            this.rgb = vals as any;\r\n            this.hsv = undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generate an RGB color\r\n     * @param r Red component [0, 1]\r\n     * @param g Green component [0, 1]\r\n     * @param b Blue component [0, 1]\r\n     */\r\n    public static rgb(r: number, g: number, b: number): Color {\r\n        return new Color({ r, g, b });\r\n    }\r\n\r\n    /**\r\n     * Generate an HSV color\r\n     * @param r Hue component [0, 1]\r\n     * @param g Saturation component [0, 1]\r\n     * @param b Value component [0, 1]\r\n     */\r\n    public static hsv(h: number, s: number, v: number): Color {\r\n        return new Color({ h, s, v });\r\n    }\r\n\r\n    public r(): number;\r\n    public r(v: number): void;\r\n    public r(v?: number): number|void {\r\n        this.reqRgb();\r\n        if (v !== undefined) {\r\n            this.rgb.r = v;\r\n            this.hsv = undefined;\r\n        } else {\r\n            return this.rgb.r;\r\n        }\r\n    }\r\n\r\n    public g(): number;\r\n    public g(v: number): void;\r\n    public g(v?: number): number|void {\r\n        this.reqRgb();\r\n        if (v !== undefined) {\r\n            this.rgb.g = v;\r\n            this.hsv = undefined;\r\n        } else {\r\n            return this.rgb.g;\r\n        }\r\n    }\r\n\r\n    public b(): number;\r\n    public b(v: number): void;\r\n    public b(v?: number): number|void {\r\n        this.reqRgb();\r\n        if (v !== undefined) {\r\n            this.rgb.b = v;\r\n            this.hsv = undefined;\r\n        } else {\r\n            return this.rgb.b;\r\n        }\r\n    }\r\n\r\n    public h(): number;\r\n    public h(v: number): void;\r\n    public h(v?: number): number|void {\r\n        this.reqHsv();\r\n        if (v !== undefined) {\r\n            this.hsv.h = v;\r\n            this.hsv = undefined;\r\n        } else {\r\n            return this.hsv.h;\r\n        }\r\n    }\r\n\r\n    public s(): number;\r\n    public s(v: number): void;\r\n    public s(v?: number): number|void {\r\n        this.reqHsv();\r\n        if (v !== undefined) {\r\n            this.hsv.s = v;\r\n            this.hsv = undefined;\r\n        } else {\r\n            return this.hsv.s;\r\n        }\r\n    }\r\n\r\n    public v(): number;\r\n    public v(v: number): void;\r\n    public v(v?: number): number|void {\r\n        this.reqHsv();\r\n        if (v !== undefined) {\r\n            this.hsv.v = v;\r\n            this.hsv = undefined;\r\n        } else {\r\n            return this.hsv.v;\r\n        }\r\n    }\r\n\r\n    private componentToRgb(n: number) {\r\n        const k = (n + this.hsv.h * 6) % 6;\r\n        return this.hsv.v - this.hsv.v * this.hsv.s * Math.max(Math.min(k, 4 - k, 1), 0);\r\n    }\r\n\r\n\r\n    private reqRgb() {\r\n        if (this.rgb === undefined) {\r\n            this.calcRgb();\r\n        }\r\n    }\r\n    private calcRgb() {\r\n        this.rgb = {\r\n            r: this.componentToRgb(5),\r\n            g: this.componentToRgb(3),\r\n            b: this.componentToRgb(1),\r\n        };\r\n    }\r\n\r\n    private reqHsv() {\r\n        if (this.hsv === undefined) {\r\n            this.calcHsv();\r\n        }\r\n    }\r\n    private calcHsv() {\r\n        const {r, g, b} = this.rgb;\r\n        const mx = Math.max(r, g, b);\r\n        const mn = Math.min(r, g, b);\r\n        let h = mx === mn ? 0\r\n            : mx === r ? (g - b) / (mx - mn)\r\n            : mx === g ? 2 + (b - r) / (mx - mn)\r\n            : 4 + (r - g) / (mx - mn);\r\n        h /= 6;\r\n        while (h < 0) {\r\n            h++;\r\n        }\r\n        this.hsv = {\r\n            h,\r\n            s: mx === mn ? 0 : (mx - mn) / mx,\r\n            v: mx\r\n        };\r\n    }\r\n\r\n    public toString(): string {\r\n        this.reqRgb();\r\n        return 'rgb(' + this.toByte(this.rgb.r) + ', ' + this.toByte(this.rgb.g) + ', ' + this.toByte(this.rgb.b) + ')';\r\n    }\r\n\r\n    private toByte(component: number) {\r\n        return Math.floor(component * 255);\r\n    }\r\n}","export default {\r\n    Width: 1000,\r\n    Height: 800\r\n};","export default __webpack_public_path__ + \"12a4e8650485f6c9e051cf30dfcfc746.png\";","const twoPi = Math.PI * 2;\r\n\r\nexport default class Angle {\r\n    static normalize(angle: number): number {\r\n        angle = angle % twoPi;\r\n        if (angle < 0) angle += twoPi;\r\n        return angle;\r\n    }\r\n\r\n    static relativeNormalize(angle: number): number {\r\n        angle = angle % twoPi;\r\n        if (angle > Math.PI) {\r\n            angle -= twoPi;\r\n        } else if(angle < - Math.PI) {\r\n            angle += twoPi;\r\n        }\r\n        return angle;\r\n    }\r\n\r\n    static relativeAngle(a: number, b: number) {\r\n        return Angle.relativeNormalize(a - b);\r\n    }\r\n}","import Point from '../common/position/Point';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport ImageLoader from '../common/assets/ImageLoader';\r\nimport { RotTransformCanvas } from '../common/CanvasHelpers';\r\nimport KeyboardManager from '../common/input/KeyboardManager';\r\nimport Angle from '../common/position/Angle';\r\n\r\nconst PHYS = {\r\n    acceleration: 0.2,\r\n    maxvelocity: 20,\r\n    vFricMin: 0.998,\r\n    vFricMax: 0.99,\r\n\r\n    engineAdjSpeed: 0.06,\r\n\r\n    turnBaseAccel: 0.002,\r\n    turnEngineMaxAccel: 0.004,\r\n    turnFric: 0.98,\r\n    turnPullMax: 0.003,\r\n    turnPullMaxV: 120,\r\n};\r\n\r\nexport default class Player {\r\n    position: Point;\r\n    velocity: Point;\r\n    angularVelocity: number;\r\n    rotation: number;\r\n\r\n    private isEngineOn: boolean;\r\n    private engineDeflect: number;\r\n    private tgtDeflect: number;\r\n\r\n    constructor(private sprites: SpriteSheet) {\r\n        this.position = new Point(0, 0);\r\n        this.velocity = new Point(0, 0);\r\n        this.angularVelocity = 0;\r\n        this.rotation = 0;\r\n        this.engineDeflect = 0;\r\n        this.tgtDeflect = 0;\r\n    }\r\n\r\n    tick(keys: KeyboardManager) {\r\n        if (keys.isKeyDown('w')) {\r\n            this.isEngineOn = true;\r\n        } else {\r\n            this.isEngineOn = false;\r\n        }\r\n\r\n        if (keys.isKeyDown('a')) {\r\n            this.tgtDeflect = 1;\r\n        } else if (keys.isKeyDown('d')) {\r\n            this.tgtDeflect = -1;\r\n        } else {\r\n            this.tgtDeflect = 0;\r\n        }\r\n\r\n        if (this.tgtDeflect >= this.engineDeflect) {\r\n            this.engineDeflect = Math.min(this.engineDeflect + PHYS.engineAdjSpeed, this.tgtDeflect);\r\n        } else {\r\n            this.engineDeflect = Math.max(this.engineDeflect - PHYS.engineAdjSpeed, this.tgtDeflect);\r\n        }\r\n\r\n        const vDirection = Math.atan2(this.velocity.y, this.velocity.x);\r\n        const diffDir = Angle.relativeAngle(this.rotation, vDirection);\r\n        const diffPerc = diffDir / Math.PI;\r\n\r\n        this.angularVelocity *= PHYS.turnFric;\r\n        this.angularVelocity -= this.tgtDeflect * PHYS.turnBaseAccel + this.engineDeflect * PHYS.turnEngineMaxAccel * (this.isEngineOn ? 1 : 0);\r\n\r\n        this.rotation += this.angularVelocity;\r\n\r\n        const friction = (1 - Math.abs(diffPerc)) * PHYS.vFricMin + (Math.abs(diffPerc)) * PHYS.vFricMax;\r\n        this.velocity.MultWith(friction, friction);\r\n\r\n        if (this.isEngineOn) {\r\n            this.velocity.x += PHYS.acceleration * Math.cos(this.rotation);\r\n            this.velocity.y += PHYS.acceleration * Math.sin(this.rotation);\r\n        }\r\n\r\n        let vTotal = this.velocity.Length();\r\n        let vAngle = this.velocity.Direction();\r\n\r\n        if (vTotal >= PHYS.maxvelocity) {\r\n            vTotal = PHYS.maxvelocity;\r\n        }\r\n\r\n        let anglePullAmt = Math.sin(diffDir);\r\n        anglePullAmt *= Math.min(vTotal / PHYS.turnPullMaxV, 1);\r\n        anglePullAmt *= PHYS.turnPullMax;\r\n\r\n        vAngle += anglePullAmt;\r\n        this.velocity.x = Math.cos(vAngle) * vTotal;\r\n        this.velocity.y = Math.sin(vAngle) * vTotal;\r\n\r\n\r\n        this.position.AddWith(this.velocity);\r\n    }\r\n\r\n    render(ctx: CanvasRenderingContext2D) {\r\n        ctx.save();\r\n        RotTransformCanvas(ctx, this.position.x, this.position.y, 4, 8, this.rotation + Math.PI / 2);\r\n        if (this.isEngineOn) {\r\n            this.sprites.rotrender(ctx, 4, 11, 8, 16, Math.floor(4 * Math.random()), 1, this.engineDeflect * Math.PI / 4, 4, 2);\r\n        }\r\n        if (this.tgtDeflect > 0) {\r\n            // Render spin flame\r\n            this.sprites.rotrender(ctx, 7, 4, 8, 16, Math.floor(Math.random() * 2), 2, 0, 3, 4);\r\n        }\r\n        else if (this.tgtDeflect < 0) {\r\n            // Render spin flame\r\n            this.sprites.rotrender(ctx, 1, 4, 8, 16, 2 + Math.floor(Math.random() * 2), 2, 0, 6, 4);\r\n        }\r\n        this.sprites.render(ctx, 0, 0, 8, 16, 0, 0);\r\n        ctx.restore();\r\n    }\r\n}","import { type } from \"os\"\r\nexport enum ETeam\r\n{\r\n    ally,\r\n    enemy,\r\n    neutral\r\n}","import { ETeam } from \"./ETeam\";\r\nimport { IEffect } from \"./IEffect\";\r\nimport IEntity from \"./IEntity\";\r\nimport Player from \"./Player\";\r\n\r\nexport default class GameState {\r\n    public Player: Player;\r\n    public Entities: { [key in ETeam]: IEntity[] }\r\n    public Effects: IEffect[];\r\n\r\n    constructor(player: Player){\r\n        this.Player = player;\r\n        this.Entities = <any>{};\r\n        this.Entities[ETeam.neutral] = [];\r\n        this.Entities[ETeam.ally] = [];\r\n        this.Entities[ETeam.enemy] = [];\r\n        this.Effects = [];\r\n    }\r\n\r\n    public tick(){\r\n        for(let i = this.Effects.length - 1; i >= 0; i --) {\r\n            if(this.Effects[i].tick())\r\n                this.Effects.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    public draw(ctx: CanvasRenderingContext2D){\r\n        for(let i = 0; i < this.Effects.length; i++) {\r\n            this.Effects[i].draw(ctx);\r\n        }\r\n    }\r\n}","import { TimingFunction } from \"./TimingFunction\";\r\nimport { Keyframes } from './Keyframes';\r\n\r\nexport class Interpolated<T> {\r\n    constructor(public range: Keyframes<T>, public timingFunction: TimingFunction) {\r\n\r\n    }\r\n}\r\n\r\nexport class InterpolationTimer {\r\n    public elapsedTime: number;\r\n    constructor(public totalTime: number) {\r\n        this.elapsedTime = 0;\r\n    }\r\n    tick(): boolean {\r\n        this.elapsedTime ++;\r\n        return this.elapsedTime >= this.totalTime;\r\n    }\r\n    sample<T>(animation: Interpolated<T>) {\r\n        return animation.range.sample(animation.timingFunction(this.elapsedTime / this.totalTime));\r\n    }\r\n}","import { Color } from \"../../common/Color\";\r\nimport { Interpolated, InterpolationTimer } from \"../../common/interpolation/Interpolated\";\r\nimport Point from \"../../common/position/Point\";\r\nimport { IEffect } from \"../IEffect\";\r\n\r\nexport class SingleExplosion implements IEffect {\r\n\r\n    private timing: InterpolationTimer;\r\n\r\n    constructor(\r\n        public position: Point,\r\n        public outerRadius: Interpolated<number>,\r\n        public innerRadius: Interpolated<number>,\r\n        public fillColor: Interpolated<Color>,\r\n        totalTime: number)\r\n    {\r\n        this.timing = new InterpolationTimer(totalTime);\r\n    }\r\n\r\n    tick(): boolean {\r\n        return this.timing.tick();\r\n    }\r\n    draw(ctx: CanvasRenderingContext2D): void {\r\n        const outer = this.timing.sample(this.outerRadius);\r\n        const inner = this.timing.sample(this.innerRadius);\r\n        const fill = this.timing.sample(this.fillColor);\r\n        ctx.beginPath();\r\n        ctx.arc(this.position.x, this.position.y, outer, 0, Math.PI * 2, false);\r\n        if(inner >= 0) {\r\n            ctx.arc(this.position.x, this.position.y, inner, 0, Math.PI * 2, true);\r\n        }\r\n        ctx.closePath();\r\n        ctx.fillStyle = fill.toString();\r\n        ctx.fill();\r\n    }\r\n\r\n}","export type TimingFunction = (t: number)=> number;\r\n\r\nexport const TimingFunctions = {\r\n    linear: (t:number) => t,\r\n    clamp: (t:number) => Math.max(Math.min(t, 1), 0),\r\n    fastIn: Bezier(0, 0.8, 1),\r\n    fastOut: Bezier(0, 0.2, 1),\r\n};\r\n\r\nexport function Bezier(...pts: number[]): TimingFunction {\r\n    return (t: number) => b_recurse(t, pts, 0, pts.length);\r\n}\r\n\r\nfunction b_recurse(p: number, pts: number[], pi: number, pc: number): number {\r\n    if(pc === 1) return pts[pi];\r\n    return b_recurse(p, pts, pi, pc - 1) * (1-p) + b_recurse(p, pts, pi + 1, pc - 1) * p;\r\n}","import { Color } from \"../Color\";\r\n\r\nexport type InterpolationFunction<T> = (start: T, end: T, percentage: number) => T;\r\n\r\nexport const numberInterpolator: InterpolationFunction<number> = (a, b, p) => a + (b-a)*p;\r\n\r\nexport const fastColorInterpolator: InterpolationFunction<Color> = (a,b,p) => \r\n    Color.rgb(\r\n        numberInterpolator(a.r(), b.r(), p),\r\n        numberInterpolator(a.g(), b.g(), p),\r\n        numberInterpolator(a.b(), b.b(), p));\r\n\r\n        \r\nexport const trueColorInterpolator: InterpolationFunction<Color> = (a,b,p) => \r\n    Color.rgb(\r\n        Math.sqrt(numberInterpolator(a.r() * a.r(), b.r() * b.r(), p)),\r\n        Math.sqrt(numberInterpolator(a.g() * a.g(), b.g() * b.g(), p)),\r\n        Math.sqrt(numberInterpolator(a.b() * a.b(), b.b() * b.b(), p)));\r\n\r\n        \r\nexport const hsvColorInterpolator: InterpolationFunction<Color> = (a,b,p) => \r\n    Color.hsv(\r\n        numberInterpolator(a.h(), b.h(), p),\r\n        numberInterpolator(a.s(), b.s(), p),\r\n        numberInterpolator(a.v(), b.v(), p));","import { exception } from \"console\";\r\nimport { Color } from \"../Color\";\r\nimport { fastColorInterpolator, InterpolationFunction, numberInterpolator } from \"./InterpolationFunction\";\r\n\r\nexport function EvenlySpacedKeyframes<T>(...args: T[]): Keyframes<T>;\r\nexport function EvenlySpacedKeyframes<T>(interpolator: InterpolationFunction<T>, ...args: T[]): Keyframes<T>;\r\nexport function EvenlySpacedKeyframes<T>(interpolator?: InterpolationFunction<T>, ...args: T[]): Keyframes<T> {\r\n    if(interpolator.arguments === undefined) {\r\n        args.splice(0, 0, <T><any>interpolator);\r\n        interpolator = undefined;\r\n    }\r\n\r\n    let numFrames = args.length - 1;\r\n    let percPer = 1 / numFrames;\r\n    let keyframes = new Keyframes<T>(args[0], interpolator);\r\n    for(let i = 1; i < args.length; i++) {\r\n        keyframes.addKeyFrame(percPer * i, args[i]);\r\n    }\r\n    return keyframes;\r\n}\r\n\r\nexport class Keyframes<T> \r\n{\r\n    private interpolator: InterpolationFunction<T>;\r\n    private keys: {time: number, value: T}[];\r\n\r\n    constructor(start: T, interpolator?: InterpolationFunction<T>)\r\n    {\r\n        if(interpolator === undefined) {\r\n            if(typeof(start) === \"number\") {\r\n                this.interpolator = <any>numberInterpolator;\r\n            } else if((<Color><unknown>start).r !== undefined) {\r\n                // Assume this is color\r\n                this.interpolator = <any>fastColorInterpolator;\r\n            }\r\n            else {\r\n                throw 'No default interpolator found';\r\n            }\r\n        } else {\r\n            this.interpolator = interpolator;\r\n        }\r\n        this.keys = [{time: 0, value: start}];\r\n    }\r\n\r\n    public addKeyFrame(time: number, value: T) {\r\n        for(let i = 0; i < this.keys.length; i++)\r\n        {\r\n            if(time < this.keys[i].time) {\r\n                this.keys.splice(i, 0, {time, value});\r\n                return;\r\n            }\r\n        }\r\n        this.keys.push({time, value});\r\n    }\r\n\r\n    public sample(p: number): T {\r\n        if(this.keys.length === 1) return this.keys[0].value;\r\n\r\n        var keyIndex = 0;\r\n        while(this.keys[keyIndex + 1].time < p && keyIndex + 2 < this.keys.length) {\r\n            keyIndex ++;\r\n        }\r\n\r\n        let sampleRange = this.keys[keyIndex + 1].time - this.keys[keyIndex].time;\r\n        let samplePerc = (p - this.keys[keyIndex].time) / sampleRange;\r\n\r\n        return this.interpolator(this.keys[keyIndex].value, this.keys[keyIndex + 1].value, samplePerc);\r\n    }\r\n}","import { Color } from \"../../common/Color\";\r\nimport { Interpolated, InterpolationTimer } from \"../../common/interpolation/Interpolated\";\r\nimport Point from \"../../common/position/Point\";\r\nimport { IEffect } from \"../IEffect\";\r\nimport { Range } from '../../common/Range';\r\nimport { SingleExplosion } from \"./SingleExplosion\";\r\nimport { EvenlySpacedKeyframes } from \"../../common/interpolation/Keyframes\";\r\nimport { TimingFunctions } from \"../../common/interpolation/TimingFunction\";\r\nimport { any } from \"../../../LinqLike\";\r\n\r\nexport class Explosion implements IEffect {\r\n\r\n    private explosions: SingleExplosion[];\r\n    private currentBurstDelay = 0;\r\n    private maxExplosionIndex = 0;\r\n\r\n    constructor(\r\n        public position: Point,\r\n        public burstXVariance: Range,\r\n        public burstYVariance: Range,\r\n        public numBursts: Range,\r\n        public burstDelay: number,\r\n        public burstLifetime: Range,\r\n        public burstOuterRadius: Range,\r\n        )\r\n    {\r\n        const nb = Math.floor(numBursts.GetValue(Math.random()));\r\n        this.explosions = new Array(nb);\r\n        this.triggerExplosions();\r\n    }\r\n\r\n    triggerExplosions() {\r\n        while(this.currentBurstDelay === 0 && this.maxExplosionIndex < this.explosions.length) {\r\n            this.currentBurstDelay = this.burstDelay;\r\n            this.spawnBurst();\r\n        }\r\n    }\r\n\r\n    spawnBurst() {\r\n        const bx = this.position.x + this.burstXVariance.GetValue(Math.random());\r\n        const by = this.position.y + this.burstYVariance.GetValue(Math.random());\r\n        const lifetime = this.burstLifetime.GetValue(Math.random());\r\n        const outerRadius = this.burstOuterRadius.GetValue(Math.random());\r\n        const startingOuterRadius = outerRadius / 4;\r\n\r\n        this.explosions[this.maxExplosionIndex++] = new SingleExplosion(\r\n            new Point(bx, by),\r\n            new Interpolated<number>(EvenlySpacedKeyframes(startingOuterRadius, outerRadius), TimingFunctions.linear),\r\n            new Interpolated<number>(EvenlySpacedKeyframes(-startingOuterRadius, outerRadius), TimingFunctions.fastOut),\r\n            new Interpolated<Color>(EvenlySpacedKeyframes(Color.rgb(1, 1, 0.5), Color.rgb(1, 0, 0), Color.rgb(0.2, 0.2, 0)), TimingFunctions.linear),\r\n            lifetime\r\n        );\r\n    }\r\n\r\n    tick(): boolean {\r\n        let anyStillRunning = false;\r\n        for(let i = 0; i < this.maxExplosionIndex; i++) {\r\n            if(this.explosions[i] !== null && this.explosions[i] !== undefined) {\r\n                if(this.explosions[i].tick()){\r\n                    this.explosions[i] = null;\r\n                } else {\r\n                    anyStillRunning = true;\r\n                }\r\n            }\r\n        }\r\n        this.currentBurstDelay --;\r\n        if(this.currentBurstDelay === 0) this.triggerExplosions();\r\n        return (!anyStillRunning && this.maxExplosionIndex === this.explosions.length);\r\n    }\r\n    draw(ctx: CanvasRenderingContext2D): void {\r\n        for(let i = 0; i < this.maxExplosionIndex; i++) {\r\n            if(this.explosions[i] !== null && this.explosions[i] !== undefined) {\r\n                this.explosions[i].draw(ctx);\r\n            }\r\n        }\r\n    }\r\n\r\n}","import AssetLoader from '../common/assets/AssetLoader';\r\nimport Const from './const';\r\nimport NearestNeighborScalingHelper from '../common/NearestNeighborScalingHelper';\r\nimport { NearestNeighborScaling, RotTransformCanvas } from '../common/CanvasHelpers';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport entitySheetUrl from './assets/bullets_entities.png';\r\nimport playerUrl from './assets/bullets_ship.png';\r\nimport ImageLoader from '../common/assets/ImageLoader';\r\nimport Player from './Player';\r\nimport KeyboardManager from '../common/input/KeyboardManager';\r\nimport KeyState from '../common/input/KeyState';\r\nimport Point from '../common/position/Point';\r\nimport GameState from './GameState';\r\nimport { SingleExplosion } from './Effects/SingleExplosion';\r\nimport { Interpolated } from '../common/interpolation/Interpolated';\r\nimport { TimingFunctions } from '../common/interpolation/TimingFunction';\r\nimport { Color } from '../common/Color';\r\nimport { EvenlySpacedKeyframes, Keyframes } from '../common/interpolation/Keyframes';\r\nimport { Explosion } from './Effects/Explosion';\r\nimport { Range } from '../common';\r\n\r\nlet scalingHelper: NearestNeighborScalingHelper;\r\n\r\nexport default function Run() {\r\n    const assetLoader = new AssetLoader();\r\n    const entitySheet = new SpriteSheet(8, 16, entitySheetUrl, assetLoader.registerAssetLoadCallback());\r\n\r\n    assetLoader.onAllFinished(() => onLoadDone(entitySheet));\r\n}\r\n\r\nfunction onLoadDone(entitySheet: SpriteSheet) {\r\n    const canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n    const ctx = canvas.getContext('2d');\r\n    scalingHelper = new NearestNeighborScalingHelper(canvas, ctx, Const.Width, Const.Height, true, () => { return; });\r\n    NearestNeighborScaling(ctx);\r\n\r\n    const keys = new KeyboardManager(document.body, false);\r\n    const player = new Player(entitySheet);\r\n\r\n    const gs = new GameState(player);\r\n\r\n    gs.Effects.push(new SingleExplosion(\r\n        new Point(0, 0),\r\n        new Interpolated<number>(EvenlySpacedKeyframes(0, 30), TimingFunctions.linear),\r\n        new Interpolated<number>(EvenlySpacedKeyframes(-10, 30), TimingFunctions.fastOut),\r\n        new Interpolated<Color>(EvenlySpacedKeyframes(Color.rgb(1, 1, 0.5), Color.rgb(1, 0, 0), Color.rgb(0.2, 0.2, 0)), TimingFunctions.linear),\r\n        120\r\n    ));\r\n\r\n    gs.Effects.push(new Explosion(\r\n        new Point(100, 0),\r\n        new Range(-30, 30),\r\n        new Range(-30, 30),\r\n        new Range(30, 30),\r\n        4,\r\n        new Range(20, 40),\r\n        new Range(20, 60)));\r\n\r\n    repaintLoop(gs, player, keys, canvas, ctx);\r\n}\r\n\r\n\r\nfunction repaintLoop(gameState: GameState, player: Player, keys: KeyboardManager, canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\r\n    keys.update();\r\n    gameState.tick();\r\n    player.tick(keys);\r\n    repaint(gameState, player, canvas, ctx);\r\n    requestAnimationFrame(() => repaintLoop(gameState, player, keys, canvas, ctx));\r\n}\r\n\r\nfunction repaint(gameState: GameState, player: Player, canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\r\n    NearestNeighborScaling(ctx);\r\n    ctx.fillStyle = 'black';\r\n    ctx.fillRect(0, 0, Const.Width, Const.Height);\r\n    ctx.save();\r\n\r\n    const focusPoint = Point.Add(player.position, Point.Multiply(player.velocity, 10));\r\n\r\n    ctx.translate(-(focusPoint.x - Const.Width / 2), -(focusPoint.y - Const.Height / 2));\r\n    ctx.fillStyle = 'gray';\r\n\r\n    const bg_line_size = 400;\r\n\r\n    // Render some bg lines so we can see motion\r\n    for (let ty = Math.floor((focusPoint.y - Const.Height / 2) / bg_line_size) * bg_line_size; ty <= Math.floor((focusPoint.y + Const.Height / 2) / bg_line_size) * bg_line_size; ty += bg_line_size) {\r\n        ctx.fillRect(focusPoint.x - Const.Width / 2, ty, Const.Width, 3);\r\n    }\r\n\r\n    for (let tx = Math.floor((focusPoint.x - Const.Width / 2) / bg_line_size) * bg_line_size; tx <= Math.floor((focusPoint.x + Const.Width / 2) / bg_line_size) * bg_line_size; tx += bg_line_size) {\r\n        ctx.fillRect(tx, focusPoint.y - Const.Height / 2, 3, Const.Height);\r\n    }\r\n\r\n    player.render(ctx);\r\n\r\n    gameState.draw(ctx);\r\n\r\n    ctx.restore();\r\n}"],"sourceRoot":""}