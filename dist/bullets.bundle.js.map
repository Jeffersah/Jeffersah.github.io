{"version":3,"sources":["webpack:///./src/projects/common/position/Point.ts","webpack:///./src/projects/bullets/const.ts","webpack:///./src/projects/bullets/assets/bullets_entities.png","webpack:///./src/projects/common/position/Angle.ts","webpack:///./src/projects/bullets/Player.ts","webpack:///./src/projects/bullets/index.ts"],"names":["Point","x","y","Dot","this","Math","sqrt","LengthSq","p1","p2","other","atan2","nx","undefined","ny","a","b","sy","twoPi","PI","Angle","angle","relativeNormalize","PHYS","sprites","position","velocity","angularVelocity","rotation","engineDeflect","tgtDeflect","keys","isKeyDown","isEngineOn","min","max","vDirection","diffDir","relativeAngle","diffPerc","friction","abs","MultWith","cos","sin","vTotal","Length","vAngle","Direction","anglePullAmt","AddWith","ctx","save","rotrender","floor","random","render","restore","scalingHelper","Run","assetLoader","AssetLoader","entitySheet","SpriteSheet","registerAssetLoadCallback","onAllFinished","canvas","document","getElementById","getContext","NearestNeighborScalingHelper","KeyboardManager","body","repaintLoop","player","update","tick","fillStyle","fillRect","focusPoint","Add","Multiply","translate","ty","tx","repaint","requestAnimationFrame","onLoadDone"],"mappings":"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","file":"bullets.bundle.js","sourcesContent":["export default class Point {\r\n    constructor(public x: number, public y: number) {\r\n\r\n    }\r\n\r\n    public LengthSq(): number {\r\n        return Point.Dot(this, this);\r\n    }\r\n\r\n    public Length(): number {\r\n        return Math.sqrt(this.LengthSq());\r\n    }\r\n\r\n    public Clone(): Point {\r\n        return new Point(this.x, this.y);\r\n    }\r\n\r\n    public Negate(): Point {\r\n        return new Point(-this.x, -this.y);\r\n    }\r\n\r\n    public NegateInPlace(): this {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        return this;\r\n    }\r\n\r\n    public static Dot(p1: Point, p2: Point): number {\r\n        return p1.x * p2.x + p1.y * p2.y;\r\n    }\r\n\r\n    public DotWith(other: Point): number {\r\n        return Point.Dot(this, other);\r\n    }\r\n\r\n\r\n    public Direction(): number {\r\n        return Math.atan2(this.y, this.x);\r\n    }\r\n\r\n    public AddWith(x: number, y: number): this;\r\n    public AddWith(other: Point): this;\r\n    public AddWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x += nx;\r\n        this.y += ny;\r\n        return this;\r\n    }\r\n\r\n    public MultWith(x: number, y: number): this;\r\n    public MultWith(other: Point): this;\r\n    public MultWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x *= nx;\r\n        this.y *= ny;\r\n        return this;\r\n    }\r\n\r\n    public SubtractWith(x: number, y: number): this;\r\n    public SubtractWith(other: Point): this;\r\n    public SubtractWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x -= nx;\r\n        this.y -= ny;\r\n        return this;\r\n    }\r\n\r\n    public DivideWith(x: number, y: number): this;\r\n    public DivideWith(other: Point): this;\r\n    public DivideWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x /= nx;\r\n        this.y /= ny;\r\n        return this;\r\n    }\r\n\r\n    public Equals(other: Point): boolean {\r\n        return this.x === other.x && this.y === other.y;\r\n    }\r\n\r\n    static Add(a: Point, b: Point): Point {\r\n        return new Point(a.x + b.x, a.y + b.y);\r\n    }\r\n\r\n    static Multiply(a: Point, s: number, sy?: number): Point;\r\n    static Multiply(a: Point, b: Point): Point;\r\n    static Multiply(a: Point, b: Point|number, sy ?: number): Point {\r\n        if (sy !== undefined) {\r\n            return new Point(a.x * (b as number), a.y * sy);\r\n        }\r\n        else if ((b as any).x !== undefined) {\r\n            return new Point(a.x * (b as Point).x, a.y * (b as Point).y);\r\n        } else {\r\n            return new Point(a.x * (b as number), a.y * (b as number));\r\n        }\r\n    }\r\n}","export default {\r\n    Width: 1000,\r\n    Height: 800\r\n};","export default __webpack_public_path__ + \"12a4e8650485f6c9e051cf30dfcfc746.png\";","const twoPi = Math.PI * 2;\r\n\r\nexport default class Angle {\r\n    static normalize(angle: number): number {\r\n        angle = angle % twoPi;\r\n        if (angle < 0) angle += twoPi;\r\n        return angle;\r\n    }\r\n\r\n    static relativeNormalize(angle: number): number {\r\n        angle = angle % twoPi;\r\n        if (angle > Math.PI) {\r\n            angle -= twoPi;\r\n        } else if(angle < - Math.PI) {\r\n            angle += twoPi;\r\n        }\r\n        return angle;\r\n    }\r\n\r\n    static relativeAngle(a: number, b: number) {\r\n        return Angle.relativeNormalize(a - b);\r\n    }\r\n}","import Point from '../common/position/Point';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport ImageLoader from '../common/assets/ImageLoader';\r\nimport { RotTransformCanvas } from '../common/CanvasHelpers';\r\nimport KeyboardManager from '../common/input/KeyboardManager';\r\nimport Angle from '../common/position/Angle';\r\n\r\nconst PHYS = {\r\n    acceleration: 0.2,\r\n    maxvelocity: 20,\r\n    vFricMin: 0.998,\r\n    vFricMax: 0.99,\r\n\r\n    engineAdjSpeed: 0.06,\r\n\r\n    turnBaseAccel: 0.002,\r\n    turnEngineMaxAccel: 0.004,\r\n    turnFric: 0.98,\r\n    turnPullMax: 0.003,\r\n    turnPullMaxV: 120,\r\n};\r\n\r\nexport default class Player {\r\n    position: Point;\r\n    velocity: Point;\r\n    angularVelocity: number;\r\n    rotation: number;\r\n\r\n    private isEngineOn: boolean;\r\n    private engineDeflect: number;\r\n    private tgtDeflect: number;\r\n\r\n    constructor(private sprites: SpriteSheet) {\r\n        this.position = new Point(0, 0);\r\n        this.velocity = new Point(0, 0);\r\n        this.angularVelocity = 0;\r\n        this.rotation = 0;\r\n        this.engineDeflect = 0;\r\n        this.tgtDeflect = 0;\r\n    }\r\n\r\n    tick(keys: KeyboardManager) {\r\n        if (keys.isKeyDown('w')) {\r\n            this.isEngineOn = true;\r\n        } else {\r\n            this.isEngineOn = false;\r\n        }\r\n\r\n        if (keys.isKeyDown('a')) {\r\n            this.tgtDeflect = 1;\r\n        } else if (keys.isKeyDown('d')) {\r\n            this.tgtDeflect = -1;\r\n        } else {\r\n            this.tgtDeflect = 0;\r\n        }\r\n\r\n        if (this.tgtDeflect >= this.engineDeflect) {\r\n            this.engineDeflect = Math.min(this.engineDeflect + PHYS.engineAdjSpeed, this.tgtDeflect);\r\n        } else {\r\n            this.engineDeflect = Math.max(this.engineDeflect - PHYS.engineAdjSpeed, this.tgtDeflect);\r\n        }\r\n\r\n        const vDirection = Math.atan2(this.velocity.y, this.velocity.x);\r\n        const diffDir = Angle.relativeAngle(this.rotation, vDirection);\r\n        const diffPerc = diffDir / Math.PI;\r\n\r\n        this.angularVelocity *= PHYS.turnFric;\r\n        this.angularVelocity -= this.tgtDeflect * PHYS.turnBaseAccel + this.engineDeflect * PHYS.turnEngineMaxAccel * (this.isEngineOn ? 1 : 0);\r\n\r\n        this.rotation += this.angularVelocity;\r\n\r\n        const friction = (1 - Math.abs(diffPerc)) * PHYS.vFricMin + (Math.abs(diffPerc)) * PHYS.vFricMax;\r\n        this.velocity.MultWith(friction, friction);\r\n\r\n        if (this.isEngineOn) {\r\n            this.velocity.x += PHYS.acceleration * Math.cos(this.rotation);\r\n            this.velocity.y += PHYS.acceleration * Math.sin(this.rotation);\r\n        }\r\n\r\n        let vTotal = this.velocity.Length();\r\n        let vAngle = this.velocity.Direction();\r\n\r\n        if (vTotal >= PHYS.maxvelocity) {\r\n            vTotal = PHYS.maxvelocity;\r\n        }\r\n\r\n        let anglePullAmt = Math.sin(diffDir);\r\n        anglePullAmt *= Math.min(vTotal / PHYS.turnPullMaxV, 1);\r\n        anglePullAmt *= PHYS.turnPullMax;\r\n\r\n        vAngle += anglePullAmt;\r\n        this.velocity.x = Math.cos(vAngle) * vTotal;\r\n        this.velocity.y = Math.sin(vAngle) * vTotal;\r\n\r\n\r\n        this.position.AddWith(this.velocity);\r\n    }\r\n\r\n    render(ctx: CanvasRenderingContext2D) {\r\n        ctx.save();\r\n        RotTransformCanvas(ctx, this.position.x, this.position.y, 4, 8, this.rotation + Math.PI / 2);\r\n        if (this.isEngineOn) {\r\n            this.sprites.rotrender(ctx, 4, 11, 8, 16, Math.floor(4 * Math.random()), 1, this.engineDeflect * Math.PI / 4, 4, 2);\r\n        }\r\n        if (this.tgtDeflect > 0) {\r\n            // Render spin flame\r\n            this.sprites.rotrender(ctx, 7, 4, 8, 16, Math.floor(Math.random() * 2), 2, 0, 3, 4);\r\n        }\r\n        else if (this.tgtDeflect < 0) {\r\n            // Render spin flame\r\n            this.sprites.rotrender(ctx, 1, 4, 8, 16, 2 + Math.floor(Math.random() * 2), 2, 0, 6, 4);\r\n        }\r\n        this.sprites.render(ctx, 0, 0, 8, 16, 0, 0);\r\n        ctx.restore();\r\n    }\r\n}","import AssetLoader from '../common/assets/AssetLoader';\r\nimport Const from './const';\r\nimport NearestNeighborScalingHelper from '../common/NearestNeighborScalingHelper';\r\nimport { NearestNeighborScaling, RotTransformCanvas } from '../common/CanvasHelpers';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport entitySheetUrl from './assets/bullets_entities.png';\r\nimport playerUrl from './assets/bullets_ship.png';\r\nimport ImageLoader from '../common/assets/ImageLoader';\r\nimport Player from './Player';\r\nimport KeyboardManager from '../common/input/KeyboardManager';\r\nimport KeyState from '../common/input/KeyState';\r\nimport Point from '../common/position/Point';\r\n\r\nlet scalingHelper: NearestNeighborScalingHelper;\r\n\r\nexport default function Run() {\r\n    const assetLoader = new AssetLoader();\r\n    const entitySheet = new SpriteSheet(8, 16, entitySheetUrl, assetLoader.registerAssetLoadCallback());\r\n\r\n    assetLoader.onAllFinished(() => onLoadDone(entitySheet));\r\n}\r\n\r\nfunction onLoadDone(entitySheet: SpriteSheet) {\r\n    const canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n    const ctx = canvas.getContext('2d');\r\n    scalingHelper = new NearestNeighborScalingHelper(canvas, ctx, Const.Width, Const.Height, true, () => { return; });\r\n    NearestNeighborScaling(ctx);\r\n\r\n    const keys = new KeyboardManager(document.body, false);\r\n    const player = new Player(entitySheet);\r\n\r\n    repaintLoop(player, keys, canvas, ctx);\r\n}\r\n\r\nfunction repaintLoop(player: Player, keys: KeyboardManager, canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\r\n    keys.update();\r\n    player.tick(keys);\r\n    repaint(player, canvas, ctx);\r\n    requestAnimationFrame(() => repaintLoop(player, keys, canvas, ctx));\r\n}\r\n\r\nfunction repaint(player: Player, canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\r\n    NearestNeighborScaling(ctx);\r\n    ctx.fillStyle = 'black';\r\n    ctx.fillRect(0, 0, Const.Width, Const.Height);\r\n    ctx.save();\r\n\r\n    const focusPoint = Point.Add(player.position, Point.Multiply(player.velocity, 10));\r\n\r\n    ctx.translate(-(focusPoint.x - Const.Width / 2), -(focusPoint.y - Const.Height / 2));\r\n    ctx.fillStyle = 'gray';\r\n\r\n    const bg_line_size = 400;\r\n\r\n    // Render some bg lines so we can see motion\r\n    for (let ty = Math.floor((focusPoint.y - Const.Height / 2) / bg_line_size) * bg_line_size; ty <= Math.floor((focusPoint.y + Const.Height / 2) / bg_line_size) * bg_line_size; ty += bg_line_size) {\r\n        ctx.fillRect(focusPoint.x - Const.Width / 2, ty, Const.Width, 3);\r\n    }\r\n\r\n    for (let tx = Math.floor((focusPoint.x - Const.Width / 2) / bg_line_size) * bg_line_size; tx <= Math.floor((focusPoint.x + Const.Width / 2) / bg_line_size) * bg_line_size; tx += bg_line_size) {\r\n        ctx.fillRect(tx, focusPoint.y - Const.Height / 2, 3, Const.Height);\r\n    }\r\n\r\n    player.render(ctx);\r\n    ctx.restore();\r\n}"],"sourceRoot":""}