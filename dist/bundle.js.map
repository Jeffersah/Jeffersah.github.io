{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///./node_modules/prop-types/index.js","webpack:///./src/projects/common/index.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/resolve-pathname/esm/resolve-pathname.js","webpack:///./node_modules/value-equal/esm/value-equal.js","webpack:///./node_modules/tiny-invariant/dist/tiny-invariant.esm.js","webpack:///./node_modules/history/esm/history.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///../modules/HistoryContext.js","webpack:///../modules/createNameContext.js","webpack:///../modules/RouterContext.js","webpack:///../modules/Router.js","webpack:///../modules/MemoryRouter.js","webpack:///../modules/Lifecycle.js","webpack:///../modules/Prompt.js","webpack:///../modules/generatePath.js","webpack:///../modules/Redirect.js","webpack:///../modules/matchPath.js","webpack:///../modules/Route.js","webpack:///../modules/StaticRouter.js","webpack:///../modules/Switch.js","webpack:///../modules/withRouter.js","webpack:///../modules/hooks.js","webpack:///../modules/BrowserRouter.js","webpack:///../modules/HashRouter.js","webpack:///../modules/utils/locationUtils.js","webpack:///../modules/Link.js","webpack:///../modules/NavLink.js","webpack:///./node_modules/mini-create-react-context/dist/esm/index.js","webpack:///./node_modules/path-to-regexp/index.js","webpack:///./node_modules/react-is/index.js","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/core/mergeConfig.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./src/projects/mandelbrot/Constants.ts","webpack:///./src/projects/common/Range.ts","webpack:///./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/routerComponent.tsx","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/path-to-regexp/node_modules/isarray/index.js","webpack:///./node_modules/react-is/cjs/react-is.production.min.js","webpack:///./src/views/index.ts","webpack:///./src/views/home/home.tsx","webpack:///./src/components/index.ts","webpack:///./src/components/renderFromUrl/RenderFromUrlComponent.tsx","webpack:///./node_modules/axios-observable/dist/index.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/core/buildFullPath.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/axios-observable/dist/create-observable.js","webpack:///./src/views/projects/projects.tsx","webpack:///./src/views/projects/index.ts","webpack:///./src/views/projects/mandelbrot/MandelbrotComponent.tsx","webpack:///./src/projects/mandelbrot/main.ts","webpack:///./src/projects/mandelbrot/Renderer.ts","webpack:///./src/projects/common/Range2d.ts","webpack:///./src/projects/common/ColorRange.ts","webpack:///./src/projects/common/Complex.ts","webpack:///./src/projects/mandelbrot/ProgressiveRepaint.ts","webpack:///./src/projects/mandelbrot/IIterativeFunction.ts","webpack:///./src/projects/mandelbrot/ClickDragWrapper.ts","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/rxjs/src/internal/util/isFunction.ts","webpack:///./node_modules/rxjs/src/internal/config.ts","webpack:///./node_modules/rxjs/src/internal/util/hostReportError.ts","webpack:///./node_modules/rxjs/src/internal/Observer.ts","webpack:///./node_modules/rxjs/src/internal/util/isObject.ts","webpack:///./node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","webpack:///./node_modules/rxjs/src/internal/Subscription.ts","webpack:///./node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/Subscriber.ts","webpack:///./node_modules/rxjs/src/internal/util/canReportError.ts","webpack:///./node_modules/rxjs/src/internal/util/identity.ts","webpack:///./node_modules/rxjs/src/internal/util/pipe.ts","webpack:///./node_modules/rxjs/src/internal/Observable.ts","webpack:///./node_modules/rxjs/src/internal/util/toSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","webpack:///./node_modules/rxjs/src/internal/SubjectSubscription.ts","webpack:///./node_modules/rxjs/src/internal/Subject.ts","webpack:///./node_modules/rxjs/src/internal/operators/refCount.ts","webpack:///./node_modules/rxjs/src/internal/observable/ConnectableObservable.ts","webpack:///./node_modules/rxjs/src/internal/operators/groupBy.ts","webpack:///./node_modules/rxjs/src/internal/BehaviorSubject.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/Action.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/QueueAction.ts","webpack:///./node_modules/rxjs/src/internal/Scheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts","webpack:///./node_modules/rxjs/src/internal/observable/empty.ts","webpack:///./node_modules/rxjs/src/internal/util/isScheduler.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToArray.ts","webpack:///./node_modules/rxjs/src/internal/Notification.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","webpack:///./node_modules/rxjs/src/internal/observable/fromArray.ts","webpack:///./node_modules/rxjs/src/internal/observable/of.ts","webpack:///./node_modules/rxjs/src/internal/observable/throwError.ts","webpack:///./node_modules/rxjs/src/internal/operators/observeOn.ts","webpack:///./node_modules/rxjs/src/internal/ReplaySubject.ts","webpack:///./node_modules/rxjs/src/internal/AsyncSubject.ts","webpack:///./node_modules/rxjs/src/internal/util/Immediate.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsapAction.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts","webpack:///./node_modules/rxjs/src/internal/util/isObservable.ts","webpack:///./node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","webpack:///./node_modules/rxjs/src/internal/util/EmptyError.ts","webpack:///./node_modules/rxjs/src/internal/util/TimeoutError.ts","webpack:///./node_modules/rxjs/src/internal/operators/map.ts","webpack:///./node_modules/rxjs/src/internal/observable/bindCallback.ts","webpack:///./node_modules/rxjs/src/internal/observable/bindNodeCallback.ts","webpack:///./node_modules/rxjs/src/internal/OuterSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/InnerSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/symbol/iterator.ts","webpack:///./node_modules/rxjs/src/internal/util/isPromise.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeTo.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToObservable.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToPromise.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToIterable.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToResult.ts","webpack:///./node_modules/rxjs/src/internal/observable/combineLatest.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduled.ts","webpack:///./node_modules/rxjs/src/internal/util/isInteropObservable.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","webpack:///./node_modules/rxjs/src/internal/util/isIterable.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","webpack:///./node_modules/rxjs/src/internal/observable/from.ts","webpack:///./node_modules/rxjs/src/internal/operators/mergeMap.ts","webpack:///./node_modules/rxjs/src/internal/operators/mergeAll.ts","webpack:///./node_modules/rxjs/src/internal/observable/concat.ts","webpack:///./node_modules/rxjs/src/internal/operators/concatAll.ts","webpack:///./node_modules/rxjs/src/internal/observable/defer.ts","webpack:///./node_modules/rxjs/src/internal/observable/forkJoin.ts","webpack:///./node_modules/rxjs/src/internal/observable/fromEvent.ts","webpack:///./node_modules/rxjs/src/internal/observable/fromEventPattern.ts","webpack:///./node_modules/rxjs/src/internal/observable/generate.ts","webpack:///./node_modules/rxjs/src/internal/observable/iif.ts","webpack:///./node_modules/rxjs/src/internal/util/isNumeric.ts","webpack:///./node_modules/rxjs/src/internal/observable/interval.ts","webpack:///./node_modules/rxjs/src/internal/observable/merge.ts","webpack:///./node_modules/rxjs/src/internal/observable/never.ts","webpack:///./node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts","webpack:///./node_modules/rxjs/src/internal/observable/pairs.ts","webpack:///./node_modules/rxjs/src/internal/util/not.ts","webpack:///./node_modules/rxjs/src/internal/operators/filter.ts","webpack:///./node_modules/rxjs/src/internal/observable/partition.ts","webpack:///./node_modules/rxjs/src/internal/observable/race.ts","webpack:///./node_modules/rxjs/src/internal/observable/range.ts","webpack:///./node_modules/rxjs/src/internal/observable/timer.ts","webpack:///./node_modules/rxjs/src/internal/observable/using.ts","webpack:///./node_modules/rxjs/src/internal/observable/zip.ts","webpack:///./node_modules/rxjs/src/index.ts","webpack:///./src/components/renderFromUrl/CodeFromUrlComponent.tsx","webpack:///./src/page.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","toString","isArray","val","isUndefined","isObject","isFunction","forEach","obj","fn","length","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","arguments","deepMerge","extend","a","b","thisArg","trim","str","replace","_inheritsLoose","subClass","superClass","__proto__","__webpack_exports__","Range_1","Range","Range2d_1","Range2d","ColorRange_1","ColorRange","Complex_1","Complex","_extends","assign","target","source","apply","this","isAbsolute","pathname","charAt","spliceOne","list","index","k","pop","resolve_pathname","to","from","undefined","hasTrailingSlash","toParts","split","fromParts","isToAbs","isFromAbs","mustEndAbs","concat","last","up","part","unshift","join","substr","value_equal_valueOf","valueOf","value_equal","valueEqual","Array","every","item","aValue","bValue","keys","isProduction","prefix","tiny_invariant_esm","condition","message","Error","addLeadingSlash","path","stripLeadingSlash","stripBasename","toLowerCase","indexOf","hasBasename","stripTrailingSlash","slice","createPath","location","search","hash","createLocation","state","currentLocation","hashIndex","searchIndex","parsePath","decodeURI","e","URIError","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","action","getUserConfirmation","callback","appendListener","isActive","listener","push","filter","notifyListeners","_len","args","_key","canUseDOM","createElement","getConfirmation","confirm","PopStateEvent","HashChangeEvent","getHistoryState","history","createBrowserHistory","props","ua","globalHistory","canUseHistory","userAgent","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_ref","_window$location","createKey","Math","random","transitionManager","setState","nextState","handlePopState","event","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","ok","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","listenerCount","checkDOMListeners","addEventListener","removeEventListener","isBlocked","href","pushState","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","HashChangeEvent$1","HashPathCoders","hashbang","encodePath","decodePath","noslash","slash","stripHash","url","getHashPath","substring","replaceHashPath","createHashHistory","_props$hashType","hashType","_HashPathCoders$hashT","ignorePath","encodedPath","prevLocation","allPaths","lastIndexOf","baseTag","querySelector","getAttribute","pushHashPath","nextPaths","clamp","lowerBound","upperBound","min","max","_objectWithoutPropertiesLoose","excluded","sourceKeys","historyContext","context","createContext","displayName","createNamedContext","Router","_isMounted","_pendingLocation","staticContext","_this","computeRootMatch","params","isExact","componentDidMount","componentWillUnmount","render","external_React_default","RouterContext","Provider","match","HistoryContext","children","Component","MemoryRouter","_props$initialEntries","initialEntries","_props$initialIndex","initialIndex","entries","map","entry","nextIndex","nextEntries","splice","canGo","createHistory","react_router_Router","Lifecycle","onMount","componentDidUpdate","prevProps","onUpdate","onUnmount","Prompt","when","_ref$when","Consumer","invariant","method","react_router_Lifecycle","self","release","cache","cacheLimit","cacheCount","generatePath","generator","pathToRegexp","compile","compilePath","pretty","Redirect","computedMatch","_ref$push","matchPath","options","_options","exact","_options$exact","strict","_options$strict","sensitive","_options$sensitive","reduce","matched","cacheKey","end","pathCache","regexp","_compilePath","exec","values","memo","Route","_this$props","component","base","createURL","staticHandler","methodName","noop","StaticRouter","handlePush","navigateTo","handleReplace","handleListen","handleBlock","_this$props$basename","_this$props$context","addBasename","_this$props2$basename","_this$props2$context","_this$props2$location","rest","_this$props2","Switch","element","Children","child","isValidElement","cloneElement","withRouter","C","wrappedComponentRef","remainingProps","ref","WrappedComponent","hoistStatics","useContext","useHistory","useLocation","Context","useParams","useRouteMatch","BrowserRouter","HashRouter","resolveToLocation","normalizeToLocation","forwardRefShim","forwardRef","LinkAnchor","forwardedRef","innerRef","navigate","onClick","ex","preventDefault","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","Link","_ref2","_ref2$component","NavLink","ariaCurrent","_ref$ariaCurrent","activeClassName","_ref$activeClassName","activeStyle","classNameProp","className","isActiveProp","locationProp","styleProp","style","escapedPath","classnames","joinClassnames","global","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","MAX_SIGNED_31_BIT_INT","commonjsGlobal","globalThis","defaultValue","calculateChangedBits","_Provider$childContex","_Consumer$contextType","contextProp","_Component","handlers","emitter","on","handler","off","h","set","newValue","changedBits","_proto","getChildContext","componentWillReceiveProps","nextProps","oldValue","x","y","childContextTypes","isRequired","_Component2","_this2","getValue","observedBits","_proto2","contextTypes","isarray","parse","tokensToFunction","tokensToRegExp","PATH_REGEXP","RegExp","res","tokens","defaultDelimiter","delimiter","escaped","offset","next","capture","group","modifier","asterisk","partial","repeat","optional","pattern","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","charCodeAt","toUpperCase","matches","flags","opts","data","encode","encodeURIComponent","token","segment","TypeError","JSON","stringify","j","test","attachKeys","re","route","endsWithDelimiter","groups","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","utils","paramsSerializer","serializedParams","v","toISOString","hashmarkIndex","__CANCEL__","process","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","adapter","defaults","XMLHttpRequest","transformRequest","transformResponse","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","settle","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","config","Promise","resolve","reject","requestData","requestHeaders","request","auth","username","password","Authorization","btoa","fullPath","baseURL","open","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","cookies","xsrfValue","withCredentials","read","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","code","error","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","prop","axiosKeys","otherKeys","Cancel","CanvasWidth","CanvasHeight","[object Object]","percentage","point","amt","range","anchor","ScaleTo","Length","targetWidth","deltaRange","targetRange","GetValue","GetPercentage","ConvertTo","UnitRange","reactIs","REACT_STATICS","contextType","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","$$typeof","compare","TYPE_STATICS","getStatics","isMemo","ForwardRef","Memo","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","descriptor","ReactDOM","routerComponent_1","PAGE_LOADED","default","getElementById","react_router_dom_1","views_1","projects_1","page_1","DEFAULT_TITLE","PageRoute","Page","title","HomeComponent","ProjectsComponent","MandelbrotComponent","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","err","getShim","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","checkPropTypes","PropTypes","g","Function","arr","for","f","q","u","typeOf","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isValidElementType","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","home_1","components_1","CodeFromUrlComponent","RenderFromUrlComponent_1","RenderFromUrlComponent","CodeFromUrlComponent_1","axios_observable_1","content","setContent","useState","useEffect","subscribe","dangerouslySetInnerHTML","__html","axios_1","create_observable_1","Axios","axiosInstance","configurable","interceptors","createObservable","post","put","patch","delete","head","mergeConfig","createInstance","defaultConfig","instance","axios","instanceConfig","CancelToken","isCancel","all","promises","spread","InterceptorManager","dispatchRequest","chain","interceptor","fulfilled","rejected","shift","getUri","use","eject","id","transformData","throwIfCancellationRequested","throwIfRequested","reason","fns","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","nextTick","browser","env","argv","version","versions","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","normalizedName","isAxiosError","toJSON","description","fileName","lineNumber","columnNumber","stack","isAbsoluteURL","combineURLs","requestedURL","relativeURL","ignoreDuplicateOf","parsed","line","originURL","msie","urlParsingNode","resolveURL","setAttribute","protocol","host","hostname","port","requestURL","write","expires","domain","secure","cookie","Date","toGMTString","decodeURIComponent","remove","now","executor","resolvePromise","__assign","rxjs_1","promiseFactory","_i","cancelSource","hasCancelToken","console","warn","observable","Observable","subscriber","complete","catch","_subscribe","args2","subscription","_unsubscribe","unsubscribe","MandelbrotComponent_1","main_1","Const","Renderer_1","IIterativeFunction_1","common_1","ClickDragWrapper_1","mandelRender","juliaRender","mandelbrotSelect","renderer","Julia","reset","Tick","requestAnimationFrame","canvas","subCanvas","width","height","ClickDragWrapper","Renderer","Mandelbrot","ProgressiveRepaint_1","MAX_DEPTH","PAINT_PER_TICK","paintColor","repainter","ProgressiveRepaint","ctx","getContext","ScreenRange","offsetWidth","offsetHeight","WindowRange","finished","X","Y","Scale","worldCoords","fillStyle","CalcColor","fillRect","Advance","coords","original","rolling","iter","AbsSq","MaxAbsSq","Iterate","perc","ToColor","Reset","xRange","yRange","xPercent","yPercent","xValue","yValue","xAmt","yAmt","Shift","xShift","yShift","ShiftByPercentage","percent","xAnchor","yAnchor","intermediate","rMin","rMax","gMin","gMax","bMin","bMax","rRange","gRange","bRange","floor","real","imaginary","sqrt","other","tmpReal","power","rs","theta","atan2","pow","cos","sin","canvasWidth","canvasHeight","scale","maxScale","fastLog2","MultiplyWith","AddWith","Radius","Abs","SCROLL_DIV","SCROLL_POW","MAX_ZOOM_WIDTH","MIN_WINDOW","MAX_WINDOW","control","paintWindow","onSelect","handleMouseDown","handleMouseUp","handleMouseLeave","handleMouseMove","handleScroll","screenBounds","ResetPaint","grabX","offsetX","grabY","offsetY","isGrabbed","buttons","dx","dy","assertBounds","scalePercentage","deltaY","scalePerc","AspectScale","assertRangeBounds","Paint","extendStatics","setPrototypeOf","__extends","__","_enable_super_gross_mode_that_will_cause_bad_things","hostReportError","empty","closed","useDeprecatedSynchronousErrorHandling","UnsubscriptionErrorImpl","errors","Subscription_Subscription","Subscription","_parentOrParents","_subscriptions","UnsubscriptionError","flattenUnsubscriptionErrors","sub","add","teardown","EMPTY","tmp","subscriptions","subscriptionIndex","errs","rxSubscriber","Subscriber_Subscriber","_super","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","Subscriber_SafeSubscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","parent","canReportError","observer","_a","closed_1","identity","pipeFromArray","input","prev","Observable_Observable","_isScalar","lift","operator","sink","nextOrObserver","toSubscriber","_trySubscribe","promiseCtor","getPromiseCtor","observable_observable","operations","toPromise","ObjectUnsubscribedErrorImpl","SubjectSubscription_SubjectSubscription","SubjectSubscription","subject","observers","subscriberIndex","Subject_SubjectSubscriber","SubjectSubscriber","Subject_Subject","Subject","hasError","Subject_AnonymousSubject","ObjectUnsubscribedError","copy","thrownError","asObservable","AnonymousSubject","RefCountOperator","connectable","_refCount","refCounter","refCount_RefCountSubscriber","connection","connect","RefCountSubscriber","refCount","sharedConnection","_connection","ConnectableObservable_ConnectableObservable","ConnectableObservable","subjectFactory","getSubject","_subject","_isComplete","ConnectableObservable_ConnectableSubscriber","ConnectableSubscriber","groupBy_GroupedObservable","GroupedObservable","groupSubject","refCountSubscription","groupBy_InnerRefCountSubscription","InnerRefCountSubscription","count","attemptedToUnsubscribe","BehaviorSubject_BehaviorSubject","BehaviorSubject","_value","AsyncAction_AsyncAction","AsyncAction","scheduler","work","schedule","delay","recycleAsyncId","pending","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","Action","QueueAction_QueueAction","QueueAction","Scheduler","SchedulerAction","AsyncScheduler_AsyncScheduler","AsyncScheduler","delegate","active","scheduled","QueueScheduler","empty_empty","emptyScheduled","isScheduler","NotificationKind","subscribeToArray","scheduleArray","fromArray","of","throwError","dispatch","Notification_Notification","Notification","kind","hasValue","observe","do","accept","toObservable","createNext","undefinedValueNotification","createComplete","completeNotification","ObserveOnSubscriber","arg","notification","scheduleMessage","ObserveOnMessage","ReplaySubject_ReplaySubject","ReplaySubject","bufferSize","windowTime","Number","POSITIVE_INFINITY","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextTimeWindow","nextInfiniteTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","observeOn_ObserveOnSubscriber","spliceCount","eventsCount","time","AsyncSubject_AsyncSubject","AsyncSubject","hasNext","hasCompleted","nextHandle","RESOLVED","activeHandles","findAndClearHandle","handle","Immediate","cb","AsapAction_AsapAction","AsapAction","AsapScheduler","AnimationFrameAction_AnimationFrameAction","AnimationFrameAction","cancelAnimationFrame","AnimationFrameScheduler","VirtualTimeScheduler_VirtualTimeScheduler","VirtualTimeScheduler","maxFrames","VirtualTimeScheduler_VirtualAction","frame","frameTimeFactor","VirtualAction","sort","sortActions","isObservable","ArgumentOutOfRangeErrorImpl","EmptyErrorImpl","TimeoutErrorImpl","project","MapOperator","map_MapSubscriber","MapSubscriber","bindCallback","callbackFunc","resultSelector","bindCallback_dispatch","innerArgs","dispatchNext","bindNodeCallback","bindNodeCallback_dispatch","bindNodeCallback_dispatchError","bindNodeCallback_dispatchNext","OuterSubscriber_OuterSubscriber","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","InnerSubscriber_InnerSubscriber","InnerSubscriber","getSymbolIterator","iterator","iterator_iterator","isPromise","subscribeTo","obs","isArrayLike","iterable","done","return","subscribeToResult","outerSubscriber","innerSubscriber","NONE","combineLatest","observables","CombineLatestOperator","combineLatest_CombineLatestSubscriber","CombineLatestSubscriber","toRespond","unused","oldVal","_tryResultSelector","isInteropObservable","scheduleObservable","schedulePromise","isIterable","scheduleIterable","MergeMapOperator","concurrent","mergeMap_MergeMapSubscriber","MergeMapSubscriber","_tryNext","_innerSub","ish","innerSubscription","mergeAll","mergeMap","ii","concatAll","defer","observableFactory","forkJoin","sources","first_1","forkJoinInternal","resultSelector_1","completed","_loop_1","emitted","fromEvent","eventName","setupSubscription","sourceObj","isEventTarget","source_1","isJQueryStyleEventEmitter","source_2","isNodeStyleEventEmitter","source_3","fromEventPattern","addHandler","removeHandler","retValue","generate","initialStateOrOptions","iterate","resultSelectorOrObservable","initialState","generate_dispatch","conditionResult","needIterate","iif","trueResult","falseResult","isNumeric","parseFloat","interval","period","async_async","interval_dispatch","counter","NEVER","never","onErrorResumeNext","first","remainder","subNext","pairs","pairs_dispatch","not","pred","notPred","predicate","FilterOperator","filter_FilterSubscriber","FilterSubscriber","partition","race","RaceOperator","race_RaceSubscriber","RaceSubscriber","hasFirst","start","range_dispatch","current","timer","dueTime","periodOrScheduler","due","timer_dispatch","using","resourceFactory","resource","zip","ZipOperator","zip_ZipSubscriber","ZipSubscriber","iterators","zip_StaticArrayIterator","StaticIterator","zip_ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","_tryresultSelector","nextResult","StaticArrayIterator","ZipBufferIterator","isComplete","asap","animationFrame","ArgumentOutOfRangeError","EmptyError","TimeoutError","keywords","asString","lines","PageComponent"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","module.exports = React;","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","export { Range } from './Range';\r\nexport { Range2d } from './Range2d';\r\nexport { ColorRange } from './ColorRange';\r\nexport { Complex } from './Complex';","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n\n  var toParts = (to && to.split('/')) || [];\n  var fromParts = (from && from.split('/')) || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');\n\n  if (\n    mustEndAbs &&\n    fromParts[0] !== '' &&\n    (!fromParts[0] || !isAbsolute(fromParts[0]))\n  )\n    fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\nexport default resolvePathname;\n","function valueOf(obj) {\n  return obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj);\n}\n\nfunction valueEqual(a, b) {\n  // Test for strict equality first.\n  if (a === b) return true;\n\n  // Otherwise, if either of them == null they are not equal.\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return (\n      Array.isArray(b) &&\n      a.length === b.length &&\n      a.every(function(item, index) {\n        return valueEqual(item, b[index]);\n      })\n    );\n  }\n\n  if (typeof a === 'object' || typeof b === 'object') {\n    var aValue = valueOf(a);\n    var bValue = valueOf(b);\n\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n\n    return Object.keys(Object.assign({}, a, b)).every(function(key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\nexport default valueEqual;\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    throw new Error(prefix + \": \" + (message || ''));\n}\n\nexport default invariant;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction stripHash(url) {\n  var hashIndex = url.indexOf('#');\n  return hashIndex === -1 ? url : url.slice(0, hashIndex);\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(stripHash(window.location.href) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function locationsAreEqual$$1(a, b) {\n    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;\n  }\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    var baseTag = document.querySelector('base');\n    var href = '';\n\n    if (baseTag && baseTag.getAttribute('href')) {\n      href = stripHash(window.location.href);\n    }\n\n    return href + '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import createNamedContext from \"./createNameContext\";\n\nconst historyContext = /*#__PURE__*/ createNamedContext(\"Router-History\");\nexport default historyContext;\n","// TODO: Replace with React.createContext once we can assume React 16+\nimport createContext from \"mini-create-react-context\";\n\nconst createNamedContext = name => {\n  const context = createContext();\n  context.displayName = name;\n\n  return context;\n};\n\nexport default createNamedContext;\n","// TODO: Replace with React.createContext once we can assume React 16+\nimport createContext from \"mini-create-react-context\";\n\nconst createNamedContext = name => {\n  const context = createContext();\n  context.displayName = name;\n\n  return context;\n};\n\nconst context = /*#__PURE__*/ createNamedContext(\"Router\");\nexport default context;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\nimport HistoryContext from \"./HistoryContext.js\";\nimport RouterContext from \"./RouterContext.js\";\n\n/**\n * The public API for putting history on context.\n */\nclass Router extends React.Component {\n  static computeRootMatch(pathname) {\n    return { path: \"/\", url: \"/\", params: {}, isExact: pathname === \"/\" };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      location: props.history.location\n    };\n\n    // This is a bit of a hack. We have to start listening for location\n    // changes here in the constructor in case there are any <Redirect>s\n    // on the initial render. If there are, they will replace/push when\n    // they mount and since cDM fires in children before parents, we may\n    // get a new location before the <Router> is mounted.\n    this._isMounted = false;\n    this._pendingLocation = null;\n\n    if (!props.staticContext) {\n      this.unlisten = props.history.listen(location => {\n        if (this._isMounted) {\n          this.setState({ location });\n        } else {\n          this._pendingLocation = location;\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._pendingLocation) {\n      this.setState({ location: this._pendingLocation });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.unlisten) this.unlisten();\n  }\n\n  render() {\n    return (\n      <RouterContext.Provider\n        value={{\n          history: this.props.history,\n          location: this.state.location,\n          match: Router.computeRootMatch(this.state.location.pathname),\n          staticContext: this.props.staticContext\n        }}\n      >\n        <HistoryContext.Provider\n          children={this.props.children || null}\n          value={this.props.history}\n        />\n      </RouterContext.Provider>\n    );\n  }\n}\n\nif (__DEV__) {\n  Router.propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.object.isRequired,\n    staticContext: PropTypes.object\n  };\n\n  Router.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      prevProps.history === this.props.history,\n      \"You cannot change <Router history>\"\n    );\n  };\n}\n\nexport default Router;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createMemoryHistory as createHistory } from \"history\";\nimport warning from \"tiny-warning\";\n\nimport Router from \"./Router.js\";\n\n/**\n * The public API for a <Router> that stores location in memory.\n */\nclass MemoryRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  MemoryRouter.propTypes = {\n    initialEntries: PropTypes.array,\n    initialIndex: PropTypes.number,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number,\n    children: PropTypes.node\n  };\n\n  MemoryRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<MemoryRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { MemoryRouter as Router }`.\"\n    );\n  };\n}\n\nexport default MemoryRouter;\n","import React from \"react\";\n\nclass Lifecycle extends React.Component {\n  componentDidMount() {\n    if (this.props.onMount) this.props.onMount.call(this, this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);\n  }\n\n  componentWillUnmount() {\n    if (this.props.onUnmount) this.props.onUnmount.call(this, this);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Lifecycle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\n\nimport Lifecycle from \"./Lifecycle.js\";\nimport RouterContext from \"./RouterContext.js\";\n\n/**\n * The public API for prompting the user before navigating away from a screen.\n */\nfunction Prompt({ message, when = true }) {\n  return (\n    <RouterContext.Consumer>\n      {context => {\n        invariant(context, \"You should not use <Prompt> outside a <Router>\");\n\n        if (!when || context.staticContext) return null;\n\n        const method = context.history.block;\n\n        return (\n          <Lifecycle\n            onMount={self => {\n              self.release = method(message);\n            }}\n            onUpdate={(self, prevProps) => {\n              if (prevProps.message !== message) {\n                self.release();\n                self.release = method(message);\n              }\n            }}\n            onUnmount={self => {\n              self.release();\n            }}\n            message={message}\n          />\n        );\n      }}\n    </RouterContext.Consumer>\n  );\n}\n\nif (__DEV__) {\n  const messageType = PropTypes.oneOfType([PropTypes.func, PropTypes.string]);\n\n  Prompt.propTypes = {\n    when: PropTypes.bool,\n    message: messageType.isRequired\n  };\n}\n\nexport default Prompt;\n","import pathToRegexp from \"path-to-regexp\";\n\nconst cache = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;\n\nfunction compilePath(path) {\n  if (cache[path]) return cache[path];\n\n  const generator = pathToRegexp.compile(path);\n\n  if (cacheCount < cacheLimit) {\n    cache[path] = generator;\n    cacheCount++;\n  }\n\n  return generator;\n}\n\n/**\n * Public API for generating a URL pathname from a path and parameters.\n */\nfunction generatePath(path = \"/\", params = {}) {\n  return path === \"/\" ? path : compilePath(path)(params, { pretty: true });\n}\n\nexport default generatePath;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createLocation, locationsAreEqual } from \"history\";\nimport invariant from \"tiny-invariant\";\n\nimport Lifecycle from \"./Lifecycle.js\";\nimport RouterContext from \"./RouterContext.js\";\nimport generatePath from \"./generatePath.js\";\n\n/**\n * The public API for navigating programmatically with a component.\n */\nfunction Redirect({ computedMatch, to, push = false }) {\n  return (\n    <RouterContext.Consumer>\n      {context => {\n        invariant(context, \"You should not use <Redirect> outside a <Router>\");\n\n        const { history, staticContext } = context;\n\n        const method = push ? history.push : history.replace;\n        const location = createLocation(\n          computedMatch\n            ? typeof to === \"string\"\n              ? generatePath(to, computedMatch.params)\n              : {\n                  ...to,\n                  pathname: generatePath(to.pathname, computedMatch.params)\n                }\n            : to\n        );\n\n        // When rendering in a static context,\n        // set the new location immediately.\n        if (staticContext) {\n          method(location);\n          return null;\n        }\n\n        return (\n          <Lifecycle\n            onMount={() => {\n              method(location);\n            }}\n            onUpdate={(self, prevProps) => {\n              const prevLocation = createLocation(prevProps.to);\n              if (\n                !locationsAreEqual(prevLocation, {\n                  ...location,\n                  key: prevLocation.key\n                })\n              ) {\n                method(location);\n              }\n            }}\n            to={to}\n          />\n        );\n      }}\n    </RouterContext.Consumer>\n  );\n}\n\nif (__DEV__) {\n  Redirect.propTypes = {\n    push: PropTypes.bool,\n    from: PropTypes.string,\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n  };\n}\n\nexport default Redirect;\n","import pathToRegexp from \"path-to-regexp\";\n\nconst cache = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;\n\nfunction compilePath(path, options) {\n  const cacheKey = `${options.end}${options.strict}${options.sensitive}`;\n  const pathCache = cache[cacheKey] || (cache[cacheKey] = {});\n\n  if (pathCache[path]) return pathCache[path];\n\n  const keys = [];\n  const regexp = pathToRegexp(path, keys, options);\n  const result = { regexp, keys };\n\n  if (cacheCount < cacheLimit) {\n    pathCache[path] = result;\n    cacheCount++;\n  }\n\n  return result;\n}\n\n/**\n * Public API for matching a URL pathname to a path.\n */\nfunction matchPath(pathname, options = {}) {\n  if (typeof options === \"string\" || Array.isArray(options)) {\n    options = { path: options };\n  }\n\n  const { path, exact = false, strict = false, sensitive = false } = options;\n\n  const paths = [].concat(path);\n\n  return paths.reduce((matched, path) => {\n    if (!path && path !== \"\") return null;\n    if (matched) return matched;\n\n    const { regexp, keys } = compilePath(path, {\n      end: exact,\n      strict,\n      sensitive\n    });\n    const match = regexp.exec(pathname);\n\n    if (!match) return null;\n\n    const [url, ...values] = match;\n    const isExact = pathname === url;\n\n    if (exact && !isExact) return null;\n\n    return {\n      path, // the path used to match\n      url: path === \"/\" && url === \"\" ? \"/\" : url, // the matched portion of the URL\n      isExact, // whether or not we matched exactly\n      params: keys.reduce((memo, key, index) => {\n        memo[key.name] = values[index];\n        return memo;\n      }, {})\n    };\n  }, null);\n}\n\nexport default matchPath;\n","import React from \"react\";\nimport { isValidElementType } from \"react-is\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport RouterContext from \"./RouterContext.js\";\nimport matchPath from \"./matchPath.js\";\n\nfunction isEmptyChildren(children) {\n  return React.Children.count(children) === 0;\n}\n\nfunction evalChildrenDev(children, props, path) {\n  const value = children(props);\n\n  warning(\n    value !== undefined,\n    \"You returned `undefined` from the `children` function of \" +\n      `<Route${path ? ` path=\"${path}\"` : \"\"}>, but you ` +\n      \"should have returned a React element or `null`\"\n  );\n\n  return value || null;\n}\n\n/**\n * The public API for matching a single path and rendering.\n */\nclass Route extends React.Component {\n  render() {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Route> outside a <Router>\");\n\n          const location = this.props.location || context.location;\n          const match = this.props.computedMatch\n            ? this.props.computedMatch // <Switch> already computed the match for us\n            : this.props.path\n            ? matchPath(location.pathname, this.props)\n            : context.match;\n\n          const props = { ...context, location, match };\n\n          let { children, component, render } = this.props;\n\n          // Preact uses an empty array as children by\n          // default, so use null if that's the case.\n          if (Array.isArray(children) && children.length === 0) {\n            children = null;\n          }\n\n          return (\n            <RouterContext.Provider value={props}>\n              {props.match\n                ? children\n                  ? typeof children === \"function\"\n                    ? __DEV__\n                      ? evalChildrenDev(children, props, this.props.path)\n                      : children(props)\n                    : children\n                  : component\n                  ? React.createElement(component, props)\n                  : render\n                  ? render(props)\n                  : null\n                : typeof children === \"function\"\n                ? __DEV__\n                  ? evalChildrenDev(children, props, this.props.path)\n                  : children(props)\n                : null}\n            </RouterContext.Provider>\n          );\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n}\n\nif (__DEV__) {\n  Route.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n    component: (props, propName) => {\n      if (props[propName] && !isValidElementType(props[propName])) {\n        return new Error(\n          `Invalid prop 'component' supplied to 'Route': the prop is not a valid React component`\n        );\n      }\n    },\n    exact: PropTypes.bool,\n    location: PropTypes.object,\n    path: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string)\n    ]),\n    render: PropTypes.func,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool\n  };\n\n  Route.prototype.componentDidMount = function() {\n    warning(\n      !(\n        this.props.children &&\n        !isEmptyChildren(this.props.children) &&\n        this.props.component\n      ),\n      \"You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored\"\n    );\n\n    warning(\n      !(\n        this.props.children &&\n        !isEmptyChildren(this.props.children) &&\n        this.props.render\n      ),\n      \"You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored\"\n    );\n\n    warning(\n      !(this.props.component && this.props.render),\n      \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\"\n    );\n  };\n\n  Route.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      !(this.props.location && !prevProps.location),\n      '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.'\n    );\n\n    warning(\n      !(!this.props.location && prevProps.location),\n      '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.'\n    );\n  };\n}\n\nexport default Route;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createLocation, createPath } from \"history\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport Router from \"./Router.js\";\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === \"/\" ? path : \"/\" + path;\n}\n\nfunction addBasename(basename, location) {\n  if (!basename) return location;\n\n  return {\n    ...location,\n    pathname: addLeadingSlash(basename) + location.pathname\n  };\n}\n\nfunction stripBasename(basename, location) {\n  if (!basename) return location;\n\n  const base = addLeadingSlash(basename);\n\n  if (location.pathname.indexOf(base) !== 0) return location;\n\n  return {\n    ...location,\n    pathname: location.pathname.substr(base.length)\n  };\n}\n\nfunction createURL(location) {\n  return typeof location === \"string\" ? location : createPath(location);\n}\n\nfunction staticHandler(methodName) {\n  return () => {\n    invariant(false, \"You cannot %s with <StaticRouter>\", methodName);\n  };\n}\n\nfunction noop() {}\n\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */\nclass StaticRouter extends React.Component {\n  navigateTo(location, action) {\n    const { basename = \"\", context = {} } = this.props;\n    context.action = action;\n    context.location = addBasename(basename, createLocation(location));\n    context.url = createURL(context.location);\n  }\n\n  handlePush = location => this.navigateTo(location, \"PUSH\");\n  handleReplace = location => this.navigateTo(location, \"REPLACE\");\n  handleListen = () => noop;\n  handleBlock = () => noop;\n\n  render() {\n    const { basename = \"\", context = {}, location = \"/\", ...rest } = this.props;\n\n    const history = {\n      createHref: path => addLeadingSlash(basename + createURL(path)),\n      action: \"POP\",\n      location: stripBasename(basename, createLocation(location)),\n      push: this.handlePush,\n      replace: this.handleReplace,\n      go: staticHandler(\"go\"),\n      goBack: staticHandler(\"goBack\"),\n      goForward: staticHandler(\"goForward\"),\n      listen: this.handleListen,\n      block: this.handleBlock\n    };\n\n    return <Router {...rest} history={history} staticContext={context} />;\n  }\n}\n\nif (__DEV__) {\n  StaticRouter.propTypes = {\n    basename: PropTypes.string,\n    context: PropTypes.object,\n    location: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n  };\n\n  StaticRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<StaticRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { StaticRouter as Router }`.\"\n    );\n  };\n}\n\nexport default StaticRouter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport RouterContext from \"./RouterContext.js\";\nimport matchPath from \"./matchPath.js\";\n\n/**\n * The public API for rendering the first <Route> that matches.\n */\nclass Switch extends React.Component {\n  render() {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Switch> outside a <Router>\");\n\n          const location = this.props.location || context.location;\n\n          let element, match;\n\n          // We use React.Children.forEach instead of React.Children.toArray().find()\n          // here because toArray adds keys to all child elements and we do not want\n          // to trigger an unmount/remount for two <Route>s that render the same\n          // component at different URLs.\n          React.Children.forEach(this.props.children, child => {\n            if (match == null && React.isValidElement(child)) {\n              element = child;\n\n              const path = child.props.path || child.props.from;\n\n              match = path\n                ? matchPath(location.pathname, { ...child.props, path })\n                : context.match;\n            }\n          });\n\n          return match\n            ? React.cloneElement(element, { location, computedMatch: match })\n            : null;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n}\n\nif (__DEV__) {\n  Switch.propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object\n  };\n\n  Switch.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      !(this.props.location && !prevProps.location),\n      '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.'\n    );\n\n    warning(\n      !(!this.props.location && prevProps.location),\n      '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.'\n    );\n  };\n}\n\nexport default Switch;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistStatics from \"hoist-non-react-statics\";\nimport invariant from \"tiny-invariant\";\n\nimport RouterContext from \"./RouterContext.js\";\n\n/**\n * A public higher-order component to access the imperative API\n */\nfunction withRouter(Component) {\n  const displayName = `withRouter(${Component.displayName || Component.name})`;\n  const C = props => {\n    const { wrappedComponentRef, ...remainingProps } = props;\n\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(\n            context,\n            `You should not use <${displayName} /> outside a <Router>`\n          );\n          return (\n            <Component\n              {...remainingProps}\n              {...context}\n              ref={wrappedComponentRef}\n            />\n          );\n        }}\n      </RouterContext.Consumer>\n    );\n  };\n\n  C.displayName = displayName;\n  C.WrappedComponent = Component;\n\n  if (__DEV__) {\n    C.propTypes = {\n      wrappedComponentRef: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.object\n      ])\n    };\n  }\n\n  return hoistStatics(C, Component);\n}\n\nexport default withRouter;\n","import React from \"react\";\nimport invariant from \"tiny-invariant\";\n\nimport Context from \"./RouterContext.js\";\nimport HistoryContext from \"./HistoryContext.js\";\nimport matchPath from \"./matchPath.js\";\n\nconst useContext = React.useContext;\n\nexport function useHistory() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useHistory()\"\n    );\n  }\n\n  return useContext(HistoryContext);\n}\n\nexport function useLocation() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useLocation()\"\n    );\n  }\n\n  return useContext(Context).location;\n}\n\nexport function useParams() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useParams()\"\n    );\n  }\n\n  const match = useContext(Context).match;\n  return match ? match.params : {};\n}\n\nexport function useRouteMatch(path) {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useRouteMatch()\"\n    );\n  }\n\n  const location = useLocation();\n  const match = useContext(Context).match;\n\n  return path ? matchPath(location.pathname, path) : match;\n}\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const method = replace ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\",\n      activeStyle,\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          const className = isActive\n            ? joinClassnames(classNameProp, activeClassName)\n            : classNameProp;\n          const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.string,\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.object\n  };\n}\n\nexport default NavLink;\n","import React, { Component } from 'react';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823;\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n\nfunction getUniqueId() {\n  var key = '__global_unique_id__';\n  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;\n}\n\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + getUniqueId() + '__';\n\n  var Provider = /*#__PURE__*/function (_Component) {\n    _inheritsLoose(Provider, _Component);\n\n    function Provider() {\n      var _this;\n\n      _this = _Component.apply(this, arguments) || this;\n      _this.emitter = createEventEmitter(_this.props.value);\n      return _this;\n    }\n\n    var _proto = Provider.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0;\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n          if (process.env.NODE_ENV !== 'production') {\n            warning((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    _proto.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = PropTypes.object.isRequired, _Provider$childContex);\n\n  var Consumer = /*#__PURE__*/function (_Component2) {\n    _inheritsLoose(Consumer, _Component2);\n\n    function Consumer() {\n      var _this2;\n\n      _this2 = _Component2.apply(this, arguments) || this;\n      _this2.state = {\n        value: _this2.getValue()\n      };\n\n      _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({\n            value: _this2.getValue()\n          });\n        }\n      };\n\n      return _this2;\n    }\n\n    var _proto2 = Consumer.prototype;\n\n    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n\n      var observedBits = this.props.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    _proto2.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    _proto2.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = PropTypes.object, _Consumer$contextType);\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\nvar index = React.createContext || createReactContext;\n\nexport default index;\n","var isarray = require('isarray')\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","module.exports = require('./lib/axios');","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","export const CanvasWidth = 800;\r\nexport const CanvasHeight = 800;","export class Range {\r\n    constructor(public min: number, public max: number) { }\r\n\r\n    Length() {\r\n        return this.max - this.min;\r\n    }\r\n\r\n    GetValue(percentage: number) {\r\n        return this.min + (this.max - this.min) * percentage;\r\n    }\r\n\r\n    GetPercentage(point: number) {\r\n        return (point - this.min) / (this.max - this.min);\r\n    }\r\n\r\n    Shift(amt: number){\r\n        this.min += amt;\r\n        this.max += amt;\r\n    }\r\n\r\n    ShiftByPercentage(percentage: number)\r\n    {\r\n        const range = this.max-this.min;\r\n        this.min += range * percentage;\r\n        this.max += range * percentage;\r\n    }\r\n\r\n    Scale(percentage: number, anchor: number = 0.5)\r\n    {\r\n        this.ScaleTo(this.Length() * percentage, anchor);\r\n    }\r\n\r\n    ScaleTo(targetWidth: number, anchor: number)\r\n    {\r\n        const range = this.max-this.min;\r\n        const deltaRange = targetWidth - range;\r\n        this.min -= deltaRange * anchor;\r\n        this.max += deltaRange * (1-anchor);\r\n    }\r\n\r\n    ConvertTo(value: number, targetRange: Range) {\r\n        return targetRange.GetValue(this.GetPercentage(value));\r\n    }\r\n    ConvertFrom(value: number, targetRange: Range) {\r\n        return targetRange.ConvertTo(value, this);\r\n    }\r\n}\r\nexport const UnitRange: Range = new Range(0, 1);\r\n(window as any).range = Range;","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport RouterComponent from \"./routerComponent\";\r\n\r\n// We look for this in our fallback-load script for testing locally\r\n(window as any).PAGE_LOADED = true;\r\n\r\nReactDOM.render(\r\n    <RouterComponent />,\r\n    document.getElementById(\"react_content\")\r\n);","module.exports = ReactDOM;","import * as React from \"react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport { HomeComponent, ProjectsComponent } from './views';\r\nimport { MandelbrotComponent } from \"./views/projects/\";\r\nimport { Page } from \"./page\";\r\n\r\nconst DEFAULT_TITLE = \"Nathan's Github Pages\";\r\n\r\nexport default function RouterComponent() {\r\n    return <BrowserRouter basename='/'>\r\n        <PageRoute exact path='/' component={HomeComponent} />\r\n        <PageRoute exact path='/projects/' component={ProjectsComponent} />\r\n        <PageRoute path='/projects/mandelbrot' title=\"Mandelbrot Visualizer\" component={MandelbrotComponent} />\r\n    </BrowserRouter>;\r\n}\r\n\r\nexport function PageRoute(props: {exact?:boolean, path:string, title?:string, component: ()=>JSX.Element}) {\r\n    return <Route exact={props.exact} path={props.path} render={p => <Page {...p} component={props.component} title={props.title || DEFAULT_TITLE} />} />\r\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","/** @license React v16.8.4\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?Symbol.for(\"react.memo\"):\n60115,r=b?Symbol.for(\"react.lazy\"):60116;function t(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case r:case q:case d:return u}}}function v(a){return t(a)===m}exports.typeOf=t;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;\nexports.Fragment=e;exports.Lazy=r;exports.Memo=q;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||\"object\"===typeof a&&null!==a&&(a.$$typeof===r||a.$$typeof===q||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||t(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return t(a)===k};\nexports.isContextProvider=function(a){return t(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return t(a)===n};exports.isFragment=function(a){return t(a)===e};exports.isLazy=function(a){return t(a)===r};exports.isMemo=function(a){return t(a)===q};exports.isPortal=function(a){return t(a)===d};exports.isProfiler=function(a){return t(a)===g};exports.isStrictMode=function(a){return t(a)===f};\nexports.isSuspense=function(a){return t(a)===p};\n","export { HomeComponent } from \"./home/home\";\r\nexport { ProjectsComponent } from \"./projects/projects\";","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RenderFromUrlComponent } from '../../components';\r\nimport { CodeFromUrlComponent } from \"../../components\";\r\n\r\nexport function HomeComponent() {\r\n    return <div>\r\n        <h1>Hi!</h1>\r\n        <Link to='/projects/'>Projects</Link>\r\n        <h2>Test below:</h2>\r\n        <CodeFromUrlComponent url='/dist/content/testContent.txt' />\r\n    </div>;\r\n}","export { RenderFromUrlComponent } from './renderFromUrl/RenderFromUrlComponent';\r\nexport { CodeFromUrlComponent } from './renderFromUrl/CodeFromUrlComponent';","import * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport Axios from 'axios-observable';\r\n\r\n\r\nexport function RenderFromUrlComponent({ url }: { url: string }) {\r\n    const [content, setContent] = React.useState(null);\r\n\r\n    React.useEffect(()=>{\r\n        Axios.get(url).subscribe((content) => {\r\n            setContent(content.data);\r\n        });\r\n    }, []);\r\n\r\n    if(content === undefined) {\r\n        return <div>Loading...</div>\r\n    }\r\n    return <div dangerouslySetInnerHTML={{ __html: content}}>\r\n    </div>;\r\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar axios_1 = require(\"axios\");\nvar create_observable_1 = require(\"./create-observable\");\nvar Axios = /** @class */ (function () {\n    function Axios(axiosInstance) {\n        this.axiosInstance = axiosInstance;\n    }\n    Object.defineProperty(Axios.prototype, \"defaults\", {\n        get: function () {\n            return this.axiosInstance.defaults;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Axios.prototype, \"interceptors\", {\n        get: function () {\n            return this.axiosInstance.interceptors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Axios.request = function (config) {\n        return create_observable_1.createObservable(axios_1.default.request, config);\n    };\n    Axios.get = function (url, config) {\n        return create_observable_1.createObservable(axios_1.default.get, url, config);\n    };\n    Axios.post = function (url, data, config) {\n        return create_observable_1.createObservable(axios_1.default.post, url, data, config);\n    };\n    Axios.put = function (url, data, config) {\n        return create_observable_1.createObservable(axios_1.default.put, url, data, config);\n    };\n    Axios.patch = function (url, data, config) {\n        return create_observable_1.createObservable(axios_1.default.patch, url, data, config);\n    };\n    Axios.delete = function (url, config) {\n        return create_observable_1.createObservable(axios_1.default.delete, url, config);\n    };\n    Axios.head = function (url, config) {\n        return create_observable_1.createObservable(axios_1.default.head, url, config);\n    };\n    Axios.create = function (config) {\n        return new Axios(axios_1.default.create(config));\n    };\n    Axios.prototype.request = function (config) {\n        return create_observable_1.createObservable(this.axiosInstance.request, config);\n    };\n    Axios.prototype.get = function (url, config) {\n        return create_observable_1.createObservable(this.axiosInstance.get, url, config);\n    };\n    Axios.prototype.head = function (url, config) {\n        return create_observable_1.createObservable(this.axiosInstance.head, url, config);\n    };\n    Axios.prototype.post = function (url, data, config) {\n        return create_observable_1.createObservable(this.axiosInstance.post, url, data, config);\n    };\n    Axios.prototype.put = function (url, data, config) {\n        return create_observable_1.createObservable(this.axiosInstance.put, url, data, config);\n    };\n    Axios.prototype.patch = function (url, data, config) {\n        return create_observable_1.createObservable(this.axiosInstance.patch, url, data, config);\n    };\n    Axios.prototype.delete = function (url, config) {\n        return create_observable_1.createObservable(this.axiosInstance.delete, url, config);\n    };\n    Axios.defaults = axios_1.default.defaults;\n    Axios.interceptors = axios_1.default.interceptors;\n    return Axios;\n}());\nexports.Axios = Axios;\nexports.default = Axios;\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar axios_1 = require(\"axios\");\nfunction createObservable(promiseFactory) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var config = args[args.length - 1];\n    config = config ? __assign({}, config) : {};\n    args[args.length - 1] = config;\n    var cancelSource;\n    var hasCancelToken = !!config.cancelToken;\n    if (hasCancelToken) {\n        console.warn(\"No need to use cancel token, just unsubscribe the subscription would cancel the http request automatically\");\n    }\n    var observable = new rxjs_1.Observable(function (subscriber) {\n        if (!hasCancelToken) {\n            cancelSource = axios_1.default.CancelToken.source();\n            config.cancelToken = cancelSource.token;\n        }\n        promiseFactory.apply(void 0, args).then(function (response) {\n            subscriber.next(response);\n            subscriber.complete();\n        })\n            .catch(function (error) { return subscriber.error(error); });\n    });\n    var _subscribe = observable.subscribe.bind(observable);\n    observable.subscribe = function () {\n        var args2 = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args2[_i] = arguments[_i];\n        }\n        var subscription = _subscribe.apply(void 0, args2);\n        var _unsubscribe = subscription.unsubscribe.bind(subscription);\n        subscription.unsubscribe = function () {\n            if (cancelSource) {\n                cancelSource.cancel();\n            }\n            _unsubscribe();\n        };\n        return subscription;\n    };\n    return observable;\n}\nexports.createObservable = createObservable;\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function ProjectsComponent() {\r\n    return <div>\r\n        <h1>Let's see some projects!</h1>\r\n        <Link to='./mandelbrot'>Mandelbrot</Link>\r\n    </div>;\r\n}","export { MandelbrotComponent } from './mandelbrot/MandelbrotComponent';","import * as React from 'react';\r\nimport Run from '../../../projects/mandelbrot/main'; \r\n\r\nexport function MandelbrotComponent() {\r\n    React.useEffect(() => {\r\n        Run();\r\n    }, []);\r\n    return <div className='mandelbrot mandelbrot_body full_body'>\r\n        <canvas id='mainCanvas'></canvas>\r\n        <canvas id='subCanvas'></canvas>\r\n    </div>;\r\n}","import * as Const from \"./Constants\";\r\nimport { Renderer } from \"./Renderer\";\r\nimport { Mandelbrot, Julia } from \"./IIterativeFunction\";\r\nimport { Range2d, Range, Complex } from \"../common\";\r\nimport { ClickDragWrapper } from \"./ClickDragWrapper\";\r\n\r\n\r\nlet mandelRender: ClickDragWrapper;\r\nlet juliaRender: ClickDragWrapper;\r\n\r\nexport default function Run() {\r\n    const canvas = document.getElementById(\"mainCanvas\") as HTMLCanvasElement;\r\n    const subCanvas = document.getElementById(\"subCanvas\") as HTMLCanvasElement;\r\n\r\n    canvas.setAttribute(\"width\", Const.CanvasWidth+\"\");\r\n    canvas.setAttribute(\"height\", Const.CanvasHeight+\"\");\r\n    canvas.style.width = Const.CanvasWidth + \"px\";\r\n    canvas.style.height = Const.CanvasHeight + \"px\";\r\n    \r\n    subCanvas.setAttribute(\"width\", Const.CanvasWidth+\"\");\r\n    subCanvas.setAttribute(\"height\", Const.CanvasHeight+\"\");\r\n    subCanvas.style.width = Const.CanvasWidth + \"px\";\r\n    subCanvas.style.height = Const.CanvasHeight + \"px\";\r\n\r\n    mandelRender = new ClickDragWrapper(canvas, new Range2d(new Range(-1, 1), new Range(-1, 1)), new Renderer(canvas, new Mandelbrot()), mandelbrotSelect);\r\n    juliaRender = new ClickDragWrapper(subCanvas, new Range2d(new Range(-1, 1), new Range(-1, 1)), new Renderer(subCanvas,  new Julia(new Complex(0,0))), (x,y)=>{});\r\n\r\n    setTimeout(Tick, 0);\r\n}\r\n\r\nfunction mandelbrotSelect(x: number, y: number) {\r\n    juliaRender.renderer.func = new Julia(new Complex(x, y));\r\n    juliaRender.reset();\r\n}\r\n\r\nfunction Tick()\r\n{\r\n    mandelRender.Tick();\r\n    juliaRender.Tick();\r\n    requestAnimationFrame(Tick);\r\n}","import * as Const from \"./Constants\";\r\nimport { Range2d, Range, ColorRange, Complex } from \"../common\";\r\nimport { IIterativeFunction } from './IIterativeFunction';\r\nimport { ProgressiveRepaint } from './ProgressiveRepaint';\r\n\r\nconst MAX_DEPTH = 255;\r\nconst PAINT_PER_TICK = Const.CanvasWidth * 20;\r\nconst paintColor: ColorRange = new ColorRange(0, 255, 0, 200, 0, 0)\r\n\r\nexport class Renderer {\r\n\r\n    private ctx: CanvasRenderingContext2D;\r\n    private ScreenRange: Range2d;\r\n    private repainter: ProgressiveRepaint;\r\n\r\n    constructor(private canvas: HTMLCanvasElement, public func: IIterativeFunction)\r\n    {\r\n        this.repainter = new ProgressiveRepaint(Const.CanvasWidth, Const.CanvasHeight);\r\n        this.ctx = canvas.getContext(\"2d\");\r\n        this.ScreenRange = new Range2d(new Range(0, canvas.offsetWidth), new Range(0, canvas.offsetHeight));\r\n    }\r\n\r\n    Paint(WindowRange: Range2d) {\r\n        for(let i = 0; i < PAINT_PER_TICK && !this.repainter.finished; i++){\r\n            let x = this.repainter.X();\r\n            let y = this.repainter.Y();\r\n            let s = this.repainter.Scale();\r\n            let worldCoords = this.ScreenRange.ConvertTo({x, y}, WindowRange);\r\n            this.ctx.fillStyle = this.CalcColor(worldCoords);\r\n            this.ctx.fillRect(x, y, s, s);\r\n            this.repainter.Advance();\r\n        }\r\n    }\r\n\r\n    CalcColor(coords: {x: number, y: number}): string {\r\n\r\n        let original = new Complex(coords.x, coords.y);\r\n        let rolling = new Complex(coords.x, coords.y);\r\n        let iter = 0;\r\n\r\n        while(iter < MAX_DEPTH && rolling.AbsSq() < this.func.MaxAbsSq()) {\r\n            rolling = this.func.Iterate(rolling, original);\r\n            iter++;\r\n        }\r\n\r\n        if(rolling.AbsSq() < this.func.MaxAbsSq())\r\n            return \"white\";\r\n\r\n        let perc = iter / MAX_DEPTH;\r\n        return paintColor.ToColor(perc);\r\n    }\r\n\r\n    ResetPaint(){\r\n        this.repainter.Reset();\r\n    }\r\n}","import { Range } from './Range';\r\n\r\nexport class Range2d {\r\n    constructor(public xRange: Range, public yRange: Range) { } \r\n\r\n    public GetValue(xPercent: number, yPercent: number) {\r\n        return { x: this.xRange.GetValue(xPercent), y: this.yRange.GetValue(yPercent) };\r\n    }\r\n\r\n    public GetPercentage(xValue: number, yValue: number) {\r\n        return { x: this.xRange.GetPercentage(xValue), y: this.yRange.GetPercentage(yValue) };\r\n    }\r\n\r\n    public Shift(xAmt: number, yAmt: number) {\r\n        this.xRange.Shift(xAmt);\r\n        this.yRange.Shift(yAmt);\r\n    }\r\n    public ShiftByPercentage(xShift: number, yShift: number) {\r\n        this.xRange.ShiftByPercentage(xShift);\r\n        this.yRange.ShiftByPercentage(yShift);\r\n    }\r\n\r\n    public AspectScale(percent: number, xAnchor: number = 0.5, yAnchor: number = 0.5){\r\n        return this.Scale(percent, xAnchor, percent, yAnchor);\r\n    }\r\n    public Scale(xPercent: number, xAnchor: number, yPercent: number, yAnchor: number) {\r\n        this.xRange.Scale(xPercent, xAnchor);\r\n        this.yRange.Scale(yPercent, yAnchor);\r\n    }\r\n\r\n    public ConvertTo(value: {x: number, y: number}, target: Range2d)\r\n    {\r\n        const intermediate = this.GetPercentage(value.x, value.y);\r\n        return target.GetValue(intermediate.x, intermediate.y);\r\n    }\r\n}","import { Range } from './Range';\r\nexport class ColorRange {\r\n    public rRange: Range;\r\n    public gRange: Range;\r\n    public bRange: Range;\r\n    constructor(rMin: number, rMax: number, gMin: number, gMax: number, bMin: number, bMax: number) {\r\n        this.rRange = new Range(rMin, rMax);\r\n        this.gRange = new Range(gMin, gMax);\r\n        this.bRange = new Range(bMin, bMax);\r\n    }\r\n    \r\n    public ToColor(percentage: number):string {\r\n        return \"rgb(\" + Math.floor(this.rRange.GetValue(percentage)) + \",\"\r\n                      + Math.floor(this.gRange.GetValue(percentage)) + \",\"\r\n                      + Math.floor(this.bRange.GetValue(percentage)) +\")\";\r\n    }\r\n}","export class Complex {\r\n    constructor(public real: number, public imaginary: number) { }\r\n\r\n    public AbsSq(): number {\r\n        return this.real * this.real + this.imaginary * this.imaginary;\r\n    }\r\n    public Abs(): number {\r\n        return Math.sqrt(this.AbsSq());\r\n    }\r\n\r\n    public AddWith(other: Complex) {\r\n        this.real += other.real;\r\n        this.imaginary += other.imaginary;\r\n    }\r\n\r\n    public MultiplyWith(other: Complex){\r\n        let tmpReal = this.real * other.real - this.imaginary * other.imaginary;\r\n        this.imaginary = this.real * other.imaginary + other.real * this.imaginary;\r\n        this.real = tmpReal;\r\n    }\r\n\r\n    public Pow(power: number) {\r\n        const rs = this.AbsSq();\r\n        const theta = Math.atan2(this.imaginary, this.real);\r\n        this.real = Math.pow(rs, power / 2) * Math.cos(theta);\r\n        this.imaginary = Math.pow(rs, power / 2) * Math.sin(theta);\r\n    }\r\n}","export class ProgressiveRepaint {\r\n    private x: number;\r\n    private y: number;\r\n    private scale: number;\r\n    private maxScale: number;\r\n    public finished: boolean;\r\n\r\n    constructor(private canvasWidth: number, private canvasHeight: number)\r\n    {\r\n        this.finished = false;\r\n        this.scale = this.maxScale = (1 << this.fastLog2(Math.min(canvasWidth, canvasHeight)));\r\n        this.x = this.y = 0;\r\n    }\r\n\r\n    private fastLog2(v: number){\r\n        let shift = 0;\r\n        while(v > 0)\r\n        {\r\n            shift++;\r\n            v>>=1;\r\n        }\r\n        return shift;\r\n    }\r\n\r\n    X(): number {\r\n        return this.x * this.scale;\r\n    }\r\n    Y() : number {\r\n        return this.y * this.scale;\r\n    }\r\n    Scale(): number {\r\n        return this.scale;\r\n    }\r\n\r\n    // Returns bool done\r\n    Advance(): boolean {\r\n        this.x++;\r\n        if(this.x * this.scale >= this.canvasWidth)\r\n        {\r\n            this.x = 0;\r\n            this.y++;\r\n            if(this.y * this.scale >= this.canvasHeight)\r\n            {\r\n                this.y = 0;\r\n                if(this.scale === 1)\r\n                {\r\n                    this.finished = true;\r\n                    return true;\r\n                }\r\n                else\r\n                    this.scale /= 2;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    Reset() {\r\n        this.finished = false;\r\n        this.scale = this.maxScale;\r\n        this.x = this.y = 0;\r\n    }\r\n}","import { Complex } from \"../common\";\r\n\r\nexport interface IIterativeFunction {\r\n    Iterate(rolling: Complex, original: Complex): Complex;\r\n    MaxAbsSq(): number;\r\n}\r\n\r\nexport class Mandelbrot implements IIterativeFunction {\r\n    Iterate(rolling: Complex, original: Complex): Complex {\r\n        rolling.MultiplyWith(rolling);\r\n        rolling.AddWith(original);\r\n        return rolling;\r\n    }\r\n\r\n    MaxAbsSq(): number {\r\n        return 2;        \r\n    }\r\n}\r\n\r\nexport class Julia implements IIterativeFunction {\r\n\r\n    private Radius: number;\r\n    constructor(private c: Complex) {\r\n        this.Radius = (Math.sqrt(4*c.Abs()+1)+1)/2\r\n    }\r\n\r\n    Iterate(rolling: Complex, original: Complex): Complex {\r\n        rolling.MultiplyWith(rolling);\r\n        rolling.AddWith(this.c);\r\n        return rolling;\r\n    }\r\n\r\n    MaxAbsSq(): number {\r\n        return this.Radius;\r\n    }\r\n}","import { Range2d, Range } from \"../common\";\r\nimport { Renderer } from \"./Renderer\";\r\n\r\nconst SCROLL_DIV = 3;\r\nconst SCROLL_POW = 1.1;\r\n\r\nconst MAX_ZOOM_WIDTH = 4;\r\nconst MIN_WINDOW = -2;\r\nconst MAX_WINDOW = 2;\r\n\r\nexport class ClickDragWrapper {\r\n    screenBounds: Range2d;\r\n    constructor(private control: HTMLElement, private paintWindow: Range2d, public renderer: Renderer, private onSelect: (x:number, y:number)=>void) \r\n    {\r\n        control.addEventListener('mousedown', this.handleMouseDown.bind(this));\r\n        control.addEventListener('mouseup', this.handleMouseUp.bind(this));\r\n        control.addEventListener('mouseleave', this.handleMouseLeave.bind(this));\r\n        control.addEventListener('mousemove', this.handleMouseMove.bind(this));\r\n        control.addEventListener('wheel', this.handleScroll.bind(this));\r\n        this.screenBounds = new Range2d(new Range(0, control.offsetWidth), new Range(0, control.offsetHeight));\r\n    }\r\n\r\n    reset() {\r\n        this.paintWindow = new Range2d(new Range(-1, 1), new Range(-1, 1));\r\n        this.renderer.ResetPaint();\r\n    }\r\n\r\n    grabX: number;\r\n    grabY: number;\r\n    isGrabbed: boolean;\r\n    private handleMouseDown(event: MouseEvent) {\r\n        if(event.button === 0) {\r\n            this.grabX = event.offsetX;\r\n            this.grabY = event.offsetY;\r\n            this.isGrabbed = true;\r\n            event.preventDefault();\r\n        } \r\n        else if(event.button === 1) {\r\n            let result = this.screenBounds.ConvertTo({ x: event.offsetX, y: event.offsetY }, this.paintWindow);\r\n            this.onSelect(result.x, result.y);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    private handleMouseUp() {\r\n        this.isGrabbed = false;\r\n    }\r\n    private handleMouseLeave() {\r\n        this.isGrabbed = false;\r\n    }\r\n    private handleMouseMove(event: MouseEvent) {\r\n        if(event.buttons === 4) // holding down middle mouse \r\n        {\r\n            let result = this.screenBounds.ConvertTo({ x: event.offsetX, y: event.offsetY }, this.paintWindow);\r\n            this.onSelect(result.x, result.y);\r\n            event.preventDefault();\r\n        }\r\n        if(!this.isGrabbed) return;\r\n        let dx = event.offsetX - this.grabX;\r\n        let dy = event.offsetY - this.grabY;\r\n\r\n        let perc = this.screenBounds.GetPercentage(dx, dy);\r\n        this.paintWindow.ShiftByPercentage(-perc.x, -perc.y);\r\n        this.assertBounds();\r\n\r\n\r\n        this.renderer.ResetPaint();\r\n\r\n        this.grabX = event.offsetX;\r\n        this.grabY = event.offsetY;\r\n    }\r\n\r\n    private handleScroll(event: WheelEvent) {\r\n        let scalePercentage = event.deltaY / SCROLL_DIV;\r\n        let scalePerc = Math.pow(SCROLL_POW, scalePercentage);\r\n        let perc = this.screenBounds.GetPercentage(event.offsetX, event.offsetY);\r\n\r\n        this.paintWindow.AspectScale(scalePerc, perc.x, perc.y);\r\n        this.assertBounds();\r\n\r\n        this.renderer.ResetPaint();\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    private assertBounds() {\r\n        if(this.paintWindow.xRange.Length() > MAX_ZOOM_WIDTH || this.paintWindow.yRange.Length() > MAX_ZOOM_WIDTH) {\r\n            this.paintWindow.xRange.ScaleTo(MAX_ZOOM_WIDTH, 0.5);\r\n            this.paintWindow.yRange.ScaleTo(MAX_ZOOM_WIDTH, 0.5);\r\n        }\r\n        this.assertRangeBounds(this.paintWindow.xRange);\r\n        this.assertRangeBounds(this.paintWindow.yRange);\r\n    }\r\n\r\n    private assertRangeBounds(r: Range) {\r\n        if(r.min < MIN_WINDOW) r.Shift(MIN_WINDOW - r.min);\r\n        if(r.max > MAX_WINDOW) r.Shift(MAX_WINDOW - r.max);\r\n    }\r\n\r\n    public Tick(){\r\n        this.renderer.Paint(this.paintWindow);\r\n    }\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; }, 0);\n}","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!(<any>teardown)) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { noop } from './noop';\nimport { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse\n   * @deprecated use new Subject() instead\n  */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the *publish* operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { tap, publish, refCount } from 'rxjs/operators';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap((num) => console.log(`refCount ${num}`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap((num) => console.log(`publish ${num}`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the publish operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // )\n    // .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = (() => {\n  const connectableProto = <any>ConnectableObservable.prototype;\n  return {\n    operator: { value: null as null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null as null, writable: true },\n    _connection: { value: null as null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n  };\n})();\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // ).subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the keySelector function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Elsewhere, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the key field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the elementSelector function.\n *\n * ## Examples\n *\n * ### Group objects by id and return as array\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { mergeMap, groupBy, reduce } from 'rxjs/operators';\n *\n * of(\n *   {id: 1, name: 'JavaScript'},\n *   {id: 2, name: 'Parcel'},\n *   {id: 2, name: 'webpack'},\n *   {id: 1, name: 'TypeScript'},\n *   {id: 3, name: 'TSLint'}\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap((group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], []))),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'JavaScript'},\n * //   { id: 1, name: 'TypeScript'} ]\n * //\n * // [ { id: 2, name: 'Parcel'},\n * //   { id: 2, name: 'webpack'} ]\n * //\n * // [ { id: 3, name: 'TSLint'} ]\n * ```\n *\n * ### Pivot data on the id field\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { groupBy, map, mergeMap, reduce } from 'rxjs/operators';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * )\n *   .pipe(\n *     groupBy(p => p.id, p => p.name),\n *     mergeMap(group$ =>\n *       group$.pipe(reduce((acc, cur) => [...acc, cur], [`${group$.key}`]))\n *     ),\n *     map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n *  )\n *  .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T | R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map<K, Subject<T | R>>();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = (this.subjectSelector ? this.subjectSelector() : new Subject<R>()) as Subject<T | R>;\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T | any>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  /** @deprecated Do not construct this type. Internal use only */\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const { refCountSubscription, groupSubject } = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```ts\n * import { empty } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```ts\n * import { empty, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return An \"empty\" Observable: emits only the complete\n * notification.\n * @deprecated Deprecated in favor of using {@link EMPTY} constant, or {@link scheduled} (e.g. `scheduled([], scheduler)`)\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  subscriber.complete();\n};\n","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { deprecate } from 'util';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated NotificationKind is deprecated as const enums are not compatible with isolated modules. Use a string literal instead.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: 'N' | 'E' | 'C', public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let i = 0;\n    sub.add(scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n        return;\n      }\n      subscriber.next(input[i++]);\n      if (!subscriber.closed) {\n        sub.add(this.schedule());\n      }\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return scheduleArray(input, scheduler);\n  }\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { Observable } from '../Observable';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T>(a: T, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2>(a: T, b: T2, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: (T | SchedulerLike)[]): Observable<T>;\n\n// TODO(benlesh): Update the typings for this when we can switch to TS 3.x\nexport function of<T>(a: T): Observable<T>;\nexport function of<T, T2>(a: T, b: T2): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: T[]): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n    return scheduleArray(args as T[], scheduler);\n  } else {\n    return fromArray(args as T[]);\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * ![](throw.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then emit an error\n * ```ts\n * import { throwError, concat, of } from 'rxjs';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // 7\n * // Error: oops!\n * ```\n *\n * ---\n *\n * ### Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 2\n * ```ts\n * import { throwError, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 2\n *     ? throwError('Twos are bad')\n *     : of('a', 'b', 'c')\n *   ),\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // a\n * // b\n * // c\n * // a\n * // b\n * // c\n * // Twos are bad\n * ```\n *\n * @see {@link Observable}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throwError\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n * Ensure values in subscribe are called just before browser repaint.\n * ```ts\n * import { interval } from 'rxjs';\n * import { observeOn } from 'rxjs/operators';\n *\n * const intervals = interval(10);                // Intervals are scheduled\n *                                                // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler),          // ...but we will observe on animationFrame\n * )                                              // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  /** @nocollapse */\n  static dispatch(this: SchedulerAction<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: SchedulerLike,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    const destination = this.destination as Subscription;\n    destination.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Subject } from './Subject';\nimport { SchedulerLike } from './types';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * A variant of Subject that \"replays\" or emits old values to new subscribers.\n * It buffers a set number of values and will emit those values immediately to\n * any new subscribers in addition to emitting new values to existing subscribers.\n *\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: (ReplayEvent<T> | T)[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n  private _infiniteTimeWindow: boolean = false;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: SchedulerLike) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      this._infiniteTimeWindow = true;\n      this.next = this.nextInfiniteTimeWindow;\n    } else {\n      this.next = this.nextTimeWindow;\n    }\n  }\n\n  private nextInfiniteTimeWindow(value: T): void {\n    const _events = this._events;\n    _events.push(value);\n    // Since this method is invoked in every next() call than the buffer\n    // can overgrow the max size only by one item\n    if (_events.length > this._bufferSize) {\n      _events.shift();\n    }\n\n    super.next(value);\n  }\n\n  private nextTimeWindow(value: T): void {\n    this._events.push(new ReplayEvent(this._getNow(), value));\n    this._trimBufferThenGetEvents();\n\n    super.next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n    const _infiniteTimeWindow = this._infiniteTimeWindow;\n    const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    const len = _events.length;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.isStopped || this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    if (_infiniteTimeWindow) {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(<T>_events[i]);\n      }\n    } else {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next((<ReplayEvent<T>>_events[i]).value);\n      }\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = <ReplayEvent<T>[]>this._events;\n\n    const eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    RESOLVED.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @nodoc\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable<T>(obj: any): obj is Observable<T> {\n  return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","export interface ArgumentOutOfRangeError extends Error {\n}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  new(): ArgumentOutOfRangeError;\n}\n\nconst ArgumentOutOfRangeErrorImpl = (() => {\n  function ArgumentOutOfRangeErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n  }\n\n  ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ArgumentOutOfRangeErrorImpl;\n})();\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = ArgumentOutOfRangeErrorImpl as any;","export interface EmptyError extends Error {\n}\n\nexport interface EmptyErrorCtor {\n  new(): EmptyError;\n}\n\nconst EmptyErrorImpl = (() => {\n  function EmptyErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'no elements in sequence';\n    this.name = 'EmptyError';\n    return this;\n  }\n\n  EmptyErrorImpl.prototype = Object.create(Error.prototype);\n\n  return EmptyErrorImpl;\n})();\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = EmptyErrorImpl as any;","export interface TimeoutError extends Error {\n}\n\nexport interface TimeoutErrorCtor {\n  new(): TimeoutError;\n}\n\nconst TimeoutErrorImpl = (() => {\n  function TimeoutErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    return this;\n  }\n\n  TimeoutErrorImpl.prototype = Object.create(Error.prototype);\n\n  return TimeoutErrorImpl;\n})();\n\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link operators/timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = TimeoutErrorImpl as any;\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: R;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n\n// tslint:disable:max-line-length\n/** @deprecated resultSelector is no longer supported, use a mapping function. */\nexport function bindCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindCallback<R1, R2, R3, R4>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): () => Observable<any[]>;\nexport function bindCallback<R1, R2, R3>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindCallback<R1, R2>(callbackFunc: (callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindCallback<R1>(callbackFunc: (callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindCallback(callbackFunc: (callback: () => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<any[]>;\nexport function bindCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindCallback<A1>(callbackFunc: (arg1: A1, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<any[]>;\nexport function bindCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>;\n\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((result: R) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R>;\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((...results: R[]) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R[]>;\n\nexport function bindCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\n// tslint:enable:max-line-length\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback<T>(\n  callbackFunc: Function,\n  resultSelector?: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindCallback(callbackFunc, scheduler)(...args).pipe(\n        map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)),\n      );\n    }\n  }\n\n  return function (this: any, ...args: any[]): Observable<T> {\n    const context = this;\n    let subject: AsyncSubject<T>;\n    const params = {\n      context,\n      subject,\n      callbackFunc,\n      scheduler,\n    };\n    return new Observable<T>(subscriber => {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        const state: DispatchState<T> = {\n          args, subscriber, params,\n        };\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, state);\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  args: any[];\n  subscriber: Subscriber<T>;\n  params: ParamsContext<T>;\n}\n\ninterface ParamsContext<T> {\n  callbackFunc: Function;\n  scheduler: SchedulerLike;\n  context: any;\n  subject: AsyncSubject<T>;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const self = this;\n  const { args, subscriber, params } = state;\n  const { callbackFunc, context, scheduler } = params;\n  let { subject } = params;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n      this.add(scheduler.schedule<NextState<T>>(dispatchNext, 0, { value, subject }));\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface NextState<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(this: SchedulerAction<NextState<T>>, state: NextState<T>) {\n  const { value, subject } = state;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface ErrorState<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(this: SchedulerAction<ErrorState<T>>, state: ErrorState<T>) {\n  const { err, subject } = state;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function bindNodeCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindNodeCallback<R1, R2, R3, R4>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<R1, R2, R3>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<R1, R2>(callbackFunc: (callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindNodeCallback<R1>(callbackFunc: (callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindNodeCallback(callbackFunc: (callback: (err: any) => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindNodeCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindNodeCallback<A1>(callbackFunc: (arg1: A1, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindNodeCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>; /* tslint:enable:max-line-length */\n\nexport function bindNodeCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback<T>(\n  callbackFunc: Function,\n  resultSelector: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(\n        map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n      );\n    }\n  }\n\n  return function(this: any, ...args: any[]): Observable<T> {\n    const params: ParamsState<T> = {\n      subject: undefined,\n      args,\n      callbackFunc,\n      scheduler,\n      context: this,\n    };\n    return new Observable<T>(subscriber => {\n      const { context } = params;\n      let { subject } = params;\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            const err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, { params, subscriber, context });\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  subscriber: Subscriber<T>;\n  context: any;\n  params: ParamsState<T>;\n}\n\ninterface ParamsState<T> {\n  callbackFunc: Function;\n  args: any[];\n  scheduler: SchedulerLike;\n  subject: AsyncSubject<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const { params, subscriber, context } = state;\n  const { callbackFunc, args, scheduler } = params;\n  let subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const err = innerArgs.shift();\n      if (err) {\n        this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        this.add(scheduler.schedule<DispatchNextArg<T>>(dispatchNext, 0, { value, subject }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","/**\n * Tests to see if the object is an ES2015 (ES6) Promise\n * @see {@link https://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects}\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return !!value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>): (subscriber: Subscriber<T>) => Subscription | void => {\n  if (!!result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (!!result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = iterable[Symbol_iterator]();\n  do {\n    const item = iterator.next();\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue: undefined,\n  outerIndex: undefined,\n  innerSubscriber: InnerSubscriber<T, R>\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  innerSubscriber: Subscriber<R> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)\n): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  return subscribeTo(result)(innerSubscriber) as Subscription;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler  } from '../util/isScheduler';\nimport { isArray  } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Operator } from '../Operator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\n\nconst NONE = {};\n\n/* tslint:disable:max-line-length */\n\n// If called with a single array, it \"auto-spreads\" the array, with result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(sources: [O1], resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(sources: [O1, O2], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(sources: [O1, O2, O3], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5, O6], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(sources: O[], resultSelector: (...args: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// standard call, but with a result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// With a scheduler (deprecated)\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[], scheduler: SchedulerLike): Observable<ObservedValueOf<O>[]>;\n\n// Best case\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1]): Observable<[ObservedValueOf<O1>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[]): Observable<ObservedValueOf<O>[]>;\n\n// Standard calls\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>>(v1: O1, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: O[]): Observable<any[]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: Array<O | SchedulerLike>): Observable<any[]>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike>): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | SchedulerLike>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n * ## Examples\n * ### Combine two timer Observables\n * ```ts\n * import { combineLatest, timer } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * ### Combine an array of Observables\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { delay, starWith } from 'rxjs/operators';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000),   // emit 0 and then emit n after n seconds\n *     startWith(0),\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n *\n * ### Use project function to dynamically calculate the Body-Mass Index\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest(weight, height).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(\n  ...observables: (O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike)[]\n): Observable<R> {\n  let resultSelector: (...values: Array<any>) => R =  null;\n  let scheduler: SchedulerLike = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop() as SchedulerLike;\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop() as (...values: Array<any>) => R;\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0] as any;\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator<ObservedValueOf<O>, R>(resultSelector));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private resultSelector?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private resultSelector?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryResultSelector(values: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { ObservableInput, SchedulerLike, Observable } from 'rxjs';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see from\n * @see of\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => input.then(\n      value => {\n        sub.add(scheduler.schedule(() => {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(() => subscriber.complete()));\n        }));\n      },\n      err => {\n        sub.add(scheduler.schedule(() => subscriber.error(err)));\n      }\n    )));\n    return sub;\n  });\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let iterator: Iterator<T>;\n    sub.add(() => {\n      // Finalize generators\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(() => {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n        let value: T;\n        let done: boolean;\n        try {\n          const result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated use {@link scheduled} instead. */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  } else {\n    return scheduled(input, scheduler);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```ts\n * import { of, interval } from 'rxjs';\n * import { mergeMap, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: number) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = subscribeToResult<T, R>(this, ish, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map((ev) => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { take, map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(10))),\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<ObservableInput<T>, T> {\n  return mergeMap(identity, concurrent);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>>(v1: O1, scheduler: SchedulerLike): Observable<ObservedValueOf<O1>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\n\nexport function concat<O1 extends ObservableInput<any>>(v1: O1): Observable<ObservedValueOf<O1>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\nexport function concat<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O extends ObservableInput<any>>(...observables: (O | SchedulerLike)[]): Observable<ObservedValueOf<O>>;\nexport function concat<R>(...observables: ObservableInput<any>[]): Observable<R>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<R>(...observables: (ObservableInput<any> | SchedulerLike)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n * ### Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n * ```ts\n * import { concat, interval, range } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * ### Concatenate 3 Observables\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * ### Concatenate the same Observable to repeat it\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {SchedulerLike} [scheduler=null] An optional {@link SchedulerLike} to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<O extends ObservableInput<any>, R>(...observables: Array<O | SchedulerLike>): Observable<ObservedValueOf<O> | R> {\n  return concatAll<R>()(of(...observables));\n}\n","\nimport { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function concatAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.png)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, take, concatAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev => interval(1000).pipe(take(4))),\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return mergeAll<T>(1);\n}\n","import { Observable } from '../Observable';\nimport { SubscribableOrPromise, ObservedValueOf, ObservableInput } from '../types';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * ## Example\n * ### Subscribe to either an Observable of clicks or an Observable of interval, at random\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(function () {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer<R extends ObservableInput<any> | void>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>(subscriber => {\n    let input: R | void;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    const source = input ? from(input as ObservableInput<ObservedValueOf<R>>) : empty();\n    return source.subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservedValuesFromArray, ObservedValueOf, SubscribableOrPromise } from '../types';\nimport { isArray } from '../util/isArray';\nimport { map } from '../operators/map';\nimport { isObject } from '../util/isObject';\nimport { isObservable } from '../util/isObservable';\nimport { from } from './from';\n\n/* tslint:disable:max-line-length */\n\n// forkJoin(a$, b$, c$)\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(v1: SubscribableOrPromise<T>): Observable<[T]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n// forkJoin([a$, b$, c$]);\n// TODO(benlesh): Uncomment for TS 3.0\n// export function forkJoin(sources: []): Observable<never>;\nexport function forkJoin<A>(sources: [ObservableInput<A>]): Observable<[A]>;\nexport function forkJoin<A, B>(sources: [ObservableInput<A>, ObservableInput<B>]): Observable<[A, B]>;\nexport function forkJoin<A, B, C>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<[A, B, C]>;\nexport function forkJoin<A, B, C, D>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<[A, B, C, D]>;\nexport function forkJoin<A, B, C, D, E>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<[A, B, C, D, E]>;\nexport function forkJoin<A, B, C, D, E, F>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>, ObservableInput<F>]): Observable<[A, B, C, D, E, F]>;\nexport function forkJoin<A extends ObservableInput<any>[]>(sources: A): Observable<ObservedValuesFromArray<A>[]>;\n\n// forkJoin({})\nexport function forkJoin(sourcesObject: {}): Observable<never>;\nexport function forkJoin<T, K extends keyof T>(sourcesObject: T): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function forkJoin(...args: Array<ObservableInput<any>|Function>): Observable<any>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(...sources: ObservableInput<T>[]): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed observables to complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first observable,\n * second value is the last thing emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, resulting\n * objects will have the same keys as the dictionary passed, with their last values they've emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input observables, whenever any of\n * that observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input observable errors at some point, `forkJoin` will error as well and all other observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output observable is supposed to emit a result.\n *\n * ## Examples\n *\n * ### Use forkJoin with a dictionary of observable inputs\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000),\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * ### Use forkJoin with an array of observable inputs\n * ```ts\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000),\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(\n  ...sources: any[]\n): Observable<any> {\n  if (sources.length === 1) {\n    const first = sources[0];\n    if (isArray(first)) {\n      return forkJoinInternal(first, null);\n    }\n    // TODO(benlesh): isObservable check will not be necessary when deprecated path is removed.\n    if (isObject(first) && Object.getPrototypeOf(first) === Object.prototype) {\n      const keys = Object.keys(first);\n      return forkJoinInternal(keys.map(key => first[key]), keys);\n    }\n  }\n\n  // DEPRECATED PATHS BELOW HERE\n  if (typeof sources[sources.length - 1] === 'function') {\n    const resultSelector = sources.pop() as Function;\n    sources = (sources.length === 1 && isArray(sources[0])) ? sources[0] : sources;\n    return forkJoinInternal(sources, null).pipe(\n      map((args: any[]) => resultSelector(...args))\n    );\n  }\n\n  return forkJoinInternal(sources, null);\n}\n\nfunction forkJoinInternal(sources: ObservableInput<any>[], keys: string[] | null): Observable<any> {\n  return new Observable(subscriber => {\n    const len = sources.length;\n    if (len === 0) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(len);\n    let completed = 0;\n    let emitted = 0;\n    for (let i = 0; i < len; i++) {\n      const source = from(sources[i]);\n      let hasValue = false;\n      subscriber.add(source.subscribe({\n        next: value => {\n          if (!hasValue) {\n            hasValue = true;\n            emitted++;\n          }\n          values[i] = value;\n        },\n        error: err => subscriber.error(err),\n        complete: () => {\n          completed++;\n          if (completed === len || !hasValue) {\n            if (emitted === len) {\n              subscriber.next(keys ?\n                keys.reduce((result, key, i) => (result[key] = values[i], result), {}) :\n                values);\n            }\n            subscriber.complete();\n          }\n        }\n      }));\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\nconst toString: Function = (() => Object.prototype.toString)();\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener: (eventName: string, handler: NodeEventHandler) => void | {};\n  removeListener: (eventName: string, handler: NodeEventHandler) => void | {};\n}\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(type: string, listener: ((evt: E) => void) | null, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener?: ((evt: E) => void) | null, options?: EventListenerOptions | boolean): void;\n}\n\nexport type EventTargetLike<T> = HasEventTargetAddRemove<T> | NodeStyleEventEmitter | NodeCompatibleEventEmitter | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> = EventTargetLike<T> | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, resultSelector: (...args: any[]) => T): Observable<T>;\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions, resultSelector: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n * ### Emits clicks happening on the DOM document\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * ### Use addEventListener with capture option\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: ((...args: any[]) => T)\n): Observable<T> {\n\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(target, eventName, <EventListenerOptions | undefined>options).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T>(subscriber => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options as EventListenerOptions);\n  });\n}\n\nfunction setupSubscription<T>(sourceObj: FromEventTarget<T>, eventName: string,\n                              handler: (...args: any[]) => void, subscriber: Subscriber<T>,\n                              options?: EventListenerOptions) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n    unsubscribe = () => source.removeEventListener(eventName, handler, options);\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is HasEventTargetAddRemove<any> {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * then one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Example\n * ### Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * ## Example\n * ### Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * ## Example\n * ### Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs \"EVENT_TYPE\" \"EVENT_MESSAGE\" to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + \" --- \" + eventMessage // without that function only \"EVENT_TYPE\"\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"EVENT_TYPE --- EVENT_MESSAGE\"\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n * @static true\n * @name fromEventPattern\n * @owner Observable\n */\n\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any,\n                                    removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n                                    resultSelector?: (...args: any[]) => T): Observable<T | T[]> {\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T | T[]>(subscriber => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n\n    let retValue: any;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return () => removeHandler(handler, retValue) ;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { identity } from '../util/identity';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate(0, x => x < 10, x => x + 1, x => x);\n *\n * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n * const res = generate(1, x => x < 5, x => x * 2, x => x + 1, asap);\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n */\n  export function generate<T, S>(initialState: S,\n                                 condition: ConditionFunc<S>,\n                                 iterate: IterateFunc<S>,\n                                 resultSelector: ResultFunc<S, T>,\n                                 scheduler?: SchedulerLike): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * `generate` allows you to create stream of values generated with a loop very similar to\n * traditional for loop. First argument of `generate` is a beginning value. Second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * loop continues, if not, it stops. Third value is a function which takes previously defined\n * value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in regular for loop: first expression\n * initializes some state (for example numeric index), second tests if loop can make next\n * iteration (for example if index is lower than 10) and third states how defined value\n * will be modified on every step (index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First, condition function is ran. If it returned true, Observable\n * emits currently stored value (initial value at the first iteration) and then updates\n * that value with iterate function. If at some point condition returned false, Observable\n * completes at that moment.\n *\n * Optionally you can pass fourth parameter to `generate` - a result selector function which allows you\n * to immediately map value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * single object to the operator instead. That object has properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, so output Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is resultSelector\n * function or not). In case of single-parameter call, you can provide it as a\n * `scheduler` property on object passed to the operator. In both cases scheduler decides when\n * next iteration of the loop will happen and therefore when next value will be emitted\n * by the Observable. For example to ensure that each value is pushed to the observer\n * on separate task in event loop, you could use `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * @example <caption>Use with condition and iterate functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with condition, iterate and resultSelector functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with options object.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n * @example <caption>Use options object without condition function.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!') // This will never run.\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n *\n *\n * @see {@link from}\n * @see {@link index/Observable.create}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n */\nexport function generate<S>(initialState: S,\n                            condition: ConditionFunc<S>,\n                            iterate: IterateFunc<S>,\n                            scheduler?: SchedulerLike): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n *   resultSelector: x => x,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                               condition?: ConditionFunc<S>,\n                               iterate?: IterateFunc<S>,\n                               resultSelectorOrObservable?: (ResultFunc<S, T>) | SchedulerLike,\n                               scheduler?: SchedulerLike): Observable<T> {\n\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  if (arguments.length == 1) {\n    const options = initialStateOrOptions as GenerateOptions<T, S>;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity as ResultFunc<S, T>;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions as S;\n    resultSelector = identity as ResultFunc<S, T>;\n    scheduler = resultSelectorOrObservable as SchedulerLike;\n  } else {\n    initialState = initialStateOrOptions as S;\n    resultSelector = resultSelectorOrObservable as ResultFunc<S, T>;\n  }\n\n  return new Observable<T>(subscriber => {\n    let state = initialState;\n    if (scheduler) {\n      return scheduler.schedule<SchedulerState<T, S>>(dispatch, 0, {\n        subscriber,\n        iterate,\n        condition,\n        resultSelector,\n        state\n      });\n    }\n\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch<T, S>(this: SchedulerAction<SchedulerState<T, S>>, state: SchedulerState<T, S>) {\n  const { subscriber, condition } = state;\n  if (subscriber.closed) {\n    return undefined;\n  }\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n  if (condition) {\n    let conditionResult: boolean;\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n  let value: T;\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n  if (subscriber.closed) {\n    return undefined;\n  }\n  subscriber.next(value);\n  if (subscriber.closed) {\n    return undefined;\n  }\n  return this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\nimport { SubscribableOrPromise } from '../types';\n\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `iif` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * than controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `iif` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * ## Examples\n * ### Change at runtime which Observable will be subscribed\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second'),\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n * ```\n *\n * ### Control an access to an Observable\n * ```ts\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'), // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"The end\"\n * ```\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n*/\nexport function iif<T = never, F = never>(\n  condition: () => boolean,\n  trueResult: SubscribableOrPromise<T> = EMPTY,\n  falseResult: SubscribableOrPromise<F> = EMPTY\n): Observable<T|F> {\n  return defer(() => condition() ? trueResult : falseResult);\n}\n","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isNumeric } from '../util/isNumeric';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = async): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, concurrent: number, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n\nexport function merge<T>(v1: ObservableInput<T>): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | number)[]): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | number)[]): Observable<R>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```ts\n * import { merge, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n * ### Emit the number 7, then never emit anything else (not even complete)\n * ```ts\n * import { NEVER } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * function info() {\n *   console.log('Will not be called');\n * }\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe(x => console.log(x), info, info);\n *\n * ```\n *\n * @see {@link Observable}\n * @see {@link index/EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Deprecated in favor of using {@link NEVER} constant.\n */\nexport function never () {\n  return NEVER;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNext<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link index/EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n * Subscribe to the next Observable after map fails</caption>\n * ```ts\n * import { onErrorResumeNext, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done'),\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<T, R>(...sources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  const [ first, ...remainder ] = sources;\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext(...first);\n  }\n\n  return new Observable(subscriber => {\n    const subNext = () => subscriber.add(\n      onErrorResumeNext(...remainder).subscribe(subscriber)\n    );\n\n    return from(first).subscribe({\n      next(value) { subscriber.next(value); },\n      error: subNext,\n      complete: subNext,\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * <img src=\"./img/pairs.png\" width=\"100%\">\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj)\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('the end!')\n * );\n *\n * // Logs:\n * // [\"foo\", 42],\n * // [\"bar\", 56],\n * // [\"baz\", 78],\n * // \"the end!\"\n * ```\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs<T>(obj: Object, scheduler?: SchedulerLike): Observable<[string, T]> {\n  if (!scheduler) {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(\n        scheduler.schedule<{ keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }>\n          (dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n      return subscription;\n    });\n  }\n}\n\n/** @internal */\nexport function dispatch<T>(this: SchedulerAction<any>,\n                            state: { keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }) {\n  const { keys, index, subscriber, subscription, obj } = state;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { filter } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","import { not } from '../util/not';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition a set of numbers into odds and evens observables\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, (value, index) => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [\n    filter(predicate, thisArg)(new Observable<T>(subscribeTo(source))),\n    filter(not(predicate, thisArg) as any)(new Observable<T>(subscribeTo(source)))\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic, ObservableInput } from '../types';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n// tslint:disable:max-line-length\nexport function race<A>(arg: [ObservableInput<A>]): Observable<A>;\nexport function race<A, B>(arg: [ObservableInput<A>, ObservableInput<B>]): Observable<A | B>;\nexport function race<A, B, C>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<A | B | C>;\nexport function race<A, B, C, D>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<A | B | C | D | E>;\nexport function race<T>(arg: ObservableInput<T>[]): Observable<T>;\nexport function race(arg: ObservableInput<any>[]): Observable<{}>;\n\nexport function race<A>(a: ObservableInput<A>): Observable<A>;\nexport function race<A, B>(a: ObservableInput<A>, b: ObservableInput<B>): Observable<A | B>;\nexport function race<A, B, C>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>): Observable<A | B | C>;\nexport function race<A, B, C, D>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>, e: ObservableInput<E>): Observable<A | B | C | D | E>;\n// tslint:enable:max-line-length\n\nexport function race<T>(observables: ObservableInput<T>[]): Observable<T>;\nexport function race(observables: ObservableInput<any>[]): Observable<{}>;\nexport function race<T>(...observables: ObservableInput<T>[]): Observable<T>;\nexport function race(...observables: ObservableInput<any>[]): Observable<{}>;\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n *\n * ## Example\n * ### Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { race, interval } from 'rxjs';\n * import { mapTo } from 'rxjs/operators';\n *\n * const obs1 = interval(1000).pipe(mapTo('fast one'));\n * const obs2 = interval(3000).pipe(mapTo('medium one'));\n * const obs3 = interval(5000).pipe(mapTo('slow one'));\n *\n * race(obs3, obs1, obs2)\n * .subscribe(\n *   winner => console.log(winner)\n * );\n *\n * // result:\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(...observables: ObservableInput<any>[]): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = observables[0] as Observable<any>[];\n    } else {\n      return observables[0] as Observable<T>;\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable as any, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { SchedulerAction, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n * Emits the numbers 1 to 10</caption>\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 10);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link timer}\n * @see {@link index/interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start: number = 0,\n                      count?: number,\n                      scheduler?: SchedulerLike): Observable<number> {\n  return new Observable<number>(subscriber => {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n\n    let index = 0;\n    let current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(current++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\n\n/** @internal */\nexport function dispatch(this: SchedulerAction<any>, state: any) {\n  const { start, index, count, subscriber } = state;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n\n  this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `dueTime` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `dueTime`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time specified as a Date object or as an integer denoting\n * milliseconds to wait before emitting the first value of 0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `dueTime` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput } from '../types';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T>(resourceFactory: () => Unsubscribable | void,\n                         observableFactory: (resource: Unsubscribable | void) => ObservableInput<T> | void): Observable<T> {\n  return new Observable<T>(subscriber => {\n    let resource: Unsubscribable | void;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    let result: ObservableInput<T> | void;\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    const source = result ? from(result) : EMPTY;\n    const subscription = source.subscribe(subscriber);\n    return () => {\n      subscription.unsubscribe();\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { ObservableInput, PartialObserver, ObservedValueOf } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R): Observable<R>;\n\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\nexport function zip<O extends ObservableInput<any>>(array: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<R>(array: ObservableInput<any>[]): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<R>(array: ObservableInput<any>[], resultSelector: (...values: any[]) => R): Observable<R>;\n\nexport function zip<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>): Observable<R>;\nexport function zip<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n * Combine age and name from different sources\n * ```ts\n * import { zip, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * let age$ = of<number>(27, 25, 29);\n * let name$ = of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = of<boolean>(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev })),\n * )\n * .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip<O extends ObservableInput<any>, R>(\n  ...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>\n): Observable<ObservedValueOf<O>[]|R> {\n  const resultSelector = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  resultSelector: (...values: Array<any>) => R;\n\n  constructor(resultSelector?: (...values: Array<any>) => R) {\n    this.resultSelector = resultSelector;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private resultSelector: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              resultSelector?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    this.unsubscribe();\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        const destination = this.destination as Subscription;\n        destination.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryresultSelector(args: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification, NotificationKind } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config } from './internal/config';\n","import * as React from 'react';\r\nimport Axios from 'axios-observable';\r\n\r\nconst keywords = /([^a-zA-Z0-9_])(public|private|protected|internal|static|void|operator|if|for|while|foreach|do|bool|byte|sbyte|int|uint|long|ulong|short|ushort|string|char|var|true|false|ref|out|class)(?![a-zA-Z0-9_])/g\r\n\r\nexport function CodeFromUrlComponent({ url }: { url: string }) {\r\n    const [content, setContent] = React.useState<string[]>([]);\r\n\r\n    React.useEffect(()=>{\r\n        Axios.get(url).subscribe((content) => {\r\n            let asString = content.data as string;\r\n            asString = asString\r\n                .replace(keywords, \"$1<span class='k'>$2</span>\")\r\n                .replace(/([^a-zA-Z0-9_])((0[bx])?\\d+)/g, \"$1<span class='n'>$2</span>\")\r\n                .replace(/([^a-zA-Z0-9_])(return|break|continue|export|import)(?![a-zA-Z0-9_])/g, \"$1<span class='r'>$2</span>\")\r\n                .replace(/%([a-zA-Z0-9])%/g, \"<span class='$1'>\")\r\n                .replace(/%%/g, \"</span>\");\r\n            const lines = asString.split(/\\r?\\n/)\r\n                .map(l => l === '' ? ' ' : l);\r\n            setContent(lines);\r\n        });\r\n    }, []);\r\n\r\n    if(content.length === 0) {\r\n        return <div>Loading...</div>\r\n    }\r\n    return <div className='code'>\r\n        <div className='lineNums'>\r\n            {content.map((e, i) =>\r\n                <div key={i}>{i}</div>\r\n            )}\r\n        </div>\r\n        <div className='content'>\r\n            {content.map((e, i) =>\r\n                <div key={i} dangerouslySetInnerHTML={{__html:e}} />\r\n            )}\r\n        </div>\r\n    </div>;\r\n}","import * as React from 'react';\r\n\r\nexport interface IPageProps {\r\n    title: string;\r\n    component: ()=>JSX.Element;\r\n}\r\n\r\nexport class Page extends React.Component<IPageProps, {}> {\r\n    componentDidMount() {\r\n        document.title = this.props.title;\r\n    }\r\n    render() {\r\n        const PageComponent = this.props.component\r\n\r\n        return (\r\n            <PageComponent />\r\n        )\r\n    }\r\n}"],"sourceRoot":""}