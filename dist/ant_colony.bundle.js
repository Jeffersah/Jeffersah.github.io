"use strict";(self.webpackChunktrading_game=self.webpackChunktrading_game||[]).push([[167],{7898:(t,e,n)=>{n.r(e),n.d(e,{default:()=>d});var s=n(7363),i=n(7584),a=n(5901),l=n(8785);class o{constructor(t,e){this.path=t,this.cost=e}static runPath(t,e,n,s){const i=[],a=[s];let l=0,r=s;for(let e=0;e<t.points.length;e++)i.push(e===s);for(let s=0;s<t.points.length-1;s++){let s=this.runStep(t,e,n,i,r);l+=t.distance(r,s),a.push(s),r=s,i[s]=!0}return new o(a,l)}static runStep(t,e,n,s,i){let a=[],l=0;for(let o=0;o<t.points.length;o++)if(i===o||s[o])a[o]=0;else{let s=Math.pow(1/t.distance(i,o),n)*Math.pow(t.weight(i,o),e);a.push(s),l+=s}let o=Math.random()*l;for(let t=0;t<a.length;t++)if(!s[t]&&(o-=a[t],o<=0))return t;return-1}}class r{constructor(t){this.points=t,this.initSignals()}initSignals(){this.signals=[],this.distances=[],this.maxDist=0;for(let t=0;t<this.points.length;t++){let e=[],n=[];for(let s=t+1;s<this.points.length;s++){e.push(1);let i=l.Z.subtract(this.points[t],this.points[s]).length();n.push(i),i>this.maxDist&&(this.maxDist=i)}this.signals.push(e),this.distances.push(n)}}setPoints(t){this.points=t,this.initSignals()}clearWeights(){for(let t=0;t<this.signals.length;t++)for(let e=0;e<this.signals[t].length;e++)this.signals[t][e]=1}multWeights(t){for(let e=0;e<this.signals.length;e++)for(let n=0;n<this.signals[e].length;n++)this.signals[e][n]*=t}addWeights(t,e){for(let n=0;n<t.length;n++){let s=(n+1)%t.length;this.weight(t[n],t[s],Math.max(0,Math.min(1,this.weight(t[n],t[s])+e)))}}weight(t,e,n){const s=Math.min(t,e),i=Math.max(t,e)-s-1;if(void 0===n)return this.signals[s][i];if(isNaN(n))throw"WHAT";this.signals[s][i]=n}distance(t,e){const n=Math.min(t,e),s=Math.max(t,e)-n-1;return this.distances[n][s]}point(t,e){if(void 0===e)return this.points[t];this.points[t]=e}}let h=-1;function c(t,e){u(),(0,a.f5)(e,800,600);const n=e.getContext("2d");let s=function(t,e,n){const s=[];for(let e=0;e<n;e++)s.push(new l.Z(Math.floor(Math.random()*t.width),Math.floor(Math.random()*t.height)));return f(t,e,s),new r(s)}(e,n,t.numPts);p(e,n,t,s)}function g(){u()}function u(){m=null,-1!==h&&clearTimeout(h)}let m=null;function p(t,e,n,s){const a=function(t,e){let n=[];for(let s=0;s<t.numAnts;s++)n.push(o.runPath(e,t.signalPower,t.distancePower,0));e.multWeights(t.signalDecay);let s=1/t.numAnts,a=(0,i.gN)(n,(t=>t.cost)),l=(0,i.Fp)(n,(t=>t.cost));for(const t of n){let n;n=a.cost===l?1:1-(t.cost-a.cost)/(l-a.cost),e.addWeights(t.path,n*s)}return a}(n,s);(null===m||a.cost<m.cost)&&(m=a),function(t,e,n,s,i){f(t,e,n.points),e.strokeStyle="#aaa";for(let t=0;t<n.points.length;t++)for(let s=0;s<n.points.length;s++)t!==s&&(e.beginPath(),e.lineWidth=5*n.weight(t,s),e.moveTo(n.point(t).x,n.point(t).y),e.lineTo(n.point(s).x,n.point(s).y),e.stroke());if(e.lineWidth=2,e.strokeStyle="green",void 0!==s){e.beginPath(),e.moveTo(n.point(s[0]).x,n.point(s[0]).y);for(let t=1;t<s.length;t++)e.lineTo(n.point(s[t]).x,n.point(s[t]).y);e.stroke()}if(e.lineWidth=2,e.strokeStyle="red",void 0!==i){e.beginPath(),e.moveTo(n.point(i[0]).x,n.point(i[0]).y);for(let t=1;t<i.length;t++)e.lineTo(n.point(i[t]).x,n.point(i[t]).y);e.stroke()}}(t,e,s,a.path,m.path),h=setTimeout((()=>p(t,e,n,s)),n.delayPerFrame)}function f(t,e,n){e.fillStyle="black",e.fillRect(0,0,t.clientWidth,t.clientHeight),e.fillStyle="#aaa",e.beginPath();for(let t=0;t<n.length;t++){const s=n[t];e.moveTo(s.x,s.y),e.ellipse(s.x,s.y,3,3,0,0,2*Math.PI)}e.fill()}function d(){let t=s.useRef(),[e,n]=s.useState({numPts:100,signalDecay:.7,signalPower:1.2,distancePower:4,delayPerFrame:6,numAnts:30});return s.useEffect((()=>(c(e,t.current),g)),[e,t]),s.createElement("div",{className:"flex row"},s.createElement("canvas",{id:"canvas",ref:t}),s.createElement("div",{className:"flex col"},s.createElement(b,{label:"Number of Points: ",value:e.numPts,onChange:t=>n(Object.assign(Object.assign({},e),{numPts:t})),min:3,max:200,step:1,type:"number"}),s.createElement(b,{label:"Number of Ants: ",value:e.numAnts,onChange:t=>n(Object.assign(Object.assign({},e),{numAnts:t})),min:1,max:100,step:1,type:"number"}),s.createElement(b,{label:"Signal Decay: ",value:e.signalDecay,onChange:t=>n(Object.assign(Object.assign({},e),{signalDecay:t})),min:0,max:1,step:.1,type:"float"}),s.createElement(b,{label:"Signal Power: ",value:e.signalPower,onChange:t=>n(Object.assign(Object.assign({},e),{signalPower:t})),min:1,max:8,step:.5,type:"float"}),s.createElement(b,{label:"Distance Power: ",value:e.distancePower,onChange:t=>n(Object.assign(Object.assign({},e),{distancePower:t})),min:1,max:8,step:.5,type:"float"}),s.createElement(b,{label:"Delay per Frame: ",value:e.delayPerFrame,onChange:t=>n(Object.assign(Object.assign({},e),{delayPerFrame:t})),min:6,max:600,step:30,type:"number"})))}function b(t){return s.createElement("div",null,s.createElement("label",null,t.label),s.createElement("input",{value:t.value,onChange:e=>t.onChange(e.target.valueAsNumber),type:"range",min:t.min,max:t.max,step:t.step}),s.createElement("input",{value:t.value,onChange:e=>t.onChange(e.target.valueAsNumber),type:t.type,min:t.min,max:t.max}))}}}]);
//# sourceMappingURL=ant_colony.bundle.js.map