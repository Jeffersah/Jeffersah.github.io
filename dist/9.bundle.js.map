{"version":3,"sources":["webpack:///./node_modules/react-dropdown/dist/index.js","webpack:///./src/hooks/useUpdateState.ts","webpack:///./node_modules/classnames/index.js","webpack:///./src/projects/sortVis/delta/EComplexity.ts","webpack:///./src/projects/sortVis/delta/SimpleOperations.ts","webpack:///./src/projects/sortVis/Record.ts","webpack:///./src/projects/sortVis/delta/SubArray.ts","webpack:///./src/projects/sortVis/SortArray.ts","webpack:///./src/projects/sortVis/SortState.ts","webpack:///./src/projects/sortVis/paints/BarDisplay.ts","webpack:///./src/views/projects/sortVis/SortVisPlaybackComponent.tsx","webpack:///./src/projects/sortVis/paints/RadialDisplay.ts","webpack:///./src/views/projects/sortVis/useAutoplay.ts","webpack:///./src/projects/sortVis/sorts/index.ts","webpack:///./src/projects/sortVis/sorts/selectionSort.ts","webpack:///./src/projects/sortVis/sorts/CycleSort.ts","webpack:///./src/projects/sortVis/sorts/heapSort.ts","webpack:///./src/projects/sortVis/sorts/quickSort.ts","webpack:///./src/projects/sortVis/sorts/quickDualPivot.ts","webpack:///./src/projects/sortVis/sorts/mergeSort.ts","webpack:///./src/projects/sortVis/dataGenerator/index.ts","webpack:///./src/projects/sortVis/dataGenerator/randomData.ts","webpack:///./src/projects/sortVis/dataGenerator/reverseSorted.ts","webpack:///./src/projects/sortVis/dataGenerator/nearSorted.ts","webpack:///./src/projects/sortVis/dataGenerator/sinData.ts","webpack:///./src/views/projects/sortVis/SortVisComponent.tsx"],"names":["Object","defineProperty","exports","value","_react","obj","__esModule","_typeof","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_reactDom","_interopRequireDefault","_classnames","WeakMap","Symbol","iterator","constructor","_defineProperty","enumerable","configurable","writable","_defineProperties","target","props","i","length","descriptor","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","Dropdown","_Component","_this","instance","Constructor","TypeError","_classCallCheck","this","state","selected","parseValue","options","label","placeholder","isOpen","mounted","handleDocumentClick","bind","fireChangeEvent","protoProps","staticProps","subClass","superClass","create","_inherits","newProps","setState","document","addEventListener","removeEventListener","event","onFocus","type","button","stopPropagation","preventDefault","disabled","option","num","match","items","filter","item","newState","onChange","_classes","isSelected","classes","concat","baseClassName","className","optionClass","createElement","onMouseDown","setValue","onClick","role","_this2","_this$props","ops","map","groupTitle","name","_options","renderOption","tabIndex","findDOMNode","contains","_classNames","_classNames2","_classNames3","_classNames4","_classNames5","_this$props2","controlClassName","placeholderClassName","menuClassName","arrowClassName","arrowClosed","arrowOpen","disabledClass","placeHolderValue","dropdownClass","controlClass","placeholderClass","isValueSelected","menuClass","arrowClass","menu","buildMenu","handleMouseDown","onTouchEnd","Component","defaultProps","_default","useUpdateState","initial","beforeChange","updateValue","newValue","hasOwn","classNames","arguments","arg","argType","push","Array","isArray","inner","apply","join","module","default","EComplexity","array1","index1","array2","index2","complexity","Compare","srcArray","srcIndex","tgtArray","tgtIndex","replacedValue","Set","internalSet","internalGet","Swap","v1","array","index","other","pushDelta","v","startingSize","offset","Get","internalFill","internalCreateArray","internalRemoveArray","endingData","arrayId","data","i1","i2","tmp","r","d","initialValue","deltas","arrays","maxValue","nextArrayId","currentDeltaIndex","nextDecoratorId","requiresMemoryAllocation","allArrayInfo","arrId","delta","tgt","deltaHere","Math","abs","deltaStart","deltaEnd","seekToInternal","rollback","maxSteps","result","step","stepResult","undefined","newArr","arr","getDeleteDelta","splice","generateCoordFunc","arrLen","wx","wy","ww","wh","widthPer","heightPer","x","floor","height","y","allPainters","ctx","dx","max","coordsFrom","fillStyle","fillRect","canvas","width","mainArr","getArray","coordFuncsByArrayIndex","arrWindows","mainWindow","doesRequireMemory","window","repaintArr","bezierYAdj","arrid","strokeStyle","lineWidth","beginPath","x2","y2","bezierY","min","moveTo","bezierCurveTo","stroke","lineTo","midX","midY","radiansPerX","PI","transformCoords","angle","radius","cos","sin","coordsArr","closePath","fill","SortVisPlaybackComponent","deltaIndex","setDeltaIndex","painter","setCurrentPainter","nv","repaint","autoplaying","setAutoplaying","currentSpeed","setCurrentSpeed","updateDeltaIndex","cvs","getElementById","getContext","callback","enable","speed","savedCallback","waitId","waitIdIsAnimationFrame","current","tick","triggerTick","frameRange","MAX_DELAY_TIME","sleepPercent","sleepTime","setTimeout","requestAnimationFrame","cancelAnimationFrame","clearTimeout","useAutoplayHook","applyUntil","speedPerc","numTicks","allDeltas","remainingStepsFwd","id","algo","ch","totalDeltas","ev","seekTo","valueAsNumber","rollbackUntil","minV","minI","swpIndex","compare","swap","isInFinalPosition","swapIndex","upHeap","downHeap","val","parentIndex","pval","idx","cidx","childIndex","maxChildIdx","recurse","pivLocation","random","pivot","lp","rp","mp","midp","ceil","sortedArr","createArray","tp","deleteArray","totalLength","effectiveIndex","xp","SortVisComponent","setArrLen","arrMax","setArrMax","currentAlgo","setCurrentAlgo","runningSortState","setSortState","currentDataGen","setDataGen","initialValues","generate","sortState","sort"],"mappings":"yFAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAiB,aAAI,EAErB,IAAIE,EAUJ,SAAiCC,GAAO,GAAIA,GAAOA,EAAIC,WAAc,OAAOD,EAAO,GAAY,OAARA,GAAiC,WAAjBE,EAAQF,IAAoC,mBAARA,EAAsB,MAAO,CAAE,QAAWA,GAAS,IAAIG,EAAQC,IAA4B,GAAID,GAASA,EAAME,IAAIL,GAAQ,OAAOG,EAAMG,IAAIN,GAAQ,IAAIO,EAAS,GAAQC,EAAwBb,OAAOC,gBAAkBD,OAAOc,yBAA0B,IAAK,IAAIC,KAAOV,EAAO,GAAIL,OAAOgB,UAAUC,eAAeC,KAAKb,EAAKU,GAAM,CAAE,IAAII,EAAON,EAAwBb,OAAOc,yBAAyBT,EAAKU,GAAO,KAAUI,IAASA,EAAKR,KAAOQ,EAAKC,KAAQpB,OAAOC,eAAeW,EAAQG,EAAKI,GAAgBP,EAAOG,GAAOV,EAAIU,GAAYH,EAAgB,QAAIP,EAASG,GAASA,EAAMY,IAAIf,EAAKO,GAAW,OAAOA,EAVxtBS,CAAwB,EAAQ,IAEzCC,EAAYC,EAAuB,EAAQ,KAE3CC,EAAcD,EAAuB,EAAQ,KAEjD,SAASA,EAAuBlB,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAE,QAAWA,GAEzF,SAASI,IAA6B,GAAuB,mBAAZgB,QAAwB,OAAO,KAAM,IAAIjB,EAAQ,IAAIiB,QAA6F,OAAlFhB,EAA2B,WAAsC,OAAOD,GAAiBA,EAI1M,SAASD,EAAQF,GAAwT,OAAtOE,EAArD,mBAAXmB,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiBtB,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXqB,QAAyBrB,EAAIuB,cAAgBF,QAAUrB,IAAQqB,OAAOV,UAAY,gBAAkBX,IAAyBA,GAExV,SAASwB,EAAgBxB,EAAKU,EAAKZ,GAAiK,OAApJY,KAAOV,EAAOL,OAAOC,eAAeI,EAAKU,EAAK,CAAEZ,MAAOA,EAAO2B,YAAY,EAAMC,cAAc,EAAMC,UAAU,IAAkB3B,EAAIU,GAAOZ,EAAgBE,EAI3M,SAAS4B,EAAkBC,EAAQC,GAAS,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,IAAIE,EAAaH,EAAMC,GAAIE,EAAWR,WAAaQ,EAAWR,aAAc,EAAOQ,EAAWP,cAAe,EAAU,UAAWO,IAAYA,EAAWN,UAAW,GAAMhC,OAAOC,eAAeiC,EAAQI,EAAWvB,IAAKuB,IAM7S,SAASC,EAAgBC,GAAwJ,OAAnJD,EAAkBvC,OAAOyC,eAAiBzC,OAAO0C,eAAiB,SAAyBF,GAAK,OAAOA,EAAEG,WAAa3C,OAAO0C,eAAeF,KAA8BA,GAExM,SAASI,EAAuBC,GAAQ,QAAa,IAATA,EAAmB,MAAM,IAAIC,eAAe,6DAAgE,OAAOD,EAI/J,SAASE,EAAgBP,EAAGQ,GAA+G,OAA1GD,EAAkB/C,OAAOyC,gBAAkB,SAAyBD,EAAGQ,GAAsB,OAAjBR,EAAEG,UAAYK,EAAUR,IAA6BA,EAAGQ,GAErK,IAEIC,EAEJ,SAAUC,GAGR,SAASD,EAASd,GAChB,IAAIgB,EAlB4BN,EAAM3B,EAiCtC,OAvCJ,SAAyBkC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCA0B5GC,CAAgBC,KAAMP,GApBUJ,EAsBGW,MAAnCL,IAtBsCjC,EAsBGqB,EAAgBU,GAAU/B,KAAKsC,KAAMrB,KAtBD,WAAlB5B,EAAQW,IAAsC,mBAATA,EAA8C0B,EAAuBC,GAAtC3B,GAuBzHuC,MAAQ,CACZC,SAAUP,EAAMQ,WAAWxB,EAAMhC,MAAOgC,EAAMyB,UAAY,CACxDC,WAAoC,IAAtB1B,EAAM2B,YAfK,YAesD3B,EAAM2B,YACrF3D,MAAO,IAET4D,QAAQ,GAEVZ,EAAMa,SAAU,EAChBb,EAAMc,oBAAsBd,EAAMc,oBAAoBC,KAAKtB,EAAuBO,IAClFA,EAAMgB,gBAAkBhB,EAAMgB,gBAAgBD,KAAKtB,EAAuBO,IACnEA,EAnCX,IAAsBE,EAAae,EAAYC,EA0P7C,OAlPF,SAAmBC,EAAUC,GAAc,GAA0B,mBAAfA,GAA4C,OAAfA,EAAuB,MAAM,IAAIjB,UAAU,sDAAyDgB,EAAStD,UAAYhB,OAAOwE,OAAOD,GAAcA,EAAWvD,UAAW,CAAEY,YAAa,CAAEzB,MAAOmE,EAAUtC,UAAU,EAAMD,cAAc,KAAewC,GAAYxB,EAAgBuB,EAAUC,GASjXE,CAAUxB,EAAUC,GAjBAG,EAsCPJ,GAtCoBmB,EAsCV,CAAC,CACtBrD,IAAK,4BACLZ,MAAO,SAAmCuE,GACxC,GAAIA,EAASvE,MAAO,CAClB,IAAIuD,EAAWF,KAAKG,WAAWe,EAASvE,MAAOuE,EAASd,SAEpDF,IAAaF,KAAKC,MAAMC,UAC1BF,KAAKmB,SAAS,CACZjB,SAAUA,SAIdF,KAAKmB,SAAS,CACZjB,SAAU,CACRG,WAAuC,IAAzBa,EAASZ,YAxCF,YAwC6DY,EAASZ,YAC3F3D,MAAO,QAKd,CACDY,IAAK,oBACLZ,MAAO,WACLyE,SAASC,iBAAiB,QAASrB,KAAKS,qBAAqB,GAC7DW,SAASC,iBAAiB,WAAYrB,KAAKS,qBAAqB,KAEjE,CACDlD,IAAK,uBACLZ,MAAO,WACLqD,KAAKQ,SAAU,EACfY,SAASE,oBAAoB,QAAStB,KAAKS,qBAAqB,GAChEW,SAASE,oBAAoB,WAAYtB,KAAKS,qBAAqB,KAEpE,CACDlD,IAAK,kBACLZ,MAAO,SAAyB4E,GAC1BvB,KAAKrB,MAAM6C,SAAyC,mBAAvBxB,KAAKrB,MAAM6C,SAC1CxB,KAAKrB,MAAM6C,QAAQxB,KAAKC,MAAMM,QAGb,cAAfgB,EAAME,MAAyC,IAAjBF,EAAMG,SACxCH,EAAMI,kBACNJ,EAAMK,iBAED5B,KAAKrB,MAAMkD,UACd7B,KAAKmB,SAAS,CACZZ,QAASP,KAAKC,MAAMM,YAIzB,CACDhD,IAAK,aACLZ,MAAO,SAAoBA,EAAOyD,GAChC,IAAI0B,EAEJ,GAAqB,iBAAVnF,EACT,IAAK,IAAIiC,EAAI,EAAGmD,EAAM3B,EAAQvB,OAAQD,EAAImD,EAAKnD,IAC7C,GAAwB,UAApBwB,EAAQxB,GAAG6C,KAAkB,CAC/B,IAAIO,EAAQ5B,EAAQxB,GAAGqD,MAAMC,QAAO,SAAUC,GAC5C,OAAOA,EAAKxF,QAAUA,KAGpBqF,EAAMnD,SACRiD,EAASE,EAAM,cAEoB,IAArB5B,EAAQxB,GAAGjC,OAAyByD,EAAQxB,GAAGjC,QAAUA,IACzEmF,EAAS1B,EAAQxB,IAKvB,OAAOkD,GAAUnF,IAElB,CACDY,IAAK,WACLZ,MAAO,SAAkBA,EAAO0D,GAC9B,IAAI+B,EAAW,CACblC,SAAU,CACRvD,MAAOA,EACP0D,MAAOA,GAETE,QAAQ,GAEVP,KAAKW,gBAAgByB,GACrBpC,KAAKmB,SAASiB,KAEf,CACD7E,IAAK,kBACLZ,MAAO,SAAyByF,GAC1BA,EAASlC,WAAaF,KAAKC,MAAMC,UAAYF,KAAKrB,MAAM0D,UAC1DrC,KAAKrB,MAAM0D,SAASD,EAASlC,YAGhC,CACD3C,IAAK,eACLZ,MAAO,SAAsBmF,GAC3B,IAAIQ,EAEA3F,EAAQmF,EAAOnF,WAEE,IAAVA,IACTA,EAAQmF,EAAOzB,OAASyB,GAG1B,IAAIzB,EAAQyB,EAAOzB,OAASyB,EAAOnF,OAASmF,EACxCS,EAAa5F,IAAUqD,KAAKC,MAAMC,SAASvD,OAASA,IAAUqD,KAAKC,MAAMC,SACzEsC,GAA0BnE,EAAfiE,EAAW,GAA8B,GAAGG,OAAOzC,KAAKrB,MAAM+D,cAAe,YAAY,GAAOrE,EAAgBiE,EAAUR,EAAOa,YAAab,EAAOa,WAAYtE,EAAgBiE,EAAU,cAAeC,GAAaD,GAClOM,GAAc,EAAI5E,EAAqB,SAAGwE,GAC9C,OAAO5F,EAAgB,QAAEiG,cAAc,MAAO,CAC5CtF,IAAKZ,EACLgG,UAAWC,EACXE,YAAa9C,KAAK+C,SAASrC,KAAKV,KAAMrD,EAAO0D,GAC7C2C,QAAShD,KAAK+C,SAASrC,KAAKV,KAAMrD,EAAO0D,GACzC4C,KAAM,SACN,gBAAiBV,EAAa,OAAS,SACtClC,KAEJ,CACD9C,IAAK,YACLZ,MAAO,WACL,IAAIuG,EAASlD,KAETmD,EAAcnD,KAAKrB,MACnByB,EAAU+C,EAAY/C,QACtBsC,EAAgBS,EAAYT,cAC5BU,EAAMhD,EAAQiD,KAAI,SAAUvB,GAC9B,GAAoB,UAAhBA,EAAOL,KAAkB,CAC3B,IAAI6B,EAAa1G,EAAgB,QAAEiG,cAAc,MAAO,CACtDF,UAAW,GAAGF,OAAOC,EAAe,WACnCZ,EAAOyB,MAENC,EAAW1B,EAAOG,MAAMoB,KAAI,SAAUlB,GACxC,OAAOe,EAAOO,aAAatB,MAG7B,OAAOvF,EAAgB,QAAEiG,cAAc,MAAO,CAC5CF,UAAW,GAAGF,OAAOC,EAAe,UACpCnF,IAAKuE,EAAOyB,KACZN,KAAM,UACNS,SAAU,MACTJ,EAAYE,GAEf,OAAON,EAAOO,aAAa3B,MAG/B,OAAOsB,EAAIvE,OAASuE,EAAMxG,EAAgB,QAAEiG,cAAc,MAAO,CAC/DF,UAAW,GAAGF,OAAOC,EAAe,eACnC,sBAEJ,CACDnF,IAAK,sBACLZ,MAAO,SAA6B4E,GAC9BvB,KAAKQ,UACF1C,EAAmB,QAAE6F,YAAY3D,MAAM4D,SAASrC,EAAM7C,SACrDsB,KAAKC,MAAMM,QACbP,KAAKmB,SAAS,CACZZ,QAAQ,OAMjB,CACDhD,IAAK,kBACLZ,MAAO,WACL,MAAsC,iBAAxBqD,KAAKC,MAAMC,UAAuD,KAA9BF,KAAKC,MAAMC,SAASvD,QAEvE,CACDY,IAAK,SACLZ,MAAO,WACL,IAAIkH,EAAaC,EAAcC,EAAcC,EAAcC,EAEvDC,EAAelE,KAAKrB,MACpB+D,EAAgBwB,EAAaxB,cAC7ByB,EAAmBD,EAAaC,iBAChCC,EAAuBF,EAAaE,qBACpCC,EAAgBH,EAAaG,cAC7BC,EAAiBJ,EAAaI,eAC9BC,EAAcL,EAAaK,YAC3BC,EAAYN,EAAaM,UACzB7B,EAAYuB,EAAavB,UACzB8B,EAAgBzE,KAAKrB,MAAMkD,SAAW,oBAAsB,GAC5D6C,EAAkD,iBAAxB1E,KAAKC,MAAMC,SAAwBF,KAAKC,MAAMC,SAAWF,KAAKC,MAAMC,SAASG,MACvGsE,GAAgB,EAAI3G,EAAqB,UAAsBK,EAAlBwF,EAAc,GAAiC,GAAGpB,OAAOC,EAAe,UAAU,GAAOrE,EAAgBwF,EAAalB,IAAaA,GAAYtE,EAAgBwF,EAAa,UAAW7D,KAAKC,MAAMM,QAASsD,IACxPe,GAAe,EAAI5G,EAAqB,UAAuBK,EAAnByF,EAAe,GAAkC,GAAGrB,OAAOC,EAAe,aAAa,GAAOrE,EAAgByF,EAAcK,IAAoBA,GAAmB9F,EAAgByF,EAAcW,IAAiBA,GAAgBX,IAC9Qe,GAAmB,EAAI7G,EAAqB,UAAuBK,EAAnB0F,EAAe,GAAkC,GAAGtB,OAAOC,EAAe,iBAAiB,GAAOrE,EAAgB0F,EAAcK,IAAwBA,GAAuB/F,EAAgB0F,EAAc,cAAe/D,KAAK8E,mBAAoBf,IACrSgB,GAAY,EAAI/G,EAAqB,UAAuBK,EAAnB2F,EAAe,GAAkC,GAAGvB,OAAOC,EAAe,UAAU,GAAOrE,EAAgB2F,EAAcK,IAAiBA,GAAgBL,IACnMgB,GAAa,EAAIhH,EAAqB,UAAuBK,EAAnB4F,EAAe,GAAkC,GAAGxB,OAAOC,EAAe,WAAW,GAAOrE,EAAgB4F,EAAcK,IAAkBA,GAAiBL,IAEvMtH,EAAQC,EAAgB,QAAEiG,cAAc,MAAO,CACjDF,UAAWkC,GACVH,GAECO,EAAOjF,KAAKC,MAAMM,OAAS3D,EAAgB,QAAEiG,cAAc,MAAO,CACpEF,UAAWoC,EACX,gBAAiB,QAChB/E,KAAKkF,aAAe,KACvB,OAAOtI,EAAgB,QAAEiG,cAAc,MAAO,CAC5CF,UAAWgC,GACV/H,EAAgB,QAAEiG,cAAc,MAAO,CACxCF,UAAWiC,EACX9B,YAAa9C,KAAKmF,gBAAgBzE,KAAKV,MACvCoF,WAAYpF,KAAKmF,gBAAgBzE,KAAKV,MACtC,gBAAiB,WAChBrD,EAAOC,EAAgB,QAAEiG,cAAc,MAAO,CAC/CF,UAAW,GAAGF,OAAOC,EAAe,mBACnC8B,GAAaD,EAAcvE,KAAKC,MAAMM,OAASiE,EAAYD,EAAc3H,EAAgB,QAAEiG,cAAc,OAAQ,CAClHF,UAAWqC,MACPC,QAtPkExG,EAAkBoB,EAAYrC,UAAWoD,GAAiBC,GAAapC,EAAkBoB,EAAagB,GA0P3KpB,EA1OT,CA2OE7C,EAAOyI,WAET5F,EAAS6F,aAAe,CACtB5C,cAAe,YAEjB,IAAI6C,EAAW9F,EACf/C,EAAiB,QAAI6I,G,gCC5RrB,6CAGe,SAASC,EAAkBC,EAAYC,GACpD,MAAO/I,EAAOgJ,GAAe,mBAASF,GACtC,MAAO,CAAC9I,EAAQiJ,IAAkBF,EAAaE,EAAUjJ,GAAQgJ,EAAYC,O,mBCL/E;;;;;GAOC,WACA,aAEA,IAAIC,EAAS,GAAGpI,eAEhB,SAASqI,IAGR,IAFA,IAAItD,EAAU,GAEL5D,EAAI,EAAGA,EAAImH,UAAUlH,OAAQD,IAAK,CAC1C,IAAIoH,EAAMD,UAAUnH,GACpB,GAAKoH,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BzD,EAAQ0D,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IAAQA,EAAInH,OAAQ,CAC5C,IAAIwH,EAAQP,EAAWQ,MAAM,KAAMN,GAC/BK,GACH7D,EAAQ0D,KAAKG,QAER,GAAgB,WAAZJ,EACV,IAAK,IAAI1I,KAAOyI,EACXH,EAAOnI,KAAKsI,EAAKzI,IAAQyI,EAAIzI,IAChCiF,EAAQ0D,KAAK3I,IAMjB,OAAOiF,EAAQ+D,KAAK,KAGgBC,EAAO9J,SAC3CoJ,EAAWW,QAAUX,EACrBU,EAAO9J,QAAUoJ,QAKhB,KAFwB,EAAF,WACtB,OAAOA,GACP,QAFoB,OAEpB,aAxCH,I,mFCPKY,E,yBAAL,SAAKA,GACD,+BACA,iBACA,yBACA,iBACA,mBACA,qBANJ,CAAKA,MAAW,KASD,QCOR,MAAM,EAGT,YAAmBC,EAA0BC,EAAuBC,EAA0BC,GAA3E,KAAAH,SAA0B,KAAAC,SAAuB,KAAAC,SAA0B,KAAAC,SAD9F,KAAArF,KAAO,UAEHzB,KAAK+G,WAAa,EAAYC,QAElC,MAAM/G,IACN,SAASA,KAmBN,MAAM,EAGT,YAAmBgH,EAA4BC,EAAyBC,EAA4BC,EAA0BC,GAA3G,KAAAJ,WAA4B,KAAAC,WAAyB,KAAAC,WAA4B,KAAAC,WAA0B,KAAAC,gBAF9H,KAAA5F,KAAO,OAGHzB,KAAK+G,WAAa,EAAYO,IAElC,MAAMrH,GACFD,KAAKmH,SAASI,YAAYvH,KAAKoH,SAAUpH,KAAKiH,SAASO,YAAYxH,KAAKkH,UAAUvK,OAEtF,SAASsD,GACLD,KAAKmH,SAASI,YAAYvH,KAAKoH,SAAUpH,KAAKqH,gBAK/C,MAAM,EAGT,YAAmBJ,EAA4BC,EAAyBC,EAA4BC,GAAjF,KAAAH,WAA4B,KAAAC,WAAyB,KAAAC,WAA4B,KAAAC,WAFpG,KAAA3F,KAAO,OAGHzB,KAAK+G,WAAa,EAAYU,KAElC,MAAMxH,GACF,MAAMyH,EAAK1H,KAAKiH,SAASO,YAAYxH,KAAKkH,UAAUvK,MACpDqD,KAAKiH,SAASM,YAAYvH,KAAKkH,SAAUlH,KAAKmH,SAASK,YAAYxH,KAAKoH,UAAUzK,OAClFqD,KAAKmH,SAASI,YAAYvH,KAAKoH,SAAUM,GAE7C,SAASzH,GACLD,KAAKsG,MAAMrG,ICjEJ,MAAM,EACjB,YAAoBA,EAAyB0H,EAAyBhL,EAAsBiL,GAAxE,KAAA3H,QAAyB,KAAA0H,QAAyB,KAAAhL,QAAsB,KAAAiL,QAIrF,QAAQC,GACX7H,KAAKC,MAAM6H,UAAU,IAAI,EAAQ9H,KAAK2H,MAAO3H,KAAK4H,MAAOC,EAAMF,MAAOE,EAAMD,QAC5E,MAAMG,EAAI/H,KAAKrD,MAAQkL,EAAMlL,MAC7B,OAAa,IAANoL,EAAU,EAAIA,EAAI,GAAK,EAAI,GCPnC,MAAM,EAGT,YAAmBJ,EAAyBK,EAA6BC,GAAtD,KAAAN,QAAyB,KAAAK,eAA6B,KAAAC,SADzE,KAAAxG,KAAO,iBAEHzB,KAAK+G,WAAa,EAAYmB,IAElC,MAAMjI,GACFD,KAAK2H,MAAMQ,aAAa,IAAIhC,MAAMnG,KAAKgI,eACvC/H,EAAMmI,oBAAoBpI,KAAK2H,OAEnC,SAAS1H,GACLA,EAAMoI,oBAAoBrI,KAAK2H,QAKhC,MAAM,EAGT,YAAmBA,EAA0BW,GAA1B,KAAAX,QAA0B,KAAAW,aAD7C,KAAA7G,KAAO,iBAEHzB,KAAK+G,WAAa,EAAYmB,IAElC,MAAMjI,GACFA,EAAMoI,oBAAoBrI,KAAK2H,OAEnC,SAAS1H,GACLD,KAAK2H,MAAMQ,aAAanI,KAAKsI,YAC7BrI,EAAMmI,oBAAoBpI,KAAK2H,QC3BxB,MAAM,EAEjB,YAAoB1H,EAAyBsI,EAAwBN,EAAgBO,GAAjE,KAAAvI,QAAyB,KAAAsI,UAAwB,KAAAN,SACjEjI,KAAKwI,KAAO,GACZ,IAAK,IAAI5J,EAAI,EAAGA,EAAI4J,EAAK3J,OAAQD,IAC7BoB,KAAKwI,KAAKtC,KAAK,IAAI,EAAOjG,EAAOD,KAAMwI,EAAK5J,GAAIA,IAIjD,SACH,OAAOoB,KAAKwI,KAAK3J,OAGd,IAAI+I,GAGP,OAAO5H,KAAKwI,KAAKZ,GAGd,KAAKa,EAAYC,GACpB1I,KAAKC,MAAM6H,UAAU,IAAI,EAAK9H,KAAMyI,EAAIzI,KAAM0I,IAC9C,MAAMC,EAAM3I,KAAKwI,KAAKC,GAAI9L,MAC1BqD,KAAKwI,KAAKC,GAAI9L,MAAQqD,KAAKwI,KAAKE,GAAI/L,MACpCqD,KAAKwI,KAAKE,GAAI/L,MAAQgM,EAGnB,IAAIf,EAAegB,GACtB5I,KAAKC,MAAM6H,UAAU,IAAI,EAAKc,EAAEjB,MAAOiB,EAAEhB,MAAO5H,KAAM4H,EAAO5H,KAAKwI,KAAKZ,GAAOjL,QAC9EqD,KAAKwI,KAAKZ,GAAOjL,MAAQiM,EAAEjM,MAGxB,iBACH,OAAO,IAAI,EAAeqD,KAAMA,KAAKwI,KAAKnF,IAAIwF,GAAKA,EAAElM,QAGlD,YAAYiL,EAAejL,GAC9BqD,KAAKwI,KAAKZ,GAAOjL,MAAQA,EAGtB,aAAa8L,EAAYC,GAC5B,MAAMC,EAAM3I,KAAKwI,KAAKC,GAAI9L,MAC1BqD,KAAKwI,KAAKC,GAAI9L,MAAQqD,KAAKwI,KAAKE,GAAI/L,MACpCqD,KAAKwI,KAAKE,GAAI/L,MAAQgM,EAGnB,YAAYf,GACf,OAAO5H,KAAKwI,KAAKZ,GAGd,aAAcY,GACjBxI,KAAKwI,KAAO,GACZ,IAAK,IAAI5J,EAAI,EAAGA,EAAI4J,EAAK3J,OAAQD,IAC7BoB,KAAKwI,KAAKtC,KAAK,IAAI,EAAOlG,KAAKC,MAAOD,KAAMwI,EAAK5J,GAAIA,KCpDlD,MAAM,EAWjB,YAAY4J,GACRxI,KAAK8I,aAAeN,EACpBxI,KAAK+I,OAAS,GACd/I,KAAKgJ,OAAS,CACV,IAAI,EAAUhJ,KAAM,EAAG,EAAGwI,IAE9BxI,KAAKiJ,SAAW,EAChB,IAAK,MAAMJ,KAAKL,EACRK,EAAI7I,KAAKiJ,WAAUjJ,KAAKiJ,SAAWJ,GAE3C7I,KAAKkJ,YAAc,EACnBlJ,KAAKmJ,kBAAoB,EACzBnJ,KAAKoJ,gBAAkB,EACvBpJ,KAAKqJ,0BAA2B,EAChCrJ,KAAKsJ,aAAe,CAAC,CACjBC,MAAO,EACPtB,OAAQ,EACRpJ,OAAQ2J,EAAK3J,SAIrB,UAAU2K,GACNxJ,KAAK+I,OAAO7C,KAAKsD,GACjBxJ,KAAKmJ,oBAGT,cACI,OAAOnJ,KAAK+I,OAAOlK,OAGvB,aACI,OAAOmB,KAAKmJ,kBAGhB,oBACI,OAAOnJ,KAAK+I,OAAOlK,OAASmB,KAAKmJ,kBAGrC,qBACI,OAAOnJ,KAAKmJ,kBAGhB,OAAOM,GACH,MAAMC,EAAYC,KAAKC,IAAIH,EAAMzJ,KAAKmJ,mBAChCU,EAAaJ,EACbK,EAAW9J,KAAK+I,OAAOlK,OAAS4K,EAElCI,GAAcC,GAAYD,GAAcH,IAExC1J,KAAKgJ,OAAS,CACVhJ,KAAKgJ,OAAO,IAEhBhJ,KAAKgJ,OAAO,GAAGb,aAAanI,KAAK8I,cACjC9I,KAAKmJ,kBAAoB,GAO7BnJ,KAAK+J,eAAeN,GAGhB,eAAeA,GACnB,KAAOA,EAAMzJ,KAAKmJ,mBAAmBnJ,KAAKsG,QAC1C,KAAOmD,EAAMzJ,KAAKmJ,mBAAmBnJ,KAAKgK,WAG9C,QACI,GAAIhK,KAAKmJ,oBAAsBnJ,KAAK+I,OAAOlK,OAE3C,OADAmB,KAAK+I,OAAO/I,KAAKmJ,mBAAmB7C,MAAMtG,MACnCA,KAAK+I,OAAO/I,KAAKmJ,qBAG5B,WAAWc,EAAkBlD,GACzB,MAAMmD,EAAmB,GACzB,IAAK,IAAIC,EAAO,GAAiB,IAAdF,GAAmBE,EAAOF,EAAUE,IAAQ,CAC3D,MAAMC,EAAapK,KAAKsG,QACxB,QAAmB+D,IAAfD,EAA0B,OAAOF,EAErC,GADAA,EAAOhE,KAAKkE,GACRA,EAAWrD,YAAcA,EAAa,OAAOmD,EAErD,OAAOA,EAGX,WACI,GAA+B,IAA3BlK,KAAKmJ,kBAET,OADAnJ,KAAK+I,SAAS/I,KAAKmJ,mBAAmBa,SAAShK,MACxCA,KAAK+I,OAAO/I,KAAKmJ,mBAG5B,cAAcc,EAAkBlD,GAC5B,MAAMmD,EAAmB,GACzB,IAAK,IAAIC,EAAO,GAAiB,IAAdF,GAAmBE,EAAOF,EAAUE,IAAQ,CAC3D,MAAMC,EAAapK,KAAKgK,WACxB,QAAmBK,IAAfD,EAA0B,OAAOF,EAErC,GADAA,EAAOhE,KAAKkE,GACRA,EAAWrD,YAAcA,EAAa,OAAOmD,EAErD,OAAOA,EAGX,SAAStC,GACL,OAAO5H,KAAKgJ,OAAOpB,GAGvB,YAAY/I,EAAiBoJ,GACzBjI,KAAKqJ,0BAA2B,EAChCrJ,KAAKsJ,aAAapD,KAAK,CAACqD,MAAOvJ,KAAKkJ,YAAajB,YAAmBoC,IAAXpC,EAAuB,EAAIA,EAAQpJ,YAAmBwL,IAAXxL,EAAuB,EAAIA,IAC/H,MAAMyL,EAAS,IAAI,EAAUtK,KAAMA,KAAKkJ,mBAA0BmB,IAAXpC,EAAuB,EAAIA,EAAQ,IAAI9B,WAAiBkE,IAAXxL,EAAuB,EAAIA,IAG/H,OAFAmB,KAAKgJ,OAAO9C,KAAKoE,GACjBtK,KAAK+I,OAAO7C,KAAK,IAAI,EAAeoE,EAAQzL,EAAQoJ,IAC7CqC,EAGX,YAAYC,GACRvK,KAAK+I,OAAO7C,KAAKqE,EAAIC,kBACrBxK,KAAKqI,oBAAoBkC,GAG7B,oBAAoBA,GAChBvK,KAAKgJ,OAAO9C,KAAKqE,GAGrB,oBAAoBA,GAChB,IAAK,IAAI3L,EAAI,EAAGA,EAAIoB,KAAKgJ,OAAOnK,OAAQD,IACpC,GAAIoB,KAAKgJ,OAAOpK,KAAO2L,EAEnB,YADAvK,KAAKgJ,OAAOyB,OAAO7L,EAAG,GAMlC,oBACI,OAAOoB,KAAKqJ,0B,oBC7IpB,SAASqB,EAAkBzK,EAAkB0K,EAAgBC,EAAYC,EAAYC,EAAYC,GAC7F,MAAMC,EAAWF,EAAKH,EAChBM,EAAYF,EAAK9K,EAAMgJ,SAC7B,MAAO,CAACrB,EAAejL,KACnB,MAAMuO,EAAIN,EAAKjB,KAAKwB,MAAMH,EAAWpD,GAC/BwD,EAASzB,KAAKwB,MAAMF,EAAYtO,GAEtC,MAAO,CAAEuO,IAAGG,EADFR,EAAKE,EAAKK,EACLA,W,YCHvB,MAAME,EAAwB,CAC1B,IDMW,MAAf,cACW,KAAA/H,KAAO,MAEd,WAAWtD,EAAkBsK,EAAgBK,EAAYC,EAAYC,EAAYC,EAAYQ,GACzF,MAAMP,EAAWF,EAAKP,EAAI1L,SACpB2M,EAAK7B,KAAK8B,IAAI9B,KAAKwB,MAAMH,GAAW,GAEpCU,EAAahB,EAAkBzK,EAAOsK,EAAI1L,SAAU+L,EAAIC,EAAIC,EAAIC,GAEtEQ,EAAII,UAAY,OAChB,IAAK,IAAI/M,EAAI,EAAGA,EAAI2L,EAAI1L,SAAUD,IAAK,CACnC,MAAM,EAAEsM,EAAC,EAAEG,EAAC,OAAED,GAAWM,EAAW9M,EAAG2L,EAAI/C,YAAY5I,GAAGjC,OAC1D4O,EAAIK,SAASV,EAAGG,EAAGG,EAAIJ,GAG3BG,EAAII,UAAY,QAChB,IAAK,IAAI/M,EAAI,EAAGA,EAAI2L,EAAI1L,SAAUD,IAAK,CACnC,MAAM,EAAEsM,EAAC,EAAEG,EAAC,OAAED,GAAWM,EAAW9M,EAAG2L,EAAI/C,YAAY5I,GAAGjC,OAC1D4O,EAAIK,SAASV,EAAGH,EAAKF,EAAKO,EAASI,EAAIA,EAAIA,IAInD,QAAQK,EAA2BN,EAA+BtL,EAAkB8I,GAChFwC,EAAII,UAAY,QAChBJ,EAAIK,SAAS,EAAG,EAAGC,EAAOC,MAAOD,EAAOT,QAExC,MAAMW,EAAU9L,EAAM+L,SAAS,GACzBhB,EAAWa,EAAOC,MAAQC,EAAQlN,SAGlCoN,EAAyC,GACzCC,EAAmE,GAEnEC,EAAa,CACfvB,GAAI,EACJC,GAAI,EACJC,GAAIe,EAAOC,MACXf,GAAI9K,EAAMmM,oBAAsBzC,KAAKwB,MAAsB,GAAhBU,EAAOT,QAAyCS,EAAOT,QAGtG,IAAK,MAAMb,KAAOtK,EAAMqJ,aAAc,CAClC,MAAM+C,EAAuB,IAAd9B,EAAIhB,MAAc4C,EAAa,CAC1CvB,GAAIjB,KAAKwB,MAAMZ,EAAItC,OAAS+C,GAC5BH,GAAIlB,KAAKwB,MAAMU,EAAOT,OAfC,GAeSS,EAAOT,QACvCN,GAAInB,KAAKwB,MAAMZ,EAAI1L,OAASmM,GAC5BD,GAAIpB,KAAKwB,MAjBc,GAiBRU,EAAOT,SAE1Bc,EAAW3B,EAAIhB,OAAS8C,EACxBJ,EAAuB1B,EAAIhB,OAASmB,EAAkBzK,EAAOsK,EAAI1L,OAAQwN,EAAOzB,GAAIyB,EAAOxB,GAAIwB,EAAOvB,GAAIuB,EAAOtB,IAIrH/K,KAAKsM,WAAWrM,EAAO8L,EAASI,EAAWvB,GAAIuB,EAAWtB,GAAIsB,EAAWrB,GAAIqB,EAAWpB,GAAIQ,GAC5F,IAAK,IAAI3M,EAAI,EAAGA,EAAIqB,EAAM+I,OAAOnK,OAAQD,IAAK,CAC1C,MAAMyN,EAASH,EAAWjM,EAAM+I,OAAOpK,GAAG2J,SAC1CvI,KAAKsM,WAAWrM,EAAOA,EAAM+I,OAAOpK,GAAIyN,EAAOzB,GAAIyB,EAAOxB,GAAIwB,EAAOvB,GAAIuB,EAAOtB,GAAIQ,GAGxF,MAAMgB,EAAa5C,KAAKwB,MAAMU,EAAOT,OAAS,IAE9C,SAASM,EAAWc,EAAe5E,EAAejL,GAC9C,OAAOsP,EAAuBO,GAAO5E,EAAOjL,GAGhD4O,EAAIkB,YAAc,OAClBlB,EAAImB,UAAY,EAChB,IAAK,MAAMlD,KAAST,EAAO7G,OAAO2G,GAAgB,YAAXA,EAAEpH,MAAqB,CAC1D,MAAMoH,EAAIW,EACV+B,EAAIoB,YAEJ,MAAM,EAAEzB,EAAC,EAAEG,GAAMK,EAAW7C,EAAElC,OAAO4B,QAASM,EAAEjC,OAAQiC,EAAElC,OAAOxJ,IAAI0L,EAAEjC,QAAQjK,QACvEuO,EAAG0B,EAAIvB,EAAGwB,GAAOnB,EAAW7C,EAAEhC,OAAO0B,QAASM,EAAE/B,OAAQ+B,EAAEhC,OAAO1J,IAAI0L,EAAE/B,QAAQnK,OACjFmQ,EAAUnD,KAAKoD,IAAI1B,EAAGwB,GAAMN,EAElChB,EAAIyB,OAAO9B,EAAGG,GACdE,EAAI0B,cAAc/B,EAAG4B,EAASF,EAAIE,EAASF,EAAIC,GAE/CtB,EAAI2B,SAGR3B,EAAIkB,YAAc,OAClBlB,EAAImB,UAAY,EAEhB,IAAK,MAAMlD,KAAST,EAAO7G,OAAO2G,GAAgB,SAAXA,EAAEpH,MAAkB,CACvD,MAAMoH,EAAIW,EACV+B,EAAIoB,YAEJ,MAAM,EAAEzB,EAAC,EAAEG,GAAMK,EAAW7C,EAAE5B,SAASsB,QAASM,EAAE3B,SAAU2B,EAAE5B,SAAS9J,IAAI0L,EAAE3B,UAAUvK,QAC/EuO,EAAG0B,EAAIvB,EAAGwB,GAAOnB,EAAW7C,EAAE1B,SAASoB,QAASM,EAAEzB,SAAUyB,EAAE1B,SAAShK,IAAI0L,EAAEzB,UAAUzK,OAE/F4O,EAAIyB,OAAO9B,EARG,EAQYG,EARZ,GASdE,EAAI4B,OAAOjC,EATG,EASYG,EATZ,GAUdE,EAAIyB,OAAO9B,EAVG,EAUYG,EAVZ,GAWdE,EAAI4B,OAAOjC,EAXG,EAWYG,EAXZ,GAYdE,EAAIyB,OAAO9B,EAAGG,GACdE,EAAI4B,OAAOP,EAAIC,GACftB,EAAI2B,SAGR3B,EAAIkB,YAAc,OAClBlB,EAAImB,UAAY,EAChB,IAAK,MAAMlD,KAAST,EAAO7G,OAAO2G,GAAgB,SAAXA,EAAEpH,MAAkB,CACvD,MAAMoH,EAAIW,EACV+B,EAAIoB,YAEJ,MAAM,EAAEzB,EAAC,EAAEG,GAAMK,EAAW7C,EAAE5B,SAASsB,QAASM,EAAE3B,SAAU2B,EAAE5B,SAAS9J,IAAI0L,EAAE3B,UAAUvK,QAC/EuO,EAAG0B,EAAIvB,EAAGwB,GAAOnB,EAAW7C,EAAE1B,SAASoB,QAASM,EAAEzB,SAAUyB,EAAE1B,SAAShK,IAAI0L,EAAEzB,UAAUzK,OACzFmQ,EAAUnD,KAAKoD,IAAI1B,EAAGwB,GAAMN,EAElChB,EAAIyB,OAAO9B,EAAGG,GACdE,EAAI0B,cAAc/B,EAAG4B,EAASF,EAAIE,EAASF,EAAIC,GAE/CtB,EAAI2B,YCrHZ,ICRW,MAAf,cACW,KAAA3J,KAAO,SAEd,QAAQsI,EAA2BN,EAA+BtL,EAAkB8I,GAChFwC,EAAII,UAAY,QAChBJ,EAAIK,SAAS,EAAG,EAAGC,EAAOC,MAAOD,EAAOT,QAExC,MAAMgC,EAAOvB,EAAOC,MAAQ,EACtBuB,EAAOxB,EAAOT,OAAS,EAEvBb,EAAMtK,EAAM+L,SAAS,GACrBsB,EAAc,EAAI3D,KAAK4D,GAAKhD,EAAI1L,SAEtC,SAAS2O,EAAgB5F,EAAejL,GACpC,MAAM8Q,EAAQH,EAAc1F,EACtB8F,EAAS/Q,EAAQsD,EAAMgJ,SAG7B,MAAO,CAAEiC,EAFCvB,KAAKwB,MAAMiC,EAAOzD,KAAKgE,IAAIF,GAASC,EAASN,GAE3C/B,EADF1B,KAAKwB,MAAMkC,EAAO1D,KAAKiE,IAAIH,GAASC,EAASL,IAI3D9B,EAAII,UAAY,OAChBJ,EAAIoB,YACJpB,EAAIyB,OAAOI,EAAMC,GACjB,MAAMQ,EAAY,GAClB,IAAK,IAAIjP,EAAI,EAAGA,EAAI2L,EAAI1L,SAAUD,IAAK,CACnC,MAAM,EAAEsM,EAAC,EAAEG,GAAMmC,EAAgB5O,EAAG2L,EAAI/C,YAAY5I,GAAGjC,OACvD4O,EAAI4B,OAAOjC,EAAGG,GACdwC,EAAU3H,KAAK,CAACgF,IAAGG,MAEvBE,EAAIuC,YACJvC,EAAIwC,OAGJxC,EAAII,UAAY,QAChB,IAAK,IAAI/M,EAAI,EAAGA,EAAI2L,EAAI1L,SAAUD,IAAK,CACnC,MAAM,EAAEsM,EAAC,EAAEG,GAAMwC,EAAUjP,GAC3B2M,EAAIK,SAASV,EAAGG,EAAG,EAAG,GAG1BE,EAAIkB,YAAc,OAClBlB,EAAImB,UAAY,EAChB,IAAK,MAAMlD,KAAST,EAAO7G,OAAO2G,GAAgB,YAAXA,EAAEpH,MAAqB,CAC1D,MAAMoH,EAAIW,EACV+B,EAAIoB,YAEJ,MAAM,EAAEzB,EAAC,EAAEG,GAAMmC,EAAgB3E,EAAEjC,OAAQiC,EAAElC,OAAOxJ,IAAI0L,EAAEjC,QAAQjK,QAC1DuO,EAAG0B,EAAIvB,EAAGwB,GAAOW,EAAgB3E,EAAE/B,OAAQ+B,EAAEhC,OAAO1J,IAAI0L,EAAE/B,QAAQnK,OAC1E4O,EAAIyB,OAAO9B,EAAGG,GACdE,EAAI4B,OAAOP,EAAIC,GACftB,EAAI2B,SAGR3B,EAAIkB,YAAc,OAClBlB,EAAImB,UAAY,EAChB,IAAK,MAAMlD,KAAST,EAAO7G,OAAO2G,GAAgB,SAAXA,EAAEpH,MAAkB,CACvD,MAAMoH,EAAIW,EACV+B,EAAIoB,YAEJ,MAAM,EAAEzB,EAAC,EAAEG,GAAMmC,EAAgB3E,EAAE3B,SAAU2B,EAAE5B,SAAS9J,IAAI0L,EAAE3B,UAAUvK,QAChEuO,EAAG0B,EAAIvB,EAAGwB,GAAOW,EAAgB3E,EAAEzB,SAAUyB,EAAE1B,SAAShK,IAAI0L,EAAEzB,UAAUzK,OAChF4O,EAAIyB,OAAO9B,EAAGG,GACdE,EAAI4B,OAAOP,EAAIC,GACftB,EAAI2B,aD/ChB,IAAIrB,EACAN,EAGW,SAASyC,EAAyBrP,GAC7C,MAAOsP,EAAYC,GAAiB,WAAevP,EAAMsB,MAAMgO,eACxDE,EAASC,GAAqB,OAAA5I,EAAA,GAAuB8F,EAAY,GAAK+C,GAAOC,EAAQ3P,EAAMsB,MAAO,GAAIoO,KACtGE,EAAaC,GAAkB,YAAe,IAC9CC,EAAcC,GAAmB,WAAe,GAkCvD,SAASC,IACLT,EAAcvP,EAAMsB,MAAMgO,cAG9B,SAASK,EAAQrO,EAAkB8I,EAAkBvJ,QAElC6K,IAAXwB,QAAgCxB,IAARkB,QAA2BlB,IAAN7K,GACjDA,EAAE8O,QAAQzC,EAAQN,EAAKtL,EAAO8I,GAGlC,OA1CA,YAAgB,KACZ,MAAM6F,EAAMxN,SAASyN,eAAe,UACpC,YAAaD,EAfH,KACC,KAeX/C,EAAS+C,EACTrD,EAAMqD,EAAIE,WAAW,MACrBR,EAAQ3P,EAAMsB,MAAO,GAAIkO,IAC1B,IAEH,YAAgB,KACZG,EAAQ3P,EAAMsB,MAAO,GAAIkO,IAC1B,CAAExP,EAAMsB,QEpCA,SAAyB8O,EAAsBC,EAAiBC,GAC3E,MAAMC,EAAgB,iBAAO,QACvBC,EAAS,iBAAgC,GACzCC,EAAyB,kBAAO,GAGtC,oBAAU,KACNF,EAAcG,QAAUN,GACzB,CAACA,IAGJ,oBAAU,KACN,SAASO,IACLJ,EAAcG,UACdE,IAGJ,SAASA,IACL,GAAIN,GAAS,IAAM,CACf,MAAMO,EAAaC,IACbC,EAAe,EAAa,EAART,EACpBU,EAAYhG,KAAKwB,MAAMqE,EAAaE,GAvB1B,GAwBhBP,EAAOE,QAAUO,WAAWN,EAAMK,GAClCP,EAAuBC,SAAU,OAGjCF,EAAOE,QAAUQ,sBAAsBP,GACvCF,EAAuBC,SAAU,EAKzC,OADIL,GAAQO,IACL,KACEH,EAAuBC,QACxBS,qBAAqBX,EAAOE,SAE5BU,aAAaZ,EAAOE,WAG7B,CAACL,EAAQC,IFAZe,CAAgB,KACZ,GAAIvB,GAAgB,IAAM,CACtB,MAAM1F,EAASpK,EAAMsB,MAAMgQ,WAAW,GAAI,EAAYjJ,SACtD2H,IACAL,EAAQ3P,EAAMsB,MAAO8I,EAAQoF,OAE5B,CACD,MAAM+B,EAAqC,EAAI,KAA5BzB,EAAe,KAC5B0B,EAAWxG,KAAKwB,MApCR,GAoCc+E,GACtBE,EAAY,GAClB,IAAK,IAAIxR,EAAI,EAAGA,EAAIuR,EAAUvR,IAC1BwR,EAAUlK,QAAQvH,EAAMsB,MAAMgQ,YAAY,EAAG,EAAYjJ,UAE7D2H,IACAL,EAAQ3P,EAAMsB,MAAOmQ,EAAWjC,GAEI,IAApCxP,EAAMsB,MAAMoQ,qBAA2B7B,GAAe,IAC3DD,EAAaE,GAYT,uBAAK9L,UAAU,YAClB,0BAAQ2N,GAAG,WACX,uBAAK3N,UAAU,YACX,uBAAKA,UAAU,YACX,wCACA,gBAAC,IAAQ,CACLvC,QAASkL,EAAYjI,IAAIkN,GAAQA,EAAKhN,MACtC5G,MAAOwR,EAAQ5K,KACflB,SAAUmO,GAAMpC,EAAkB,YAAM9C,EAAaiF,GAAQA,EAAKhN,OAASiN,EAAG7T,WAEtF,yBAAO8E,KAAK,QAAQsL,IAAK,EAAGtB,IAAK9M,EAAMsB,MAAMwQ,cAAe9T,MAAOsR,EAAY5L,SAAUqO,IACrF/R,EAAMsB,MAAM0Q,OAAOD,EAAGhS,OAAOkS,eAC7BjC,IACAL,EAAQ3P,EAAMsB,MAAO,GAAIkO,MAE7B,4B,QAAYF,E,MAAetP,EAAMsB,MAAMwQ,eACvC,uBAAK9N,UAAU,YACX,0BAAQK,QAAS,KAAQrE,EAAMsB,MAAM0Q,OAAO,GAAIhC,IAAoBL,EAAQ3P,EAAMsB,MAAO,GAAIkO,KAAW,OACxG,0BAAQnL,QAAS,KAAQ,MAAM+F,EAASpK,EAAMsB,MAAM4Q,eAAe,EAAG,EAAYvJ,KAAMqH,IAAoBL,EAAQ3P,EAAMsB,MAAO8I,EAAQoF,KAAW,MACpJ,0BAAQnL,QAAS,KAAQ,MAAM+F,EAAS,CAACpK,EAAMsB,MAAM+J,YAAa2E,IAAoBL,EAAQ3P,EAAMsB,MAAO8I,EAAQoF,KAAW,KAC9H,0BAAQnL,QAAS,KAAQ,MAAM+F,EAAS,CAACpK,EAAMsB,MAAMqG,SAAUqI,IAAoBL,EAAQ3P,EAAMsB,MAAO8I,EAAQoF,KAAW,KAC3H,0BAAQnL,QAAS,KAAQ,MAAM+F,EAASpK,EAAMsB,MAAMgQ,YAAY,EAAG,EAAY3I,KAAMqH,IAAoBL,EAAQ3P,EAAMsB,MAAO8I,EAAQoF,KAAW,MACjJ,0BAAQnL,QAAS,KAAQrE,EAAMsB,MAAM0Q,OAAOhS,EAAMsB,MAAMwQ,eAAgB9B,IAAoBL,EAAQ3P,EAAMsB,MAAO,GAAIkO,KAAW,QAEpI,yCACA,uBAAKxL,UAAU,YACX,uCACA,yBAAOlB,KAAK,QAAQsL,IAAK,EAAGtB,IAAK,EAAGtB,KAAM,IAAMxN,MAAO8R,EAAcpM,SAAUqO,GAAMhC,EAAgBgC,EAAGhS,OAAOkS,iBAC/G,0BAAQ5N,QAAS,IAAMwL,GAAgBD,IAAeA,EAAc,QAAU,WGtF/E,MATuB,CAClC,ICLW,MAAf,cACW,KAAAhL,KAAO,gBAEd,KAAKtD,EAAkBsK,GACnB,IAAK,IAAInD,EAAW,EAAGA,EAAWmD,EAAI1L,SAAUuI,IAAY,CACxD,IAAI0J,EAAOvG,EAAIpN,IAAIiK,GACf2J,EAAO3J,EACX,IAAK,IAAI4J,EAAW5J,EAAW,EAAG4J,EAAWzG,EAAI1L,SAAUmS,IAAY,CACnE,MAAMjJ,EAAIwC,EAAIpN,IAAI6T,GACdjJ,EAAEkJ,QAAQH,GAAQ,IAClBA,EAAO/I,EACPgJ,EAAOC,GAGXD,IAAS3J,GACTmD,EAAI2G,KAAK9J,EAAU2J,MDT/B,IENW,MAAf,cACW,KAAAxN,KAAO,YAEd,KAAKtD,EAAkBsK,GACnB,MAAM4G,EAAoB,IAAIhL,MAAMoE,EAAI1L,UACxC,IAAK,IAAID,EAAI,EAAGA,EAAIuS,EAAkBtS,OAAQD,IAC1CuS,EAAkBvS,IAAK,EAE3B,IAAK,IAAIwI,EAAW,EAAGA,EAAWmD,EAAI1L,SAAW,GAAI,CACjD,GAAIsS,EAAkB/J,GAAW,CAC7BA,IACA,SAEJ,MAAMjF,EAAOoI,EAAIpN,IAAIiK,GACrB,IAAIQ,EAAQR,EACZ,IAAK,IAAIgK,EAAYhK,EAAW,EAAGgK,EAAY7G,EAAI1L,SAAUuS,IACrD7G,EAAIpN,IAAIiU,GAAWH,QAAQ9O,IAAS,GAAGyF,IAG/C,KAAwC,IAAjC2C,EAAIpN,IAAIyK,GAAOqJ,QAAQ9O,IAAeyF,EAAQR,GAAUQ,IAE3DA,IAAUR,EAAUA,KAEpBmD,EAAI2G,KAAK9J,EAAUQ,GACnBuJ,EAAkBvJ,IAAS,MFjBvC,IGPW,MAAf,cACW,KAAArE,KAAO,WAEd,KAAKtD,EAAkBsK,GACnB,IAAK,IAAI3L,EAAI,EAAGA,EAAI2L,EAAI1L,SAAUD,IAC9BoB,KAAKqR,OAAO9G,EAAK3L,GAGrB,IAAK,IAAIA,EAAI2L,EAAI1L,SAAW,EAAGD,EAAI,EAAGA,IAClC2L,EAAI2G,KAAK,EAAGtS,GACZoB,KAAKsR,SAAS/G,EAAK3L,GAI3B,OAAO2L,EAAgB3C,GACnB,KAAOA,EAAQ,GAAG,CACd,MAAM2J,EAAMhH,EAAIpN,IAAIyK,GACd4J,EAAcxR,KAAKwR,YAAY5J,GAC/B6J,EAAOlH,EAAIpN,IAAIqU,GACrB,KAAID,EAAIN,QAAQQ,GAAQ,GAKpB,MAJAlH,EAAI2G,KAAKtJ,EAAO4J,GAChB5J,EAAQ4J,GAQpB,SAASjH,EAAgB1L,GACrB,IAAI6S,EAAM,EACV,KAAOA,EAAM7S,GAAQ,CACjB,MAAM8S,EAAO3R,KAAK4R,WAAWF,GAE7B,GAAIC,GAAQ9S,EAAQ,OAEpB,IAAIgT,EAAcF,EAOlB,GANIA,EAAO,EAAI9S,GACP0L,EAAIpN,IAAI0U,GAAaZ,QAAQ1G,EAAIpN,IAAI0U,EAAc,KAAO,GAC1DA,MAIJtH,EAAIpN,IAAIuU,GAAKT,QAAQ1G,EAAIpN,IAAI0U,IAAgB,GAK7C,OAHAtH,EAAI2G,KAAKQ,EAAKG,GACdH,EAAMG,GAOlB,YAAYjK,GACR,OAAO+B,KAAKwB,OAAOvD,EAAQ,GAAK,GAGpC,WAAWA,GACP,OAAe,EAARA,EAAY,IHlDvB,IIRW,MAAf,cACW,KAAArE,KAAO,YAEd,KAAKtD,EAAkBsK,GACnBvK,KAAK8R,QAAQvH,EAAK,EAAGA,EAAI1L,UAG7B,QAAQ0L,EAAgBwC,EAAatB,GACjC,GAAIA,EAAMsB,GAAO,EAAG,OAGpB,MAAMgF,EAAcpI,KAAKwB,MAAM4B,EAAMpD,KAAKqI,UAAYvG,EAAMsB,IAC5DxC,EAAI2G,KAAKnE,EAAKgF,GAEd,MAAME,EAAQ1H,EAAIpN,IAAI4P,GACtB,IAAImF,EAAKnF,EAAM,EACXoF,EAAK1G,EAAM,EACf,KAAOyG,GAAMC,GACL5H,EAAIpN,IAAI+U,GAAIjB,QAAQgB,GAAS,EAC7BC,IAEA3H,EAAI2G,KAAKgB,EAAIC,KAGrB5H,EAAI2G,KAAKnE,EAAKoF,GACdnS,KAAK8R,QAAQvH,EAAKwC,EAAKoF,GACvBnS,KAAK8R,QAAQvH,EAAK4H,EAAK,EAAG1G,KJjB9B,IKTW,MAAf,cACW,KAAAlI,KAAO,iBAEd,KAAKtD,EAAkBsK,GACnBvK,KAAK8R,QAAQvH,EAAK,EAAGA,EAAI1L,UAG7B,QAAQ0L,EAAgBwC,EAAatB,GACjC,GAAIA,EAAMsB,GAAO,EAAG,OAGpB,MAAMgF,EAAcpI,KAAKwB,MAAM4B,EAAMpD,KAAKqI,UAAYvG,EAAMsB,IAC5DxC,EAAI2G,KAAKnE,EAAKgF,GAEd,MAAME,EAAQ1H,EAAIpN,IAAI4P,GACtB,IAAImF,EAAKnF,EAAM,EACXqF,EAAKrF,EAAM,EACXoF,EAAK1G,EAAM,EACf,KAAO2G,GAAMD,GACT,OAAQ5H,EAAIpN,IAAIiV,GAAInB,QAAQgB,IACxB,KAAK,EACDG,IACA,MACJ,KAAM,EACF7H,EAAI2G,KAAKgB,IAAME,KACf,MACJ,KAAK,EACD7H,EAAI2G,KAAKkB,EAAID,KAIzB5H,EAAI2G,KAAKnE,EAAKoF,GACdnS,KAAK8R,QAAQvH,EAAKwC,EAAKmF,GACvBlS,KAAK8R,QAAQvH,EAAK6H,EAAI3G,KLvB1B,IMVW,MAAf,cACW,KAAAlI,KAAO,YAEd,KAAKtD,EAAkBsK,GACnBvK,KAAK8R,QAAQ7R,EAAOsK,EAAK,EAAGA,EAAI1L,UAGpC,QAAQoB,EAAkBsK,EAAgBwC,EAAatB,GACnD,GAAIA,EAAMsB,GAAO,EAAG,OAIpB,MAAMsF,EAAOtF,EAAMpD,KAAK2I,MAAM7G,EAAMsB,GAAO,GAC3C/M,KAAK8R,QAAQ7R,EAAOsK,EAAKwC,EAAKsF,GAC9BrS,KAAK8R,QAAQ7R,EAAOsK,EAAK8H,EAAM5G,GAE/B,MAAM8G,EAAYtS,EAAMuS,YAAY/G,EAAMsB,EAAKA,GAC/C,IAAImF,EAAKnF,EACLoF,EAAKE,EACLI,EAAK,EACT,KAAOP,EAAKG,GAAQF,EAAK1G,GACjBlB,EAAIpN,IAAI+U,GAAIjB,QAAQ1G,EAAIpN,IAAIgV,KAAQ,GACpCI,EAAU3U,IAAI6U,EAAIlI,EAAIpN,IAAI+U,IAC1BA,IACAO,MAEAF,EAAU3U,IAAI6U,EAAIlI,EAAIpN,IAAIgV,IAC1BA,IACAM,KAGR,KAAOP,EAAKG,GACRE,EAAU3U,IAAI6U,EAAIlI,EAAIpN,IAAI+U,IAC1BA,IACAO,IAEJ,KAAON,EAAK1G,GACR8G,EAAU3U,IAAI6U,EAAIlI,EAAIpN,IAAIgV,IAC1BA,IACAM,IAIJ,IAAK,IAAI7T,EAAI,EAAGA,EAAI6M,EAAMsB,EAAKnO,IAC3B2L,EAAI3M,IAAIgB,EAAImO,EAAKwF,EAAUpV,IAAIyB,IAGnCqB,EAAMyS,YAAYH,MCtCX,MAP6B,CACxC,ICLW,MAAf,cACI,KAAAhP,KAAO,SACP,SAASqE,EAAe+K,GACpB,OAAOhJ,KAAKqI,WDGhB,IENW,MAAf,cACI,KAAAzO,KAAO,WACP,SAASqE,EAAe+K,GACpB,OAAO,EAAK/K,EAAQ+K,IFIxB,IGPW,MAAf,cACI,KAAApP,KAAO,cACP,SAASqE,EAAe+K,GACpB,IAAIC,EAAiBjJ,KAAKwB,MAAMvD,GAAS+B,KAAKqI,UAAYW,EAAc,KAAQA,EAAc,KAG9F,OAFIC,EAAiB,IAAGA,EAAiB,GACrCA,EAAiBD,IAAaC,EAAiBD,GAC5CC,EAAiBD,IHE5B,IIRW,MAAf,cACI,KAAApP,KAAO,aACP,SAASqE,EAAe+K,GACpB,MAAME,EAAKjL,EAAQ+K,EACnB,OAAQhJ,KAAKiE,IAAS,EAALiF,EAASlJ,KAAK4D,IAAM,EAAK,MCInC,SAASuF,IACpB,MAAOnI,EAAQoI,GAAa,WAAe,OACpCC,EAAQC,GAAa,WAAe,MACpCC,EAAaC,GAAkB,gBAAkC9I,IACjE+I,EAAkBC,GAAgB,gBAAsChJ,IACxEiJ,EAAgBC,GAAc,WAA+B,EAAkB,IAatF,OAAO,2BACH,uBAAK5Q,UAAU,yBACX,uBAAKA,UAAU,0BACX,uBAAKA,UAAU,kCACX,6CACA,yBAAOlB,KAAK,SAAS9E,MAAOgO,EAAQtI,SAAUmO,GAAMuC,EAAUvC,EAAG9R,OAAOkS,kBAE5E,uBAAKjO,UAAU,kCACX,0CACA,yBAAOlB,KAAK,SAAS9E,MAAOqW,EAAQ3Q,SAAUmO,GAAMyC,EAAUzC,EAAG9R,OAAOkS,kBAE5E,2BACI,sCACA,gBAAC,IAAQ,CACLxQ,QAAS,EAAkBiD,IAAIlB,GAAQA,EAAKoB,MAC5C5G,MAAO2W,EAAe/P,KACtBlB,SAAUmO,GAAM+C,EAAW,YAAM,EAAmBhD,GAAQA,EAAKhN,OAASiN,EAAG7T,WAGrF,2B,cAAgB,gBAAC,IAAQ,CACrByD,QAAS,EAAqBiD,IAAIkN,GAAQA,EAAKhN,MAC/C5G,WAAuB0N,IAAhB6I,OAA4B7I,EAAY6I,EAAY3P,KAC3DlB,SAAUmO,GAAM2C,EAAe,YAAM,EAAsB5C,GAAQA,EAAKhN,OAASiN,EAAG7T,WACxF,0BAAQkF,SAAU8I,GAAU,GAAKqI,GAAU,QAAqB3I,IAAhB6I,EAA2BlQ,QAlCvF,WACI,MAAMwQ,EAAgB,IAAIrN,MAAMwE,GAChC,IAAK,IAAI/L,EAAI,EAAGA,EAAI4U,EAAc3U,OAAQD,IACtC4U,EAAc5U,GAAK+K,KAAKwB,MAAMmI,EAAeG,SAAS7U,EAAG4U,EAAc3U,QAAUmU,GAErF,MAAMU,EAAY,IAAI,EAAUF,GAChCN,EAAYS,KAAKD,EAAWA,EAAU1H,SAAS,IAC/C0H,EAAU/C,OAAO,GACjB0C,EAAaK,KA0BuF,cAG9ErJ,IAArB+I,EAAiC,iCAAQ,gCACtC,2BACA,gBAACpF,EAAwB,CAAC/N,MAAOmT","file":"9.bundle.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar DEFAULT_PLACEHOLDER_STRING = 'Select...';\n\nvar Dropdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dropdown, _Component);\n\n  function Dropdown(props) {\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dropdown).call(this, props));\n    _this.state = {\n      selected: _this.parseValue(props.value, props.options) || {\n        label: typeof props.placeholder === 'undefined' ? DEFAULT_PLACEHOLDER_STRING : props.placeholder,\n        value: ''\n      },\n      isOpen: false\n    };\n    _this.mounted = true;\n    _this.handleDocumentClick = _this.handleDocumentClick.bind(_assertThisInitialized(_this));\n    _this.fireChangeEvent = _this.fireChangeEvent.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps.value) {\n        var selected = this.parseValue(newProps.value, newProps.options);\n\n        if (selected !== this.state.selected) {\n          this.setState({\n            selected: selected\n          });\n        }\n      } else {\n        this.setState({\n          selected: {\n            label: typeof newProps.placeholder === 'undefined' ? DEFAULT_PLACEHOLDER_STRING : newProps.placeholder,\n            value: ''\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('click', this.handleDocumentClick, false);\n      document.addEventListener('touchend', this.handleDocumentClick, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n      document.removeEventListener('click', this.handleDocumentClick, false);\n      document.removeEventListener('touchend', this.handleDocumentClick, false);\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(event) {\n      if (this.props.onFocus && typeof this.props.onFocus === 'function') {\n        this.props.onFocus(this.state.isOpen);\n      }\n\n      if (event.type === 'mousedown' && event.button !== 0) return;\n      event.stopPropagation();\n      event.preventDefault();\n\n      if (!this.props.disabled) {\n        this.setState({\n          isOpen: !this.state.isOpen\n        });\n      }\n    }\n  }, {\n    key: \"parseValue\",\n    value: function parseValue(value, options) {\n      var option;\n\n      if (typeof value === 'string') {\n        for (var i = 0, num = options.length; i < num; i++) {\n          if (options[i].type === 'group') {\n            var match = options[i].items.filter(function (item) {\n              return item.value === value;\n            });\n\n            if (match.length) {\n              option = match[0];\n            }\n          } else if (typeof options[i].value !== 'undefined' && options[i].value === value) {\n            option = options[i];\n          }\n        }\n      }\n\n      return option || value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value, label) {\n      var newState = {\n        selected: {\n          value: value,\n          label: label\n        },\n        isOpen: false\n      };\n      this.fireChangeEvent(newState);\n      this.setState(newState);\n    }\n  }, {\n    key: \"fireChangeEvent\",\n    value: function fireChangeEvent(newState) {\n      if (newState.selected !== this.state.selected && this.props.onChange) {\n        this.props.onChange(newState.selected);\n      }\n    }\n  }, {\n    key: \"renderOption\",\n    value: function renderOption(option) {\n      var _classes;\n\n      var value = option.value;\n\n      if (typeof value === 'undefined') {\n        value = option.label || option;\n      }\n\n      var label = option.label || option.value || option;\n      var isSelected = value === this.state.selected.value || value === this.state.selected;\n      var classes = (_classes = {}, _defineProperty(_classes, \"\".concat(this.props.baseClassName, \"-option\"), true), _defineProperty(_classes, option.className, !!option.className), _defineProperty(_classes, 'is-selected', isSelected), _classes);\n      var optionClass = (0, _classnames[\"default\"])(classes);\n      return _react[\"default\"].createElement(\"div\", {\n        key: value,\n        className: optionClass,\n        onMouseDown: this.setValue.bind(this, value, label),\n        onClick: this.setValue.bind(this, value, label),\n        role: \"option\",\n        \"aria-selected\": isSelected ? 'true' : 'false'\n      }, label);\n    }\n  }, {\n    key: \"buildMenu\",\n    value: function buildMenu() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          options = _this$props.options,\n          baseClassName = _this$props.baseClassName;\n      var ops = options.map(function (option) {\n        if (option.type === 'group') {\n          var groupTitle = _react[\"default\"].createElement(\"div\", {\n            className: \"\".concat(baseClassName, \"-title\")\n          }, option.name);\n\n          var _options = option.items.map(function (item) {\n            return _this2.renderOption(item);\n          });\n\n          return _react[\"default\"].createElement(\"div\", {\n            className: \"\".concat(baseClassName, \"-group\"),\n            key: option.name,\n            role: \"listbox\",\n            tabIndex: \"-1\"\n          }, groupTitle, _options);\n        } else {\n          return _this2.renderOption(option);\n        }\n      });\n      return ops.length ? ops : _react[\"default\"].createElement(\"div\", {\n        className: \"\".concat(baseClassName, \"-noresults\")\n      }, \"No options found\");\n    }\n  }, {\n    key: \"handleDocumentClick\",\n    value: function handleDocumentClick(event) {\n      if (this.mounted) {\n        if (!_reactDom[\"default\"].findDOMNode(this).contains(event.target)) {\n          if (this.state.isOpen) {\n            this.setState({\n              isOpen: false\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isValueSelected\",\n    value: function isValueSelected() {\n      return typeof this.state.selected === 'string' || this.state.selected.value !== '';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames, _classNames2, _classNames3, _classNames4, _classNames5;\n\n      var _this$props2 = this.props,\n          baseClassName = _this$props2.baseClassName,\n          controlClassName = _this$props2.controlClassName,\n          placeholderClassName = _this$props2.placeholderClassName,\n          menuClassName = _this$props2.menuClassName,\n          arrowClassName = _this$props2.arrowClassName,\n          arrowClosed = _this$props2.arrowClosed,\n          arrowOpen = _this$props2.arrowOpen,\n          className = _this$props2.className;\n      var disabledClass = this.props.disabled ? 'Dropdown-disabled' : '';\n      var placeHolderValue = typeof this.state.selected === 'string' ? this.state.selected : this.state.selected.label;\n      var dropdownClass = (0, _classnames[\"default\"])((_classNames = {}, _defineProperty(_classNames, \"\".concat(baseClassName, \"-root\"), true), _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, 'is-open', this.state.isOpen), _classNames));\n      var controlClass = (0, _classnames[\"default\"])((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(baseClassName, \"-control\"), true), _defineProperty(_classNames2, controlClassName, !!controlClassName), _defineProperty(_classNames2, disabledClass, !!disabledClass), _classNames2));\n      var placeholderClass = (0, _classnames[\"default\"])((_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(baseClassName, \"-placeholder\"), true), _defineProperty(_classNames3, placeholderClassName, !!placeholderClassName), _defineProperty(_classNames3, 'is-selected', this.isValueSelected()), _classNames3));\n      var menuClass = (0, _classnames[\"default\"])((_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(baseClassName, \"-menu\"), true), _defineProperty(_classNames4, menuClassName, !!menuClassName), _classNames4));\n      var arrowClass = (0, _classnames[\"default\"])((_classNames5 = {}, _defineProperty(_classNames5, \"\".concat(baseClassName, \"-arrow\"), true), _defineProperty(_classNames5, arrowClassName, !!arrowClassName), _classNames5));\n\n      var value = _react[\"default\"].createElement(\"div\", {\n        className: placeholderClass\n      }, placeHolderValue);\n\n      var menu = this.state.isOpen ? _react[\"default\"].createElement(\"div\", {\n        className: menuClass,\n        \"aria-expanded\": \"true\"\n      }, this.buildMenu()) : null;\n      return _react[\"default\"].createElement(\"div\", {\n        className: dropdownClass\n      }, _react[\"default\"].createElement(\"div\", {\n        className: controlClass,\n        onMouseDown: this.handleMouseDown.bind(this),\n        onTouchEnd: this.handleMouseDown.bind(this),\n        \"aria-haspopup\": \"listbox\"\n      }, value, _react[\"default\"].createElement(\"div\", {\n        className: \"\".concat(baseClassName, \"-arrow-wrapper\")\n      }, arrowOpen && arrowClosed ? this.state.isOpen ? arrowOpen : arrowClosed : _react[\"default\"].createElement(\"span\", {\n        className: arrowClass\n      }))), menu);\n    }\n  }]);\n\n  return Dropdown;\n}(_react.Component);\n\nDropdown.defaultProps = {\n  baseClassName: 'Dropdown'\n};\nvar _default = Dropdown;\nexports[\"default\"] = _default;\n","import { useState } from 'react';\r\n\r\n// Same as useState, but with a change handler that fires before the state is updated\r\nexport default function useUpdateState<T>(initial: T, beforeChange: (newValue: T, oldValue?: T) => void): [T, (item: T) => void] {\r\n  const [value, updateValue] = useState(initial);\r\n  return [value, (newValue: T) => { beforeChange(newValue, value); updateValue(newValue); }];\r\n}","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","enum EComplexity {\r\n    Decorative = 0,\r\n    Get = 1,\r\n    Compare = 2,\r\n    Set = 3,\r\n    Swap = 4,\r\n    CSwap = 5\r\n}\r\n\r\nexport default EComplexity;","import IDelta from './IDelta';\r\nimport EComplexity from './EComplexity';\r\nimport SortState from '../SortState';\r\nimport SortArray from '../SortArray';\r\n\r\nexport class Get implements IDelta {\r\n    complexity: EComplexity;\r\n    type = 'get';\r\n    constructor(public array: SortArray, public index: number) {\r\n        this.complexity = EComplexity.Get;\r\n    }\r\n    apply(state: SortState): void { return; }\r\n    rollback(state: SortState): void { return; }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class Compare implements IDelta {\r\n    complexity: EComplexity;\r\n    type = 'compare';\r\n    constructor(public array1: SortArray, public index1: number, public array2: SortArray, public index2: number) {\r\n        this.complexity = EComplexity.Compare;\r\n    }\r\n    apply(state: SortState): void { return; }\r\n    rollback(state: SortState): void { return; }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class Set implements IDelta {\r\n    complexity: EComplexity;\r\n    type = 'set';\r\n    constructor(public array: SortArray, public index: number, private oldValue: number, private newValue: number) {\r\n        this.complexity = EComplexity.Set;\r\n    }\r\n    apply(state: SortState): void {\r\n        this.array.internalSet(this.index, this.newValue);\r\n    }\r\n    rollback(state: SortState): void {\r\n        this.array.internalSet(this.index, this.oldValue);\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class Copy implements IDelta {\r\n    type = 'copy';\r\n    complexity: EComplexity;\r\n    constructor(public srcArray: SortArray, public srcIndex: number, public tgtArray: SortArray, public tgtIndex: number, private replacedValue: number) {\r\n        this.complexity = EComplexity.Set;\r\n    }\r\n    apply(state: SortState): void {\r\n        this.tgtArray.internalSet(this.tgtIndex, this.srcArray.internalGet(this.srcIndex).value);\r\n    }\r\n    rollback(state: SortState): void {\r\n        this.tgtArray.internalSet(this.tgtIndex, this.replacedValue);\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class Swap implements IDelta {\r\n    type = 'swap';\r\n    complexity: EComplexity;\r\n    constructor(public srcArray: SortArray, public srcIndex: number, public tgtArray: SortArray, public tgtIndex: number) {\r\n        this.complexity = EComplexity.Swap;\r\n    }\r\n    apply(state: SortState): void {\r\n        const v1 = this.srcArray.internalGet(this.srcIndex).value;\r\n        this.srcArray.internalSet(this.srcIndex, this.tgtArray.internalGet(this.tgtIndex).value);\r\n        this.tgtArray.internalSet(this.tgtIndex, v1);\r\n    }\r\n    rollback(state: SortState): void {\r\n        this.apply(state);\r\n    }\r\n}","import SortState from './SortState';\r\nimport { Compare } from './delta/SimpleOperations';\r\nimport SortArray from './SortArray';\r\n\r\nexport default class Record {\r\n    constructor(private state: SortState, public array: SortArray, public value: number, public index: number) {\r\n\r\n    }\r\n\r\n    public compare(other: Record): number {\r\n        this.state.pushDelta(new Compare(this.array, this.index, other.array, other.index));\r\n        const v = this.value - other.value;\r\n        return v === 0 ? 0 : v < 0 ? -1 : 1;\r\n    }\r\n}","import IDelta from './IDelta';\r\nimport EComplexity from './EComplexity';\r\nimport SortArray from '../SortArray';\r\nimport SortState from '../SortState';\r\n\r\nexport class CreateSubArray implements IDelta {\r\n    complexity: EComplexity;\r\n    type = 'createSubArray';\r\n    constructor(public array: SortArray, public startingSize: number, public offset: number) {\r\n        this.complexity = EComplexity.Get;\r\n    }\r\n    apply(state: SortState): void {\r\n        this.array.internalFill(new Array(this.startingSize));\r\n        state.internalCreateArray(this.array);\r\n    }\r\n    rollback(state: SortState): void {\r\n        state.internalRemoveArray(this.array);\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class DeleteSubArray implements IDelta {\r\n    complexity: EComplexity;\r\n    type = 'deleteSubArray';\r\n    constructor(public array: SortArray, private endingData: number[]) {\r\n        this.complexity = EComplexity.Get;\r\n    }\r\n    apply(state: SortState): void {\r\n        state.internalRemoveArray(this.array);\r\n    }\r\n    rollback(state: SortState): void {\r\n        this.array.internalFill(this.endingData);\r\n        state.internalCreateArray(this.array);\r\n    }\r\n}","import SortState from './SortState';\r\nimport Record from './Record';\r\nimport { DeleteSubArray } from './delta/SubArray';\r\nimport { Get, Swap, Copy as Copy } from './delta/SimpleOperations';\r\n\r\nexport default class SortArray {\r\n    private data: Record[];\r\n    constructor(private state: SortState, public arrayId: number, public offset: number, data: number[]) {\r\n        this.data = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            this.data.push(new Record(state, this, data[i], i));\r\n        }\r\n    }\r\n\r\n    public length () {\r\n        return this.data.length;\r\n    }\r\n\r\n    public get(index: number): Record {\r\n        // Don't record get accesses, it'll just clog everything up\r\n        // this.state.deltas.push(new Get(this.arrayId, index));\r\n        return this.data[index];\r\n    }\r\n\r\n    public swap(i1: number, i2: number) {\r\n        this.state.pushDelta(new Swap(this, i1, this, i2));\r\n        const tmp = this.data[i1].value;\r\n        this.data[i1].value = this.data[i2].value;\r\n        this.data[i2].value = tmp;\r\n    }\r\n\r\n    public set(index: number, r: Record) {\r\n        this.state.pushDelta(new Copy(r.array, r.index, this, index, this.data[index].value));\r\n        this.data[index].value = r.value;\r\n    }\r\n\r\n    public getDeleteDelta() {\r\n        return new DeleteSubArray(this, this.data.map(d => d.value));\r\n    }\r\n\r\n    public internalSet(index: number, value: number) {\r\n        this.data[index].value = value;\r\n    }\r\n\r\n    public internalSwap(i1: number, i2: number) {\r\n        const tmp = this.data[i1].value;\r\n        this.data[i1].value = this.data[i2].value;\r\n        this.data[i2].value = tmp;\r\n    }\r\n\r\n    public internalGet(index: number): Record {\r\n        return this.data[index];\r\n    }\r\n\r\n    public internalFill (data: number[]) {\r\n        this.data = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            this.data.push(new Record(this.state, this, data[i], i));\r\n        }\r\n    }\r\n}","import IDelta from './delta/IDelta';\r\nimport SortArray from './SortArray';\r\nimport { CreateSubArray, DeleteSubArray } from './delta/SubArray';\r\nimport EComplexity from './delta/EComplexity';\r\n\r\nexport default class SortState {\r\n    private deltas: IDelta [];\r\n    public arrays: SortArray [];\r\n    private nextArrayId: number;\r\n    public currentDeltaIndex: number;\r\n    public maxValue: number;\r\n    private initialValue: number[];\r\n    private nextDecoratorId: number;\r\n    private requiresMemoryAllocation: boolean;\r\n    public allArrayInfo: {arrId: number, offset: number, length: number}[];\r\n\r\n    constructor(data: number[]) {\r\n        this.initialValue = data;\r\n        this.deltas = [];\r\n        this.arrays = [\r\n            new SortArray(this, 0, 0, data)\r\n        ];\r\n        this.maxValue = 0;\r\n        for (const d of data) {\r\n            if (d > this.maxValue) this.maxValue = d;\r\n        }\r\n        this.nextArrayId = 1;\r\n        this.currentDeltaIndex = 0;\r\n        this.nextDecoratorId = 0;\r\n        this.requiresMemoryAllocation = false;\r\n        this.allArrayInfo = [{\r\n            arrId: 0,\r\n            offset: 0,\r\n            length: data.length\r\n        }];\r\n    }\r\n\r\n    pushDelta(delta: IDelta) {\r\n        this.deltas.push(delta);\r\n        this.currentDeltaIndex ++;\r\n    }\r\n\r\n    totalDeltas(): number {\r\n        return this.deltas.length;\r\n    }\r\n\r\n    deltaIndex(): number {\r\n        return this.currentDeltaIndex;\r\n    }\r\n\r\n    remainingStepsFwd(): number {\r\n        return this.deltas.length - this.currentDeltaIndex;\r\n    }\r\n\r\n    remainingStepsBack(): number {\r\n        return this.currentDeltaIndex;\r\n    }\r\n\r\n    seekTo(tgt: number) {\r\n        const deltaHere = Math.abs(tgt - this.currentDeltaIndex);\r\n        const deltaStart = tgt;\r\n        const deltaEnd = this.deltas.length - tgt;\r\n\r\n        if (deltaStart <= deltaEnd && deltaStart <= deltaHere) {\r\n            // Skip to start, seek from there\r\n            this.arrays = [\r\n                this.arrays[0]\r\n            ];\r\n            this.arrays[0].internalFill(this.initialValue);\r\n            this.currentDeltaIndex = 0;\r\n        }\r\n        else if (deltaEnd <= deltaStart && deltaEnd <= deltaHere) {\r\n            // Skip to end, seek from there\r\n            // (Can't currently seek to end - save the terminal state?)\r\n        }\r\n\r\n        this.seekToInternal(tgt);\r\n    }\r\n\r\n    private seekToInternal(tgt: number) {\r\n        while (tgt > this.currentDeltaIndex) this.apply();\r\n        while (tgt < this.currentDeltaIndex) this.rollback();\r\n    }\r\n\r\n    apply(): IDelta|undefined {\r\n        if (this.currentDeltaIndex === this.deltas.length) return undefined;\r\n        this.deltas[this.currentDeltaIndex].apply(this);\r\n        return this.deltas[this.currentDeltaIndex++];\r\n    }\r\n\r\n    applyUntil(maxSteps: number, complexity: EComplexity): IDelta[] {\r\n        const result: IDelta[] = [];\r\n        for (let step = 0; maxSteps === -1 || step < maxSteps; step++) {\r\n            const stepResult = this.apply();\r\n            if (stepResult === undefined) return result;\r\n            result.push(stepResult);\r\n            if (stepResult.complexity >= complexity)  return result;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    rollback(): IDelta|undefined {\r\n        if (this.currentDeltaIndex === 0) return undefined;\r\n        this.deltas[--this.currentDeltaIndex].rollback(this);\r\n        return this.deltas[this.currentDeltaIndex];\r\n    }\r\n\r\n    rollbackUntil(maxSteps: number, complexity: EComplexity): IDelta[] {\r\n        const result: IDelta[] = [];\r\n        for (let step = 0; maxSteps === -1 || step < maxSteps; step++) {\r\n            const stepResult = this.rollback();\r\n            if (stepResult === undefined) return result;\r\n            result.push(stepResult);\r\n            if (stepResult.complexity >= complexity)  return result;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getArray(index: number): SortArray {\r\n        return this.arrays[index];\r\n    }\r\n\r\n    createArray(length?: number, offset?: number): SortArray {\r\n        this.requiresMemoryAllocation = true;\r\n        this.allArrayInfo.push({arrId: this.nextArrayId, offset: offset === undefined ? 0 : offset, length: length === undefined ? 0 : length});\r\n        const newArr = new SortArray(this, this.nextArrayId++, offset === undefined ? 0 : offset, new Array(length === undefined ? 0 : length));\r\n        this.arrays.push(newArr);\r\n        this.deltas.push(new CreateSubArray(newArr, length, offset));\r\n        return newArr;\r\n    }\r\n\r\n    deleteArray(arr: SortArray) {\r\n        this.deltas.push(arr.getDeleteDelta());\r\n        this.internalRemoveArray(arr);\r\n    }\r\n\r\n    internalCreateArray(arr: SortArray) {\r\n        this.arrays.push(arr);\r\n    }\r\n\r\n    internalRemoveArray(arr: SortArray) {\r\n        for (let i = 0; i < this.arrays.length; i++) {\r\n            if (this.arrays[i] === arr) {\r\n                this.arrays.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    doesRequireMemory(): boolean {\r\n        return this.requiresMemoryAllocation;\r\n    }\r\n}","import IPaint from './IPaint';\r\nimport SortState from '../SortState';\r\nimport IDelta from '../delta/IDelta';\r\nimport EComplexity from '../delta/EComplexity';\r\nimport { Compare, Swap, Copy } from '../delta/SimpleOperations';\r\nimport SortArray from '../SortArray';\r\n\r\ntype GetCoordFunc = (index: number, value: number) => { x: number, y: number, height: number };\r\n\r\nfunction generateCoordFunc(state: SortState, arrLen: number, wx: number, wy: number, ww: number, wh: number): GetCoordFunc {\r\n    const widthPer = ww / arrLen;\r\n    const heightPer = wh / state.maxValue;\r\n    return (index: number, value: number) => {\r\n        const x = wx + Math.floor(widthPer * index);\r\n        const height = Math.floor(heightPer * value);\r\n        const y = wy + wh - height;\r\n        return { x, y, height};\r\n    };\r\n}\r\n\r\nexport default class BarDisplay implements IPaint {\r\n    public name = 'Bar';\r\n\r\n    repaintArr(state: SortState, arr: SortArray, wx: number, wy: number, ww: number, wh: number, ctx: CanvasRenderingContext2D) {\r\n        const widthPer = ww / arr.length();\r\n        const dx = Math.max(Math.floor(widthPer), 1);\r\n\r\n        const coordsFrom = generateCoordFunc(state, arr.length(), wx, wy, ww, wh);\r\n\r\n        ctx.fillStyle = '#333';\r\n        for (let i = 0; i < arr.length(); i++) {\r\n            const { x, y, height } = coordsFrom(i, arr.internalGet(i).value);\r\n            ctx.fillRect(x, y, dx, height);\r\n        }\r\n\r\n        ctx.fillStyle = 'white';\r\n        for (let i = 0; i < arr.length(); i++) {\r\n            const { x, y, height } = coordsFrom(i, arr.internalGet(i).value);\r\n            ctx.fillRect(x, wh + wy - height - dx, dx, dx);\r\n        }\r\n    }\r\n\r\n    repaint(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, state: SortState, deltas: IDelta[]): void {\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        const mainArr = state.getArray(0);\r\n        const widthPer = canvas.width / mainArr.length();\r\n        const PERC_WINDOW_FOR_SUBARR = 0.2;\r\n\r\n        const coordFuncsByArrayIndex: GetCoordFunc[] = [];\r\n        const arrWindows: { wx: number, wy: number, ww: number, wh: number }[] = [];\r\n\r\n        const mainWindow = {\r\n            wx: 0,\r\n            wy: 0,\r\n            ww: canvas.width,\r\n            wh: state.doesRequireMemory() ? Math.floor(canvas.height * (1 - PERC_WINDOW_FOR_SUBARR)) : canvas.height\r\n        };\r\n\r\n        for (const arr of state.allArrayInfo) {\r\n            const window = arr.arrId === 0 ? mainWindow : {\r\n                wx: Math.floor(arr.offset * widthPer),\r\n                wy: Math.floor(canvas.height - (canvas.height * PERC_WINDOW_FOR_SUBARR)),\r\n                ww: Math.floor(arr.length * widthPer),\r\n                wh: Math.floor(canvas.height * PERC_WINDOW_FOR_SUBARR)\r\n            };\r\n            arrWindows[arr.arrId] = window;\r\n            coordFuncsByArrayIndex[arr.arrId] = generateCoordFunc(state, arr.length, window.wx, window.wy, window.ww, window.wh);\r\n        }\r\n\r\n\r\n        this.repaintArr(state, mainArr, mainWindow.wx, mainWindow.wy, mainWindow.ww, mainWindow.wh, ctx);\r\n        for (let i = 1; i < state.arrays.length; i++) {\r\n            const window = arrWindows[state.arrays[i].arrayId];\r\n            this.repaintArr(state, state.arrays[i], window.wx, window.wy, window.ww, window.wh, ctx);\r\n        }\r\n\r\n        const bezierYAdj = Math.floor(canvas.height / 20);\r\n\r\n        function coordsFrom(arrid: number, index: number, value: number) {\r\n            return coordFuncsByArrayIndex[arrid](index, value);\r\n        }\r\n\r\n        ctx.strokeStyle = '#D00';\r\n        ctx.lineWidth = 1;\r\n        for (const delta of deltas.filter(d => d.type === 'compare')) {\r\n            const d = delta as Compare;\r\n            ctx.beginPath();\r\n\r\n            const { x, y } = coordsFrom(d.array1.arrayId, d.index1, d.array1.get(d.index1).value);\r\n            const { x: x2, y: y2 } = coordsFrom(d.array2.arrayId, d.index2, d.array2.get(d.index2).value);\r\n            const bezierY = Math.min(y, y2) - bezierYAdj;\r\n\r\n            ctx.moveTo(x, y);\r\n            ctx.bezierCurveTo(x, bezierY, x2, bezierY, x2, y2);\r\n            // ctx.lineTo(x2, y2);\r\n            ctx.stroke();\r\n        }\r\n\r\n        ctx.strokeStyle = '#F80';\r\n        ctx.lineWidth = 1;\r\n        const crossSize = 5;\r\n        for (const delta of deltas.filter(d => d.type === 'copy')) {\r\n            const d = delta as Copy;\r\n            ctx.beginPath();\r\n\r\n            const { x, y } = coordsFrom(d.srcArray.arrayId, d.srcIndex, d.srcArray.get(d.srcIndex).value);\r\n            const { x: x2, y: y2 } = coordsFrom(d.tgtArray.arrayId, d.tgtIndex, d.tgtArray.get(d.tgtIndex).value);\r\n\r\n            ctx.moveTo(x - crossSize, y - crossSize);\r\n            ctx.lineTo(x + crossSize, y + crossSize);\r\n            ctx.moveTo(x + crossSize, y - crossSize);\r\n            ctx.lineTo(x - crossSize, y + crossSize);\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x2, y2);\r\n            ctx.stroke();\r\n        }\r\n\r\n        ctx.strokeStyle = '#0f0';\r\n        ctx.lineWidth = 2;\r\n        for (const delta of deltas.filter(d => d.type === 'swap')) {\r\n            const d = delta as Swap;\r\n            ctx.beginPath();\r\n\r\n            const { x, y } = coordsFrom(d.srcArray.arrayId, d.srcIndex, d.srcArray.get(d.srcIndex).value);\r\n            const { x: x2, y: y2 } = coordsFrom(d.tgtArray.arrayId, d.tgtIndex, d.tgtArray.get(d.tgtIndex).value);\r\n            const bezierY = Math.min(y, y2) - bezierYAdj;\r\n\r\n            ctx.moveTo(x, y);\r\n            ctx.bezierCurveTo(x, bezierY, x2, bezierY, x2, y2);\r\n            // ctx.lineTo(x2, y2);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}","import * as React from 'react';\r\nimport Dropdown from 'react-dropdown';\r\nimport SortState from '../../../projects/sortVis/SortState';\r\nimport { ResizeCanvas } from '../../../projects/common/CanvasHelpers';\r\nimport IDelta from '../../../projects/sortVis/delta/IDelta';\r\nimport BarDisplay from '../../../projects/sortVis/paints/BarDisplay';\r\nimport useUpdateState from '../../../hooks/useUpdateState';\r\nimport { first } from '../../../LinqLike';\r\nimport IPaint from '../../../projects/sortVis/paints/IPaint';\r\nimport EComplexity from '../../../projects/sortVis/delta/EComplexity';\r\nimport useAutoplayHook from './useAutoplay';\r\nimport RadialDisplay from '../../../projects/sortVis/paints/RadialDisplay';\r\n\r\nconst allPainters: IPaint[] = [\r\n    new BarDisplay(),\r\n    new RadialDisplay()\r\n];\r\n\r\nconst MaxUpdatesPerTick = 75;\r\n\r\nconst CVS_WIDTH = 1024;\r\nconst CVS_HEIGHT = 800;\r\n\r\nlet canvas: HTMLCanvasElement;\r\nlet ctx: CanvasRenderingContext2D;\r\n\r\n\r\nexport default function SortVisPlaybackComponent(props: { state: SortState }) {\r\n    const [deltaIndex, setDeltaIndex] = React.useState(props.state.deltaIndex());\r\n    const [painter, setCurrentPainter] = useUpdateState<IPaint>(allPainters[0], (nv) => repaint(props.state, [], nv));\r\n    const [autoplaying, setAutoplaying] = React.useState(false);\r\n    const [currentSpeed, setCurrentSpeed] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        const cvs = document.getElementById('canvas') as HTMLCanvasElement;\r\n        ResizeCanvas(cvs, CVS_WIDTH, CVS_HEIGHT);\r\n        canvas = cvs;\r\n        ctx = cvs.getContext('2d');\r\n        repaint(props.state, [], painter);\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        repaint(props.state, [], painter);\r\n    }, [ props.state ]);\r\n\r\n    // Autoplay effect\r\n    useAutoplayHook(() => {\r\n        if (currentSpeed <= 0.25) {\r\n            const deltas = props.state.applyUntil(10, EComplexity.Compare);\r\n            updateDeltaIndex();\r\n            repaint(props.state, deltas, painter);\r\n        }\r\n        else {\r\n            const speedPerc = (currentSpeed - 0.25) * (1 / .75);\r\n            const numTicks = Math.floor(speedPerc * MaxUpdatesPerTick);\r\n            const allDeltas = [];\r\n            for (let i = 0; i < numTicks; i++) {\r\n                allDeltas.push(...props.state.applyUntil(-1, EComplexity.Compare));\r\n            }\r\n            updateDeltaIndex();\r\n            repaint(props.state, allDeltas, painter);\r\n        }\r\n        if (props.state.remainingStepsFwd() === 0) setAutoplaying(false);\r\n    }, autoplaying, currentSpeed);\r\n\r\n    function updateDeltaIndex() {\r\n        setDeltaIndex(props.state.deltaIndex());\r\n    }\r\n\r\n    function repaint(state: SortState, deltas: IDelta[], p: IPaint) {\r\n        // Not ready to paint yet, do nothing\r\n        if (canvas === undefined || ctx === undefined || p === undefined) return;\r\n        p.repaint(canvas, ctx, state, deltas);\r\n    }\r\n\r\n    return <div className='flex row'>\r\n        <canvas id='canvas'></canvas>\r\n        <div className='flex col'>\r\n            <div className='flex row'>\r\n                <span>Display:</span>\r\n                <Dropdown\r\n                    options={allPainters.map(algo => algo.name)}\r\n                    value={painter.name}\r\n                    onChange={ch => setCurrentPainter(first(allPainters, algo => algo.name === ch.value))} />\r\n            </div>\r\n            <input type='range' min={0} max={props.state.totalDeltas()} value={deltaIndex} onChange={ev => {\r\n                props.state.seekTo(ev.target.valueAsNumber);\r\n                updateDeltaIndex();\r\n                repaint(props.state, [], painter);\r\n            }} />\r\n            <span>Step {deltaIndex} / {props.state.totalDeltas()}</span>\r\n            <div className='flex row'>\r\n                <button onClick={() => { props.state.seekTo(0); updateDeltaIndex(); repaint(props.state, [], painter); }}>&lt;&lt;&lt;</button>\r\n                <button onClick={() => { const deltas = props.state.rollbackUntil(-1, EComplexity.Set); updateDeltaIndex(); repaint(props.state, deltas, painter); }}>&lt;&lt;</button>\r\n                <button onClick={() => { const deltas = [props.state.rollback()]; updateDeltaIndex(); repaint(props.state, deltas, painter); }}>&lt;</button>\r\n                <button onClick={() => { const deltas = [props.state.apply()]; updateDeltaIndex(); repaint(props.state, deltas, painter); }}>&gt;</button>\r\n                <button onClick={() => { const deltas = props.state.applyUntil(-1, EComplexity.Set); updateDeltaIndex(); repaint(props.state, deltas, painter); }}>&gt;&gt;</button>\r\n                <button onClick={() => { props.state.seekTo(props.state.totalDeltas()); updateDeltaIndex(); repaint(props.state, [], painter); }}>&gt;&gt;&gt;</button>\r\n            </div>\r\n            <span>Autoplay:</span>\r\n            <div className='flex row'>\r\n                <span>Speed: </span>\r\n                <input type='range' min={0} max={1} step={0.01} value={currentSpeed} onChange={ev => setCurrentSpeed(ev.target.valueAsNumber)} />\r\n                <button onClick={() => setAutoplaying(!autoplaying)}>{autoplaying ? 'Pause' : 'Play'}</button>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n}","import IPaint from './IPaint';\r\nimport SortState from '../SortState';\r\nimport IDelta from '../delta/IDelta';\r\nimport EComplexity from '../delta/EComplexity';\r\nimport { Compare, Swap } from '../delta/SimpleOperations';\r\nimport { mkdirSync } from 'fs';\r\n\r\nexport default class RadialDisplay implements IPaint {\r\n    public name = 'Radial';\r\n\r\n    repaint(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, state: SortState, deltas: IDelta[]): void {\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        const midX = canvas.width / 2;\r\n        const midY = canvas.height / 2;\r\n\r\n        const arr = state.getArray(0);\r\n        const radiansPerX = 2 * Math.PI / arr.length();\r\n\r\n        function transformCoords(index: number, value: number) {\r\n            const angle = radiansPerX * index;\r\n            const radius = value / state.maxValue;\r\n            const x = Math.floor(midX + Math.cos(angle) * radius * midX);\r\n            const y = Math.floor(midY + Math.sin(angle) * radius * midY);\r\n            return { x, y };\r\n        }\r\n\r\n        ctx.fillStyle = '#333';\r\n        ctx.beginPath();\r\n        ctx.moveTo(midX, midY);\r\n        const coordsArr = [];\r\n        for (let i = 0; i < arr.length(); i++) {\r\n            const { x, y } = transformCoords(i, arr.internalGet(i).value);\r\n            ctx.lineTo(x, y);\r\n            coordsArr.push({x, y});\r\n        }\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n\r\n        ctx.fillStyle = 'white';\r\n        for (let i = 0; i < arr.length(); i++) {\r\n            const { x, y } = coordsArr[i];\r\n            ctx.fillRect(x, y, 1, 1);\r\n        }\r\n\r\n        ctx.strokeStyle = '#D00';\r\n        ctx.lineWidth = 1;\r\n        for (const delta of deltas.filter(d => d.type === 'compare')) {\r\n            const d = delta as Compare;\r\n            ctx.beginPath();\r\n\r\n            const { x, y } = transformCoords(d.index1, d.array1.get(d.index1).value);\r\n            const { x: x2, y: y2 } = transformCoords(d.index2, d.array2.get(d.index2).value);\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x2, y2);\r\n            ctx.stroke();\r\n        }\r\n\r\n        ctx.strokeStyle = '#0f0';\r\n        ctx.lineWidth = 2;\r\n        for (const delta of deltas.filter(d => d.type === 'swap')) {\r\n            const d = delta as Swap;\r\n            ctx.beginPath();\r\n\r\n            const { x, y } = transformCoords(d.srcIndex, d.srcArray.get(d.srcIndex).value);\r\n            const { x: x2, y: y2 } = transformCoords(d.tgtIndex, d.tgtArray.get(d.tgtIndex).value);\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x2, y2);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}","import useInterval from '../../../hooks/useInterval';\r\nimport useAnimationFrame from '../../../hooks/useAnimationFrame';\r\nimport { useEffect, useRef } from 'react';\r\n\r\nconst MAX_DELAY_TIME = 1000;\r\nconst MIN_DELAY_BEFORE_FRAMES = 60;\r\n\r\nexport default function useAutoplayHook(callback: () => void, enable: boolean, speed: number) {\r\n    const savedCallback = useRef(() => { return; });\r\n    const waitId = useRef<number | NodeJS.Timeout>(0);\r\n    const waitIdIsAnimationFrame = useRef(false);\r\n\r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the repeater.\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n            triggerTick();\r\n        }\r\n\r\n        function triggerTick() {\r\n            if (speed <= 0.25) {\r\n                const frameRange = MAX_DELAY_TIME - MIN_DELAY_BEFORE_FRAMES;\r\n                const sleepPercent = 1 - (speed * 4);\r\n                const sleepTime = Math.floor(frameRange * sleepPercent) + MIN_DELAY_BEFORE_FRAMES;\r\n                waitId.current = setTimeout(tick, sleepTime);\r\n                waitIdIsAnimationFrame.current = false;\r\n            }\r\n            else  {\r\n                waitId.current = requestAnimationFrame(tick);\r\n                waitIdIsAnimationFrame.current = true;\r\n            }\r\n        }\r\n\r\n        if (enable) triggerTick();\r\n        return () => {\r\n            if  (waitIdIsAnimationFrame.current) {\r\n                cancelAnimationFrame(waitId.current as number);\r\n            } else {\r\n                clearTimeout(waitId.current as NodeJS.Timeout);\r\n            }\r\n        };\r\n    }, [enable, speed]);\r\n}","import ISort from './ISort';\r\nimport SelectionSort from './selectionSort';\r\nimport CycleSort from './CycleSort';\r\nimport HeapSort from './heapSort';\r\nimport QuickSort from './quickSort';\r\nimport QuickDualPivot from './quickDualPivot';\r\nimport MergeSort from './mergeSort';\r\n\r\nconst allSortingAlgorithms: ISort[] = [\r\n    new SelectionSort(),\r\n    new CycleSort(),\r\n    new HeapSort(),\r\n    new QuickSort(),\r\n    new QuickDualPivot(),\r\n    new MergeSort()\r\n];\r\n\r\nexport default allSortingAlgorithms;","import ISort from './ISort';\r\nimport SortState from '../SortState';\r\nimport SortArray from '../SortArray';\r\n\r\nexport default class SelectionSort implements ISort {\r\n    public name = 'SelectionSort';\r\n\r\n    sort(state: SortState, arr: SortArray): void {\r\n        for (let tgtIndex = 0; tgtIndex < arr.length(); tgtIndex++) {\r\n            let minV = arr.get(tgtIndex);\r\n            let minI = tgtIndex;\r\n            for (let swpIndex = tgtIndex + 1; swpIndex < arr.length(); swpIndex++) {\r\n                const v = arr.get(swpIndex);\r\n                if (v.compare(minV) < 0) {\r\n                    minV = v;\r\n                    minI = swpIndex;\r\n                }\r\n            }\r\n            if (minI !== tgtIndex) {\r\n                arr.swap(tgtIndex, minI);\r\n            }\r\n        }\r\n    }\r\n}","import ISort from './ISort';\r\nimport SortState from '../SortState';\r\nimport SortArray from '../SortArray';\r\n\r\nexport default class CycleSort implements ISort {\r\n    public name = 'CycleSort';\r\n\r\n    sort(state: SortState, arr: SortArray): void {\r\n        const isInFinalPosition = new Array(arr.length());\r\n        for (let i = 0; i < isInFinalPosition.length; i++) {\r\n            isInFinalPosition[i] = false;\r\n        }\r\n        for (let tgtIndex = 0; tgtIndex < arr.length() - 1;) {\r\n            if (isInFinalPosition[tgtIndex]) {\r\n                tgtIndex++;\r\n                continue;\r\n            }\r\n            const item = arr.get(tgtIndex);\r\n            let index = tgtIndex;\r\n            for (let swapIndex = tgtIndex + 1; swapIndex < arr.length(); swapIndex++) {\r\n                if (arr.get(swapIndex).compare(item) <= 0) index ++;\r\n            }\r\n\r\n            while (arr.get(index).compare(item) === 0 && index > tgtIndex) index--;\r\n\r\n            if (index === tgtIndex) tgtIndex++;\r\n            else {\r\n                arr.swap(tgtIndex, index);\r\n                isInFinalPosition[index] = true;\r\n            }\r\n        }\r\n    }\r\n}","import ISort from './ISort';\r\nimport SortState from '../SortState';\r\nimport SortArray from '../SortArray';\r\n\r\nexport default class HeapSort implements ISort {\r\n    public name = 'HeapSort';\r\n\r\n    sort(state: SortState, arr: SortArray): void {\r\n        for (let i = 0; i < arr.length(); i++) {\r\n            this.upHeap(arr, i);\r\n        }\r\n\r\n        for (let i = arr.length() - 1; i > 0; i--) {\r\n            arr.swap(0, i);\r\n            this.downHeap(arr, i);\r\n        }\r\n    }\r\n\r\n    upHeap(arr: SortArray, index: number) {\r\n        while (index > 0) {\r\n            const val = arr.get(index);\r\n            const parentIndex = this.parentIndex(index);\r\n            const pval = arr.get(parentIndex);\r\n            if (val.compare(pval) > 0) {\r\n                arr.swap(index, parentIndex);\r\n                index = parentIndex;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    downHeap(arr: SortArray, length: number) {\r\n        let idx = 0;\r\n        while (idx < length) {\r\n            const cidx = this.childIndex(idx);\r\n            // no children in range - done!\r\n            if (cidx >= length) return;\r\n            // Find my max child index\r\n            let maxChildIdx = cidx;\r\n            if (cidx + 1 < length) {\r\n                if (arr.get(maxChildIdx).compare(arr.get(maxChildIdx + 1)) <= 0) {\r\n                    maxChildIdx++;\r\n                }\r\n            }\r\n\r\n            if (arr.get(idx).compare(arr.get(maxChildIdx)) < 0) {\r\n                // I'm smaller - swap down and continue\r\n                arr.swap(idx, maxChildIdx);\r\n                idx = maxChildIdx;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    parentIndex(index: number) {\r\n        return Math.floor((index - 1) / 2);\r\n    }\r\n\r\n    childIndex(index: number) {\r\n        return index * 2 + 1;\r\n    }\r\n}","import ISort from './ISort';\r\nimport SortState from '../SortState';\r\nimport SortArray from '../SortArray';\r\n\r\nexport default class QuickSort implements ISort {\r\n    public name = 'Quicksort';\r\n\r\n    sort(state: SortState, arr: SortArray): void {\r\n        this.recurse(arr, 0, arr.length());\r\n    }\r\n\r\n    recurse(arr: SortArray, min: number, max: number) {\r\n        if (max - min <= 1) return;\r\n\r\n        // Use a random-element pivot\r\n        const pivLocation = Math.floor(min + Math.random() * (max - min));\r\n        arr.swap(min, pivLocation);\r\n\r\n        const pivot = arr.get(min);\r\n        let lp = min + 1;\r\n        let rp = max - 1;\r\n        while (lp <= rp) {\r\n            if (arr.get(lp).compare(pivot) < 0) {\r\n                lp++;\r\n            } else {\r\n                arr.swap(lp, rp--);\r\n            }\r\n        }\r\n        arr.swap(min, rp);\r\n        this.recurse(arr, min, rp);\r\n        this.recurse(arr, rp + 1, max);\r\n    }\r\n}","import ISort from './ISort';\r\nimport SortState from '../SortState';\r\nimport SortArray from '../SortArray';\r\n\r\nexport default class QuickDualPivot implements ISort {\r\n    public name = 'QuickDualPivot';\r\n\r\n    sort(state: SortState, arr: SortArray): void {\r\n        this.recurse(arr, 0, arr.length());\r\n    }\r\n\r\n    recurse(arr: SortArray, min: number, max: number) {\r\n        if (max - min <= 1) return;\r\n\r\n        // Use a random-element pivot\r\n        const pivLocation = Math.floor(min + Math.random() * (max - min));\r\n        arr.swap(min, pivLocation);\r\n\r\n        const pivot = arr.get(min);\r\n        let lp = min + 1;\r\n        let mp = min + 1;\r\n        let rp = max - 1;\r\n        while (mp <= rp) {\r\n            switch (arr.get(mp).compare(pivot)) {\r\n                case 0:\r\n                    mp++;\r\n                    break;\r\n                case -1:\r\n                    arr.swap(lp++, mp++);\r\n                    break;\r\n                case 1:\r\n                    arr.swap(mp, rp--);\r\n                    break;\r\n            }\r\n        }\r\n        arr.swap(min, rp);\r\n        this.recurse(arr, min, lp);\r\n        this.recurse(arr, mp, max);\r\n    }\r\n}","import ISort from './ISort';\r\nimport SortState from '../SortState';\r\nimport SortArray from '../SortArray';\r\n\r\nexport default class MergeSort implements ISort {\r\n    public name = 'MergeSort';\r\n\r\n    sort(state: SortState, arr: SortArray): void {\r\n        this.recurse(state, arr, 0, arr.length());\r\n    }\r\n\r\n    recurse(state: SortState, arr: SortArray, min: number, max: number) {\r\n        if (max - min <= 1) return;\r\n\r\n        // Use the ceiling, so that the left-side is always larger or equal.\r\n        // Then we only need to allocate for the left-side\r\n        const midp = min + Math.ceil((max - min) / 2);\r\n        this.recurse(state, arr, min, midp);\r\n        this.recurse(state, arr, midp, max);\r\n\r\n        const sortedArr = state.createArray(max - min, min);\r\n        let lp = min;\r\n        let rp = midp;\r\n        let tp = 0;\r\n        while (lp < midp && rp < max) {\r\n            if (arr.get(lp).compare(arr.get(rp)) <= 0) {\r\n                sortedArr.set(tp, arr.get(lp));\r\n                lp++;\r\n                tp++;\r\n            } else {\r\n                sortedArr.set(tp, arr.get(rp));\r\n                rp++;\r\n                tp++;\r\n            }\r\n        }\r\n        while (lp < midp) {\r\n            sortedArr.set(tp, arr.get(lp));\r\n            lp++;\r\n            tp++;\r\n        }\r\n        while (rp < max) {\r\n            sortedArr.set(tp, arr.get(rp));\r\n            rp++;\r\n            tp++;\r\n        }\r\n\r\n        // Copy sorted array back over this array\r\n        for (let i = 0; i < max - min; i++) {\r\n            arr.set(i + min, sortedArr.get(i));\r\n        }\r\n\r\n        state.deleteArray(sortedArr);\r\n    }\r\n}","import RandomData from './randomData';\r\nimport IDataGenerator from './IDataGenerator';\r\nimport ReverseSorted from './reverseSorted';\r\nimport NearSorted from './nearSorted';\r\nimport SinData from './sinData';\r\n\r\nconst allDataGenerators: IDataGenerator[] = [\r\n    new RandomData(),\r\n    new ReverseSorted(),\r\n    new NearSorted(),\r\n    new SinData()\r\n];\r\n\r\nexport default allDataGenerators;","import IDataGenerator from './IDataGenerator';\r\n\r\nexport default class RandomData implements IDataGenerator {\r\n    name = 'Random';\r\n    generate(index: number, totalLength: number): number {\r\n        return Math.random();\r\n    }\r\n}","import IDataGenerator from './IDataGenerator';\r\n\r\nexport default class ReverseSorted implements IDataGenerator {\r\n    name = 'Reversed';\r\n    generate(index: number, totalLength: number): number {\r\n        return 1 - (index / totalLength);\r\n    }\r\n}","import IDataGenerator from './IDataGenerator';\r\n\r\nexport default class NearSorted implements IDataGenerator {\r\n    name = 'Near Sorted';\r\n    generate(index: number, totalLength: number): number {\r\n        let effectiveIndex = Math.floor(index + (Math.random() * (totalLength / 100) - (totalLength / 50)));\r\n        if (effectiveIndex < 0) effectiveIndex = 0;\r\n        if (effectiveIndex > totalLength) effectiveIndex = totalLength;\r\n        return effectiveIndex / totalLength;\r\n    }\r\n}","import IDataGenerator from './IDataGenerator';\r\n\r\nexport default class SinData implements IDataGenerator {\r\n    name = 'Sinusoidal';\r\n    generate(index: number, totalLength: number): number {\r\n        const xp = index / totalLength;\r\n        return (Math.sin(xp * 2 * Math.PI) / 2) + 0.5;\r\n    }\r\n}","import * as React from 'react';\r\nimport Dropdown from 'react-dropdown';\r\nimport ISort from '../../../projects/sortVis/sorts/ISort';\r\nimport SortState from '../../../projects/sortVis/SortState';\r\nimport { first } from '../../../LinqLike';\r\nimport SortVisPlaybackComponent from './SortVisPlaybackComponent';\r\nimport IDataGenerator from '../../../projects/sortVis/dataGenerator/IDataGenerator';\r\nimport allSortingAlgorithms from '../../../projects/sortVis/sorts';\r\nimport allDataGenerators from '../../../projects/sortVis/dataGenerator';\r\n\r\nexport default function SortVisComponent() {\r\n    const [arrLen, setArrLen] = React.useState(1024);\r\n    const [arrMax, setArrMax] = React.useState(1000);\r\n    const [currentAlgo, setCurrentAlgo] = React.useState<ISort | undefined>(undefined);\r\n    const [runningSortState, setSortState] = React.useState<SortState | undefined>(undefined);\r\n    const [currentDataGen, setDataGen] = React.useState<IDataGenerator>(allDataGenerators[0]);\r\n\r\n    function runState() {\r\n        const initialValues = new Array(arrLen);\r\n        for (let i = 0; i < initialValues.length; i++) {\r\n            initialValues[i] = Math.floor(currentDataGen.generate(i, initialValues.length) * arrMax);\r\n        }\r\n        const sortState = new SortState(initialValues);\r\n        currentAlgo.sort(sortState, sortState.getArray(0));\r\n        sortState.seekTo(0);\r\n        setSortState(sortState);\r\n    }\r\n\r\n    return <div>\r\n        <div className='flex col align-center'>\r\n            <div className='flex col align-stretch'>\r\n                <div className='flex row justify-space-between'>\r\n                    <span>Array Length:</span>\r\n                    <input type='number' value={arrLen} onChange={ch => setArrLen(ch.target.valueAsNumber)} />\r\n                </div>\r\n                <div className='flex row justify-space-between'>\r\n                    <span>Array Max:</span>\r\n                    <input type='number' value={arrMax} onChange={ch => setArrMax(ch.target.valueAsNumber)} />\r\n                </div>\r\n                <div>\r\n                    <span>Data: </span>\r\n                    <Dropdown\r\n                        options={allDataGenerators.map(item => item.name)}\r\n                        value={currentDataGen.name}\r\n                        onChange={ch => setDataGen(first(allDataGenerators, algo => algo.name === ch.value))}\r\n                        />\r\n                </div>\r\n                <div>Algorithm: <Dropdown\r\n                    options={allSortingAlgorithms.map(algo => algo.name)}\r\n                    value={currentAlgo === undefined ? undefined : currentAlgo.name}\r\n                    onChange={ch => setCurrentAlgo(first(allSortingAlgorithms, algo => algo.name === ch.value))} /></div>\r\n                <button disabled={arrLen <= 0 || arrMax <= 0 || currentAlgo === undefined} onClick={runState}>Go!</button>\r\n            </div>\r\n        </div>\r\n        {runningSortState === undefined ? <></> : <>\r\n            <hr />\r\n            <SortVisPlaybackComponent state={runningSortState} />\r\n        </>}\r\n    </div>;\r\n}\r\n"],"sourceRoot":""}