{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///./src/projects/common/CanvasHelpers.ts","webpack:///./node_modules/prop-types/index.js","webpack:///./src/projects/common/position/Direction.ts","webpack:///./src/projects/common/position/Point.ts","webpack:///./src/projects/common/index.ts","webpack:///./src/projects/common/assets/AssetLoader.ts","webpack:///./src/projects/common/assets/SpriteSheet.ts","webpack:///./src/projects/spell-test/EArrow.ts","webpack:///./src/projects/rpgt/Constants.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/resolve-pathname/esm/resolve-pathname.js","webpack:///./node_modules/value-equal/esm/value-equal.js","webpack:///./node_modules/tiny-invariant/dist/tiny-invariant.esm.js","webpack:///./node_modules/history/esm/history.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///../modules/HistoryContext.js","webpack:///../modules/createNameContext.js","webpack:///../modules/RouterContext.js","webpack:///../modules/Router.js","webpack:///../modules/MemoryRouter.js","webpack:///../modules/Lifecycle.js","webpack:///../modules/Prompt.js","webpack:///../modules/generatePath.js","webpack:///../modules/Redirect.js","webpack:///../modules/matchPath.js","webpack:///../modules/Route.js","webpack:///../modules/StaticRouter.js","webpack:///../modules/Switch.js","webpack:///../modules/withRouter.js","webpack:///../modules/hooks.js","webpack:///../modules/BrowserRouter.js","webpack:///../modules/HashRouter.js","webpack:///../modules/utils/locationUtils.js","webpack:///../modules/Link.js","webpack:///../modules/NavLink.js","webpack:///./node_modules/mini-create-react-context/dist/esm/index.js","webpack:///./node_modules/path-to-regexp/index.js","webpack:///./node_modules/react-is/index.js","webpack:///./node_modules/axios-observable/dist/index.js","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/core/mergeConfig.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./src/views/projects/index.ts","webpack:///./src/projects/mandelbrot/Constants.ts","webpack:///./src/projects/common/Range.ts","webpack:///./src/projects/common-assets/arrows.png","webpack:///./src/projects/spell-test/spells/SpellGroup.ts","webpack:///./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/routerComponent.tsx","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/path-to-regexp/node_modules/isarray/index.js","webpack:///./node_modules/react-is/cjs/react-is.production.min.js","webpack:///./src/views/index.ts","webpack:///./src/views/home/home.tsx","webpack:///./src/components/index.ts","webpack:///./src/components/renderFromUrl/RenderFromUrlComponent.tsx","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/core/buildFullPath.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/axios-observable/dist/create-observable.js","webpack:///./src/components/renderFromUrl/CodeFromUrlComponent.tsx","webpack:///./src/views/projects/projects.tsx","webpack:///./src/views/projects/mandelbrot/MandelbrotComponent.tsx","webpack:///./src/projects/mandelbrot/main.ts","webpack:///./src/projects/mandelbrot/Renderer.ts","webpack:///./src/projects/common/Range2d.ts","webpack:///./src/projects/common/ColorRange.ts","webpack:///./src/projects/common/Complex.ts","webpack:///./src/projects/mandelbrot/ProgressiveRepaint.ts","webpack:///./src/projects/mandelbrot/iterativeFunctions/Mandelbrot.ts","webpack:///./src/projects/mandelbrot/iterativeFunctions/Julia.ts","webpack:///./src/projects/mandelbrot/ClickDragWrapper.ts","webpack:///./src/views/projects/tile-blend-test-1/TileBlendTest1Component.tsx","webpack:///./src/projects/tile-blend-test-1/index.ts","webpack:///./src/projects/common-assets/RockLavaAllBlends_crop.png","webpack:///./src/projects/common-assets/Selectors16x16.png","webpack:///./src/projects/tile-blend-test-1/Terrain.ts","webpack:///./src/views/projects/spell-test/SpellTestComponent.tsx","webpack:///./src/projects/spell-test/index.ts","webpack:///./src/projects/spell-test/spells/SpellStep.ts","webpack:///./src/views/projects/rpgt/RpgTest.tsx","webpack:///./src/projects/rpgt/index.ts","webpack:///./src/projects/common-assets/rpg1.png","webpack:///./src/projects/common-assets/wizard16.png","webpack:///./src/projects/common/NearestNeighborScalingHelper.ts","webpack:///./src/projects/rpgt/world/World.ts","webpack:///./src/projects/common/Iterate.ts","webpack:///./src/projects/rpgt/world/Cell.ts","webpack:///./src/projects/rpgt/SheetGraphic.ts","webpack:///./src/projects/common/position/Rectangle.ts","webpack:///./src/projects/common/input/KeyboardManager.ts","webpack:///./src/projects/common/input/KeyWatcher.ts","webpack:///./src/projects/common/input/KeyState.ts","webpack:///./src/page.tsx","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/rxjs/src/internal/util/isFunction.ts","webpack:///./node_modules/rxjs/src/internal/config.ts","webpack:///./node_modules/rxjs/src/internal/util/hostReportError.ts","webpack:///./node_modules/rxjs/src/internal/Observer.ts","webpack:///./node_modules/rxjs/src/internal/util/isObject.ts","webpack:///./node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","webpack:///./node_modules/rxjs/src/internal/Subscription.ts","webpack:///./node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/Subscriber.ts","webpack:///./node_modules/rxjs/src/internal/util/canReportError.ts","webpack:///./node_modules/rxjs/src/internal/util/identity.ts","webpack:///./node_modules/rxjs/src/internal/util/pipe.ts","webpack:///./node_modules/rxjs/src/internal/Observable.ts","webpack:///./node_modules/rxjs/src/internal/util/toSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","webpack:///./node_modules/rxjs/src/internal/SubjectSubscription.ts","webpack:///./node_modules/rxjs/src/internal/Subject.ts","webpack:///./node_modules/rxjs/src/internal/operators/refCount.ts","webpack:///./node_modules/rxjs/src/internal/observable/ConnectableObservable.ts","webpack:///./node_modules/rxjs/src/internal/operators/groupBy.ts","webpack:///./node_modules/rxjs/src/internal/BehaviorSubject.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/Action.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/QueueAction.ts","webpack:///./node_modules/rxjs/src/internal/Scheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts","webpack:///./node_modules/rxjs/src/internal/observable/empty.ts","webpack:///./node_modules/rxjs/src/internal/util/isScheduler.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToArray.ts","webpack:///./node_modules/rxjs/src/internal/Notification.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","webpack:///./node_modules/rxjs/src/internal/observable/fromArray.ts","webpack:///./node_modules/rxjs/src/internal/observable/of.ts","webpack:///./node_modules/rxjs/src/internal/observable/throwError.ts","webpack:///./node_modules/rxjs/src/internal/operators/observeOn.ts","webpack:///./node_modules/rxjs/src/internal/ReplaySubject.ts","webpack:///./node_modules/rxjs/src/internal/AsyncSubject.ts","webpack:///./node_modules/rxjs/src/internal/util/Immediate.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsapAction.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts","webpack:///./node_modules/rxjs/src/internal/util/isObservable.ts","webpack:///./node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","webpack:///./node_modules/rxjs/src/internal/util/EmptyError.ts","webpack:///./node_modules/rxjs/src/internal/util/TimeoutError.ts","webpack:///./node_modules/rxjs/src/internal/operators/map.ts","webpack:///./node_modules/rxjs/src/internal/observable/bindCallback.ts","webpack:///./node_modules/rxjs/src/internal/observable/bindNodeCallback.ts","webpack:///./node_modules/rxjs/src/internal/OuterSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/InnerSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/symbol/iterator.ts","webpack:///./node_modules/rxjs/src/internal/util/isPromise.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeTo.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToObservable.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToPromise.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToIterable.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToResult.ts","webpack:///./node_modules/rxjs/src/internal/observable/combineLatest.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduled.ts","webpack:///./node_modules/rxjs/src/internal/util/isInteropObservable.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","webpack:///./node_modules/rxjs/src/internal/util/isIterable.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","webpack:///./node_modules/rxjs/src/internal/observable/from.ts","webpack:///./node_modules/rxjs/src/internal/operators/mergeMap.ts","webpack:///./node_modules/rxjs/src/internal/operators/mergeAll.ts","webpack:///./node_modules/rxjs/src/internal/observable/concat.ts","webpack:///./node_modules/rxjs/src/internal/operators/concatAll.ts","webpack:///./node_modules/rxjs/src/internal/observable/defer.ts","webpack:///./node_modules/rxjs/src/internal/observable/forkJoin.ts","webpack:///./node_modules/rxjs/src/internal/observable/fromEvent.ts","webpack:///./node_modules/rxjs/src/internal/observable/fromEventPattern.ts","webpack:///./node_modules/rxjs/src/internal/observable/generate.ts","webpack:///./node_modules/rxjs/src/internal/observable/iif.ts","webpack:///./node_modules/rxjs/src/internal/util/isNumeric.ts","webpack:///./node_modules/rxjs/src/internal/observable/interval.ts","webpack:///./node_modules/rxjs/src/internal/observable/merge.ts","webpack:///./node_modules/rxjs/src/internal/observable/never.ts","webpack:///./node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts","webpack:///./node_modules/rxjs/src/internal/observable/pairs.ts","webpack:///./node_modules/rxjs/src/internal/util/not.ts","webpack:///./node_modules/rxjs/src/internal/operators/filter.ts","webpack:///./node_modules/rxjs/src/internal/observable/partition.ts","webpack:///./node_modules/rxjs/src/internal/observable/race.ts","webpack:///./node_modules/rxjs/src/internal/observable/range.ts","webpack:///./node_modules/rxjs/src/internal/observable/timer.ts","webpack:///./node_modules/rxjs/src/internal/observable/using.ts","webpack:///./node_modules/rxjs/src/internal/observable/zip.ts","webpack:///./node_modules/rxjs/src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","toString","isArray","val","isUndefined","isObject","isFunction","forEach","obj","fn","length","isArrayBuffer","isBuffer","constructor","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","arguments","deepMerge","extend","a","b","thisArg","trim","str","replace","_inheritsLoose","subClass","superClass","__proto__","__webpack_exports__","ResizeCanvas","canvas","tgtWidth","tgtHeight","width","height","style","NearestNeighborScaling","ctx","imageSmoothingEnabled","Point_1","__importDefault","Direction","directionValues","default","allDirections","Up","UpRight","Right","DownRight","Down","DownLeft","Left","UpLeft","cardinalDirections","diagonalDirections","ToPoint","direction","Point","[object Object]","x","y","this","Dot","Math","sqrt","LengthSq","p1","p2","other","nx","undefined","ny","Range_1","Range","Range2d_1","Range2d","ColorRange_1","ColorRange","Complex_1","Complex","waitingAssetCount","loadedAssetCount","boundCallback","act","SpriteSheet","spriteWidth","spriteHeight","spriteUrl","onload","image","createElement","src","addEventListener","loadFinished","tilesWide","tilesHigh","v","tx","ty","tw","th","srcx","srcy","sx","isTuple","sy","drawImage","twid","thei","EArrow","Matches","arr","pattern","Any","Stop","ERepeat","TILES_WIDE","TILES_HIGH","TILE_SIZE","_extends","assign","target","source","apply","isAbsolute","pathname","charAt","spliceOne","list","index","k","pop","resolve_pathname","to","from","hasTrailingSlash","toParts","split","fromParts","isToAbs","isFromAbs","mustEndAbs","concat","last","up","part","unshift","join","substr","value_equal_valueOf","valueOf","value_equal","valueEqual","Array","every","item","aValue","bValue","keys","isProduction","prefix","tiny_invariant_esm","condition","message","Error","addLeadingSlash","path","stripLeadingSlash","stripBasename","toLowerCase","indexOf","hasBasename","stripTrailingSlash","slice","createPath","location","search","hash","createLocation","state","currentLocation","hashIndex","searchIndex","parsePath","decodeURI","e","URIError","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","action","getUserConfirmation","callback","appendListener","isActive","listener","push","filter","notifyListeners","_len","args","_key","canUseDOM","getConfirmation","confirm","PopStateEvent","HashChangeEvent","getHistoryState","history","createBrowserHistory","props","ua","globalHistory","canUseHistory","userAgent","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_ref","_window$location","createKey","random","transitionManager","setState","nextState","handlePopState","event","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","ok","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","listenerCount","checkDOMListeners","removeEventListener","isBlocked","href","pushState","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","HashChangeEvent$1","HashPathCoders","hashbang","encodePath","decodePath","noslash","slash","stripHash","url","getHashPath","substring","replaceHashPath","createHashHistory","_props$hashType","hashType","_HashPathCoders$hashT","ignorePath","encodedPath","prevLocation","allPaths","lastIndexOf","baseTag","querySelector","getAttribute","pushHashPath","nextPaths","clamp","lowerBound","upperBound","min","max","_objectWithoutPropertiesLoose","excluded","sourceKeys","historyContext","context","createContext","displayName","createNamedContext","Router","_isMounted","_pendingLocation","staticContext","_this","computeRootMatch","params","isExact","componentDidMount","componentWillUnmount","render","external_React_default","RouterContext","Provider","match","HistoryContext","children","Component","MemoryRouter","_props$initialEntries","initialEntries","_props$initialIndex","initialIndex","entries","map","entry","nextIndex","nextEntries","splice","canGo","createHistory","react_router_Router","Lifecycle","onMount","componentDidUpdate","prevProps","onUpdate","onUnmount","Prompt","when","_ref$when","Consumer","invariant","method","react_router_Lifecycle","self","release","cache","cacheLimit","cacheCount","generatePath","generator","pathToRegexp","compile","compilePath","pretty","Redirect","computedMatch","_ref$push","matchPath","options","_options","exact","_options$exact","strict","_options$strict","sensitive","_options$sensitive","reduce","matched","cacheKey","end","pathCache","regexp","_compilePath","exec","values","memo","Route","_this$props","component","base","createURL","staticHandler","methodName","noop","StaticRouter","handlePush","navigateTo","handleReplace","handleListen","handleBlock","_this$props$basename","_this$props$context","addBasename","_this$props2$basename","_this$props2$context","_this$props2$location","rest","_this$props2","Switch","element","Children","child","isValidElement","cloneElement","withRouter","C","wrappedComponentRef","remainingProps","ref","WrappedComponent","hoistStatics","useContext","useHistory","useLocation","Context","useParams","useRouteMatch","BrowserRouter","HashRouter","resolveToLocation","normalizeToLocation","forwardRefShim","forwardRef","LinkAnchor","forwardedRef","innerRef","navigate","onClick","ex","preventDefault","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","Link","_ref2","_ref2$component","NavLink","ariaCurrent","_ref$ariaCurrent","activeClassName","_ref$activeClassName","activeStyle","classNameProp","className","isActiveProp","locationProp","styleProp","escapedPath","classnames","joinClassnames","global","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","MAX_SIGNED_31_BIT_INT","commonjsGlobal","globalThis","defaultValue","calculateChangedBits","_Provider$childContex","_Consumer$contextType","contextProp","_Component","handlers","emitter","on","handler","off","h","set","newValue","changedBits","_proto","getChildContext","componentWillReceiveProps","nextProps","oldValue","childContextTypes","isRequired","_Component2","_this2","getValue","observedBits","_proto2","contextTypes","isarray","parse","tokensToFunction","tokensToRegExp","PATH_REGEXP","RegExp","res","tokens","defaultDelimiter","delimiter","escaped","offset","next","capture","group","modifier","asterisk","partial","repeat","optional","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","charCodeAt","toUpperCase","matches","flags","opts","data","encode","encodeURIComponent","token","segment","TypeError","JSON","stringify","j","test","attachKeys","re","route","endsWithDelimiter","groups","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","axios_1","create_observable_1","Axios","axiosInstance","defaults","configurable","interceptors","request","config","createObservable","post","put","patch","delete","head","utils","paramsSerializer","serializedParams","toISOString","hashmarkIndex","__CANCEL__","process","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","adapter","XMLHttpRequest","transformRequest","transformResponse","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","settle","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","Promise","resolve","reject","requestData","requestHeaders","auth","username","password","Authorization","btoa","fullPath","baseURL","open","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","cookies","xsrfValue","withCredentials","read","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","send","enhanceError","code","error","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","prop","axiosKeys","otherKeys","Cancel","MandelbrotComponent_1","TileBlendTest1Component_1","SpellTestComponent_1","RpgTest_1","AllProjects","projectName","projectTitle","projectComponent","MandelbrotComponent","TileBlendTest1Component","SpellTestComponent","RpgTestComponent","CANVAS_WIDTH","CANVAS_HEIGHT","percentage","point","amt","range","anchor","ScaleTo","Length","targetWidth","deltaRange","targetRange","GetValue","GetPercentage","ConvertTo","unitRange","EArrow_1","SpellGroup","GidTracker","reverse","gids","spellData","parent","gid","Increment","content","repeatType","None","LeftRight","UpDown","parentIndex","pushToPrevious","Optional","Repeatable","rep","lastIndex","lastElement","isArrow","nextGid","reactIs","REACT_STATICS","contextType","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","$$typeof","compare","TYPE_STATICS","getStatics","isMemo","ForwardRef","Memo","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","descriptor","__importStar","ReactDOM","routerComponent_1","PAGE_LOADED","getElementById","react_router_dom_1","views_1","projects_1","page_1","DEFAULT_TITLE","PageRoute","Page","title","HomeComponent","ProjectsComponent","project","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","err","getShim","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","checkPropTypes","PropTypes","g","Function","for","f","q","u","typeOf","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isValidElementType","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","home_1","components_1","CodeFromUrlComponent","RenderFromUrlComponent_1","RenderFromUrlComponent","CodeFromUrlComponent_1","axios_observable_1","setContent","useState","useEffect","subscribe","dangerouslySetInnerHTML","__html","mergeConfig","createInstance","defaultConfig","instance","axios","instanceConfig","CancelToken","isCancel","all","promises","spread","InterceptorManager","dispatchRequest","chain","interceptor","fulfilled","rejected","shift","getUri","use","eject","id","transformData","throwIfCancellationRequested","throwIfRequested","reason","fns","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","run","marker","runClearTimeout","Item","nextTick","browser","env","argv","version","versions","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","normalizedName","isAxiosError","toJSON","description","fileName","lineNumber","columnNumber","stack","isAbsoluteURL","combineURLs","requestedURL","relativeURL","ignoreDuplicateOf","parsed","line","originURL","msie","urlParsingNode","resolveURL","setAttribute","protocol","host","hostname","port","requestURL","write","expires","domain","secure","cookie","Date","toGMTString","decodeURIComponent","remove","now","executor","resolvePromise","__assign","rxjs_1","promiseFactory","_i","cancelSource","hasCancelToken","console","warn","observable","Observable","subscriber","complete","catch","_subscribe","args2","subscription","_unsubscribe","unsubscribe","keywords","asString","lines","index_1","main_1","Const","Renderer_1","Mandelbrot_1","Julia_1","common_1","ClickDragWrapper_1","mandelRender","juliaRender","mandelbrotSelect","renderer","Julia","reset","Tick","requestAnimationFrame","subCanvas","ClickDragWrapper","Renderer","Mandelbrot","ProgressiveRepaint_1","MAX_DEPTH","PAINT_PER_TICK","paintColor","repainter","ProgressiveRepaint","getContext","screenRange","offsetWidth","offsetHeight","windowRange","finished","X","Y","Scale","worldCoords","fillStyle","CalcColor","fillRect","Advance","coords","original","rolling","iter","AbsSq","MaxAbsSq","Iterate","perc","ToColor","Reset","xRange","yRange","xPercent","yPercent","xValue","yValue","xAmt","yAmt","Shift","xShift","yShift","ShiftByPercentage","percent","xAnchor","yAnchor","intermediate","rMin","rMax","gMin","gMax","bMin","bMax","rRange","gRange","bRange","floor","real","imaginary","tmpReal","power","rs","theta","atan2","pow","cos","sin","canvasWidth","canvasHeight","scale","maxScale","fastLog2","MultiplyWith","AddWith","radius","Abs","SCROLL_DIV","SCROLL_POW","MAX_ZOOM_WIDTH","MIN_WINDOW","MAX_WINDOW","control","paintWindow","onSelect","handleMouseDown","handleMouseUp","handleMouseLeave","handleMouseMove","handleScroll","screenBounds","ResetPaint","grabX","offsetX","grabY","offsetY","isGrabbed","buttons","dx","dy","assertBounds","scalePercentage","deltaY","scalePerc","AspectScale","assertRangeBounds","Paint","tile_blend_test_1_1","AssetLoader_1","SpriteSheet_1","CanvasHelpers_1","RockLavaAllBlends_crop_png_1","Selectors16x16_png_1","Terrain_1","Direction_1","tiles","selectors","pvMousePos","terrain","SCALE_FACTOR","assetLoadDone","Terrain","terr","sprites","RenderTerrainCell","RenderTerrain","onMouseMove","onMouseLeave","onMouseClick","spriteSheetX","getSubTileId","spriteSheetY","getTile","TileType","Lava","rtx","rty","ev","mouseCoords","Equals","tile","setTile","Rock","assetLoader","registerAssetLoadCallback","onAllFinished","subTileIds","updateTile","fixCoords","fixSubCoords","updateSelfAndAdjacent","tid","adjacency","adjMask","pt","spell_test_1","arrows_png_1","SpellGroup_1","SpellStep_1","handledKeys","PrintSpell","spell","arrows","steps","drawParens","renderCustom","selfSteps","sort","Parse","SpellStep","FirstSteps","currentSteps","pressedArrow","lastLength","step","ArrowHere","NextSteps","clearRect","AdvanceAndPrint","Start","parentNextSteps","firsts","stepInto","stepOver","rpgt_1","display","rpg1_png_1","wizard16_png_1","NearestNeighborScalingHelper_1","World_1","Cell_1","Rectangle_1","KeyboardManager_1","CAMERA_SLOWDOWN_FACTOR","world","RockWall","GrassFloor","updatePrerender","tick","save","cx","cy","playerPos","camPos","MultWith","DivideWith","translate","prerender","update","w","vel","isKeyDown","globalAlpha","tryMoveEntity","toggle","restore","wizard","body","baseWidth","baseHeight","onResize","Rescale","currentWidth","innerWidth","currentHeight","innerHeight","maxXScale","maxYScale","scaleFactor","setTransform","Iterate_1","generateCell","cells","col","pctx","paint","pos","onChecked","xDirection","yDirection","startXTile","Edge","endXTile","startYTile","endYTile","xColision","IterateRange","ctrl","break","pathable","yColision","start","handle","breakIteration","loopControl","finalValue","SheetGraphic_1","GRASS_TILES","Cell","graphic","sheet","grassCoords","tileX","tileY","Rect","xp","KeyWatcher_1","logKeyNames","watcher","prvState","currentState","Update","isKeyUp","changes","KeyState_1","attachedElement","onKeyDown","onKeyUp","downKeys","log","change","idx","storeKeys","storeChanges","PageComponent","extendStatics","setPrototypeOf","__extends","__","_enable_super_gross_mode_that_will_cause_bad_things","hostReportError","empty","closed","useDeprecatedSynchronousErrorHandling","UnsubscriptionErrorImpl","errors","Subscription_Subscription","Subscription","_parentOrParents","_subscriptions","UnsubscriptionError","flattenUnsubscriptionErrors","sub","add","teardown","EMPTY","tmp","subscriptions","subscriptionIndex","errs","rxSubscriber","Subscriber_Subscriber","_super","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","Subscriber_SafeSubscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","canReportError","observer","_a","closed_1","identity","pipeFromArray","input","prev","Observable_Observable","_isScalar","lift","operator","sink","nextOrObserver","toSubscriber","_trySubscribe","promiseCtor","getPromiseCtor","observable_observable","operations","toPromise","ObjectUnsubscribedErrorImpl","SubjectSubscription_SubjectSubscription","SubjectSubscription","subject","observers","subscriberIndex","Subject_SubjectSubscriber","SubjectSubscriber","Subject_Subject","Subject","hasError","Subject_AnonymousSubject","ObjectUnsubscribedError","copy","thrownError","asObservable","AnonymousSubject","RefCountOperator","connectable","_refCount","refCounter","refCount_RefCountSubscriber","connection","connect","RefCountSubscriber","refCount","sharedConnection","_connection","ConnectableObservable_ConnectableObservable","ConnectableObservable","subjectFactory","getSubject","_subject","_isComplete","ConnectableObservable_ConnectableSubscriber","ConnectableSubscriber","groupBy_GroupedObservable","GroupedObservable","groupSubject","refCountSubscription","groupBy_InnerRefCountSubscription","InnerRefCountSubscription","count","attemptedToUnsubscribe","BehaviorSubject_BehaviorSubject","BehaviorSubject","_value","AsyncAction_AsyncAction","AsyncAction","scheduler","work","schedule","delay","recycleAsyncId","pending","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","Action","QueueAction_QueueAction","QueueAction","Scheduler","SchedulerAction","AsyncScheduler_AsyncScheduler","AsyncScheduler","delegate","active","scheduled","QueueScheduler","empty_empty","emptyScheduled","isScheduler","NotificationKind","subscribeToArray","scheduleArray","fromArray","of","throwError","dispatch","Notification_Notification","Notification","kind","hasValue","observe","do","accept","toObservable","createNext","undefinedValueNotification","createComplete","completeNotification","ObserveOnSubscriber","arg","notification","scheduleMessage","ObserveOnMessage","ReplaySubject_ReplaySubject","ReplaySubject","bufferSize","windowTime","Number","POSITIVE_INFINITY","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextTimeWindow","nextInfiniteTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","observeOn_ObserveOnSubscriber","spliceCount","eventsCount","time","AsyncSubject_AsyncSubject","AsyncSubject","hasNext","hasCompleted","nextHandle","RESOLVED","activeHandles","findAndClearHandle","Immediate","cb","AsapAction_AsapAction","AsapAction","AsapScheduler","AnimationFrameAction_AnimationFrameAction","AnimationFrameAction","cancelAnimationFrame","AnimationFrameScheduler","VirtualTimeScheduler_VirtualTimeScheduler","VirtualTimeScheduler","maxFrames","VirtualTimeScheduler_VirtualAction","frame","frameTimeFactor","VirtualAction","sortActions","isObservable","ArgumentOutOfRangeErrorImpl","EmptyErrorImpl","TimeoutErrorImpl","MapOperator","map_MapSubscriber","MapSubscriber","bindCallback","callbackFunc","resultSelector","bindCallback_dispatch","innerArgs","dispatchNext","bindNodeCallback","bindNodeCallback_dispatch","bindNodeCallback_dispatchError","bindNodeCallback_dispatchNext","OuterSubscriber_OuterSubscriber","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","InnerSubscriber_InnerSubscriber","InnerSubscriber","getSymbolIterator","iterator","iterator_iterator","isPromise","subscribeTo","obs","isArrayLike","iterable","done","return","subscribeToResult","outerSubscriber","innerSubscriber","NONE","combineLatest","observables","CombineLatestOperator","combineLatest_CombineLatestSubscriber","CombineLatestSubscriber","toRespond","unused","oldVal","_tryResultSelector","isInteropObservable","scheduleObservable","schedulePromise","isIterable","scheduleIterable","MergeMapOperator","concurrent","mergeMap_MergeMapSubscriber","MergeMapSubscriber","_tryNext","_innerSub","ish","innerSubscription","mergeAll","mergeMap","ii","concatAll","defer","observableFactory","forkJoin","sources","first_1","forkJoinInternal","resultSelector_1","completed","_loop_1","emitted","fromEvent","eventName","setupSubscription","sourceObj","isEventTarget","source_1","isJQueryStyleEventEmitter","source_2","isNodeStyleEventEmitter","source_3","fromEventPattern","addHandler","removeHandler","retValue","generate","initialStateOrOptions","iterate","resultSelectorOrObservable","initialState","generate_dispatch","conditionResult","needIterate","iif","trueResult","falseResult","isNumeric","parseFloat","interval","period","async_async","interval_dispatch","counter","NEVER","never","onErrorResumeNext","first","remainder","subNext","pairs","pairs_dispatch","not","pred","notPred","predicate","FilterOperator","filter_FilterSubscriber","FilterSubscriber","partition","race","RaceOperator","race_RaceSubscriber","RaceSubscriber","hasFirst","range_dispatch","current","timer","dueTime","periodOrScheduler","due","timer_dispatch","using","resourceFactory","resource","zip","ZipOperator","zip_ZipSubscriber","ZipSubscriber","iterators","zip_StaticArrayIterator","StaticIterator","zip_ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","_tryresultSelector","nextResult","StaticArrayIterator","ZipBufferIterator","isComplete","asap","animationFrame","ArgumentOutOfRangeError","EmptyError","TimeoutError"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 33);\n","module.exports = React;","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","export function ResizeCanvas(canvas: HTMLCanvasElement, tgtWidth: number, tgtHeight: number) {\r\n    canvas.width = tgtWidth;\r\n    canvas.height = tgtHeight;\r\n    canvas.style.width = tgtWidth + 'px';\r\n    canvas.style.height = tgtHeight + 'px';\r\n}\r\n\r\nexport function NearestNeighborScaling(ctx: CanvasRenderingContext2D) {\r\n    ctx.imageSmoothingEnabled = false;\r\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","import Point from './Point';\r\n\r\nexport enum Direction {\r\n    Up = 0,\r\n    UpRight,\r\n    Right,\r\n    DownRight,\r\n    Down,\r\n    DownLeft,\r\n    Left,\r\n    UpLeft,\r\n}\r\n\r\nexport type ECardinalDirection = Direction.Up | Direction.Right | Direction.Down | Direction.Left;\r\nexport type EDiagonalDirection = Direction.UpRight | Direction.DownRight | Direction.DownLeft | Direction.UpLeft;\r\n\r\nexport const directionValues: Point[] = [\r\n    new Point(0, -1),\r\n    new Point(1, -1),\r\n    new Point(1, 0),\r\n    new Point(1, 1),\r\n    new Point(0, 1),\r\n    new Point(-1, 1),\r\n    new Point(-1, 0),\r\n    new Point(-1, -1),\r\n];\r\n\r\nexport const allDirections: Direction[] = [\r\n    Direction.Up,\r\n    Direction.UpRight,\r\n    Direction.Right,\r\n    Direction.DownRight,\r\n    Direction.Down,\r\n    Direction.DownLeft,\r\n    Direction.Left,\r\n    Direction.UpLeft,\r\n];\r\nexport const cardinalDirections: Direction[] = [\r\n    Direction.Up,\r\n    Direction.Right,\r\n    Direction.Down,\r\n    Direction.Left\r\n];\r\nexport const diagonalDirections: Direction[] = [\r\n    Direction.UpRight,\r\n    Direction.DownRight,\r\n    Direction.DownLeft,\r\n    Direction.UpLeft,\r\n];\r\n\r\nexport function ToPoint(direction: Direction): Point {\r\n    return directionValues[direction];\r\n}","export default class Point {\r\n    constructor(public x: number, public y: number) {\r\n\r\n    }\r\n\r\n    public LengthSq(): number {\r\n        return Point.Dot(this, this);\r\n    }\r\n\r\n    public Length(): number {\r\n        return Math.sqrt(this.LengthSq());\r\n    }\r\n\r\n    public Clone(): Point {\r\n        return new Point(this.x, this.y);\r\n    }\r\n\r\n    public Negate(): Point {\r\n        return new Point(-this.x, -this.y);\r\n    }\r\n\r\n    public NegateInPlace(): this {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        return this;\r\n    }\r\n\r\n    public static Dot(p1: Point, p2: Point): number {\r\n        return p1.x * p2.x + p1.y * p2.y;\r\n    }\r\n\r\n    public DotWith(other: Point): number {\r\n        return Point.Dot(this, other);\r\n    }\r\n\r\n    public AddWith(x: number, y: number): this;\r\n    public AddWith(other: Point): this;\r\n    public AddWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x += nx;\r\n        this.y += ny;\r\n        return this;\r\n    }\r\n\r\n    public MultWith(x: number, y: number): this;\r\n    public MultWith(other: Point): this;\r\n    public MultWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x *= nx;\r\n        this.y *= ny;\r\n        return this;\r\n    }\r\n\r\n    public SubtractWith(x: number, y: number): this;\r\n    public SubtractWith(other: Point): this;\r\n    public SubtractWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x -= nx;\r\n        this.y -= ny;\r\n        return this;\r\n    }\r\n\r\n    public DivideWith(x: number, y: number): this;\r\n    public DivideWith(other: Point): this;\r\n    public DivideWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x /= nx;\r\n        this.y /= ny;\r\n        return this;\r\n    }\r\n\r\n    public Equals(other: Point): boolean {\r\n        return this.x === other.x && this.y === other.y;\r\n    }\r\n}","export { Range } from './Range';\r\nexport { Range2d } from './Range2d';\r\nexport { ColorRange } from './ColorRange';\r\nexport { Complex } from './Complex';","export default class AssetLoader {\r\n    waitingAssetCount: number;\r\n    loadedAssetCount: number;\r\n    boundCallback: undefined|(() => void);\r\n\r\n    constructor() {\r\n        this.waitingAssetCount = 0;\r\n        this.loadedAssetCount = 0;\r\n        this.boundCallback = undefined;\r\n    }\r\n\r\n    onAllFinished(act: () => void) {\r\n        this.boundCallback = act;\r\n        if (this.waitingAssetCount > 0 && this.waitingAssetCount === this.loadedAssetCount) {\r\n            this.boundCallback();\r\n        }\r\n    }\r\n\r\n    registerAssetLoadCallback(): (() => void) {\r\n        this.waitingAssetCount++;\r\n        return () => {\r\n            this.loadedAssetCount++;\r\n            if (this.waitingAssetCount === this.loadedAssetCount && this.boundCallback !== undefined) {\r\n                this.boundCallback();\r\n            }\r\n        };\r\n    }\r\n}","export class SpriteSheet {\r\n    public image: HTMLImageElement;\r\n    public tilesWide: number;\r\n    public tilesHigh: number;\r\n    constructor(public spriteWidth: number, public spriteHeight: number, spriteUrl: string, private onload: () => void) {\r\n        this.image = document.createElement('img');\r\n        this.image.src = '/dist/' + spriteUrl;\r\n        this.image.addEventListener('load', () => this.loadFinished());\r\n    }\r\n\r\n    private loadFinished() {\r\n        this.tilesWide = this.image.width / this.spriteWidth;\r\n        this.tilesHigh = this.image.height / this.spriteHeight;\r\n        this.onload();\r\n    }\r\n\r\n    private isTuple(v: number|{x: number, y: number}): v is {x: number, y: number} {\r\n        return (v as any).y !== undefined;\r\n    }\r\n\r\n    render(ctx: CanvasRenderingContext2D, tx: number, ty: number, tw: number, th: number, srcx: number, srcy: number): void;\r\n    render(ctx: CanvasRenderingContext2D, tx: number, ty: number, tw: number, th: number, srcx: {x: number, y: number}): void;\r\n    render(ctx: CanvasRenderingContext2D, tx: number, ty: number, tw: number, th: number, srcx: number|{x: number, y: number}, srcy?: number): void {\r\n        const sx = this.isTuple(srcx) ? srcx.x : srcx;\r\n        const sy = this.isTuple(srcx) ? srcx.y : srcy;\r\n        ctx.drawImage(\r\n            this.image,\r\n            sx * this.spriteWidth,\r\n            sy * this.spriteHeight,\r\n            this.spriteWidth,\r\n            this.spriteHeight,\r\n            tx,\r\n            ty,\r\n            tw,\r\n            th\r\n        );\r\n    }\r\n\r\n    renderCustom(ctx: CanvasRenderingContext2D, tx: number, ty: number, tw: number, th: number, srcx: number, srcy: number, twid: number, thei: number) {\r\n        const sx = srcx * twid;\r\n        const sy = srcy * thei;\r\n        ctx.drawImage(\r\n            this.image,\r\n            sx,\r\n            sy,\r\n            twid,\r\n            thei,\r\n            tx,\r\n            ty,\r\n            tw,\r\n            th\r\n        );\r\n    }\r\n}","export enum EArrow {\r\n    Up = 0,\r\n    Right = 1,\r\n    Down = 2,\r\n    Left = 3,\r\n    UpDown = 4,\r\n    LeftRight = 5,\r\n    Any,\r\n    Stop\r\n}\r\n\r\nexport function Matches(arr: EArrow, pattern: EArrow): boolean {\r\n    if (pattern === EArrow.Any) return true;\r\n    if (pattern === EArrow.Stop) return arr === EArrow.Stop;\r\n    if (arr === pattern) return true;\r\n    if (pattern >= 4 && arr <= 3) return (arr % 2) === (pattern % 2);\r\n    return false;\r\n}\r\n\r\nexport enum ERepeat {\r\n    None,\r\n    Optional,\r\n    Repeatable\r\n}","export const TILES_WIDE = 28;\r\nexport const TILES_HIGH = 28;\r\nexport const TILE_SIZE = 16;","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n\n  var toParts = (to && to.split('/')) || [];\n  var fromParts = (from && from.split('/')) || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');\n\n  if (\n    mustEndAbs &&\n    fromParts[0] !== '' &&\n    (!fromParts[0] || !isAbsolute(fromParts[0]))\n  )\n    fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\nexport default resolvePathname;\n","function valueOf(obj) {\n  return obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj);\n}\n\nfunction valueEqual(a, b) {\n  // Test for strict equality first.\n  if (a === b) return true;\n\n  // Otherwise, if either of them == null they are not equal.\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return (\n      Array.isArray(b) &&\n      a.length === b.length &&\n      a.every(function(item, index) {\n        return valueEqual(item, b[index]);\n      })\n    );\n  }\n\n  if (typeof a === 'object' || typeof b === 'object') {\n    var aValue = valueOf(a);\n    var bValue = valueOf(b);\n\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n\n    return Object.keys(Object.assign({}, a, b)).every(function(key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\nexport default valueEqual;\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    throw new Error(prefix + \": \" + (message || ''));\n}\n\nexport default invariant;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction stripHash(url) {\n  var hashIndex = url.indexOf('#');\n  return hashIndex === -1 ? url : url.slice(0, hashIndex);\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(stripHash(window.location.href) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function locationsAreEqual$$1(a, b) {\n    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;\n  }\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    var baseTag = document.querySelector('base');\n    var href = '';\n\n    if (baseTag && baseTag.getAttribute('href')) {\n      href = stripHash(window.location.href);\n    }\n\n    return href + '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import createNamedContext from \"./createNameContext\";\n\nconst historyContext = /*#__PURE__*/ createNamedContext(\"Router-History\");\nexport default historyContext;\n","// TODO: Replace with React.createContext once we can assume React 16+\nimport createContext from \"mini-create-react-context\";\n\nconst createNamedContext = name => {\n  const context = createContext();\n  context.displayName = name;\n\n  return context;\n};\n\nexport default createNamedContext;\n","// TODO: Replace with React.createContext once we can assume React 16+\nimport createContext from \"mini-create-react-context\";\n\nconst createNamedContext = name => {\n  const context = createContext();\n  context.displayName = name;\n\n  return context;\n};\n\nconst context = /*#__PURE__*/ createNamedContext(\"Router\");\nexport default context;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\nimport HistoryContext from \"./HistoryContext.js\";\nimport RouterContext from \"./RouterContext.js\";\n\n/**\n * The public API for putting history on context.\n */\nclass Router extends React.Component {\n  static computeRootMatch(pathname) {\n    return { path: \"/\", url: \"/\", params: {}, isExact: pathname === \"/\" };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      location: props.history.location\n    };\n\n    // This is a bit of a hack. We have to start listening for location\n    // changes here in the constructor in case there are any <Redirect>s\n    // on the initial render. If there are, they will replace/push when\n    // they mount and since cDM fires in children before parents, we may\n    // get a new location before the <Router> is mounted.\n    this._isMounted = false;\n    this._pendingLocation = null;\n\n    if (!props.staticContext) {\n      this.unlisten = props.history.listen(location => {\n        if (this._isMounted) {\n          this.setState({ location });\n        } else {\n          this._pendingLocation = location;\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._pendingLocation) {\n      this.setState({ location: this._pendingLocation });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.unlisten) this.unlisten();\n  }\n\n  render() {\n    return (\n      <RouterContext.Provider\n        value={{\n          history: this.props.history,\n          location: this.state.location,\n          match: Router.computeRootMatch(this.state.location.pathname),\n          staticContext: this.props.staticContext\n        }}\n      >\n        <HistoryContext.Provider\n          children={this.props.children || null}\n          value={this.props.history}\n        />\n      </RouterContext.Provider>\n    );\n  }\n}\n\nif (__DEV__) {\n  Router.propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.object.isRequired,\n    staticContext: PropTypes.object\n  };\n\n  Router.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      prevProps.history === this.props.history,\n      \"You cannot change <Router history>\"\n    );\n  };\n}\n\nexport default Router;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createMemoryHistory as createHistory } from \"history\";\nimport warning from \"tiny-warning\";\n\nimport Router from \"./Router.js\";\n\n/**\n * The public API for a <Router> that stores location in memory.\n */\nclass MemoryRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  MemoryRouter.propTypes = {\n    initialEntries: PropTypes.array,\n    initialIndex: PropTypes.number,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number,\n    children: PropTypes.node\n  };\n\n  MemoryRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<MemoryRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { MemoryRouter as Router }`.\"\n    );\n  };\n}\n\nexport default MemoryRouter;\n","import React from \"react\";\n\nclass Lifecycle extends React.Component {\n  componentDidMount() {\n    if (this.props.onMount) this.props.onMount.call(this, this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);\n  }\n\n  componentWillUnmount() {\n    if (this.props.onUnmount) this.props.onUnmount.call(this, this);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Lifecycle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\n\nimport Lifecycle from \"./Lifecycle.js\";\nimport RouterContext from \"./RouterContext.js\";\n\n/**\n * The public API for prompting the user before navigating away from a screen.\n */\nfunction Prompt({ message, when = true }) {\n  return (\n    <RouterContext.Consumer>\n      {context => {\n        invariant(context, \"You should not use <Prompt> outside a <Router>\");\n\n        if (!when || context.staticContext) return null;\n\n        const method = context.history.block;\n\n        return (\n          <Lifecycle\n            onMount={self => {\n              self.release = method(message);\n            }}\n            onUpdate={(self, prevProps) => {\n              if (prevProps.message !== message) {\n                self.release();\n                self.release = method(message);\n              }\n            }}\n            onUnmount={self => {\n              self.release();\n            }}\n            message={message}\n          />\n        );\n      }}\n    </RouterContext.Consumer>\n  );\n}\n\nif (__DEV__) {\n  const messageType = PropTypes.oneOfType([PropTypes.func, PropTypes.string]);\n\n  Prompt.propTypes = {\n    when: PropTypes.bool,\n    message: messageType.isRequired\n  };\n}\n\nexport default Prompt;\n","import pathToRegexp from \"path-to-regexp\";\n\nconst cache = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;\n\nfunction compilePath(path) {\n  if (cache[path]) return cache[path];\n\n  const generator = pathToRegexp.compile(path);\n\n  if (cacheCount < cacheLimit) {\n    cache[path] = generator;\n    cacheCount++;\n  }\n\n  return generator;\n}\n\n/**\n * Public API for generating a URL pathname from a path and parameters.\n */\nfunction generatePath(path = \"/\", params = {}) {\n  return path === \"/\" ? path : compilePath(path)(params, { pretty: true });\n}\n\nexport default generatePath;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createLocation, locationsAreEqual } from \"history\";\nimport invariant from \"tiny-invariant\";\n\nimport Lifecycle from \"./Lifecycle.js\";\nimport RouterContext from \"./RouterContext.js\";\nimport generatePath from \"./generatePath.js\";\n\n/**\n * The public API for navigating programmatically with a component.\n */\nfunction Redirect({ computedMatch, to, push = false }) {\n  return (\n    <RouterContext.Consumer>\n      {context => {\n        invariant(context, \"You should not use <Redirect> outside a <Router>\");\n\n        const { history, staticContext } = context;\n\n        const method = push ? history.push : history.replace;\n        const location = createLocation(\n          computedMatch\n            ? typeof to === \"string\"\n              ? generatePath(to, computedMatch.params)\n              : {\n                  ...to,\n                  pathname: generatePath(to.pathname, computedMatch.params)\n                }\n            : to\n        );\n\n        // When rendering in a static context,\n        // set the new location immediately.\n        if (staticContext) {\n          method(location);\n          return null;\n        }\n\n        return (\n          <Lifecycle\n            onMount={() => {\n              method(location);\n            }}\n            onUpdate={(self, prevProps) => {\n              const prevLocation = createLocation(prevProps.to);\n              if (\n                !locationsAreEqual(prevLocation, {\n                  ...location,\n                  key: prevLocation.key\n                })\n              ) {\n                method(location);\n              }\n            }}\n            to={to}\n          />\n        );\n      }}\n    </RouterContext.Consumer>\n  );\n}\n\nif (__DEV__) {\n  Redirect.propTypes = {\n    push: PropTypes.bool,\n    from: PropTypes.string,\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n  };\n}\n\nexport default Redirect;\n","import pathToRegexp from \"path-to-regexp\";\n\nconst cache = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;\n\nfunction compilePath(path, options) {\n  const cacheKey = `${options.end}${options.strict}${options.sensitive}`;\n  const pathCache = cache[cacheKey] || (cache[cacheKey] = {});\n\n  if (pathCache[path]) return pathCache[path];\n\n  const keys = [];\n  const regexp = pathToRegexp(path, keys, options);\n  const result = { regexp, keys };\n\n  if (cacheCount < cacheLimit) {\n    pathCache[path] = result;\n    cacheCount++;\n  }\n\n  return result;\n}\n\n/**\n * Public API for matching a URL pathname to a path.\n */\nfunction matchPath(pathname, options = {}) {\n  if (typeof options === \"string\" || Array.isArray(options)) {\n    options = { path: options };\n  }\n\n  const { path, exact = false, strict = false, sensitive = false } = options;\n\n  const paths = [].concat(path);\n\n  return paths.reduce((matched, path) => {\n    if (!path && path !== \"\") return null;\n    if (matched) return matched;\n\n    const { regexp, keys } = compilePath(path, {\n      end: exact,\n      strict,\n      sensitive\n    });\n    const match = regexp.exec(pathname);\n\n    if (!match) return null;\n\n    const [url, ...values] = match;\n    const isExact = pathname === url;\n\n    if (exact && !isExact) return null;\n\n    return {\n      path, // the path used to match\n      url: path === \"/\" && url === \"\" ? \"/\" : url, // the matched portion of the URL\n      isExact, // whether or not we matched exactly\n      params: keys.reduce((memo, key, index) => {\n        memo[key.name] = values[index];\n        return memo;\n      }, {})\n    };\n  }, null);\n}\n\nexport default matchPath;\n","import React from \"react\";\nimport { isValidElementType } from \"react-is\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport RouterContext from \"./RouterContext.js\";\nimport matchPath from \"./matchPath.js\";\n\nfunction isEmptyChildren(children) {\n  return React.Children.count(children) === 0;\n}\n\nfunction evalChildrenDev(children, props, path) {\n  const value = children(props);\n\n  warning(\n    value !== undefined,\n    \"You returned `undefined` from the `children` function of \" +\n      `<Route${path ? ` path=\"${path}\"` : \"\"}>, but you ` +\n      \"should have returned a React element or `null`\"\n  );\n\n  return value || null;\n}\n\n/**\n * The public API for matching a single path and rendering.\n */\nclass Route extends React.Component {\n  render() {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Route> outside a <Router>\");\n\n          const location = this.props.location || context.location;\n          const match = this.props.computedMatch\n            ? this.props.computedMatch // <Switch> already computed the match for us\n            : this.props.path\n            ? matchPath(location.pathname, this.props)\n            : context.match;\n\n          const props = { ...context, location, match };\n\n          let { children, component, render } = this.props;\n\n          // Preact uses an empty array as children by\n          // default, so use null if that's the case.\n          if (Array.isArray(children) && children.length === 0) {\n            children = null;\n          }\n\n          return (\n            <RouterContext.Provider value={props}>\n              {props.match\n                ? children\n                  ? typeof children === \"function\"\n                    ? __DEV__\n                      ? evalChildrenDev(children, props, this.props.path)\n                      : children(props)\n                    : children\n                  : component\n                  ? React.createElement(component, props)\n                  : render\n                  ? render(props)\n                  : null\n                : typeof children === \"function\"\n                ? __DEV__\n                  ? evalChildrenDev(children, props, this.props.path)\n                  : children(props)\n                : null}\n            </RouterContext.Provider>\n          );\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n}\n\nif (__DEV__) {\n  Route.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n    component: (props, propName) => {\n      if (props[propName] && !isValidElementType(props[propName])) {\n        return new Error(\n          `Invalid prop 'component' supplied to 'Route': the prop is not a valid React component`\n        );\n      }\n    },\n    exact: PropTypes.bool,\n    location: PropTypes.object,\n    path: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string)\n    ]),\n    render: PropTypes.func,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool\n  };\n\n  Route.prototype.componentDidMount = function() {\n    warning(\n      !(\n        this.props.children &&\n        !isEmptyChildren(this.props.children) &&\n        this.props.component\n      ),\n      \"You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored\"\n    );\n\n    warning(\n      !(\n        this.props.children &&\n        !isEmptyChildren(this.props.children) &&\n        this.props.render\n      ),\n      \"You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored\"\n    );\n\n    warning(\n      !(this.props.component && this.props.render),\n      \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\"\n    );\n  };\n\n  Route.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      !(this.props.location && !prevProps.location),\n      '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.'\n    );\n\n    warning(\n      !(!this.props.location && prevProps.location),\n      '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.'\n    );\n  };\n}\n\nexport default Route;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createLocation, createPath } from \"history\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport Router from \"./Router.js\";\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === \"/\" ? path : \"/\" + path;\n}\n\nfunction addBasename(basename, location) {\n  if (!basename) return location;\n\n  return {\n    ...location,\n    pathname: addLeadingSlash(basename) + location.pathname\n  };\n}\n\nfunction stripBasename(basename, location) {\n  if (!basename) return location;\n\n  const base = addLeadingSlash(basename);\n\n  if (location.pathname.indexOf(base) !== 0) return location;\n\n  return {\n    ...location,\n    pathname: location.pathname.substr(base.length)\n  };\n}\n\nfunction createURL(location) {\n  return typeof location === \"string\" ? location : createPath(location);\n}\n\nfunction staticHandler(methodName) {\n  return () => {\n    invariant(false, \"You cannot %s with <StaticRouter>\", methodName);\n  };\n}\n\nfunction noop() {}\n\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */\nclass StaticRouter extends React.Component {\n  navigateTo(location, action) {\n    const { basename = \"\", context = {} } = this.props;\n    context.action = action;\n    context.location = addBasename(basename, createLocation(location));\n    context.url = createURL(context.location);\n  }\n\n  handlePush = location => this.navigateTo(location, \"PUSH\");\n  handleReplace = location => this.navigateTo(location, \"REPLACE\");\n  handleListen = () => noop;\n  handleBlock = () => noop;\n\n  render() {\n    const { basename = \"\", context = {}, location = \"/\", ...rest } = this.props;\n\n    const history = {\n      createHref: path => addLeadingSlash(basename + createURL(path)),\n      action: \"POP\",\n      location: stripBasename(basename, createLocation(location)),\n      push: this.handlePush,\n      replace: this.handleReplace,\n      go: staticHandler(\"go\"),\n      goBack: staticHandler(\"goBack\"),\n      goForward: staticHandler(\"goForward\"),\n      listen: this.handleListen,\n      block: this.handleBlock\n    };\n\n    return <Router {...rest} history={history} staticContext={context} />;\n  }\n}\n\nif (__DEV__) {\n  StaticRouter.propTypes = {\n    basename: PropTypes.string,\n    context: PropTypes.object,\n    location: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n  };\n\n  StaticRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<StaticRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { StaticRouter as Router }`.\"\n    );\n  };\n}\n\nexport default StaticRouter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport RouterContext from \"./RouterContext.js\";\nimport matchPath from \"./matchPath.js\";\n\n/**\n * The public API for rendering the first <Route> that matches.\n */\nclass Switch extends React.Component {\n  render() {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Switch> outside a <Router>\");\n\n          const location = this.props.location || context.location;\n\n          let element, match;\n\n          // We use React.Children.forEach instead of React.Children.toArray().find()\n          // here because toArray adds keys to all child elements and we do not want\n          // to trigger an unmount/remount for two <Route>s that render the same\n          // component at different URLs.\n          React.Children.forEach(this.props.children, child => {\n            if (match == null && React.isValidElement(child)) {\n              element = child;\n\n              const path = child.props.path || child.props.from;\n\n              match = path\n                ? matchPath(location.pathname, { ...child.props, path })\n                : context.match;\n            }\n          });\n\n          return match\n            ? React.cloneElement(element, { location, computedMatch: match })\n            : null;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n}\n\nif (__DEV__) {\n  Switch.propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object\n  };\n\n  Switch.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      !(this.props.location && !prevProps.location),\n      '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.'\n    );\n\n    warning(\n      !(!this.props.location && prevProps.location),\n      '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.'\n    );\n  };\n}\n\nexport default Switch;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistStatics from \"hoist-non-react-statics\";\nimport invariant from \"tiny-invariant\";\n\nimport RouterContext from \"./RouterContext.js\";\n\n/**\n * A public higher-order component to access the imperative API\n */\nfunction withRouter(Component) {\n  const displayName = `withRouter(${Component.displayName || Component.name})`;\n  const C = props => {\n    const { wrappedComponentRef, ...remainingProps } = props;\n\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(\n            context,\n            `You should not use <${displayName} /> outside a <Router>`\n          );\n          return (\n            <Component\n              {...remainingProps}\n              {...context}\n              ref={wrappedComponentRef}\n            />\n          );\n        }}\n      </RouterContext.Consumer>\n    );\n  };\n\n  C.displayName = displayName;\n  C.WrappedComponent = Component;\n\n  if (__DEV__) {\n    C.propTypes = {\n      wrappedComponentRef: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.object\n      ])\n    };\n  }\n\n  return hoistStatics(C, Component);\n}\n\nexport default withRouter;\n","import React from \"react\";\nimport invariant from \"tiny-invariant\";\n\nimport Context from \"./RouterContext.js\";\nimport HistoryContext from \"./HistoryContext.js\";\nimport matchPath from \"./matchPath.js\";\n\nconst useContext = React.useContext;\n\nexport function useHistory() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useHistory()\"\n    );\n  }\n\n  return useContext(HistoryContext);\n}\n\nexport function useLocation() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useLocation()\"\n    );\n  }\n\n  return useContext(Context).location;\n}\n\nexport function useParams() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useParams()\"\n    );\n  }\n\n  const match = useContext(Context).match;\n  return match ? match.params : {};\n}\n\nexport function useRouteMatch(path) {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useRouteMatch()\"\n    );\n  }\n\n  const location = useLocation();\n  const match = useContext(Context).match;\n\n  return path ? matchPath(location.pathname, path) : match;\n}\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const method = replace ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\",\n      activeStyle,\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          const className = isActive\n            ? joinClassnames(classNameProp, activeClassName)\n            : classNameProp;\n          const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.string,\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.object\n  };\n}\n\nexport default NavLink;\n","import React, { Component } from 'react';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823;\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n\nfunction getUniqueId() {\n  var key = '__global_unique_id__';\n  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;\n}\n\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + getUniqueId() + '__';\n\n  var Provider = /*#__PURE__*/function (_Component) {\n    _inheritsLoose(Provider, _Component);\n\n    function Provider() {\n      var _this;\n\n      _this = _Component.apply(this, arguments) || this;\n      _this.emitter = createEventEmitter(_this.props.value);\n      return _this;\n    }\n\n    var _proto = Provider.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0;\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n          if (process.env.NODE_ENV !== 'production') {\n            warning((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    _proto.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = PropTypes.object.isRequired, _Provider$childContex);\n\n  var Consumer = /*#__PURE__*/function (_Component2) {\n    _inheritsLoose(Consumer, _Component2);\n\n    function Consumer() {\n      var _this2;\n\n      _this2 = _Component2.apply(this, arguments) || this;\n      _this2.state = {\n        value: _this2.getValue()\n      };\n\n      _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({\n            value: _this2.getValue()\n          });\n        }\n      };\n\n      return _this2;\n    }\n\n    var _proto2 = Consumer.prototype;\n\n    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n\n      var observedBits = this.props.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    _proto2.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    _proto2.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = PropTypes.object, _Consumer$contextType);\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\nvar index = React.createContext || createReactContext;\n\nexport default index;\n","var isarray = require('isarray')\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar axios_1 = require(\"axios\");\nvar create_observable_1 = require(\"./create-observable\");\nvar Axios = /** @class */ (function () {\n    function Axios(axiosInstance) {\n        this.axiosInstance = axiosInstance;\n    }\n    Object.defineProperty(Axios.prototype, \"defaults\", {\n        get: function () {\n            return this.axiosInstance.defaults;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Axios.prototype, \"interceptors\", {\n        get: function () {\n            return this.axiosInstance.interceptors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Axios.request = function (config) {\n        return create_observable_1.createObservable(axios_1.default.request, config);\n    };\n    Axios.get = function (url, config) {\n        return create_observable_1.createObservable(axios_1.default.get, url, config);\n    };\n    Axios.post = function (url, data, config) {\n        return create_observable_1.createObservable(axios_1.default.post, url, data, config);\n    };\n    Axios.put = function (url, data, config) {\n        return create_observable_1.createObservable(axios_1.default.put, url, data, config);\n    };\n    Axios.patch = function (url, data, config) {\n        return create_observable_1.createObservable(axios_1.default.patch, url, data, config);\n    };\n    Axios.delete = function (url, config) {\n        return create_observable_1.createObservable(axios_1.default.delete, url, config);\n    };\n    Axios.head = function (url, config) {\n        return create_observable_1.createObservable(axios_1.default.head, url, config);\n    };\n    Axios.create = function (config) {\n        return new Axios(axios_1.default.create(config));\n    };\n    Axios.prototype.request = function (config) {\n        return create_observable_1.createObservable(this.axiosInstance.request, config);\n    };\n    Axios.prototype.get = function (url, config) {\n        return create_observable_1.createObservable(this.axiosInstance.get, url, config);\n    };\n    Axios.prototype.head = function (url, config) {\n        return create_observable_1.createObservable(this.axiosInstance.head, url, config);\n    };\n    Axios.prototype.post = function (url, data, config) {\n        return create_observable_1.createObservable(this.axiosInstance.post, url, data, config);\n    };\n    Axios.prototype.put = function (url, data, config) {\n        return create_observable_1.createObservable(this.axiosInstance.put, url, data, config);\n    };\n    Axios.prototype.patch = function (url, data, config) {\n        return create_observable_1.createObservable(this.axiosInstance.patch, url, data, config);\n    };\n    Axios.prototype.delete = function (url, config) {\n        return create_observable_1.createObservable(this.axiosInstance.delete, url, config);\n    };\n    Axios.defaults = axios_1.default.defaults;\n    Axios.interceptors = axios_1.default.interceptors;\n    return Axios;\n}());\nexports.Axios = Axios;\nexports.default = Axios;\n","module.exports = require('./lib/axios');","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","\r\nimport { MandelbrotComponent } from './mandelbrot/MandelbrotComponent';\r\nimport { TileBlendTest1Component } from './tile-blend-test-1/TileBlendTest1Component';\r\nimport { SpellTestComponent } from './spell-test/SpellTestComponent';\r\nimport { QTreeConwayComponent } from './qtree-conway/QTreeConwayComponent';\r\nimport { RpgTestComponent } from './rpgt/RpgTest';\r\n\r\nexport interface IProject {\r\n    projectName: string;\r\n    projectTitle: string;\r\n    projectComponent: () => JSX.Element;\r\n}\r\n\r\n// tslint:disable-next-line: variable-name\r\nexport const AllProjects: IProject[] = [\r\n    {\r\n        projectName: 'mandelbrot',\r\n        projectTitle: 'Mandelbrot',\r\n        projectComponent: MandelbrotComponent\r\n    },\r\n\r\n    {\r\n        projectName: 'tile-blend-test-1',\r\n        projectTitle: 'Tile Blending Test 1',\r\n        projectComponent: TileBlendTest1Component\r\n    },\r\n\r\n    {\r\n        projectName: 'spell-test',\r\n        projectTitle: 'Spell Test',\r\n        projectComponent: SpellTestComponent\r\n    },\r\n\r\n    // {\r\n    //     projectName: 'qtree-conway',\r\n    //     projectTitle: 'QTree Conway',\r\n    //     projectComponent: QTreeConwayComponent\r\n    // },\r\n\r\n    {\r\n        projectName: 'rpgt',\r\n        projectTitle: 'Rpg Test',\r\n        projectComponent: RpgTestComponent\r\n    }\r\n];","export const CANVAS_WIDTH = 800;\r\nexport const CANVAS_HEIGHT = 800;","export class Range {\r\n    constructor(public min: number, public max: number) { }\r\n\r\n    Length() {\r\n        return this.max - this.min;\r\n    }\r\n\r\n    GetValue(percentage: number) {\r\n        return this.min + (this.max - this.min) * percentage;\r\n    }\r\n\r\n    GetPercentage(point: number) {\r\n        return (point - this.min) / (this.max - this.min);\r\n    }\r\n\r\n    Shift(amt: number) {\r\n        this.min += amt;\r\n        this.max += amt;\r\n    }\r\n\r\n    ShiftByPercentage(percentage: number) {\r\n        const range = this.max - this.min;\r\n        this.min += range * percentage;\r\n        this.max += range * percentage;\r\n    }\r\n\r\n    Scale(percentage: number, anchor = 0.5) {\r\n        this.ScaleTo(this.Length() * percentage, anchor);\r\n    }\r\n\r\n    ScaleTo(targetWidth: number, anchor: number) {\r\n        const range = this.max - this.min;\r\n        const deltaRange = targetWidth - range;\r\n        this.min -= deltaRange * anchor;\r\n        this.max += deltaRange * (1 - anchor);\r\n    }\r\n\r\n    ConvertTo(value: number, targetRange: Range) {\r\n        return targetRange.GetValue(this.GetPercentage(value));\r\n    }\r\n    ConvertFrom(value: number, targetRange: Range) {\r\n        return targetRange.ConvertTo(value, this);\r\n    }\r\n}\r\nexport const unitRange: Range = new Range(0, 1);\r\n(window as any).range = Range;","export default __webpack_public_path__ + \"bbb298f00b41bbd627d27aa0529a20ba.png\";","import { EArrow, ERepeat } from '../EArrow';\r\nimport { ISpellGroupParent } from './SpellGroupParent';\r\n\r\nexport class SpellGroup {\r\n\r\n    content: (EArrow | SpellGroup)[];\r\n    repeatType: ERepeat;\r\n    parent: ISpellGroupParent | undefined;\r\n    gid: number;\r\n\r\n    static Parse(str: string): SpellGroup {\r\n        return new SpellGroup(new GidTracker(), str.split('').reverse(), undefined);\r\n    }\r\n\r\n    constructor(gids: GidTracker, data: EArrow, repeat: ERepeat, parent: ISpellGroupParent | undefined);\r\n    constructor(gids: GidTracker, spellData: string[], parent: ISpellGroupParent | undefined);\r\n    constructor(gids: GidTracker, spellData: string[]|EArrow, repeat: ERepeat|ISpellGroupParent|undefined, parent?: ISpellGroupParent|undefined) {\r\n        this.gid = gids.Increment();\r\n        if ((spellData as any).length === undefined) {\r\n            this.content = [spellData as EArrow];\r\n            this.repeatType = repeat as ERepeat;\r\n            this.parent = parent;\r\n        }\r\n        else {\r\n            spellData = spellData as string[];\r\n            this.repeatType = ERepeat.None;\r\n            this.content = [];\r\n            this.parent = repeat as ISpellGroupParent | undefined;\r\n\r\n            while (spellData.length > 0) {\r\n                const next = spellData.pop();\r\n                switch (next) {\r\n                    // Push an arrow\r\n                    case 'u': this.content.push(EArrow.Up); break;\r\n                    case 'd': this.content.push(EArrow.Down); break;\r\n                    case 'l': this.content.push(EArrow.Left); break;\r\n                    case 'r': this.content.push(EArrow.Right); break;\r\n                    case 'h': this.content.push(EArrow.LeftRight); break;\r\n                    case 'v': this.content.push(EArrow.UpDown); break;\r\n                    case 'a': this.content.push(EArrow.Any); break;\r\n                    case 's': this.content.push(EArrow.Stop); break;\r\n                    // Push a group OR close the group\r\n                    case '(': this.content.push(new SpellGroup(gids, spellData, { parent: this, parentIndex: this.content.length })); break;\r\n                    case ')': return;\r\n                    // append an optional/repeat to the previous group\r\n                    case '?': this.pushToPrevious(gids, ERepeat.Optional); break;\r\n                    case '+': this.pushToPrevious(gids, ERepeat.Repeatable); break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static isArrow(element: EArrow | SpellGroup): element is EArrow {\r\n        return (element as any).content === undefined;\r\n    }\r\n\r\n    private pushToPrevious(gids: GidTracker, rep: ERepeat) {\r\n        if (this.content.length === 0) {\r\n            throw new Error(\"Can't push repeat group: Spell is empty\");\r\n        }\r\n        const lastIndex = this.content.length - 1;\r\n        const lastElement = this.content[lastIndex];\r\n        if (SpellGroup.isArrow(lastElement)) {\r\n            this.content[lastIndex] = new SpellGroup(gids, lastElement, rep, { parent: this, parentIndex: lastIndex });\r\n        }\r\n        else {\r\n            lastElement.repeatType = rep;\r\n        }\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nclass GidTracker {\r\n    nextGid: number;\r\n    constructor() {\r\n        this.nextGid = 0;\r\n    }\r\n\r\n    Increment(): number {\r\n        return this.nextGid++;\r\n    }\r\n}","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport RouterComponent from './routerComponent';\r\n\r\n// We look for this in our fallback-load script for testing locally\r\n(window as any).PAGE_LOADED = true;\r\n\r\nReactDOM.render(\r\n    <RouterComponent />,\r\n    document.getElementById('react_content')\r\n);","module.exports = ReactDOM;","import * as React from 'react';\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport { HomeComponent, ProjectsComponent } from './views';\r\nimport { AllProjects } from './views/projects/';\r\nimport { Page } from './page';\r\n\r\nconst DEFAULT_TITLE = \"Nathan's Github Pages\";\r\n\r\nexport default function RouterComponent() {\r\n    return <BrowserRouter basename='/'>\r\n        <PageRoute exact path='/' component={HomeComponent} />\r\n        <PageRoute exact path='/projects/' component={ProjectsComponent} />\r\n        {\r\n            AllProjects.map(project => {\r\n                return <PageRoute key={project.projectName} path={'/projects/' + project.projectName} title={project.projectTitle} component={project.projectComponent} />;\r\n            })\r\n        }\r\n    </BrowserRouter>;\r\n}\r\n\r\nexport function PageRoute(props: {exact?: boolean, path: string, title?: string, component: () => JSX.Element}) {\r\n    return <Route exact={props.exact} path={props.path} render={p => <Page {...p} component={props.component} title={props.title || DEFAULT_TITLE} />} />;\r\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","/** @license React v16.8.4\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?Symbol.for(\"react.memo\"):\n60115,r=b?Symbol.for(\"react.lazy\"):60116;function t(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case r:case q:case d:return u}}}function v(a){return t(a)===m}exports.typeOf=t;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;\nexports.Fragment=e;exports.Lazy=r;exports.Memo=q;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||\"object\"===typeof a&&null!==a&&(a.$$typeof===r||a.$$typeof===q||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||t(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return t(a)===k};\nexports.isContextProvider=function(a){return t(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return t(a)===n};exports.isFragment=function(a){return t(a)===e};exports.isLazy=function(a){return t(a)===r};exports.isMemo=function(a){return t(a)===q};exports.isPortal=function(a){return t(a)===d};exports.isProfiler=function(a){return t(a)===g};exports.isStrictMode=function(a){return t(a)===f};\nexports.isSuspense=function(a){return t(a)===p};\n","export { HomeComponent } from './home/home';\r\nexport { ProjectsComponent } from './projects/projects';","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { RenderFromUrlComponent, CodeFromUrlComponent } from '../../components';\r\n\r\nexport function HomeComponent() {\r\n    return <div>\r\n        <h1>Hi!</h1>\r\n        <Link to='/projects/'>Projects</Link>\r\n        <h2>Test below:</h2>\r\n        <CodeFromUrlComponent url='/dist/content/testContent.txt' />\r\n    </div>;\r\n}","export { RenderFromUrlComponent } from './renderFromUrl/RenderFromUrlComponent';\r\nexport { CodeFromUrlComponent } from './renderFromUrl/CodeFromUrlComponent';","import * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport Axios from 'axios-observable';\r\n\r\n\r\nexport function RenderFromUrlComponent({ url }: { url: string }) {\r\n    const [content, setContent] = React.useState(null);\r\n\r\n    React.useEffect(()=>{\r\n        Axios.get(url).subscribe((content) => {\r\n            setContent(content.data);\r\n        });\r\n    }, []);\r\n\r\n    if(content === undefined) {\r\n        return <div>Loading...</div>\r\n    }\r\n    return <div dangerouslySetInnerHTML={{ __html: content}}>\r\n    </div>;\r\n}","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar axios_1 = require(\"axios\");\nfunction createObservable(promiseFactory) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var config = args[args.length - 1];\n    config = config ? __assign({}, config) : {};\n    args[args.length - 1] = config;\n    var cancelSource;\n    var hasCancelToken = !!config.cancelToken;\n    if (hasCancelToken) {\n        console.warn(\"No need to use cancel token, just unsubscribe the subscription would cancel the http request automatically\");\n    }\n    var observable = new rxjs_1.Observable(function (subscriber) {\n        if (!hasCancelToken) {\n            cancelSource = axios_1.default.CancelToken.source();\n            config.cancelToken = cancelSource.token;\n        }\n        promiseFactory.apply(void 0, args).then(function (response) {\n            subscriber.next(response);\n            subscriber.complete();\n        })\n            .catch(function (error) { return subscriber.error(error); });\n    });\n    var _subscribe = observable.subscribe.bind(observable);\n    observable.subscribe = function () {\n        var args2 = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args2[_i] = arguments[_i];\n        }\n        var subscription = _subscribe.apply(void 0, args2);\n        var _unsubscribe = subscription.unsubscribe.bind(subscription);\n        subscription.unsubscribe = function () {\n            if (cancelSource) {\n                cancelSource.cancel();\n            }\n            _unsubscribe();\n        };\n        return subscription;\n    };\n    return observable;\n}\nexports.createObservable = createObservable;\n","import * as React from 'react';\r\nimport Axios from 'axios-observable';\r\n\r\nconst keywords = /([^a-zA-Z0-9_])(public|private|protected|internal|static|void|operator|if|for|while|foreach|do|bool|byte|sbyte|int|uint|long|ulong|short|ushort|string|char|var|true|false|ref|out|class)(?![a-zA-Z0-9_])/g\r\n\r\nexport function CodeFromUrlComponent({ url }: { url: string }) {\r\n    const [content, setContent] = React.useState<string[]>([]);\r\n\r\n    React.useEffect(()=>{\r\n        Axios.get(url).subscribe((content) => {\r\n            let asString = content.data as string;\r\n            asString = asString\r\n                .replace(keywords, \"$1<span class='k'>$2</span>\")\r\n                .replace(/([^a-zA-Z0-9_])((0[bx])?\\d+)/g, \"$1<span class='n'>$2</span>\")\r\n                .replace(/([^a-zA-Z0-9_])(return|break|continue|export|import)(?![a-zA-Z0-9_])/g, \"$1<span class='r'>$2</span>\")\r\n                .replace(/%([a-zA-Z0-9])%/g, \"<span class='$1'>\")\r\n                .replace(/%%/g, \"</span>\");\r\n            const lines = asString.split(/\\r?\\n/)\r\n                .map(l => l === '' ? ' ' : l);\r\n            setContent(lines);\r\n        });\r\n    }, []);\r\n\r\n    if(content.length === 0) {\r\n        return <div>Loading...</div>\r\n    }\r\n    return <div className='code'>\r\n        <div className='lineNums'>\r\n            {content.map((e, i) =>\r\n                <div key={i}>{i}</div>\r\n            )}\r\n        </div>\r\n        <div className='content'>\r\n            {content.map((e, i) =>\r\n                <div key={i} dangerouslySetInnerHTML={{__html:e}} />\r\n            )}\r\n        </div>\r\n    </div>;\r\n}","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AllProjects } from './index';\r\n\r\nexport function ProjectsComponent() {\r\n    return <div>\r\n        <h1>Let's see some projects!</h1>\r\n        <ul>\r\n            {\r\n                AllProjects.map(project => {\r\n                    return <li key={project.projectName}><Link to={'/projects/' + project.projectName}>{project.projectTitle}</Link></li>;\r\n                })\r\n            }\r\n        </ul>\r\n    </div>;\r\n}","import * as React from 'react';\r\nimport Run from '../../../projects/mandelbrot/main'; \r\n\r\nexport function MandelbrotComponent() {\r\n    React.useEffect(() => {\r\n        Run();\r\n    }, []);\r\n    return <div className='mandelbrot mandelbrot_body full_body'>\r\n        <canvas id='mainCanvas'></canvas>\r\n        <canvas id='subCanvas'></canvas>\r\n    </div>;\r\n}","import * as Const from './Constants';\r\nimport { Renderer } from './Renderer';\r\nimport { Mandelbrot } from './iterativeFunctions/Mandelbrot';\r\nimport { Julia } from './iterativeFunctions/Julia';\r\nimport { Range2d, Range, Complex } from '../common';\r\nimport { ClickDragWrapper } from './ClickDragWrapper';\r\n\r\n\r\nlet mandelRender: ClickDragWrapper;\r\nlet juliaRender: ClickDragWrapper;\r\n\r\nexport default function Run() {\r\n    const canvas = document.getElementById('mainCanvas') as HTMLCanvasElement;\r\n    const subCanvas = document.getElementById('subCanvas') as HTMLCanvasElement;\r\n\r\n    canvas.setAttribute('width', Const.CANVAS_WIDTH + '');\r\n    canvas.setAttribute('height', Const.CANVAS_HEIGHT + '');\r\n    canvas.style.width = Const.CANVAS_WIDTH + 'px';\r\n    canvas.style.height = Const.CANVAS_HEIGHT + 'px';\r\n\r\n    subCanvas.setAttribute('width', Const.CANVAS_WIDTH + '');\r\n    subCanvas.setAttribute('height', Const.CANVAS_HEIGHT + '');\r\n    subCanvas.style.width = Const.CANVAS_WIDTH + 'px';\r\n    subCanvas.style.height = Const.CANVAS_HEIGHT + 'px';\r\n\r\n    mandelRender = new ClickDragWrapper(canvas, new Range2d(new Range(-1, 1), new Range(-1, 1)), new Renderer(canvas, new Mandelbrot()), mandelbrotSelect);\r\n    juliaRender = new ClickDragWrapper(subCanvas, new Range2d(new Range(-1, 1), new Range(-1, 1)), new Renderer(subCanvas,  new Julia(new Complex(0, 0))), (x, y) => undefined);\r\n\r\n    setTimeout(Tick, 0);\r\n}\r\n\r\nfunction mandelbrotSelect(x: number, y: number) {\r\n    juliaRender.renderer.func = new Julia(new Complex(x, y));\r\n    juliaRender.reset();\r\n}\r\n\r\nfunction Tick() {\r\n    mandelRender.Tick();\r\n    juliaRender.Tick();\r\n    requestAnimationFrame(Tick);\r\n}","import * as Const from './Constants';\r\nimport { Range2d, Range, ColorRange, Complex } from '../common';\r\nimport { IIterativeFunction } from './iterativeFunctions/IIterativeFunction';\r\nimport { ProgressiveRepaint } from './ProgressiveRepaint';\r\n\r\nconst MAX_DEPTH = 255;\r\nconst PAINT_PER_TICK = Const.CANVAS_WIDTH * 20;\r\nconst paintColor: ColorRange = new ColorRange(0, 255, 0, 200, 0, 0);\r\n\r\nexport class Renderer {\r\n\r\n    private ctx: CanvasRenderingContext2D;\r\n    private screenRange: Range2d;\r\n    private repainter: ProgressiveRepaint;\r\n\r\n    constructor(private canvas: HTMLCanvasElement, public func: IIterativeFunction) {\r\n        this.repainter = new ProgressiveRepaint(Const.CANVAS_WIDTH, Const.CANVAS_HEIGHT);\r\n        this.ctx = canvas.getContext('2d');\r\n        this.screenRange = new Range2d(new Range(0, canvas.offsetWidth), new Range(0, canvas.offsetHeight));\r\n    }\r\n\r\n    Paint(windowRange: Range2d) {\r\n        for (let i = 0; i < PAINT_PER_TICK && !this.repainter.finished; i++) {\r\n            const x = this.repainter.X();\r\n            const y = this.repainter.Y();\r\n            const s = this.repainter.Scale();\r\n            const worldCoords = this.screenRange.ConvertTo({x, y}, windowRange);\r\n            this.ctx.fillStyle = this.CalcColor(worldCoords);\r\n            this.ctx.fillRect(x, y, s, s);\r\n            this.repainter.Advance();\r\n        }\r\n    }\r\n\r\n    CalcColor(coords: {x: number, y: number}): string {\r\n\r\n        const original = new Complex(coords.x, coords.y);\r\n        let rolling = new Complex(coords.x, coords.y);\r\n        let iter = 0;\r\n\r\n        while (iter < MAX_DEPTH && rolling.AbsSq() < this.func.MaxAbsSq()) {\r\n            rolling = this.func.Iterate(rolling, original);\r\n            iter++;\r\n        }\r\n\r\n        if (rolling.AbsSq() < this.func.MaxAbsSq()) {\r\n            return 'white';\r\n        }\r\n\r\n        const perc = iter / MAX_DEPTH;\r\n        return paintColor.ToColor(perc);\r\n    }\r\n\r\n    ResetPaint() {\r\n        this.repainter.Reset();\r\n    }\r\n}","import { Range } from './Range';\r\n\r\nexport class Range2d {\r\n    constructor(public xRange: Range, public yRange: Range) { }\r\n\r\n    public GetValue(xPercent: number, yPercent: number) {\r\n        return { x: this.xRange.GetValue(xPercent), y: this.yRange.GetValue(yPercent) };\r\n    }\r\n\r\n    public GetPercentage(xValue: number, yValue: number) {\r\n        return { x: this.xRange.GetPercentage(xValue), y: this.yRange.GetPercentage(yValue) };\r\n    }\r\n\r\n    public Shift(xAmt: number, yAmt: number) {\r\n        this.xRange.Shift(xAmt);\r\n        this.yRange.Shift(yAmt);\r\n    }\r\n    public ShiftByPercentage(xShift: number, yShift: number) {\r\n        this.xRange.ShiftByPercentage(xShift);\r\n        this.yRange.ShiftByPercentage(yShift);\r\n    }\r\n\r\n    public AspectScale(percent: number, xAnchor = 0.5, yAnchor = 0.5) {\r\n        return this.Scale(percent, xAnchor, percent, yAnchor);\r\n    }\r\n    public Scale(xPercent: number, xAnchor: number, yPercent: number, yAnchor: number) {\r\n        this.xRange.Scale(xPercent, xAnchor);\r\n        this.yRange.Scale(yPercent, yAnchor);\r\n    }\r\n\r\n    public ConvertTo(value: {x: number, y: number}, target: Range2d) {\r\n        const intermediate = this.GetPercentage(value.x, value.y);\r\n        return target.GetValue(intermediate.x, intermediate.y);\r\n    }\r\n}","import { Range } from './Range';\r\nexport class ColorRange {\r\n    public rRange: Range;\r\n    public gRange: Range;\r\n    public bRange: Range;\r\n    constructor(rMin: number, rMax: number, gMin: number, gMax: number, bMin: number, bMax: number) {\r\n        this.rRange = new Range(rMin, rMax);\r\n        this.gRange = new Range(gMin, gMax);\r\n        this.bRange = new Range(bMin, bMax);\r\n    }\r\n\r\n    public ToColor(percentage: number): string {\r\n        return 'rgb(' + Math.floor(this.rRange.GetValue(percentage)) + ','\r\n                      + Math.floor(this.gRange.GetValue(percentage)) + ','\r\n                      + Math.floor(this.bRange.GetValue(percentage)) + ')';\r\n    }\r\n}","export class Complex {\r\n    constructor(public real: number, public imaginary: number) { }\r\n\r\n    public AbsSq(): number {\r\n        return this.real * this.real + this.imaginary * this.imaginary;\r\n    }\r\n    public Abs(): number {\r\n        return Math.sqrt(this.AbsSq());\r\n    }\r\n\r\n    public AddWith(other: Complex) {\r\n        this.real += other.real;\r\n        this.imaginary += other.imaginary;\r\n    }\r\n\r\n    public MultiplyWith(other: Complex) {\r\n        const tmpReal = this.real * other.real - this.imaginary * other.imaginary;\r\n        this.imaginary = this.real * other.imaginary + other.real * this.imaginary;\r\n        this.real = tmpReal;\r\n    }\r\n\r\n    public Pow(power: number) {\r\n        const rs = this.AbsSq();\r\n        const theta = Math.atan2(this.imaginary, this.real);\r\n        this.real = Math.pow(rs, power / 2) * Math.cos(theta);\r\n        this.imaginary = Math.pow(rs, power / 2) * Math.sin(theta);\r\n    }\r\n}","export class ProgressiveRepaint {\r\n    private x: number;\r\n    private y: number;\r\n    private scale: number;\r\n    private maxScale: number;\r\n    public finished: boolean;\r\n\r\n    constructor(private canvasWidth: number, private canvasHeight: number) {\r\n        this.finished = false;\r\n        this.scale = this.maxScale = (1 << this.fastLog2(Math.min(canvasWidth, canvasHeight)));\r\n        this.x = this.y = 0;\r\n    }\r\n\r\n    private fastLog2(v: number) {\r\n        let shift = 0;\r\n        while (v > 0) {\r\n            shift++;\r\n            v >>= 1;\r\n        }\r\n        return shift;\r\n    }\r\n\r\n    X(): number {\r\n        return this.x * this.scale;\r\n    }\r\n    Y(): number {\r\n        return this.y * this.scale;\r\n    }\r\n    Scale(): number {\r\n        return this.scale;\r\n    }\r\n\r\n    // Returns bool done\r\n    Advance(): boolean {\r\n        this.x++;\r\n        if (this.x * this.scale >= this.canvasWidth) {\r\n            this.x = 0;\r\n            this.y++;\r\n            if (this.y * this.scale >= this.canvasHeight) {\r\n                this.y = 0;\r\n                if (this.scale === 1) {\r\n                    this.finished = true;\r\n                    return true;\r\n                }\r\n                else {\r\n                    this.scale /= 2;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    Reset() {\r\n        this.finished = false;\r\n        this.scale = this.maxScale;\r\n        this.x = this.y = 0;\r\n    }\r\n}","import { IIterativeFunction } from './IIterativeFunction';\r\nimport { Complex } from '../../common';\r\n\r\nexport class Mandelbrot implements IIterativeFunction {\r\n    Iterate(rolling: Complex, original: Complex): Complex {\r\n        rolling.MultiplyWith(rolling);\r\n        rolling.AddWith(original);\r\n        return rolling;\r\n    }\r\n\r\n    MaxAbsSq(): number {\r\n        return 2;\r\n    }\r\n}\r\n","import { IIterativeFunction } from './IIterativeFunction';\r\nimport { Complex } from '../../common';\r\n\r\nexport class Julia implements IIterativeFunction {\r\n\r\n    private radius: number;\r\n    constructor(private c: Complex) {\r\n        this.radius = (Math.sqrt(4 * c.Abs() + 1) + 1) / 2;\r\n    }\r\n\r\n    Iterate(rolling: Complex, original: Complex): Complex {\r\n        rolling.MultiplyWith(rolling);\r\n        rolling.AddWith(this.c);\r\n        return rolling;\r\n    }\r\n\r\n    MaxAbsSq(): number {\r\n        return this.radius;\r\n    }\r\n}","import { Range2d, Range } from '../common';\r\nimport { Renderer } from './Renderer';\r\n\r\nconst SCROLL_DIV = 3;\r\nconst SCROLL_POW = 1.1;\r\n\r\nconst MAX_ZOOM_WIDTH = 4;\r\nconst MIN_WINDOW = -2;\r\nconst MAX_WINDOW = 2;\r\n\r\nexport class ClickDragWrapper {\r\n    screenBounds: Range2d;\r\n    constructor(private control: HTMLElement, private paintWindow: Range2d, public renderer: Renderer, private onSelect: (x: number, y: number) => void) {\r\n        control.addEventListener('mousedown', this.handleMouseDown.bind(this));\r\n        control.addEventListener('mouseup', this.handleMouseUp.bind(this));\r\n        control.addEventListener('mouseleave', this.handleMouseLeave.bind(this));\r\n        control.addEventListener('mousemove', this.handleMouseMove.bind(this));\r\n        control.addEventListener('wheel', this.handleScroll.bind(this));\r\n        this.screenBounds = new Range2d(new Range(0, control.offsetWidth), new Range(0, control.offsetHeight));\r\n    }\r\n\r\n    reset() {\r\n        this.paintWindow = new Range2d(new Range(-1, 1), new Range(-1, 1));\r\n        this.renderer.ResetPaint();\r\n    }\r\n\r\n    grabX: number;\r\n    grabY: number;\r\n    isGrabbed: boolean;\r\n    private handleMouseDown(event: MouseEvent) {\r\n        if (event.button === 0) {\r\n            this.grabX = event.offsetX;\r\n            this.grabY = event.offsetY;\r\n            this.isGrabbed = true;\r\n            event.preventDefault();\r\n        }\r\n        else if (event.button === 1) {\r\n            const result = this.screenBounds.ConvertTo({ x: event.offsetX, y: event.offsetY }, this.paintWindow);\r\n            this.onSelect(result.x, result.y);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    private handleMouseUp() {\r\n        this.isGrabbed = false;\r\n    }\r\n    private handleMouseLeave() {\r\n        this.isGrabbed = false;\r\n    }\r\n    private handleMouseMove(event: MouseEvent) {\r\n        if (event.buttons === 4) {\r\n            const result = this.screenBounds.ConvertTo({ x: event.offsetX, y: event.offsetY }, this.paintWindow);\r\n            this.onSelect(result.x, result.y);\r\n            event.preventDefault();\r\n        }\r\n        if (!this.isGrabbed) return;\r\n        const dx = event.offsetX - this.grabX;\r\n        const dy = event.offsetY - this.grabY;\r\n\r\n        const perc = this.screenBounds.GetPercentage(dx, dy);\r\n        this.paintWindow.ShiftByPercentage(-perc.x, -perc.y);\r\n        this.assertBounds();\r\n\r\n\r\n        this.renderer.ResetPaint();\r\n\r\n        this.grabX = event.offsetX;\r\n        this.grabY = event.offsetY;\r\n    }\r\n\r\n    private handleScroll(event: WheelEvent) {\r\n        const scalePercentage = event.deltaY / SCROLL_DIV;\r\n        const scalePerc = Math.pow(SCROLL_POW, scalePercentage);\r\n        const perc = this.screenBounds.GetPercentage(event.offsetX, event.offsetY);\r\n\r\n        this.paintWindow.AspectScale(scalePerc, perc.x, perc.y);\r\n        this.assertBounds();\r\n\r\n        this.renderer.ResetPaint();\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    private assertBounds() {\r\n        if (this.paintWindow.xRange.Length() > MAX_ZOOM_WIDTH || this.paintWindow.yRange.Length() > MAX_ZOOM_WIDTH) {\r\n            this.paintWindow.xRange.ScaleTo(MAX_ZOOM_WIDTH, 0.5);\r\n            this.paintWindow.yRange.ScaleTo(MAX_ZOOM_WIDTH, 0.5);\r\n        }\r\n        this.assertRangeBounds(this.paintWindow.xRange);\r\n        this.assertRangeBounds(this.paintWindow.yRange);\r\n    }\r\n\r\n    private assertRangeBounds(r: Range) {\r\n        if (r.min < MIN_WINDOW) r.Shift(MIN_WINDOW - r.min);\r\n        if (r.max > MAX_WINDOW) r.Shift(MAX_WINDOW - r.max);\r\n    }\r\n\r\n    public Tick() {\r\n        this.renderer.Paint(this.paintWindow);\r\n    }\r\n}","import * as React from 'react';\r\nimport Run from '../../../projects/tile-blend-test-1';\r\n\r\nexport function TileBlendTest1Component() {\r\n    React.useEffect(() => {\r\n        Run();\r\n    }, []);\r\n    return <div className='full_body center'>\r\n        <canvas id='canvas'></canvas>\r\n    </div>;\r\n}","import AssetLoader from '../common/assets/AssetLoader';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport { ResizeCanvas, NearestNeighborScaling } from '../common/CanvasHelpers';\r\nimport blendTilesUrl from '../common-assets/RockLavaAllBlends_crop.png';\r\nimport seletorsUrl from '../common-assets/Selectors16x16.png';\r\nimport { Terrain, TileType } from './Terrain';\r\nimport { Direction, ToPoint } from '../common/position/Direction';\r\nimport Point from '../common/position/Point';\r\n\r\nlet tiles: SpriteSheet;\r\nlet selectors: SpriteSheet;\r\nlet pvMousePos: Point | undefined;\r\nlet terrain: Terrain;\r\nlet context: CanvasRenderingContext2D;\r\n\r\nconst SCALE_FACTOR = 3;\r\n\r\n\r\nfunction Run() {\r\n    const assetLoader = new AssetLoader();\r\n    tiles = new SpriteSheet(8, 8, blendTilesUrl, assetLoader.registerAssetLoadCallback());\r\n    selectors = new SpriteSheet(16, 16, seletorsUrl, assetLoader.registerAssetLoadCallback());\r\n    pvMousePos = undefined;\r\n\r\n    assetLoader.onAllFinished(assetLoadDone);\r\n}\r\n\r\nfunction assetLoadDone() {\r\n    const canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n    terrain = new Terrain(20, 20);\r\n\r\n    ResizeCanvas(canvas, terrain.tilesWide * 16 * SCALE_FACTOR, terrain.tilesHigh * 16 * SCALE_FACTOR);\r\n    context = canvas.getContext('2d');\r\n    NearestNeighborScaling(context);\r\n\r\n    RenderTerrain(context, terrain, tiles);\r\n\r\n    canvas.addEventListener('mousemove', onMouseMove);\r\n    canvas.addEventListener('mouseleave', onMouseLeave);\r\n    canvas.addEventListener('mousedown', onMouseClick);\r\n}\r\n\r\nfunction RenderTerrain(ctx: CanvasRenderingContext2D, terr: Terrain, sprites: SpriteSheet) {\r\n    for (let x = 0; x < terr.tilesWide; x++) {\r\n        for (let y = 0; y < terr.tilesHigh; y++) {\r\n            RenderTerrainCell(ctx, terr, sprites, x, y);\r\n        }\r\n    }\r\n}\r\nfunction RenderTerrainCell(ctx: CanvasRenderingContext2D, terr: Terrain, sprites: SpriteSheet, x: number, y: number) {\r\n    for (let d = 0; d < 4; d++) {\r\n        const dir = Direction.UpRight + (d * 2);\r\n        const spriteSheetX = terr.getSubTileId(x, y, dir);\r\n        let spriteSheetY = d;\r\n        if (terr.getTile(x, y) === TileType.Lava) spriteSheetY += 4;\r\n\r\n        const rtx = x * 16 + (ToPoint(dir).x === 1 ? 8 : 0);\r\n        const rty = y * 16 + (ToPoint(dir).y === 1 ? 8 : 0);\r\n        sprites.render(ctx, rtx * SCALE_FACTOR, rty * SCALE_FACTOR, 8 * SCALE_FACTOR, 8 * SCALE_FACTOR,\r\n            spriteSheetX, spriteSheetY);\r\n    }\r\n}\r\n\r\nfunction onMouseMove(ev: MouseEvent) {\r\n    const mouseCoords = new Point(Math.floor(ev.offsetX / (16 * SCALE_FACTOR)), Math.floor(ev.offsetY / (16 * SCALE_FACTOR)));\r\n    if (pvMousePos !== undefined) {\r\n        if (!mouseCoords.Equals(pvMousePos)) {\r\n            RenderTerrainCell(context, terrain, tiles, pvMousePos.x, pvMousePos.y);\r\n            selectors.render(context, mouseCoords.x * 16 * SCALE_FACTOR, mouseCoords.y * 16 * SCALE_FACTOR, 16 * SCALE_FACTOR, 16 * SCALE_FACTOR,\r\n                1, 0);\r\n            pvMousePos = mouseCoords;\r\n        }\r\n    }\r\n    else {\r\n        selectors.render(context, mouseCoords.x * 16 * SCALE_FACTOR, mouseCoords.y * 16 * SCALE_FACTOR, 16 * SCALE_FACTOR, 16 * SCALE_FACTOR,\r\n            1, 0);\r\n        pvMousePos = mouseCoords;\r\n    }\r\n}\r\n\r\nfunction onMouseLeave(ev: MouseEvent) {\r\n    if (pvMousePos !== undefined) {\r\n        pvMousePos = undefined;\r\n    }\r\n}\r\n\r\nfunction onMouseClick(ev: MouseEvent) {\r\n    const mouseCoords = new Point(Math.floor(ev.offsetX / (16 * SCALE_FACTOR)), Math.floor(ev.offsetY / (16 * SCALE_FACTOR)));\r\n    const tile = terrain.getTile(mouseCoords.x, mouseCoords.y);\r\n    terrain.setTile(mouseCoords.x, mouseCoords.y, tile === TileType.Lava ? TileType.Rock : TileType.Lava);\r\n\r\n    for (let dx = -1; dx <= 1; dx ++) {\r\n        for (let dy = -1; dy <= 1; dy++) {\r\n            RenderTerrainCell(context, terrain, tiles, pvMousePos.x + dx, pvMousePos.y + dy);\r\n        }\r\n    }\r\n\r\n    selectors.render(context, mouseCoords.x * 16 * SCALE_FACTOR, mouseCoords.y * 16 * SCALE_FACTOR, 16 * SCALE_FACTOR, 16 * SCALE_FACTOR,\r\n        1, 0);\r\n}\r\n\r\nexport default Run;","export default __webpack_public_path__ + \"e6ca7ebcac9136ce5511288e898c8371.png\";","export default __webpack_public_path__ + \"f1cd5c392c5447559f3a20ac58e20646.png\";","import { Direction, cardinalDirections, diagonalDirections, ToPoint, allDirections } from '../common/position/Direction';\r\n\r\nexport enum TileType {\r\n    Rock,\r\n    Lava\r\n}\r\n\r\nexport class Terrain {\r\n    private tiles: TileType[];\r\n    private subTileIds: number[];\r\n\r\n    constructor(public tilesWide: number, public tilesHigh: number) {\r\n        this.tiles = new Array(tilesHigh * tilesWide);\r\n        for (let x = 0; x < tilesWide * tilesHigh; x++) {\r\n            this.tiles[x] = TileType.Rock;\r\n        }\r\n\r\n        this.subTileIds = new Array(tilesHigh * tilesWide * 4);\r\n        for (let x = 0; x < tilesWide * tilesHigh * 4; x++) {\r\n            this.subTileIds[x] = 0;\r\n        }\r\n\r\n        for (let x = 0; x < tilesWide; x++) {\r\n            for (let y = 0; y < tilesHigh; y++) {\r\n                this.updateTile(x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    private fixCoords(x: number, y: number) {\r\n        return x + y * this.tilesWide;\r\n    }\r\n\r\n    private fixSubCoords(x: number, y: number, d: Direction) {\r\n        return x * 4 + (y * this.tilesWide * 4) + ((d - Direction.UpRight) / 2);\r\n    }\r\n\r\n    public getTile(x: number, y: number): TileType {\r\n        if (x < 0 || y < 0 || x >= this.tilesWide || y >= this.tilesWide) return TileType.Lava;\r\n        const coords = this.fixCoords(x, y);\r\n        return this.tiles[this.fixCoords(x, y)];\r\n    }\r\n\r\n    public getSubTileId(x: number, y: number, d: Direction) {\r\n        if (x < 0 || y < 0 || x >= this.tilesWide || y >= this.tilesWide) return 0;\r\n        const coords = this.fixSubCoords(x, y, d);\r\n        return this.subTileIds[coords];\r\n    }\r\n\r\n    public setTile(x: number, y: number, t: TileType) {\r\n        if (x < 0 || y < 0 || x >= this.tilesWide || y >= this.tilesWide) return;\r\n        const coords = this.fixCoords(x, y);\r\n        if (this.tiles[coords] === t) return;\r\n\r\n        this.tiles[coords] = t;\r\n        this.updateSelfAndAdjacent(x, y);\r\n    }\r\n\r\n    private updateSelfAndAdjacent(tx: number, ty: number) {\r\n        for (let dx = -1; dx <= 1; dx++) {\r\n            for (let dy = -1; dy <= 1; dy++) {\r\n                this.updateTile(tx + dx, ty + dy);\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateTile(tx: number, ty: number): void {\r\n        if (tx < 0 || ty < 0 || tx >= this.tilesWide || ty >= this.tilesWide) return;\r\n        const tid = this.fixCoords(tx, ty);\r\n        const type = this.tiles[tid];\r\n\r\n        let adjacency = 0x00;\r\n        allDirections.forEach((dir, i) => {\r\n            const adjMask = 1 << i;\r\n            const pt = ToPoint(dir);\r\n            if (this.getTile(pt.x + tx, pt.y + ty) !== type) {\r\n                adjacency |= adjMask;\r\n            }\r\n        });\r\n\r\n        // adjacency now contains a bitmask of (adjacent=different) where\r\n        // b[0] == T diff, b[1] = TR diff, b[2] = R diff, etc...\r\n        // Therefore, bits [0..2] are the TopRight id,\r\n        // bits [2..4] are the BottomRight id,\r\n        // bits [4..6] are the BottomLeft id,\r\n        // bits [6, 7, 0] are the TopLeft id\r\n\r\n        this.subTileIds[this.fixSubCoords(tx, ty, Direction.UpRight)] = adjacency & 0b111;\r\n        this.subTileIds[this.fixSubCoords(tx, ty, Direction.DownRight)] = (adjacency >> 2) & 0b111;\r\n        this.subTileIds[this.fixSubCoords(tx, ty, Direction.DownLeft)] = (adjacency >> 4) & 0b111;\r\n        this.subTileIds[this.fixSubCoords(tx, ty, Direction.UpLeft)] = (adjacency >> 6) | ((adjacency & 1) << 2) & 0b111;\r\n    }\r\n}","import * as React from 'react';\r\nimport Run from '../../../projects/spell-test';\r\n\r\nexport function SpellTestComponent() {\r\n    React.useEffect(() => {\r\n        Run();\r\n    }, []);\r\n    return <div className='full_body center'>\r\n        <canvas id='canvas'></canvas>\r\n    </div>;\r\n}","import AssetLoader from '../common/assets/AssetLoader';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport arrowsUrl from '../common-assets/arrows.png';\r\nimport { ResizeCanvas, NearestNeighborScaling } from '../common/CanvasHelpers';\r\nimport { SpellGroup } from './spells/SpellGroup';\r\nimport { ERepeat, EArrow, Matches } from './EArrow';\r\nimport { SpellStep } from './spells/SpellStep';\r\n\r\nconst handledKeys = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', ' '];\r\n\r\nexport default function Run() {\r\n    const assetLoader = new AssetLoader();\r\n    const arrows = new SpriteSheet(16, 16, arrowsUrl, assetLoader.registerAssetLoadCallback());\r\n\r\n    assetLoader.onAllFinished(() => Start(arrows));\r\n}\r\n\r\nfunction Start(arrows: SpriteSheet) {\r\n\r\n    const canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n    ResizeCanvas(canvas, 500, 500);\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.scale(2, 2);\r\n    NearestNeighborScaling(ctx);\r\n\r\n    const spell = SpellGroup.Parse('ud(lr(lru)?)+as');\r\n    const steps = SpellStep.FirstSteps(spell);\r\n\r\n    PrintSpell(spell, arrows, ctx, steps, 0);\r\n\r\n    document.addEventListener('keydown', (k) => {\r\n        if (handledKeys.indexOf(k.key) !== -1) {\r\n            AdvanceAndPrint(steps, k.key, spell, arrows, ctx);\r\n            k.preventDefault();\r\n        }\r\n    });\r\n}\r\n\r\nfunction AdvanceAndPrint(currentSteps: SpellStep[], key: string, spell: SpellGroup, arrows: SpriteSheet, ctx: CanvasRenderingContext2D) {\r\n    if (key === ' ') {\r\n        currentSteps.splice(0, currentSteps.length, ...SpellStep.FirstSteps(spell));\r\n    }\r\n    else {\r\n        const pressedArrow = key === 'ArrowUp' ? EArrow.Up : key === 'ArrowDown' ? EArrow.Down : key === 'ArrowLeft' ? EArrow.Left : EArrow.Right;\r\n        const lastLength = currentSteps.length;\r\n        for (let i = currentSteps.length - 1; i >= 0; i--) {\r\n            const step = currentSteps[i];\r\n            if (Matches(pressedArrow, step.ArrowHere())) {\r\n                currentSteps.splice(currentSteps.length, 0, ...step.NextSteps());\r\n            }\r\n        }\r\n        currentSteps.splice(0, lastLength);\r\n    }\r\n    ctx.clearRect(0, 0, 500, 500);\r\n    PrintSpell(spell, arrows, ctx, currentSteps, 0);\r\n}\r\n\r\nfunction PrintSpell(spell: SpellGroup, arrows: SpriteSheet, ctx: CanvasRenderingContext2D, steps: SpellStep[], dx: number): number {\r\n    // Draw parens?\r\n    const drawParens = spell.parent !== undefined && spell.content.length > 1;\r\n    if (drawParens) {\r\n        arrows.renderCustom(ctx, dx, 0, 8, 16, 0, 4, 8, 16);\r\n        dx += 8;\r\n    }\r\n\r\n    // Reverse-sort by index\r\n    const selfSteps = steps.filter(s => s.spell === spell).sort((a, b) => b.index - a.index);\r\n\r\n    for (const [i, c] of spell.content.entries()) {\r\n        if (SpellGroup.isArrow(c)) {\r\n            arrows.render(ctx, dx, 0, 16, 16, (c as number) % 4, 2 + Math.floor((c as number) / 4));\r\n            if (selfSteps.length > 0 && selfSteps[selfSteps.length - 1].index === i) {\r\n                arrows.render(ctx, dx, 2, 16, 16, 2, 4);\r\n                selfSteps.pop();\r\n            }\r\n            dx += 16;\r\n        }\r\n        else {\r\n            dx = PrintSpell(c, arrows, ctx, steps, dx);\r\n        }\r\n    }\r\n\r\n    if (drawParens) {\r\n        arrows.renderCustom(ctx, dx, 0, 8, 16, 1, 4, 8, 16);\r\n        dx += 8;\r\n    }\r\n\r\n    if (spell.repeatType === ERepeat.Optional) {\r\n        ctx.drawImage(arrows.image, 16 + 8, 16 * 4, 8, 8, dx, 0, 8, 8);\r\n        dx += 8;\r\n    }\r\n    else if (spell.repeatType === ERepeat.Repeatable) {\r\n        ctx.drawImage(arrows.image, 16, 16 * 4, 8, 8, dx, 0, 8, 8);\r\n        dx += 8;\r\n    }\r\n\r\n    return dx;\r\n}","import { SpellGroup } from './SpellGroup';\r\nimport { EArrow, ERepeat } from '../EArrow';\r\n\r\nexport class SpellStep {\r\n    constructor(public spell: SpellGroup, public index: number) {\r\n\r\n    }\r\n\r\n    public static FirstSteps(group: SpellGroup): SpellStep[] {\r\n        return new SpellStep(group, -1).NextSteps();\r\n    }\r\n\r\n    public ArrowHere(): EArrow {\r\n        return this.spell.content[this.index] as EArrow;\r\n    }\r\n\r\n    public NextSteps(): SpellStep[] {\r\n        const nextIndex = this.index + 1;\r\n        if (nextIndex >= this.spell.content.length) {\r\n            // This is a step-out\r\n            if (this.spell.parent === undefined) return [];\r\n            // Step out and forward\r\n            const parentNextSteps = new SpellStep(this.spell.parent.parent, this.spell.parent.parentIndex).NextSteps();\r\n            if (this.spell.repeatType === ERepeat.Repeatable) {\r\n                const firsts = SpellStep.FirstSteps(this.spell);\r\n                parentNextSteps.splice(parentNextSteps.length, 0, ...firsts);\r\n            }\r\n            return parentNextSteps;\r\n        }\r\n        else {\r\n            // If the next spot is an arrow, return just it\r\n            if (SpellGroup.isArrow(this.spell.content[nextIndex])) {\r\n                return [ new SpellStep(this.spell, nextIndex) ];\r\n            }\r\n            else {\r\n                const group = this.spell.content[nextIndex] as SpellGroup;\r\n                const stepInto = SpellStep.FirstSteps(group);\r\n                if (group.repeatType === ERepeat.Optional) {\r\n                    // see if we can step-over\r\n                    const stepOver = new SpellStep(this.spell, this.index + 1).NextSteps();\r\n                    stepInto.splice(stepInto.length, 0, ...stepOver);\r\n                }\r\n                return stepInto;\r\n            }\r\n        }\r\n    }\r\n\r\n    public Equals(other: SpellStep) {\r\n        return this.spell === other.spell && this.index === other.index;\r\n    }\r\n}","import * as React from 'react';\r\nimport Run from '../../../projects/rpgt';\r\n\r\nexport function RpgTestComponent() {\r\n    React.useEffect(() => {\r\n        Run();\r\n    }, []);\r\n    return <div className='rpgt rpgt_body full_body center'>\r\n        <canvas id='mainCanvas'></canvas>\r\n        <canvas style={{display: 'none'}} id='world_prerender'></canvas>\r\n    </div>;\r\n}","import * as Const from './Constants';\r\nimport AssetLoader from '../common/assets/AssetLoader';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport arrowsUrl from '../common-assets/arrows.png';\r\nimport tilesUrl from '../common-assets/rpg1.png';\r\nimport wizardUrl from '../common-assets/wizard16.png';\r\nimport { NearestNeighborScaling, ResizeCanvas } from '../common/CanvasHelpers';\r\nimport NearestNeighborScalingHelper from '../common/NearestNeighborScalingHelper';\r\nimport World from './world/World';\r\nimport Cell from './world/Cell';\r\nimport Rect from '../common/position/Rectangle';\r\nimport KeyboardManager from '../common/input/KeyboardManager';\r\nimport Point from '../common/position/Point';\r\n\r\nconst CAMERA_SLOWDOWN_FACTOR = 3;\r\n\r\nlet sprites: {\r\n    tiles: SpriteSheet,\r\n    wizard: SpriteSheet,\r\n    arrows: SpriteSheet\r\n};\r\n\r\nlet ctx: CanvasRenderingContext2D;\r\n\r\nlet world: World;\r\n\r\nlet keys: KeyboardManager;\r\n\r\nexport default function Run() {\r\n    const assetLoader = new AssetLoader();\r\n    sprites = {\r\n        tiles: new SpriteSheet(16, 16, tilesUrl, assetLoader.registerAssetLoadCallback()),\r\n        wizard: new SpriteSheet(16, 16, wizardUrl, assetLoader.registerAssetLoadCallback()),\r\n        arrows: new SpriteSheet(16, 16, arrowsUrl, assetLoader.registerAssetLoadCallback()),\r\n    };\r\n    keys = new KeyboardManager(document.body);\r\n    assetLoader.onAllFinished(assetLoadDone);\r\n}\r\n\r\nfunction assetLoadDone() {\r\n    world = new World(Const.TILES_WIDE * 2, Const.TILES_HIGH * 2, () => {\r\n        if (Math.random() <= 0.15) {\r\n            return Cell.RockWall(sprites.tiles);\r\n        }\r\n        else {\r\n            return Cell.GrassFloor(sprites.tiles);\r\n        }\r\n    });\r\n    world.updatePrerender();\r\n    const canvas = document.getElementById('mainCanvas') as HTMLCanvasElement;\r\n    ctx = canvas.getContext('2d');\r\n    const scaleHelper = new NearestNeighborScalingHelper(canvas, ctx, Const.TILE_SIZE * Const.TILES_WIDE, Const.TILE_SIZE * Const.TILES_HIGH, () => { return; });\r\n    tick();\r\n}\r\n\r\nconst camPos = new Point(0, 0);\r\nconst playerPos = new Rect(0, 0, 14, 14);\r\nlet toggle = false;\r\nfunction tick() {\r\n    ctx.clearRect(0, 0, Const.TILES_WIDE * Const.TILE_SIZE, Const.TILES_HIGH * Const.TILE_SIZE);\r\n    NearestNeighborScaling(ctx);\r\n    ctx.save();\r\n    let cx = 0;\r\n    let cy = 0;\r\n    if (world.width > Const.TILES_WIDE) {\r\n        cx = Math.max(0, Math.min((world.width - Const.TILES_WIDE) * Const.TILE_SIZE, playerPos.x - (Const.TILE_SIZE * Const.TILES_WIDE / 2)));\r\n    }\r\n    if (world.height > Const.TILES_HIGH) {\r\n        cy = Math.max(0, Math.min((world.height - Const.TILES_HIGH) * Const.TILE_SIZE, playerPos.y - (Const.TILE_SIZE * Const.TILES_HIGH / 2)));\r\n    }\r\n\r\n    camPos.MultWith(CAMERA_SLOWDOWN_FACTOR, CAMERA_SLOWDOWN_FACTOR)\r\n          .AddWith(cx, cy)\r\n          .DivideWith(CAMERA_SLOWDOWN_FACTOR + 1, CAMERA_SLOWDOWN_FACTOR + 1);\r\n\r\n    ctx.translate(-camPos.x, -camPos.y);\r\n    ctx.drawImage(world.prerender, 0, 0);\r\n    keys.update();\r\n\r\n    ctx.fillStyle = 'blue';\r\n    ctx.fillRect(playerPos.x, playerPos.y, playerPos.w, playerPos.h);\r\n    const vel = new Point(0, 0);\r\n    if (keys.isKeyDown('a')) {\r\n        vel.x = -3;\r\n    }\r\n    if (keys.isKeyDown('d')) {\r\n        vel.x = 3;\r\n    }\r\n    if (keys.isKeyDown('w')) {\r\n        vel.y = -3;\r\n    }\r\n    if (keys.isKeyDown('s')) {\r\n        vel.y = 3;\r\n    }\r\n    ctx.fillStyle = 'yellow';\r\n    ctx.globalAlpha = 0.6;\r\n    world.tryMoveEntity(playerPos, vel, (tx, ty) => {\r\n        ctx.fillRect(tx * Const.TILE_SIZE, ty * Const.TILE_SIZE, Const.TILE_SIZE, Const.TILE_SIZE);\r\n    });\r\n    ctx.globalAlpha = 1;\r\n\r\n    toggle = !toggle;\r\n    if (toggle) {\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillRect(0, 0, 10, 10);\r\n    }\r\n    ctx.restore();\r\n    requestAnimationFrame(() => tick());\r\n}","export default __webpack_public_path__ + \"42ace1eb95edbc899165c10bb9cc20ab.png\";","export default __webpack_public_path__ + \"e5352b303b79e08de36a8c4248cdbb28.png\";","import { ResizeCanvas } from './CanvasHelpers';\r\n\r\nexport default class NearestNeighborScalingHelper {\r\n\r\n    public scaleFactor: number;\r\n    constructor(public canvas: HTMLCanvasElement, public context: CanvasRenderingContext2D, public baseWidth: number, public baseHeight: number, public onResize: (() => void)|undefined) {\r\n        this.Rescale();\r\n        window.addEventListener('resize', () => this.Rescale());\r\n    }\r\n\r\n    public Rescale() {\r\n        const currentWidth = window.innerWidth;\r\n        const currentHeight = window.innerHeight;\r\n        const maxXScale = currentWidth / this.baseWidth;\r\n        const maxYScale = currentHeight / this.baseHeight;\r\n\r\n        this.scaleFactor = Math.max(Math.floor(Math.min(maxXScale, maxYScale)), 1);\r\n        ResizeCanvas(this.canvas, this.scaleFactor * this.baseWidth, this.baseHeight * this.scaleFactor);\r\n\r\n        this.context.setTransform(this.scaleFactor, 0, 0, this.scaleFactor, 0, 0);\r\n\r\n        if (this.onResize !== undefined) {\r\n            this.onResize();\r\n        }\r\n    }\r\n}","import Cell from './Cell';\r\nimport Rect from '../../common/position/Rectangle';\r\nimport Point from '../../common/position/Point';\r\nimport { Direction } from '../../common/position/Direction';\r\nimport { IterateRange } from '../../common/Iterate';\r\nimport * as Const from '../Constants';\r\nimport { createContext } from 'react';\r\nimport { ResizeCanvas } from '../../common/CanvasHelpers';\r\n\r\nexport default class World {\r\n    cells: Cell[][];\r\n\r\n    public prerender: HTMLCanvasElement;\r\n\r\n    constructor(public width: number, public height: number, generateCell: () => Cell) {\r\n        this.cells = [];\r\n        for (let x = 0; x < width; x++) {\r\n            const col = [];\r\n            for (let y = 0; y < height; y++) {\r\n                col.push(generateCell());\r\n            }\r\n            this.cells.push(col);\r\n        }\r\n\r\n        this.prerender = document.getElementById('world_prerender') as HTMLCanvasElement;\r\n    }\r\n\r\n    updatePrerender() {\r\n        ResizeCanvas(this.prerender, Const.TILE_SIZE * this.width, Const.TILE_SIZE * this.height);\r\n        const pctx = this.prerender.getContext('2d');\r\n        for (let x = 0; x < this.width; x++) {\r\n            for (let y = 0; y < this.height; y++) {\r\n                this.cells[x][y].paint(pctx, x * Const.TILE_SIZE, y * Const.TILE_SIZE);\r\n            }\r\n        }\r\n    }\r\n\r\n    tryMoveEntity(pos: Rect, vel: Point, onChecked?: (x: number, y: number) => void): void {\r\n        const xDirection = vel.x >= 0 ? Direction.Right : Direction.Left;\r\n        const yDirection = vel.y >= 0 ? Direction.Down : Direction.Up;\r\n        if (vel.x !== 0) {\r\n            const startXTile = Math.floor(pos.Edge(xDirection) / Const.TILE_SIZE);\r\n            const endXTile = Math.floor((pos.Edge(xDirection) + vel.x) / Const.TILE_SIZE);\r\n            const startYTile = Math.floor(pos.Edge(Direction.Up) / Const.TILE_SIZE);\r\n            const endYTile = Math.floor((pos.Edge(Direction.Down) - 1) / Const.TILE_SIZE);\r\n\r\n            let xColision: number | undefined;\r\n            IterateRange(startXTile, endXTile, (x, ctrl) => {\r\n                for (let y = startYTile; y <= endYTile; y++) {\r\n                    if (x < 0 || x >= this.width) {\r\n                        xColision = x;\r\n                        ctrl.break();\r\n                        return;\r\n                    }\r\n                    if (onChecked) onChecked(x, y);\r\n                    if (!this.cells[x][y].pathable) {\r\n                        ctrl.break();\r\n                        xColision = x;\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (xColision === undefined) {\r\n                pos.x += vel.x;\r\n            } else {\r\n                if (vel.x >= 0) pos.x = xColision * Const.TILE_SIZE - pos.w;\r\n                else pos.x = (xColision + 1) * Const.TILE_SIZE;\r\n            }\r\n        }\r\n        if (vel.y !== 0) {\r\n            const startYTile = Math.floor(pos.Edge(yDirection) / Const.TILE_SIZE);\r\n            const endYTile = Math.floor((pos.Edge(yDirection) + vel.y) / Const.TILE_SIZE);\r\n            const startXTile = Math.floor(pos.Edge(Direction.Left) / Const.TILE_SIZE);\r\n            const endXTile = Math.floor((pos.Edge(Direction.Right) - 1) / Const.TILE_SIZE);\r\n\r\n            let yColision: number | undefined;\r\n            IterateRange(startYTile, endYTile, (y, ctrl) => {\r\n                for (let x = startXTile; x <= endXTile; x++) {\r\n                    if (y < 0 || y >= this.height) {\r\n                        yColision = y;\r\n                        ctrl.break();\r\n                        return;\r\n                    }\r\n                    if (onChecked) onChecked(x, y);\r\n                    if (!this.cells[x][y].pathable) {\r\n                        ctrl.break();\r\n                        yColision = y;\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (yColision === undefined) {\r\n                pos.y += vel.y;\r\n            } else {\r\n                if (vel.y >= 0) pos.y = yColision * Const.TILE_SIZE - pos.h;\r\n                else pos.y = (yColision + 1) * Const.TILE_SIZE;\r\n            }\r\n        }\r\n    }\r\n}","\r\nexport interface ILoopControl {\r\n    break(): void;\r\n}\r\n\r\nexport function IterateRange(start: number, end: number, handle: (value: number, control: ILoopControl) => void): void {\r\n    let breakIteration = false;\r\n    const loopControl = {\r\n        break: () => {\r\n            breakIteration = true;\r\n        }\r\n    };\r\n\r\n    if (end === start) {\r\n        handle(start, loopControl);\r\n        return;\r\n    }\r\n\r\n    const direction = end > start ? 1 : -1;\r\n    const finalValue = end + direction;\r\n\r\n    for (let i = start; i !== finalValue && !breakIteration; i += direction) {\r\n        handle(i, loopControl);\r\n    }\r\n}","import { IGraphic } from '../IGraphic';\r\nimport * as Const from '../Constants';\r\nimport { SpriteSheet } from '../../common/assets/SpriteSheet';\r\nimport SheetGraphic from '../SheetGraphic';\r\n\r\nconst GRASS_TILES: [number, number][] =\r\n[\r\n    [10, 0],\r\n    [10, 0],\r\n    [10, 0],\r\n    [10, 0],\r\n    [10, 0],\r\n    [7, 1],\r\n    [7, 1],\r\n    [10, 1],\r\n    [10, 2],\r\n    [9, 2]\r\n];\r\n\r\nexport default class Cell {\r\n    constructor(public pathable: boolean, public graphic: IGraphic) {\r\n\r\n    }\r\n\r\n    paint(ctx: CanvasRenderingContext2D, tx: number, ty: number) {\r\n        this.graphic.paint(ctx, tx, ty, Const.TILE_SIZE, Const.TILE_SIZE);\r\n    }\r\n\r\n    static GrassFloor(sheet: SpriteSheet): Cell {\r\n        const grassCoords = GRASS_TILES[Math.floor(Math.random() * GRASS_TILES.length)];\r\n        return new Cell(true, new SheetGraphic(sheet, grassCoords[0], grassCoords[1]));\r\n    }\r\n\r\n    static RockWall(sheet: SpriteSheet): Cell {\r\n        return new Cell(false, new SheetGraphic(sheet, 7, 24));\r\n    }\r\n}","import { IGraphic } from './IGraphic';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\n\r\nexport default class SheetGraphic implements IGraphic {\r\n\r\n    width: number;\r\n    height: number;\r\n\r\n    constructor(public sheet: SpriteSheet, private tileX: number, private tileY: number) {\r\n        this.width = sheet.spriteWidth;\r\n        this.height = sheet.spriteHeight;\r\n    }\r\n\r\n    paint(ctx: CanvasRenderingContext2D, tx: number, ty: number, tw: number, th: number): void {\r\n        this.sheet.render(ctx, tx, ty, tw, th, this.tileX, this.tileY);\r\n    }\r\n\r\n}","import Point from './Point';\r\nimport { Direction, ECardinalDirection, EDiagonalDirection } from './Direction';\r\n\r\nexport default class Rect {\r\n    constructor(public x: number, public y: number, public w: number, public h: number) { }\r\n\r\n    Shift(x: number, y: number): Rect;\r\n    Shift(p: Point): Rect;\r\n    Shift(xp: number | Point, y?: number): Rect {\r\n        if (y === undefined) {\r\n            return new Rect(this.x + (xp as Point).x, this.y + (xp as Point).y, this.w, this.h);\r\n        }\r\n        return new Rect(this.x + (xp as number), this.y + y, this.w, this.h);\r\n    }\r\n\r\n    ShiftBy(x: number, y: number): void;\r\n    ShiftBy(p: Point): void;\r\n    ShiftBy(xp: number | Point, y?: number): void {\r\n        if (y === undefined) {\r\n            this.x += (xp as Point).x;\r\n            this.y += (xp as Point).y;\r\n        } else {\r\n            this.x += (xp as number);\r\n            this.y += y;\r\n        }\r\n    }\r\n\r\n    Edge(direction: ECardinalDirection): number {\r\n        switch (direction) {\r\n            case Direction.Up: return this.y;\r\n            case Direction.Down: return this.y + this.h;\r\n            case Direction.Left: return this.x;\r\n            case Direction.Right: return this.x + this.w;\r\n        }\r\n    }\r\n\r\n    Corner(direction: EDiagonalDirection): Point {\r\n        switch (direction) {\r\n            case Direction.UpRight: return new Point(this.x, this.y);\r\n            case Direction.DownRight: return new Point(this.x, this.y);\r\n            case Direction.DownLeft: return new Point(this.x, this.y);\r\n            case Direction.UpLeft: return new Point(this.x, this.y);\r\n        }\r\n    }\r\n\r\n    equals(r: Rect) {\r\n        return r.x === this.x && r.y === this.y && r.w === this.w && r.h === this.h;\r\n    }\r\n}","import KeyWatcher, { IKeyChange } from './KeyWatcher';\r\nimport KeyState from './KeyState';\r\n\r\nexport default class KeyboardManager {\r\n\r\n    watcher: KeyWatcher;\r\n    prvState: KeyState;\r\n    currentState: KeyState;\r\n\r\n    constructor(element: HTMLElement, logKeyNames?: boolean) {\r\n        this.watcher = new KeyWatcher(element, logKeyNames);\r\n        this.prvState = this.currentState = this.watcher.Update();\r\n    }\r\n\r\n    public update(): void {\r\n        this.prvState = this.currentState;\r\n        this.currentState = this.watcher.Update();\r\n    }\r\n\r\n    public isKeyDown(key: string): boolean {\r\n        return this.currentState.isKeyDown(key);\r\n    }\r\n\r\n    public isKeyUp(key: string): boolean {\r\n        return this.currentState.isKeyUp(key);\r\n    }\r\n\r\n    public isKeyPressed(key: string): boolean {\r\n        return this.currentState.isKeyDown(key) && this.prvState.isKeyUp(key);\r\n    }\r\n\r\n    public isKeyReleased(key: string): boolean {\r\n        return this.currentState.isKeyUp(key) && this.prvState.isKeyDown(key);\r\n    }\r\n\r\n    public changes(): IKeyChange[] {\r\n        return this.currentState.changes;\r\n    }\r\n}","import KeyState from './KeyState';\r\n\r\nexport interface IKeyChange {\r\n    key: string;\r\n    change: 'press'|'release';\r\n}\r\n\r\nexport default class KeyWatcher {\r\n    downKeys: string[];\r\n    changes: IKeyChange[];\r\n\r\n    constructor(public attachedElement: HTMLElement, private logKeyNames?: boolean) {\r\n        if  (this.logKeyNames === undefined) {\r\n            this.logKeyNames = false;\r\n        }\r\n        attachedElement.addEventListener('keydown', k => this.onKeyDown(k));\r\n        attachedElement.addEventListener('keyup', k => this.onKeyUp(k));\r\n\r\n        this.downKeys = [];\r\n        this.changes = [];\r\n    }\r\n\r\n    private onKeyDown(key: KeyboardEvent) {\r\n        if (this.logKeyNames) {\r\n            // tslint:disable-next-line: no-console\r\n            console.log(key.key);\r\n        }\r\n        const idx = this.downKeys.indexOf(key.key);\r\n        if (idx === -1) {\r\n            this.changes.push({ key: key.key, change: 'press' });\r\n            this.downKeys.push(key.key);\r\n        }\r\n    }\r\n\r\n    private onKeyUp(key: KeyboardEvent) {\r\n        this.changes.push({ key: key.key, change: 'release' });\r\n        const idx = this.downKeys.indexOf(key.key);\r\n        this.downKeys.splice(idx, 1);\r\n    }\r\n\r\n    public Update(): KeyState {\r\n        const storeKeys = this.downKeys;\r\n        const storeChanges = this.changes;\r\n\r\n        this.downKeys = storeKeys.slice();\r\n        this.changes = [];\r\n\r\n        return new KeyState(storeKeys, storeChanges);\r\n    }\r\n}","import { IKeyChange } from './KeyWatcher';\r\n\r\nexport default class KeyState {\r\n    constructor(public keys: string[], public changes: IKeyChange[]) {\r\n\r\n    }\r\n\r\n    public isKeyDown(key: string) {\r\n        return this.keys.indexOf(key) !== -1;\r\n    }\r\n\r\n    public isKeyUp(key: string) {\r\n        return this.keys.indexOf(key) === -1;\r\n    }\r\n}","import * as React from 'react';\r\n\r\nexport interface IPageProps {\r\n    title: string;\r\n    component: () => JSX.Element;\r\n}\r\n\r\nexport class Page extends React.Component<IPageProps, {}> {\r\n    componentDidMount() {\r\n        document.title = this.props.title;\r\n    }\r\n    render() {\r\n        // tslint:disable-next-line: variable-name\r\n        const PageComponent = this.props.component;\r\n\r\n        return (\r\n            <PageComponent />\r\n        );\r\n    }\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; }, 0);\n}","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!(<any>teardown)) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { noop } from './noop';\nimport { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse\n   * @deprecated use new Subject() instead\n  */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the *publish* operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { tap, publish, refCount } from 'rxjs/operators';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap((num) => console.log(`refCount ${num}`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap((num) => console.log(`publish ${num}`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the publish operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // )\n    // .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = (() => {\n  const connectableProto = <any>ConnectableObservable.prototype;\n  return {\n    operator: { value: null as null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null as null, writable: true },\n    _connection: { value: null as null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n  };\n})();\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // ).subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the keySelector function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Elsewhere, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the key field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the elementSelector function.\n *\n * ## Examples\n *\n * ### Group objects by id and return as array\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { mergeMap, groupBy, reduce } from 'rxjs/operators';\n *\n * of(\n *   {id: 1, name: 'JavaScript'},\n *   {id: 2, name: 'Parcel'},\n *   {id: 2, name: 'webpack'},\n *   {id: 1, name: 'TypeScript'},\n *   {id: 3, name: 'TSLint'}\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap((group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], []))),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'JavaScript'},\n * //   { id: 1, name: 'TypeScript'} ]\n * //\n * // [ { id: 2, name: 'Parcel'},\n * //   { id: 2, name: 'webpack'} ]\n * //\n * // [ { id: 3, name: 'TSLint'} ]\n * ```\n *\n * ### Pivot data on the id field\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { groupBy, map, mergeMap, reduce } from 'rxjs/operators';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * )\n *   .pipe(\n *     groupBy(p => p.id, p => p.name),\n *     mergeMap(group$ =>\n *       group$.pipe(reduce((acc, cur) => [...acc, cur], [`${group$.key}`]))\n *     ),\n *     map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n *  )\n *  .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T | R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map<K, Subject<T | R>>();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = (this.subjectSelector ? this.subjectSelector() : new Subject<R>()) as Subject<T | R>;\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T | any>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  /** @deprecated Do not construct this type. Internal use only */\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const { refCountSubscription, groupSubject } = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```ts\n * import { empty } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```ts\n * import { empty, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return An \"empty\" Observable: emits only the complete\n * notification.\n * @deprecated Deprecated in favor of using {@link EMPTY} constant, or {@link scheduled} (e.g. `scheduled([], scheduler)`)\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  subscriber.complete();\n};\n","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { deprecate } from 'util';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated NotificationKind is deprecated as const enums are not compatible with isolated modules. Use a string literal instead.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: 'N' | 'E' | 'C', public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let i = 0;\n    sub.add(scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n        return;\n      }\n      subscriber.next(input[i++]);\n      if (!subscriber.closed) {\n        sub.add(this.schedule());\n      }\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return scheduleArray(input, scheduler);\n  }\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { Observable } from '../Observable';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T>(a: T, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2>(a: T, b: T2, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: (T | SchedulerLike)[]): Observable<T>;\n\n// TODO(benlesh): Update the typings for this when we can switch to TS 3.x\nexport function of<T>(a: T): Observable<T>;\nexport function of<T, T2>(a: T, b: T2): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: T[]): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n    return scheduleArray(args as T[], scheduler);\n  } else {\n    return fromArray(args as T[]);\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * ![](throw.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then emit an error\n * ```ts\n * import { throwError, concat, of } from 'rxjs';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // 7\n * // Error: oops!\n * ```\n *\n * ---\n *\n * ### Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 2\n * ```ts\n * import { throwError, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 2\n *     ? throwError('Twos are bad')\n *     : of('a', 'b', 'c')\n *   ),\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // a\n * // b\n * // c\n * // a\n * // b\n * // c\n * // Twos are bad\n * ```\n *\n * @see {@link Observable}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throwError\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n * Ensure values in subscribe are called just before browser repaint.\n * ```ts\n * import { interval } from 'rxjs';\n * import { observeOn } from 'rxjs/operators';\n *\n * const intervals = interval(10);                // Intervals are scheduled\n *                                                // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler),          // ...but we will observe on animationFrame\n * )                                              // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  /** @nocollapse */\n  static dispatch(this: SchedulerAction<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: SchedulerLike,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    const destination = this.destination as Subscription;\n    destination.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Subject } from './Subject';\nimport { SchedulerLike } from './types';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * A variant of Subject that \"replays\" or emits old values to new subscribers.\n * It buffers a set number of values and will emit those values immediately to\n * any new subscribers in addition to emitting new values to existing subscribers.\n *\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: (ReplayEvent<T> | T)[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n  private _infiniteTimeWindow: boolean = false;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: SchedulerLike) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      this._infiniteTimeWindow = true;\n      this.next = this.nextInfiniteTimeWindow;\n    } else {\n      this.next = this.nextTimeWindow;\n    }\n  }\n\n  private nextInfiniteTimeWindow(value: T): void {\n    const _events = this._events;\n    _events.push(value);\n    // Since this method is invoked in every next() call than the buffer\n    // can overgrow the max size only by one item\n    if (_events.length > this._bufferSize) {\n      _events.shift();\n    }\n\n    super.next(value);\n  }\n\n  private nextTimeWindow(value: T): void {\n    this._events.push(new ReplayEvent(this._getNow(), value));\n    this._trimBufferThenGetEvents();\n\n    super.next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n    const _infiniteTimeWindow = this._infiniteTimeWindow;\n    const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    const len = _events.length;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.isStopped || this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    if (_infiniteTimeWindow) {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(<T>_events[i]);\n      }\n    } else {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next((<ReplayEvent<T>>_events[i]).value);\n      }\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = <ReplayEvent<T>[]>this._events;\n\n    const eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    RESOLVED.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @nodoc\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable<T>(obj: any): obj is Observable<T> {\n  return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","export interface ArgumentOutOfRangeError extends Error {\n}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  new(): ArgumentOutOfRangeError;\n}\n\nconst ArgumentOutOfRangeErrorImpl = (() => {\n  function ArgumentOutOfRangeErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n  }\n\n  ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ArgumentOutOfRangeErrorImpl;\n})();\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = ArgumentOutOfRangeErrorImpl as any;","export interface EmptyError extends Error {\n}\n\nexport interface EmptyErrorCtor {\n  new(): EmptyError;\n}\n\nconst EmptyErrorImpl = (() => {\n  function EmptyErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'no elements in sequence';\n    this.name = 'EmptyError';\n    return this;\n  }\n\n  EmptyErrorImpl.prototype = Object.create(Error.prototype);\n\n  return EmptyErrorImpl;\n})();\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = EmptyErrorImpl as any;","export interface TimeoutError extends Error {\n}\n\nexport interface TimeoutErrorCtor {\n  new(): TimeoutError;\n}\n\nconst TimeoutErrorImpl = (() => {\n  function TimeoutErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    return this;\n  }\n\n  TimeoutErrorImpl.prototype = Object.create(Error.prototype);\n\n  return TimeoutErrorImpl;\n})();\n\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link operators/timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = TimeoutErrorImpl as any;\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: R;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n\n// tslint:disable:max-line-length\n/** @deprecated resultSelector is no longer supported, use a mapping function. */\nexport function bindCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindCallback<R1, R2, R3, R4>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): () => Observable<any[]>;\nexport function bindCallback<R1, R2, R3>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindCallback<R1, R2>(callbackFunc: (callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindCallback<R1>(callbackFunc: (callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindCallback(callbackFunc: (callback: () => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<any[]>;\nexport function bindCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindCallback<A1>(callbackFunc: (arg1: A1, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<any[]>;\nexport function bindCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>;\n\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((result: R) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R>;\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((...results: R[]) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R[]>;\n\nexport function bindCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\n// tslint:enable:max-line-length\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback<T>(\n  callbackFunc: Function,\n  resultSelector?: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindCallback(callbackFunc, scheduler)(...args).pipe(\n        map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)),\n      );\n    }\n  }\n\n  return function (this: any, ...args: any[]): Observable<T> {\n    const context = this;\n    let subject: AsyncSubject<T>;\n    const params = {\n      context,\n      subject,\n      callbackFunc,\n      scheduler,\n    };\n    return new Observable<T>(subscriber => {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        const state: DispatchState<T> = {\n          args, subscriber, params,\n        };\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, state);\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  args: any[];\n  subscriber: Subscriber<T>;\n  params: ParamsContext<T>;\n}\n\ninterface ParamsContext<T> {\n  callbackFunc: Function;\n  scheduler: SchedulerLike;\n  context: any;\n  subject: AsyncSubject<T>;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const self = this;\n  const { args, subscriber, params } = state;\n  const { callbackFunc, context, scheduler } = params;\n  let { subject } = params;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n      this.add(scheduler.schedule<NextState<T>>(dispatchNext, 0, { value, subject }));\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface NextState<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(this: SchedulerAction<NextState<T>>, state: NextState<T>) {\n  const { value, subject } = state;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface ErrorState<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(this: SchedulerAction<ErrorState<T>>, state: ErrorState<T>) {\n  const { err, subject } = state;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function bindNodeCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindNodeCallback<R1, R2, R3, R4>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<R1, R2, R3>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<R1, R2>(callbackFunc: (callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindNodeCallback<R1>(callbackFunc: (callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindNodeCallback(callbackFunc: (callback: (err: any) => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindNodeCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindNodeCallback<A1>(callbackFunc: (arg1: A1, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindNodeCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>; /* tslint:enable:max-line-length */\n\nexport function bindNodeCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback<T>(\n  callbackFunc: Function,\n  resultSelector: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(\n        map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n      );\n    }\n  }\n\n  return function(this: any, ...args: any[]): Observable<T> {\n    const params: ParamsState<T> = {\n      subject: undefined,\n      args,\n      callbackFunc,\n      scheduler,\n      context: this,\n    };\n    return new Observable<T>(subscriber => {\n      const { context } = params;\n      let { subject } = params;\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            const err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, { params, subscriber, context });\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  subscriber: Subscriber<T>;\n  context: any;\n  params: ParamsState<T>;\n}\n\ninterface ParamsState<T> {\n  callbackFunc: Function;\n  args: any[];\n  scheduler: SchedulerLike;\n  subject: AsyncSubject<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const { params, subscriber, context } = state;\n  const { callbackFunc, args, scheduler } = params;\n  let subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const err = innerArgs.shift();\n      if (err) {\n        this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        this.add(scheduler.schedule<DispatchNextArg<T>>(dispatchNext, 0, { value, subject }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","/**\n * Tests to see if the object is an ES2015 (ES6) Promise\n * @see {@link https://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects}\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return !!value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>): (subscriber: Subscriber<T>) => Subscription | void => {\n  if (!!result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (!!result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = iterable[Symbol_iterator]();\n  do {\n    const item = iterator.next();\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue: undefined,\n  outerIndex: undefined,\n  innerSubscriber: InnerSubscriber<T, R>\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  innerSubscriber: Subscriber<R> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)\n): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  return subscribeTo(result)(innerSubscriber) as Subscription;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler  } from '../util/isScheduler';\nimport { isArray  } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Operator } from '../Operator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\n\nconst NONE = {};\n\n/* tslint:disable:max-line-length */\n\n// If called with a single array, it \"auto-spreads\" the array, with result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(sources: [O1], resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(sources: [O1, O2], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(sources: [O1, O2, O3], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5, O6], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(sources: O[], resultSelector: (...args: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// standard call, but with a result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// With a scheduler (deprecated)\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[], scheduler: SchedulerLike): Observable<ObservedValueOf<O>[]>;\n\n// Best case\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1]): Observable<[ObservedValueOf<O1>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[]): Observable<ObservedValueOf<O>[]>;\n\n// Standard calls\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>>(v1: O1, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: O[]): Observable<any[]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: Array<O | SchedulerLike>): Observable<any[]>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike>): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | SchedulerLike>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n * ## Examples\n * ### Combine two timer Observables\n * ```ts\n * import { combineLatest, timer } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * ### Combine an array of Observables\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { delay, starWith } from 'rxjs/operators';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000),   // emit 0 and then emit n after n seconds\n *     startWith(0),\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n *\n * ### Use project function to dynamically calculate the Body-Mass Index\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest(weight, height).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(\n  ...observables: (O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike)[]\n): Observable<R> {\n  let resultSelector: (...values: Array<any>) => R =  null;\n  let scheduler: SchedulerLike = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop() as SchedulerLike;\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop() as (...values: Array<any>) => R;\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0] as any;\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator<ObservedValueOf<O>, R>(resultSelector));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private resultSelector?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private resultSelector?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryResultSelector(values: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { ObservableInput, SchedulerLike, Observable } from 'rxjs';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see from\n * @see of\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => input.then(\n      value => {\n        sub.add(scheduler.schedule(() => {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(() => subscriber.complete()));\n        }));\n      },\n      err => {\n        sub.add(scheduler.schedule(() => subscriber.error(err)));\n      }\n    )));\n    return sub;\n  });\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let iterator: Iterator<T>;\n    sub.add(() => {\n      // Finalize generators\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(() => {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n        let value: T;\n        let done: boolean;\n        try {\n          const result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated use {@link scheduled} instead. */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  } else {\n    return scheduled(input, scheduler);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```ts\n * import { of, interval } from 'rxjs';\n * import { mergeMap, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: number) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = subscribeToResult<T, R>(this, ish, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map((ev) => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { take, map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(10))),\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<ObservableInput<T>, T> {\n  return mergeMap(identity, concurrent);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>>(v1: O1, scheduler: SchedulerLike): Observable<ObservedValueOf<O1>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\n\nexport function concat<O1 extends ObservableInput<any>>(v1: O1): Observable<ObservedValueOf<O1>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\nexport function concat<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O extends ObservableInput<any>>(...observables: (O | SchedulerLike)[]): Observable<ObservedValueOf<O>>;\nexport function concat<R>(...observables: ObservableInput<any>[]): Observable<R>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<R>(...observables: (ObservableInput<any> | SchedulerLike)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n * ### Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n * ```ts\n * import { concat, interval, range } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * ### Concatenate 3 Observables\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * ### Concatenate the same Observable to repeat it\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {SchedulerLike} [scheduler=null] An optional {@link SchedulerLike} to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<O extends ObservableInput<any>, R>(...observables: Array<O | SchedulerLike>): Observable<ObservedValueOf<O> | R> {\n  return concatAll<R>()(of(...observables));\n}\n","\nimport { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function concatAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.png)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, take, concatAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev => interval(1000).pipe(take(4))),\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return mergeAll<T>(1);\n}\n","import { Observable } from '../Observable';\nimport { SubscribableOrPromise, ObservedValueOf, ObservableInput } from '../types';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * ## Example\n * ### Subscribe to either an Observable of clicks or an Observable of interval, at random\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(function () {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer<R extends ObservableInput<any> | void>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>(subscriber => {\n    let input: R | void;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    const source = input ? from(input as ObservableInput<ObservedValueOf<R>>) : empty();\n    return source.subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservedValuesFromArray, ObservedValueOf, SubscribableOrPromise } from '../types';\nimport { isArray } from '../util/isArray';\nimport { map } from '../operators/map';\nimport { isObject } from '../util/isObject';\nimport { isObservable } from '../util/isObservable';\nimport { from } from './from';\n\n/* tslint:disable:max-line-length */\n\n// forkJoin(a$, b$, c$)\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(v1: SubscribableOrPromise<T>): Observable<[T]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n// forkJoin([a$, b$, c$]);\n// TODO(benlesh): Uncomment for TS 3.0\n// export function forkJoin(sources: []): Observable<never>;\nexport function forkJoin<A>(sources: [ObservableInput<A>]): Observable<[A]>;\nexport function forkJoin<A, B>(sources: [ObservableInput<A>, ObservableInput<B>]): Observable<[A, B]>;\nexport function forkJoin<A, B, C>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<[A, B, C]>;\nexport function forkJoin<A, B, C, D>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<[A, B, C, D]>;\nexport function forkJoin<A, B, C, D, E>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<[A, B, C, D, E]>;\nexport function forkJoin<A, B, C, D, E, F>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>, ObservableInput<F>]): Observable<[A, B, C, D, E, F]>;\nexport function forkJoin<A extends ObservableInput<any>[]>(sources: A): Observable<ObservedValuesFromArray<A>[]>;\n\n// forkJoin({})\nexport function forkJoin(sourcesObject: {}): Observable<never>;\nexport function forkJoin<T, K extends keyof T>(sourcesObject: T): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function forkJoin(...args: Array<ObservableInput<any>|Function>): Observable<any>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(...sources: ObservableInput<T>[]): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed observables to complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first observable,\n * second value is the last thing emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, resulting\n * objects will have the same keys as the dictionary passed, with their last values they've emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input observables, whenever any of\n * that observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input observable errors at some point, `forkJoin` will error as well and all other observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output observable is supposed to emit a result.\n *\n * ## Examples\n *\n * ### Use forkJoin with a dictionary of observable inputs\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000),\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * ### Use forkJoin with an array of observable inputs\n * ```ts\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000),\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(\n  ...sources: any[]\n): Observable<any> {\n  if (sources.length === 1) {\n    const first = sources[0];\n    if (isArray(first)) {\n      return forkJoinInternal(first, null);\n    }\n    // TODO(benlesh): isObservable check will not be necessary when deprecated path is removed.\n    if (isObject(first) && Object.getPrototypeOf(first) === Object.prototype) {\n      const keys = Object.keys(first);\n      return forkJoinInternal(keys.map(key => first[key]), keys);\n    }\n  }\n\n  // DEPRECATED PATHS BELOW HERE\n  if (typeof sources[sources.length - 1] === 'function') {\n    const resultSelector = sources.pop() as Function;\n    sources = (sources.length === 1 && isArray(sources[0])) ? sources[0] : sources;\n    return forkJoinInternal(sources, null).pipe(\n      map((args: any[]) => resultSelector(...args))\n    );\n  }\n\n  return forkJoinInternal(sources, null);\n}\n\nfunction forkJoinInternal(sources: ObservableInput<any>[], keys: string[] | null): Observable<any> {\n  return new Observable(subscriber => {\n    const len = sources.length;\n    if (len === 0) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(len);\n    let completed = 0;\n    let emitted = 0;\n    for (let i = 0; i < len; i++) {\n      const source = from(sources[i]);\n      let hasValue = false;\n      subscriber.add(source.subscribe({\n        next: value => {\n          if (!hasValue) {\n            hasValue = true;\n            emitted++;\n          }\n          values[i] = value;\n        },\n        error: err => subscriber.error(err),\n        complete: () => {\n          completed++;\n          if (completed === len || !hasValue) {\n            if (emitted === len) {\n              subscriber.next(keys ?\n                keys.reduce((result, key, i) => (result[key] = values[i], result), {}) :\n                values);\n            }\n            subscriber.complete();\n          }\n        }\n      }));\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\nconst toString: Function = (() => Object.prototype.toString)();\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener: (eventName: string, handler: NodeEventHandler) => void | {};\n  removeListener: (eventName: string, handler: NodeEventHandler) => void | {};\n}\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(type: string, listener: ((evt: E) => void) | null, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener?: ((evt: E) => void) | null, options?: EventListenerOptions | boolean): void;\n}\n\nexport type EventTargetLike<T> = HasEventTargetAddRemove<T> | NodeStyleEventEmitter | NodeCompatibleEventEmitter | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> = EventTargetLike<T> | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, resultSelector: (...args: any[]) => T): Observable<T>;\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions, resultSelector: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n * ### Emits clicks happening on the DOM document\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * ### Use addEventListener with capture option\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: ((...args: any[]) => T)\n): Observable<T> {\n\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(target, eventName, <EventListenerOptions | undefined>options).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T>(subscriber => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options as EventListenerOptions);\n  });\n}\n\nfunction setupSubscription<T>(sourceObj: FromEventTarget<T>, eventName: string,\n                              handler: (...args: any[]) => void, subscriber: Subscriber<T>,\n                              options?: EventListenerOptions) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n    unsubscribe = () => source.removeEventListener(eventName, handler, options);\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is HasEventTargetAddRemove<any> {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * then one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Example\n * ### Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * ## Example\n * ### Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * ## Example\n * ### Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs \"EVENT_TYPE\" \"EVENT_MESSAGE\" to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + \" --- \" + eventMessage // without that function only \"EVENT_TYPE\"\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"EVENT_TYPE --- EVENT_MESSAGE\"\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n * @static true\n * @name fromEventPattern\n * @owner Observable\n */\n\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any,\n                                    removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n                                    resultSelector?: (...args: any[]) => T): Observable<T | T[]> {\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T | T[]>(subscriber => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n\n    let retValue: any;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return () => removeHandler(handler, retValue) ;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { identity } from '../util/identity';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate(0, x => x < 10, x => x + 1, x => x);\n *\n * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n * const res = generate(1, x => x < 5, x => x * 2, x => x + 1, asap);\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n */\n  export function generate<T, S>(initialState: S,\n                                 condition: ConditionFunc<S>,\n                                 iterate: IterateFunc<S>,\n                                 resultSelector: ResultFunc<S, T>,\n                                 scheduler?: SchedulerLike): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * `generate` allows you to create stream of values generated with a loop very similar to\n * traditional for loop. First argument of `generate` is a beginning value. Second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * loop continues, if not, it stops. Third value is a function which takes previously defined\n * value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in regular for loop: first expression\n * initializes some state (for example numeric index), second tests if loop can make next\n * iteration (for example if index is lower than 10) and third states how defined value\n * will be modified on every step (index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First, condition function is ran. If it returned true, Observable\n * emits currently stored value (initial value at the first iteration) and then updates\n * that value with iterate function. If at some point condition returned false, Observable\n * completes at that moment.\n *\n * Optionally you can pass fourth parameter to `generate` - a result selector function which allows you\n * to immediately map value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * single object to the operator instead. That object has properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, so output Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is resultSelector\n * function or not). In case of single-parameter call, you can provide it as a\n * `scheduler` property on object passed to the operator. In both cases scheduler decides when\n * next iteration of the loop will happen and therefore when next value will be emitted\n * by the Observable. For example to ensure that each value is pushed to the observer\n * on separate task in event loop, you could use `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * @example <caption>Use with condition and iterate functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with condition, iterate and resultSelector functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with options object.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n * @example <caption>Use options object without condition function.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!') // This will never run.\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n *\n *\n * @see {@link from}\n * @see {@link index/Observable.create}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n */\nexport function generate<S>(initialState: S,\n                            condition: ConditionFunc<S>,\n                            iterate: IterateFunc<S>,\n                            scheduler?: SchedulerLike): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n *   resultSelector: x => x,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                               condition?: ConditionFunc<S>,\n                               iterate?: IterateFunc<S>,\n                               resultSelectorOrObservable?: (ResultFunc<S, T>) | SchedulerLike,\n                               scheduler?: SchedulerLike): Observable<T> {\n\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  if (arguments.length == 1) {\n    const options = initialStateOrOptions as GenerateOptions<T, S>;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity as ResultFunc<S, T>;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions as S;\n    resultSelector = identity as ResultFunc<S, T>;\n    scheduler = resultSelectorOrObservable as SchedulerLike;\n  } else {\n    initialState = initialStateOrOptions as S;\n    resultSelector = resultSelectorOrObservable as ResultFunc<S, T>;\n  }\n\n  return new Observable<T>(subscriber => {\n    let state = initialState;\n    if (scheduler) {\n      return scheduler.schedule<SchedulerState<T, S>>(dispatch, 0, {\n        subscriber,\n        iterate,\n        condition,\n        resultSelector,\n        state\n      });\n    }\n\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch<T, S>(this: SchedulerAction<SchedulerState<T, S>>, state: SchedulerState<T, S>) {\n  const { subscriber, condition } = state;\n  if (subscriber.closed) {\n    return undefined;\n  }\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n  if (condition) {\n    let conditionResult: boolean;\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n  let value: T;\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n  if (subscriber.closed) {\n    return undefined;\n  }\n  subscriber.next(value);\n  if (subscriber.closed) {\n    return undefined;\n  }\n  return this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\nimport { SubscribableOrPromise } from '../types';\n\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `iif` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * than controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `iif` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * ## Examples\n * ### Change at runtime which Observable will be subscribed\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second'),\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n * ```\n *\n * ### Control an access to an Observable\n * ```ts\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'), // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"The end\"\n * ```\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n*/\nexport function iif<T = never, F = never>(\n  condition: () => boolean,\n  trueResult: SubscribableOrPromise<T> = EMPTY,\n  falseResult: SubscribableOrPromise<F> = EMPTY\n): Observable<T|F> {\n  return defer(() => condition() ? trueResult : falseResult);\n}\n","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isNumeric } from '../util/isNumeric';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = async): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, concurrent: number, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n\nexport function merge<T>(v1: ObservableInput<T>): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | number)[]): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | number)[]): Observable<R>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```ts\n * import { merge, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n * ### Emit the number 7, then never emit anything else (not even complete)\n * ```ts\n * import { NEVER } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * function info() {\n *   console.log('Will not be called');\n * }\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe(x => console.log(x), info, info);\n *\n * ```\n *\n * @see {@link Observable}\n * @see {@link index/EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Deprecated in favor of using {@link NEVER} constant.\n */\nexport function never () {\n  return NEVER;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNext<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link index/EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n * Subscribe to the next Observable after map fails</caption>\n * ```ts\n * import { onErrorResumeNext, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done'),\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<T, R>(...sources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  const [ first, ...remainder ] = sources;\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext(...first);\n  }\n\n  return new Observable(subscriber => {\n    const subNext = () => subscriber.add(\n      onErrorResumeNext(...remainder).subscribe(subscriber)\n    );\n\n    return from(first).subscribe({\n      next(value) { subscriber.next(value); },\n      error: subNext,\n      complete: subNext,\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * <img src=\"./img/pairs.png\" width=\"100%\">\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj)\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('the end!')\n * );\n *\n * // Logs:\n * // [\"foo\", 42],\n * // [\"bar\", 56],\n * // [\"baz\", 78],\n * // \"the end!\"\n * ```\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs<T>(obj: Object, scheduler?: SchedulerLike): Observable<[string, T]> {\n  if (!scheduler) {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(\n        scheduler.schedule<{ keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }>\n          (dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n      return subscription;\n    });\n  }\n}\n\n/** @internal */\nexport function dispatch<T>(this: SchedulerAction<any>,\n                            state: { keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }) {\n  const { keys, index, subscriber, subscription, obj } = state;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { filter } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","import { not } from '../util/not';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition a set of numbers into odds and evens observables\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, (value, index) => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [\n    filter(predicate, thisArg)(new Observable<T>(subscribeTo(source))),\n    filter(not(predicate, thisArg) as any)(new Observable<T>(subscribeTo(source)))\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic, ObservableInput } from '../types';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n// tslint:disable:max-line-length\nexport function race<A>(arg: [ObservableInput<A>]): Observable<A>;\nexport function race<A, B>(arg: [ObservableInput<A>, ObservableInput<B>]): Observable<A | B>;\nexport function race<A, B, C>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<A | B | C>;\nexport function race<A, B, C, D>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<A | B | C | D | E>;\nexport function race<T>(arg: ObservableInput<T>[]): Observable<T>;\nexport function race(arg: ObservableInput<any>[]): Observable<{}>;\n\nexport function race<A>(a: ObservableInput<A>): Observable<A>;\nexport function race<A, B>(a: ObservableInput<A>, b: ObservableInput<B>): Observable<A | B>;\nexport function race<A, B, C>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>): Observable<A | B | C>;\nexport function race<A, B, C, D>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>, e: ObservableInput<E>): Observable<A | B | C | D | E>;\n// tslint:enable:max-line-length\n\nexport function race<T>(observables: ObservableInput<T>[]): Observable<T>;\nexport function race(observables: ObservableInput<any>[]): Observable<{}>;\nexport function race<T>(...observables: ObservableInput<T>[]): Observable<T>;\nexport function race(...observables: ObservableInput<any>[]): Observable<{}>;\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n *\n * ## Example\n * ### Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { race, interval } from 'rxjs';\n * import { mapTo } from 'rxjs/operators';\n *\n * const obs1 = interval(1000).pipe(mapTo('fast one'));\n * const obs2 = interval(3000).pipe(mapTo('medium one'));\n * const obs3 = interval(5000).pipe(mapTo('slow one'));\n *\n * race(obs3, obs1, obs2)\n * .subscribe(\n *   winner => console.log(winner)\n * );\n *\n * // result:\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(...observables: ObservableInput<any>[]): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = observables[0] as Observable<any>[];\n    } else {\n      return observables[0] as Observable<T>;\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable as any, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { SchedulerAction, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n * Emits the numbers 1 to 10</caption>\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 10);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link timer}\n * @see {@link index/interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start: number = 0,\n                      count?: number,\n                      scheduler?: SchedulerLike): Observable<number> {\n  return new Observable<number>(subscriber => {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n\n    let index = 0;\n    let current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(current++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\n\n/** @internal */\nexport function dispatch(this: SchedulerAction<any>, state: any) {\n  const { start, index, count, subscriber } = state;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n\n  this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `dueTime` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `dueTime`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time specified as a Date object or as an integer denoting\n * milliseconds to wait before emitting the first value of 0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `dueTime` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput } from '../types';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T>(resourceFactory: () => Unsubscribable | void,\n                         observableFactory: (resource: Unsubscribable | void) => ObservableInput<T> | void): Observable<T> {\n  return new Observable<T>(subscriber => {\n    let resource: Unsubscribable | void;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    let result: ObservableInput<T> | void;\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    const source = result ? from(result) : EMPTY;\n    const subscription = source.subscribe(subscriber);\n    return () => {\n      subscription.unsubscribe();\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { ObservableInput, PartialObserver, ObservedValueOf } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R): Observable<R>;\n\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\nexport function zip<O extends ObservableInput<any>>(array: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<R>(array: ObservableInput<any>[]): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<R>(array: ObservableInput<any>[], resultSelector: (...values: any[]) => R): Observable<R>;\n\nexport function zip<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>): Observable<R>;\nexport function zip<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n * Combine age and name from different sources\n * ```ts\n * import { zip, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * let age$ = of<number>(27, 25, 29);\n * let name$ = of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = of<boolean>(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev })),\n * )\n * .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip<O extends ObservableInput<any>, R>(\n  ...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>\n): Observable<ObservedValueOf<O>[]|R> {\n  const resultSelector = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  resultSelector: (...values: Array<any>) => R;\n\n  constructor(resultSelector?: (...values: Array<any>) => R) {\n    this.resultSelector = resultSelector;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private resultSelector: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              resultSelector?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    this.unsubscribe();\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        const destination = this.destination as Subscription;\n        destination.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryresultSelector(args: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification, NotificationKind } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config } from './internal/config';\n"],"sourceRoot":""}