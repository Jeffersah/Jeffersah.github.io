{"version":3,"file":"spellTest.bundle.js","mappings":"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","sources":["webpack://trading-game/./src/projects/common-assets/arrows.png","webpack://trading-game/./src/projects/spell-test/EArrow.ts","webpack://trading-game/./src/projects/spell-test/spells/SpellGroup.ts","webpack://trading-game/./src/projects/spell-test/spells/SpellStep.ts","webpack://trading-game/./src/projects/spell-test/index.ts"],"sourcesContent":["export default __webpack_public_path__ + \"bbb298f00b41bbd627d27aa0529a20ba.png\";","export enum EArrow {\r\n    Up = 0,\r\n    Right = 1,\r\n    Down = 2,\r\n    Left = 3,\r\n    UpDown = 4,\r\n    LeftRight = 5,\r\n    Any,\r\n    Stop\r\n}\r\n\r\nexport function Matches(arr: EArrow, pattern: EArrow): boolean {\r\n    if (pattern === EArrow.Any) return true;\r\n    if (pattern === EArrow.Stop) return arr === EArrow.Stop;\r\n    if (arr === pattern) return true;\r\n    if (pattern >= 4 && arr <= 3) return (arr % 2) === (pattern % 2);\r\n    return false;\r\n}\r\n\r\nexport enum ERepeat {\r\n    None,\r\n    Optional,\r\n    Repeatable\r\n}","import { EArrow, ERepeat } from '../EArrow';\r\nimport { ISpellGroupParent } from './SpellGroupParent';\r\n\r\nexport class SpellGroup {\r\n\r\n    content: (EArrow | SpellGroup)[];\r\n    repeatType: ERepeat;\r\n    parent: ISpellGroupParent | undefined;\r\n    gid: number;\r\n\r\n    static Parse(str: string): SpellGroup {\r\n        return new SpellGroup(new GidTracker(), str.split('').reverse(), undefined);\r\n    }\r\n\r\n    constructor(gids: GidTracker, data: EArrow, repeat: ERepeat, parent: ISpellGroupParent | undefined);\r\n    constructor(gids: GidTracker, spellData: string[], parent: ISpellGroupParent | undefined);\r\n    constructor(gids: GidTracker, spellData: string[]|EArrow, repeat: ERepeat|ISpellGroupParent|undefined, parent?: ISpellGroupParent|undefined) {\r\n        this.gid = gids.Increment();\r\n        if ((spellData as any).length === undefined) {\r\n            this.content = [spellData as EArrow];\r\n            this.repeatType = repeat as ERepeat;\r\n            this.parent = parent;\r\n        }\r\n        else {\r\n            spellData = spellData as string[];\r\n            this.repeatType = ERepeat.None;\r\n            this.content = [];\r\n            this.parent = repeat as ISpellGroupParent | undefined;\r\n\r\n            while (spellData.length > 0) {\r\n                const next = spellData.pop();\r\n                switch (next) {\r\n                    // Push an arrow\r\n                    case 'u': this.content.push(EArrow.Up); break;\r\n                    case 'd': this.content.push(EArrow.Down); break;\r\n                    case 'l': this.content.push(EArrow.Left); break;\r\n                    case 'r': this.content.push(EArrow.Right); break;\r\n                    case 'h': this.content.push(EArrow.LeftRight); break;\r\n                    case 'v': this.content.push(EArrow.UpDown); break;\r\n                    case 'a': this.content.push(EArrow.Any); break;\r\n                    case 's': this.content.push(EArrow.Stop); break;\r\n                    // Push a group OR close the group\r\n                    case '(': this.content.push(new SpellGroup(gids, spellData, { parent: this, parentIndex: this.content.length })); break;\r\n                    case ')': return;\r\n                    // append an optional/repeat to the previous group\r\n                    case '?': this.pushToPrevious(gids, ERepeat.Optional); break;\r\n                    case '+': this.pushToPrevious(gids, ERepeat.Repeatable); break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static isArrow(element: EArrow | SpellGroup): element is EArrow {\r\n        return (element as any).content === undefined;\r\n    }\r\n\r\n    private pushToPrevious(gids: GidTracker, rep: ERepeat) {\r\n        if (this.content.length === 0) {\r\n            throw new Error(\"Can't push repeat group: Spell is empty\");\r\n        }\r\n        const lastIndex = this.content.length - 1;\r\n        const lastElement = this.content[lastIndex];\r\n        if (SpellGroup.isArrow(lastElement)) {\r\n            this.content[lastIndex] = new SpellGroup(gids, lastElement, rep, { parent: this, parentIndex: lastIndex });\r\n        }\r\n        else {\r\n            lastElement.repeatType = rep;\r\n        }\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nclass GidTracker {\r\n    nextGid: number;\r\n    constructor() {\r\n        this.nextGid = 0;\r\n    }\r\n\r\n    Increment(): number {\r\n        return this.nextGid++;\r\n    }\r\n}","import { SpellGroup } from './SpellGroup';\r\nimport { EArrow, ERepeat } from '../EArrow';\r\n\r\nexport class SpellStep {\r\n    constructor(public spell: SpellGroup, public index: number) {\r\n\r\n    }\r\n\r\n    public static FirstSteps(group: SpellGroup): SpellStep[] {\r\n        return new SpellStep(group, -1).NextSteps();\r\n    }\r\n\r\n    public ArrowHere(): EArrow {\r\n        return this.spell.content[this.index] as EArrow;\r\n    }\r\n\r\n    public NextSteps(): SpellStep[] {\r\n        const nextIndex = this.index + 1;\r\n        if (nextIndex >= this.spell.content.length) {\r\n            // This is a step-out\r\n            if (this.spell.parent === undefined) return [];\r\n            // Step out and forward\r\n            const parentNextSteps = new SpellStep(this.spell.parent.parent, this.spell.parent.parentIndex).NextSteps();\r\n            if (this.spell.repeatType === ERepeat.Repeatable) {\r\n                const firsts = SpellStep.FirstSteps(this.spell);\r\n                parentNextSteps.splice(parentNextSteps.length, 0, ...firsts);\r\n            }\r\n            return parentNextSteps;\r\n        }\r\n        else {\r\n            // If the next spot is an arrow, return just it\r\n            if (SpellGroup.isArrow(this.spell.content[nextIndex])) {\r\n                return [ new SpellStep(this.spell, nextIndex) ];\r\n            }\r\n            else {\r\n                const group = this.spell.content[nextIndex] as SpellGroup;\r\n                const stepInto = SpellStep.FirstSteps(group);\r\n                if (group.repeatType === ERepeat.Optional) {\r\n                    // see if we can step-over\r\n                    const stepOver = new SpellStep(this.spell, this.index + 1).NextSteps();\r\n                    stepInto.splice(stepInto.length, 0, ...stepOver);\r\n                }\r\n                return stepInto;\r\n            }\r\n        }\r\n    }\r\n\r\n    public Equals(other: SpellStep) {\r\n        return this.spell === other.spell && this.index === other.index;\r\n    }\r\n}","import AssetLoader from '../common/assets/AssetLoader';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport arrowsUrl from '../common-assets/arrows.png';\r\nimport { ResizeCanvas, NearestNeighborScaling } from '../common/CanvasHelpers';\r\nimport { SpellGroup } from './spells/SpellGroup';\r\nimport { ERepeat, EArrow, Matches } from './EArrow';\r\nimport { SpellStep } from './spells/SpellStep';\r\n\r\nconst handledKeys = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', ' '];\r\n\r\nexport default function Run() {\r\n    const assetLoader = new AssetLoader();\r\n    const arrows = new SpriteSheet(16, 16, arrowsUrl, assetLoader.registerAssetLoadCallback());\r\n\r\n    assetLoader.onAllFinished(() => Start(arrows));\r\n}\r\n\r\nfunction Start(arrows: SpriteSheet) {\r\n\r\n    const canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n    console.log(canvas);\r\n    ResizeCanvas(canvas, 500, 500);\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.scale(2, 2);\r\n    NearestNeighborScaling(ctx);\r\n\r\n    const spell = SpellGroup.Parse('ud(lr(lru)?)+as');\r\n    const steps = SpellStep.FirstSteps(spell);\r\n\r\n    PrintSpell(spell, arrows, ctx, steps, 0);\r\n\r\n    document.addEventListener('keydown', (k) => {\r\n        if (handledKeys.indexOf(k.key) !== -1) {\r\n            AdvanceAndPrint(steps, k.key, spell, arrows, ctx);\r\n            k.preventDefault();\r\n        }\r\n    });\r\n}\r\n\r\nfunction AdvanceAndPrint(currentSteps: SpellStep[], key: string, spell: SpellGroup, arrows: SpriteSheet, ctx: CanvasRenderingContext2D) {\r\n    if (key === ' ') {\r\n        currentSteps.splice(0, currentSteps.length, ...SpellStep.FirstSteps(spell));\r\n    }\r\n    else {\r\n        const pressedArrow = key === 'ArrowUp' ? EArrow.Up : key === 'ArrowDown' ? EArrow.Down : key === 'ArrowLeft' ? EArrow.Left : EArrow.Right;\r\n        const lastLength = currentSteps.length;\r\n        for (let i = currentSteps.length - 1; i >= 0; i--) {\r\n            const step = currentSteps[i];\r\n            if (Matches(pressedArrow, step.ArrowHere())) {\r\n                currentSteps.splice(currentSteps.length, 0, ...step.NextSteps());\r\n            }\r\n        }\r\n        currentSteps.splice(0, lastLength);\r\n    }\r\n    ctx.clearRect(0, 0, 500, 500);\r\n    PrintSpell(spell, arrows, ctx, currentSteps, 0);\r\n}\r\n\r\nfunction PrintSpell(spell: SpellGroup, arrows: SpriteSheet, ctx: CanvasRenderingContext2D, steps: SpellStep[], dx: number): number {\r\n    // Draw parens?\r\n    const drawParens = spell.parent !== undefined && spell.content.length > 1;\r\n    if (drawParens) {\r\n        arrows.renderCustom(ctx, dx, 0, 8, 16, 0, 4, 8, 16);\r\n        dx += 8;\r\n    }\r\n\r\n    // Reverse-sort by index\r\n    const selfSteps = steps.filter(s => s.spell === spell).sort((a, b) => b.index - a.index);\r\n\r\n    for (const [i, c] of spell.content.entries()) {\r\n        if (SpellGroup.isArrow(c)) {\r\n            arrows.render(ctx, dx, 0, 16, 16, (c as number) % 4, 2 + Math.floor((c as number) / 4));\r\n            if (selfSteps.length > 0 && selfSteps[selfSteps.length - 1].index === i) {\r\n                arrows.render(ctx, dx, 2, 16, 16, 2, 4);\r\n                selfSteps.pop();\r\n            }\r\n            dx += 16;\r\n        }\r\n        else {\r\n            dx = PrintSpell(c, arrows, ctx, steps, dx);\r\n        }\r\n    }\r\n\r\n    if (drawParens) {\r\n        arrows.renderCustom(ctx, dx, 0, 8, 16, 1, 4, 8, 16);\r\n        dx += 8;\r\n    }\r\n\r\n    if (spell.repeatType === ERepeat.Optional) {\r\n        ctx.drawImage(arrows.image, 16 + 8, 16 * 4, 8, 8, dx, 0, 8, 8);\r\n        dx += 8;\r\n    }\r\n    else if (spell.repeatType === ERepeat.Repeatable) {\r\n        ctx.drawImage(arrows.image, 16, 16 * 4, 8, 8, dx, 0, 8, 8);\r\n        dx += 8;\r\n    }\r\n\r\n    return dx;\r\n}"],"names":["EArrow","ERepeat","SpellGroup","constructor","gids","spellData","repeat","parent","this","gid","Increment","undefined","length","content","repeatType","None","pop","push","Up","Down","Left","Right","LeftRight","UpDown","Any","Stop","parentIndex","pushToPrevious","Optional","Repeatable","str","GidTracker","split","reverse","element","rep","Error","lastIndex","lastElement","isArrow","nextGid","SpellStep","spell","index","group","NextSteps","ArrowHere","nextIndex","parentNextSteps","firsts","FirstSteps","splice","stepInto","stepOver","Equals","other","handledKeys","Run","assetLoader","AssetLoader","arrows","SpriteSheet","registerAssetLoadCallback","onAllFinished","canvas","document","getElementById","console","log","ctx","getContext","scale","Parse","steps","PrintSpell","addEventListener","k","indexOf","key","currentSteps","pressedArrow","lastLength","i","step","arr","pattern","clearRect","AdvanceAndPrint","preventDefault","Start","dx","drawParens","renderCustom","selfSteps","filter","s","sort","a","b","c","entries","render","Math","floor","drawImage","image"],"sourceRoot":""}