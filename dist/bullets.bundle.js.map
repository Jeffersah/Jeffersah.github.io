{"version":3,"sources":["webpack:///./src/projects/common/position/Point.ts","webpack:///./src/projects/common/Color.ts","webpack:///./src/projects/common/input/KeyState.ts","webpack:///./src/projects/common/input/KeyWatcher.ts","webpack:///./src/projects/common/input/KeyboardManager.ts","webpack:///./src/projects/bullets/const.ts","webpack:///./src/projects/bullets/assets/bullets_entities.png","webpack:///./src/projects/bullets/assets/Ships.png","webpack:///./src/projects/common/position/Angle.ts","webpack:///./src/projects/bullets/Player.ts","webpack:///./src/projects/bullets/ETeam.ts","webpack:///./src/projects/bullets/GameState.ts","webpack:///./src/projects/common/interpolation/Interpolated.ts","webpack:///./src/projects/bullets/Effects/SingleExplosion.ts","webpack:///./src/projects/common/interpolation/TimingFunction.ts","webpack:///./src/projects/common/interpolation/InterpolationFunction.ts","webpack:///./src/projects/common/interpolation/Keyframes.ts","webpack:///./src/projects/bullets/Effects/Explosion.ts","webpack:///./src/projects/common/assets/SpriteAtlas.ts","webpack:///./src/projects/common/Angle.ts","webpack:///./src/projects/bullets/ai/FighterAI.ts","webpack:///./src/projects/bullets/Ship.ts","webpack:///./src/projects/bullets/ShipDefinition.ts","webpack:///./src/projects/bullets/index.ts","webpack:///./src/projects/bullets/AllShipDefinitions.ts"],"names":["Point","x","y","angle","distance","Math","cos","sin","Dot","this","sqrt","LengthSq","p1","p2","other","atan2","nx","ny","splitArgs","src","a","b","sy","undefined","Color","vals","h","s","v","hsv","rgb","r","g","reqRgb","reqHsv","n","k","max","min","calcRgb","componentToRgb","calcHsv","mx","mn","toByte","component","floor","KeyState","keys","changes","key","indexOf","attachedElement","logKeyNames","addEventListener","onKeyDown","onKeyUp","downKeys","console","log","push","change","idx","splice","storeKeys","storeChanges","slice","element","watcher","prvState","currentState","Update","isKeyDown","isKeyUp","twoPi","PI","Angle","relativeNormalize","PHYS","sprites","position","velocity","angularVelocity","rotation","engineDeflect","tgtDeflect","isEngineOn","vDirection","diffDir","relativeAngle","diffPerc","friction","abs","MultWith","vTotal","Length","vAngle","Direction","anglePullAmt","AddWith","ctx","save","rotrender","random","render","restore","ETeam","player","Player","Entities","neutral","ally","enemy","Effects","update","i","length","tick","updateEntities","entities","drawEntities","draw","Interpolated","range","timingFunction","InterpolationTimer","totalTime","elapsedTime","animation","sample","outerRadius","innerRadius","fillColor","timing","outer","inner","fill","beginPath","arc","closePath","fillStyle","toString","TimingFunctions","linear","t","clamp","fastIn","Bezier","fastOut","pts","b_recurse","p","pi","pc","numberInterpolator","fastColorInterpolator","EvenlySpacedKeyframes","interpolator","args","arguments","percPer","keyframes","addKeyFrame","start","time","value","keyIndex","sampleRange","samplePerc","burstXVariance","burstYVariance","numBursts","burstDelay","burstLifetime","burstOuterRadius","currentBurstDelay","maxExplosionIndex","nb","GetValue","explosions","Array","triggerExplosions","spawnBurst","bx","by","lifetime","startingOuterRadius","anyStillRunning","SpriteAtlas","spriteUrl","onload","image","document","createElement","loadFinished","sourceOffset","sourceSize","origin","sourceRotation","atlas","size","translate","rotate","scale","drawImage","norm","normalize","from","to","gs","ship","tgtHeading","angleBetween","deltaHeading","accuteAngle","tgtVel","definition","maxSpeed","ai","team","Velocity","lastAccel","lastDeccel","lastTurn","currentHp","maxHp","TickAI","maxDeccel","delta","maxAccel","turnAmt","turnDirection","sign","maxTurnRate","fromAngle","sprite","srcPoint","srcSize","srcRot","turnAccel","buildAi","getSprite","scalingHelper","shipAtlas","shipSprite","Run","assetLoader","AssetLoader","entitySheet","SpriteSheet","registerAssetLoadCallback","onAllFinished","canvas","getElementById","getContext","NearestNeighborScalingHelper","definitions","interceptor","fighter","KeyboardManager","body","buildShip","repaintLoop","gameState","rot","fillRect","focusPoint","add","Multiply","ty","tx","repaint","requestAnimationFrame","onLoadDone"],"mappings":"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","file":"bullets.bundle.js","sourcesContent":["export default class Point {\r\n    constructor(public x: number, public y: number) {\r\n\r\n    }\r\n\r\n    public static fromAngle(angle: number, distance?: number) : Point {\r\n        return new Point(Math.cos(angle) * (distance ?? 1), Math.sin(angle) * (distance ?? 1));\r\n    }\r\n\r\n    public LengthSq(): number {\r\n        return Point.Dot(this, this);\r\n    }\r\n\r\n    public Length(): number {\r\n        return Math.sqrt(this.LengthSq());\r\n    }\r\n\r\n    public Clone(): Point {\r\n        return new Point(this.x, this.y);\r\n    }\r\n\r\n    public Negate(): Point {\r\n        return new Point(-this.x, -this.y);\r\n    }\r\n\r\n    public NegateInPlace(): this {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        return this;\r\n    }\r\n\r\n    public static Dot(p1: Point, p2: Point): number {\r\n        return p1.x * p2.x + p1.y * p2.y;\r\n    }\r\n\r\n    public DotWith(other: Point): number {\r\n        return Point.Dot(this, other);\r\n    }\r\n\r\n\r\n    public Direction(): number {\r\n        return Math.atan2(this.y, this.x);\r\n    }\r\n\r\n    public AddWith(x: number, y: number): this;\r\n    public AddWith(other: Point): this;\r\n    public AddWith(other: number|Point, y?: number): this {\r\n        const {x: nx, y: ny} = splitArgs(other, y);\r\n        this.x += nx;\r\n        this.y += ny;\r\n        return this;\r\n    }\r\n\r\n    public MultWith(x: number, y: number): this;\r\n    public MultWith(other: Point): this;\r\n    public MultWith(other: number|Point, y?: number): this {\r\n        const {x: nx, y: ny} = splitArgs(other, y);\r\n        this.x *= nx;\r\n        this.y *= ny;\r\n        return this;\r\n    }\r\n\r\n    public SubtractWith(x: number, y: number): this;\r\n    public SubtractWith(other: Point): this;\r\n    public SubtractWith(other: number|Point, y?: number): this {\r\n        const {x: nx, y: ny} = splitArgs(other, y);\r\n        this.x -= nx;\r\n        this.y -= ny;\r\n        return this;\r\n    }\r\n\r\n    public DivideWith(x: number, y: number): this;\r\n    public DivideWith(other: Point): this;\r\n    public DivideWith(other: number|Point, y?: number): this {\r\n        const {x: nx, y: ny} = splitArgs(other, y);\r\n        this.x /= nx;\r\n        this.y /= ny;\r\n        return this;\r\n    }\r\n\r\n    public Equals(other: Point): boolean {\r\n        return this.x === other.x && this.y === other.y;\r\n    }\r\n\r\n    \r\n    static add(src: Point, x: number, y: number): Point;\r\n    static add(src: Point, other: Point): Point;\r\n    static add(src: Point, other: number|Point, y?: number): Point {\r\n        const {x: nx, y: ny} = splitArgs(other, y);\r\n        return new Point(src.x + nx, src.y + ny);\r\n    }\r\n\r\n    static subtract(src: Point, x: number, y: number): Point;\r\n    static subtract(src: Point, other: Point): Point;\r\n    static subtract(src: Point, other: number|Point, y?: number): Point {\r\n        const {x: nx, y: ny} = splitArgs(other, y);\r\n        return new Point(src.x - nx, src.y - ny);\r\n    }\r\n\r\n    static Multiply(a: Point, s: number, sy?: number): Point;\r\n    static Multiply(a: Point, b: Point): Point;\r\n    static Multiply(a: Point, b: Point|number, sy ?: number): Point {\r\n        if (sy !== undefined) {\r\n            return new Point(a.x * (b as number), a.y * sy);\r\n        }\r\n        else if ((b as any).x !== undefined) {\r\n            return new Point(a.x * (b as Point).x, a.y * (b as Point).y);\r\n        } else {\r\n            return new Point(a.x * (b as number), a.y * (b as number));\r\n        }\r\n    }\r\n}\r\n\r\nfunction splitArgs(x: Point|number, y ?: number): {x: number, y: number} {\r\n    if(y === undefined) return { x: (<Point>x).x, y: (<Point>x).y };\r\n    return {x: <number>x, y};\r\n}","export class Color {\r\n    private rgb?: { r: number, g: number, b: number };\r\n    private hsv?: { h: number, s: number, v: number };\r\n\r\n    constructor(vals: {r: number, g: number, b: number}|{h: number, s: number, v: number}) {\r\n        if ((vals as any).h || (vals as any).s || (vals as any).v) {\r\n            this.hsv = vals as any;\r\n            this.rgb = undefined;\r\n        }\r\n        else  {\r\n            this.rgb = vals as any;\r\n            this.hsv = undefined;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generate an RGB color\r\n     * @param r Red component [0, 1]\r\n     * @param g Green component [0, 1]\r\n     * @param b Blue component [0, 1]\r\n     */\r\n    public static rgb(r: number, g: number, b: number): Color {\r\n        return new Color({ r, g, b });\r\n    }\r\n\r\n    /**\r\n     * Generate an HSV color\r\n     * @param r Hue component [0, 1]\r\n     * @param g Saturation component [0, 1]\r\n     * @param b Value component [0, 1]\r\n     */\r\n    public static hsv(h: number, s: number, v: number): Color {\r\n        return new Color({ h, s, v });\r\n    }\r\n\r\n    public r(): number;\r\n    public r(v: number): void;\r\n    public r(v?: number): number|void {\r\n        this.reqRgb();\r\n        if (v !== undefined) {\r\n            this.rgb.r = v;\r\n            this.hsv = undefined;\r\n        } else {\r\n            return this.rgb.r;\r\n        }\r\n    }\r\n\r\n    public g(): number;\r\n    public g(v: number): void;\r\n    public g(v?: number): number|void {\r\n        this.reqRgb();\r\n        if (v !== undefined) {\r\n            this.rgb.g = v;\r\n            this.hsv = undefined;\r\n        } else {\r\n            return this.rgb.g;\r\n        }\r\n    }\r\n\r\n    public b(): number;\r\n    public b(v: number): void;\r\n    public b(v?: number): number|void {\r\n        this.reqRgb();\r\n        if (v !== undefined) {\r\n            this.rgb.b = v;\r\n            this.hsv = undefined;\r\n        } else {\r\n            return this.rgb.b;\r\n        }\r\n    }\r\n\r\n    public h(): number;\r\n    public h(v: number): void;\r\n    public h(v?: number): number|void {\r\n        this.reqHsv();\r\n        if (v !== undefined) {\r\n            this.hsv.h = v;\r\n            this.hsv = undefined;\r\n        } else {\r\n            return this.hsv.h;\r\n        }\r\n    }\r\n\r\n    public s(): number;\r\n    public s(v: number): void;\r\n    public s(v?: number): number|void {\r\n        this.reqHsv();\r\n        if (v !== undefined) {\r\n            this.hsv.s = v;\r\n            this.hsv = undefined;\r\n        } else {\r\n            return this.hsv.s;\r\n        }\r\n    }\r\n\r\n    public v(): number;\r\n    public v(v: number): void;\r\n    public v(v?: number): number|void {\r\n        this.reqHsv();\r\n        if (v !== undefined) {\r\n            this.hsv.v = v;\r\n            this.hsv = undefined;\r\n        } else {\r\n            return this.hsv.v;\r\n        }\r\n    }\r\n\r\n    private componentToRgb(n: number) {\r\n        const k = (n + this.hsv.h * 6) % 6;\r\n        return this.hsv.v - this.hsv.v * this.hsv.s * Math.max(Math.min(k, 4 - k, 1), 0);\r\n    }\r\n\r\n\r\n    private reqRgb() {\r\n        if (this.rgb === undefined) {\r\n            this.calcRgb();\r\n        }\r\n    }\r\n    private calcRgb() {\r\n        this.rgb = {\r\n            r: this.componentToRgb(5),\r\n            g: this.componentToRgb(3),\r\n            b: this.componentToRgb(1),\r\n        };\r\n    }\r\n\r\n    private reqHsv() {\r\n        if (this.hsv === undefined) {\r\n            this.calcHsv();\r\n        }\r\n    }\r\n    private calcHsv() {\r\n        const {r, g, b} = this.rgb;\r\n        const mx = Math.max(r, g, b);\r\n        const mn = Math.min(r, g, b);\r\n        let h = mx === mn ? 0\r\n            : mx === r ? (g - b) / (mx - mn)\r\n            : mx === g ? 2 + (b - r) / (mx - mn)\r\n            : 4 + (r - g) / (mx - mn);\r\n        h /= 6;\r\n        while (h < 0) {\r\n            h++;\r\n        }\r\n        this.hsv = {\r\n            h,\r\n            s: mx === mn ? 0 : (mx - mn) / mx,\r\n            v: mx\r\n        };\r\n    }\r\n\r\n    public toString(): string {\r\n        this.reqRgb();\r\n        return 'rgb(' + this.toByte(this.rgb.r) + ', ' + this.toByte(this.rgb.g) + ', ' + this.toByte(this.rgb.b) + ')';\r\n    }\r\n\r\n    private toByte(component: number) {\r\n        return Math.floor(component * 255);\r\n    }\r\n}","import { IKeyChange } from './KeyWatcher';\r\n\r\nexport default class KeyState {\r\n    constructor(public keys: string[], public changes: IKeyChange[]) {\r\n\r\n    }\r\n\r\n    public isKeyDown(key: string) {\r\n        return this.keys.indexOf(key) !== -1;\r\n    }\r\n\r\n    public isKeyUp(key: string) {\r\n        return this.keys.indexOf(key) === -1;\r\n    }\r\n}","import KeyState from './KeyState';\r\n\r\nexport interface IKeyChange {\r\n    key: string;\r\n    change: 'press'|'release';\r\n}\r\n\r\nexport default class KeyWatcher {\r\n    downKeys: string[];\r\n    changes: IKeyChange[];\r\n\r\n    constructor(public attachedElement: HTMLElement, private logKeyNames?: boolean) {\r\n        if  (this.logKeyNames === undefined) {\r\n            this.logKeyNames = false;\r\n        }\r\n        attachedElement.addEventListener('keydown', k => this.onKeyDown(k));\r\n        attachedElement.addEventListener('keyup', k => this.onKeyUp(k));\r\n\r\n        this.downKeys = [];\r\n        this.changes = [];\r\n    }\r\n\r\n    private onKeyDown(key: KeyboardEvent) {\r\n        if (this.logKeyNames) {\r\n            // tslint:disable-next-line: no-console\r\n            console.log(key.key);\r\n        }\r\n        const idx = this.downKeys.indexOf(key.key);\r\n        if (idx === -1) {\r\n            this.changes.push({ key: key.key, change: 'press' });\r\n            this.downKeys.push(key.key);\r\n        }\r\n    }\r\n\r\n    private onKeyUp(key: KeyboardEvent) {\r\n        this.changes.push({ key: key.key, change: 'release' });\r\n        const idx = this.downKeys.indexOf(key.key);\r\n        this.downKeys.splice(idx, 1);\r\n    }\r\n\r\n    public Update(): KeyState {\r\n        const storeKeys = this.downKeys;\r\n        const storeChanges = this.changes;\r\n\r\n        this.downKeys = storeKeys.slice();\r\n        this.changes = [];\r\n\r\n        return new KeyState(storeKeys, storeChanges);\r\n    }\r\n}","import KeyWatcher, { IKeyChange } from './KeyWatcher';\r\nimport KeyState from './KeyState';\r\n\r\nexport default class KeyboardManager {\r\n\r\n    watcher: KeyWatcher;\r\n    prvState: KeyState;\r\n    currentState: KeyState;\r\n\r\n    constructor(element: HTMLElement, logKeyNames?: boolean) {\r\n        this.watcher = new KeyWatcher(element, logKeyNames);\r\n        this.prvState = this.currentState = this.watcher.Update();\r\n    }\r\n\r\n    public update(): void {\r\n        this.prvState = this.currentState;\r\n        this.currentState = this.watcher.Update();\r\n    }\r\n\r\n    public isKeyDown(key: string): boolean {\r\n        return this.currentState.isKeyDown(key);\r\n    }\r\n\r\n    public isKeyUp(key: string): boolean {\r\n        return this.currentState.isKeyUp(key);\r\n    }\r\n\r\n    public isKeyPressed(key: string): boolean {\r\n        return this.currentState.isKeyDown(key) && this.prvState.isKeyUp(key);\r\n    }\r\n\r\n    public isKeyReleased(key: string): boolean {\r\n        return this.currentState.isKeyUp(key) && this.prvState.isKeyDown(key);\r\n    }\r\n\r\n    public changes(): IKeyChange[] {\r\n        return this.currentState.changes;\r\n    }\r\n}","export default {\r\n    Width: 1000,\r\n    Height: 800\r\n};","export default __webpack_public_path__ + \"12a4e8650485f6c9e051cf30dfcfc746.png\";","export default __webpack_public_path__ + \"025640544516cf152164dd0622114d6c.png\";","const twoPi = Math.PI * 2;\r\n\r\nexport default class Angle {\r\n    static normalize(angle: number): number {\r\n        angle = angle % twoPi;\r\n        if (angle < 0) angle += twoPi;\r\n        return angle;\r\n    }\r\n\r\n    static relativeNormalize(angle: number): number {\r\n        angle = angle % twoPi;\r\n        if (angle > Math.PI) {\r\n            angle -= twoPi;\r\n        } else if(angle < - Math.PI) {\r\n            angle += twoPi;\r\n        }\r\n        return angle;\r\n    }\r\n\r\n    static relativeAngle(a: number, b: number) {\r\n        return Angle.relativeNormalize(a - b);\r\n    }\r\n}","import Point from '../common/position/Point';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport ImageLoader from '../common/assets/ImageLoader';\r\nimport { RotTransformCanvas } from '../common/CanvasHelpers';\r\nimport KeyboardManager from '../common/input/KeyboardManager';\r\nimport Angle from '../common/position/Angle';\r\n\r\nconst PHYS = {\r\n    acceleration: 0.2,\r\n    maxvelocity: 20,\r\n    vFricMin: 0.998,\r\n    vFricMax: 0.99,\r\n\r\n    engineAdjSpeed: 0.06,\r\n\r\n    turnBaseAccel: 0.002,\r\n    turnEngineMaxAccel: 0.004,\r\n    turnFric: 0.98,\r\n    turnPullMax: 0.003,\r\n    turnPullMaxV: 120,\r\n};\r\n\r\nexport default class Player {\r\n    position: Point;\r\n    velocity: Point;\r\n    angularVelocity: number;\r\n    rotation: number;\r\n\r\n    private isEngineOn: boolean;\r\n    private engineDeflect: number;\r\n    private tgtDeflect: number;\r\n\r\n    constructor(private sprites: SpriteSheet) {\r\n        this.position = new Point(0, 0);\r\n        this.velocity = new Point(0, 0);\r\n        this.angularVelocity = 0;\r\n        this.rotation = 0;\r\n        this.engineDeflect = 0;\r\n        this.tgtDeflect = 0;\r\n    }\r\n\r\n    tick(keys: KeyboardManager) {\r\n        if (keys.isKeyDown('w')) {\r\n            this.isEngineOn = true;\r\n        } else {\r\n            this.isEngineOn = false;\r\n        }\r\n\r\n        if (keys.isKeyDown('a')) {\r\n            this.tgtDeflect = 1;\r\n        } else if (keys.isKeyDown('d')) {\r\n            this.tgtDeflect = -1;\r\n        } else {\r\n            this.tgtDeflect = 0;\r\n        }\r\n\r\n        if (this.tgtDeflect >= this.engineDeflect) {\r\n            this.engineDeflect = Math.min(this.engineDeflect + PHYS.engineAdjSpeed, this.tgtDeflect);\r\n        } else {\r\n            this.engineDeflect = Math.max(this.engineDeflect - PHYS.engineAdjSpeed, this.tgtDeflect);\r\n        }\r\n\r\n        const vDirection = Math.atan2(this.velocity.y, this.velocity.x);\r\n        const diffDir = Angle.relativeAngle(this.rotation, vDirection);\r\n        const diffPerc = diffDir / Math.PI;\r\n\r\n        this.angularVelocity *= PHYS.turnFric;\r\n        this.angularVelocity -= this.tgtDeflect * PHYS.turnBaseAccel + this.engineDeflect * PHYS.turnEngineMaxAccel * (this.isEngineOn ? 1 : 0);\r\n\r\n        this.rotation += this.angularVelocity;\r\n\r\n        const friction = (1 - Math.abs(diffPerc)) * PHYS.vFricMin + (Math.abs(diffPerc)) * PHYS.vFricMax;\r\n        this.velocity.MultWith(friction, friction);\r\n\r\n        if (this.isEngineOn) {\r\n            this.velocity.x += PHYS.acceleration * Math.cos(this.rotation);\r\n            this.velocity.y += PHYS.acceleration * Math.sin(this.rotation);\r\n        }\r\n\r\n        let vTotal = this.velocity.Length();\r\n        let vAngle = this.velocity.Direction();\r\n\r\n        if (vTotal >= PHYS.maxvelocity) {\r\n            vTotal = PHYS.maxvelocity;\r\n        }\r\n\r\n        let anglePullAmt = Math.sin(diffDir);\r\n        anglePullAmt *= Math.min(vTotal / PHYS.turnPullMaxV, 1);\r\n        anglePullAmt *= PHYS.turnPullMax;\r\n\r\n        vAngle += anglePullAmt;\r\n        this.velocity.x = Math.cos(vAngle) * vTotal;\r\n        this.velocity.y = Math.sin(vAngle) * vTotal;\r\n\r\n\r\n        this.position.AddWith(this.velocity);\r\n    }\r\n\r\n    render(ctx: CanvasRenderingContext2D) {\r\n        ctx.save();\r\n        RotTransformCanvas(ctx, this.position.x, this.position.y, 4, 8, this.rotation + Math.PI / 2);\r\n        if (this.isEngineOn) {\r\n            this.sprites.rotrender(ctx, 4, 11, 8, 16, Math.floor(4 * Math.random()), 1, this.engineDeflect * Math.PI / 4, 4, 2);\r\n        }\r\n        if (this.tgtDeflect > 0) {\r\n            // Render spin flame\r\n            this.sprites.rotrender(ctx, 7, 4, 8, 16, Math.floor(Math.random() * 2), 2, 0, 3, 4);\r\n        }\r\n        else if (this.tgtDeflect < 0) {\r\n            // Render spin flame\r\n            this.sprites.rotrender(ctx, 1, 4, 8, 16, 2 + Math.floor(Math.random() * 2), 2, 0, 6, 4);\r\n        }\r\n        this.sprites.render(ctx, 0, 0, 8, 16, 0, 0);\r\n        ctx.restore();\r\n    }\r\n}","import { type } from \"os\"\r\nexport enum ETeam\r\n{\r\n    ally,\r\n    enemy,\r\n    neutral\r\n}","import KeyboardManager from \"../common/input/KeyboardManager\";\r\nimport { ETeam } from \"./ETeam\";\r\nimport { IEffect } from \"./IEffect\";\r\nimport IEntity from \"./IEntity\";\r\nimport Player from \"./Player\";\r\n\r\nexport default class GameState {\r\n    public Player: Player;\r\n    public Entities: { [key in ETeam]: IEntity[] }\r\n    public Effects: IEffect[];\r\n\r\n    constructor(player: Player, public keys: KeyboardManager){\r\n        this.Player = player;\r\n        this.Entities = <any>{};\r\n        this.Entities[ETeam.neutral] = [];\r\n        this.Entities[ETeam.ally] = [];\r\n        this.Entities[ETeam.enemy] = [];\r\n        this.Effects = [];\r\n    }\r\n\r\n    public tick(){\r\n        this.keys.update();\r\n        for(let i = this.Effects.length - 1; i >= 0; i --) {\r\n            if(this.Effects[i].tick())\r\n                this.Effects.splice(i, 1);\r\n        }\r\n        this.updateEntities(this.Entities[ETeam.neutral]);\r\n        this.updateEntities(this.Entities[ETeam.ally]);\r\n        this.updateEntities(this.Entities[ETeam.enemy]);\r\n    }\r\n\r\n    private updateEntities(entities: IEntity[]) {\r\n        for(let i = entities.length - 1; i >= 0; i --) {\r\n            if(!entities[i].tick(this.keys, this))\r\n                entities.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    public draw(ctx: CanvasRenderingContext2D){\r\n        this.drawEntities(ctx, this.Entities[ETeam.neutral]);\r\n        this.drawEntities(ctx, this.Entities[ETeam.ally]);\r\n        this.drawEntities(ctx, this.Entities[ETeam.enemy]);\r\n        for(let i = 0; i < this.Effects.length; i++) {\r\n            this.Effects[i].draw(ctx);\r\n        }\r\n    }\r\n    \r\n    private drawEntities(ctx: CanvasRenderingContext2D, entities: IEntity[]) {\r\n        for(let i = entities.length - 1; i >= 0; i --) {\r\n            entities[i].render(ctx);\r\n        }\r\n    }\r\n}","import { TimingFunction } from \"./TimingFunction\";\r\nimport { Keyframes } from './Keyframes';\r\n\r\nexport class Interpolated<T> {\r\n    constructor(public range: Keyframes<T>, public timingFunction: TimingFunction) {\r\n\r\n    }\r\n}\r\n\r\nexport class InterpolationTimer {\r\n    public elapsedTime: number;\r\n    constructor(public totalTime: number) {\r\n        this.elapsedTime = 0;\r\n    }\r\n    tick(): boolean {\r\n        this.elapsedTime ++;\r\n        return this.elapsedTime >= this.totalTime;\r\n    }\r\n    sample<T>(animation: Interpolated<T>) {\r\n        return animation.range.sample(animation.timingFunction(this.elapsedTime / this.totalTime));\r\n    }\r\n}","import { Color } from \"../../common/Color\";\r\nimport { Interpolated, InterpolationTimer } from \"../../common/interpolation/Interpolated\";\r\nimport Point from \"../../common/position/Point\";\r\nimport { IEffect } from \"../IEffect\";\r\n\r\nexport class SingleExplosion implements IEffect {\r\n\r\n    private timing: InterpolationTimer;\r\n\r\n    constructor(\r\n        public position: Point,\r\n        public outerRadius: Interpolated<number>,\r\n        public innerRadius: Interpolated<number>,\r\n        public fillColor: Interpolated<Color>,\r\n        totalTime: number)\r\n    {\r\n        this.timing = new InterpolationTimer(totalTime);\r\n    }\r\n\r\n    tick(): boolean {\r\n        return this.timing.tick();\r\n    }\r\n    draw(ctx: CanvasRenderingContext2D): void {\r\n        const outer = this.timing.sample(this.outerRadius);\r\n        const inner = this.timing.sample(this.innerRadius);\r\n        const fill = this.timing.sample(this.fillColor);\r\n        ctx.beginPath();\r\n        ctx.arc(this.position.x, this.position.y, outer, 0, Math.PI * 2, false);\r\n        if(inner >= 0) {\r\n            ctx.arc(this.position.x, this.position.y, inner, 0, Math.PI * 2, true);\r\n        }\r\n        ctx.closePath();\r\n        ctx.fillStyle = fill.toString();\r\n        ctx.fill();\r\n    }\r\n\r\n}","export type TimingFunction = (t: number)=> number;\r\n\r\nexport const TimingFunctions = {\r\n    linear: (t:number) => t,\r\n    clamp: (t:number) => Math.max(Math.min(t, 1), 0),\r\n    fastIn: Bezier(0, 0.8, 1),\r\n    fastOut: Bezier(0, 0.2, 1),\r\n};\r\n\r\nexport function Bezier(...pts: number[]): TimingFunction {\r\n    return (t: number) => b_recurse(t, pts, 0, pts.length);\r\n}\r\n\r\nfunction b_recurse(p: number, pts: number[], pi: number, pc: number): number {\r\n    if(pc === 1) return pts[pi];\r\n    return b_recurse(p, pts, pi, pc - 1) * (1-p) + b_recurse(p, pts, pi + 1, pc - 1) * p;\r\n}","import { Color } from \"../Color\";\r\n\r\nexport type InterpolationFunction<T> = (start: T, end: T, percentage: number) => T;\r\n\r\nexport const numberInterpolator: InterpolationFunction<number> = (a, b, p) => a + (b-a)*p;\r\n\r\nexport const fastColorInterpolator: InterpolationFunction<Color> = (a,b,p) => \r\n    Color.rgb(\r\n        numberInterpolator(a.r(), b.r(), p),\r\n        numberInterpolator(a.g(), b.g(), p),\r\n        numberInterpolator(a.b(), b.b(), p));\r\n\r\n        \r\nexport const trueColorInterpolator: InterpolationFunction<Color> = (a,b,p) => \r\n    Color.rgb(\r\n        Math.sqrt(numberInterpolator(a.r() * a.r(), b.r() * b.r(), p)),\r\n        Math.sqrt(numberInterpolator(a.g() * a.g(), b.g() * b.g(), p)),\r\n        Math.sqrt(numberInterpolator(a.b() * a.b(), b.b() * b.b(), p)));\r\n\r\n        \r\nexport const hsvColorInterpolator: InterpolationFunction<Color> = (a,b,p) => \r\n    Color.hsv(\r\n        numberInterpolator(a.h(), b.h(), p),\r\n        numberInterpolator(a.s(), b.s(), p),\r\n        numberInterpolator(a.v(), b.v(), p));","import { exception } from \"console\";\r\nimport { Color } from \"../Color\";\r\nimport { fastColorInterpolator, InterpolationFunction, numberInterpolator } from \"./InterpolationFunction\";\r\n\r\nexport function EvenlySpacedKeyframes<T>(...args: T[]): Keyframes<T>;\r\nexport function EvenlySpacedKeyframes<T>(interpolator: InterpolationFunction<T>, ...args: T[]): Keyframes<T>;\r\nexport function EvenlySpacedKeyframes<T>(interpolator?: InterpolationFunction<T>, ...args: T[]): Keyframes<T> {\r\n    if(interpolator.arguments === undefined) {\r\n        args.splice(0, 0, <T><any>interpolator);\r\n        interpolator = undefined;\r\n    }\r\n\r\n    let numFrames = args.length - 1;\r\n    let percPer = 1 / numFrames;\r\n    let keyframes = new Keyframes<T>(args[0], interpolator);\r\n    for(let i = 1; i < args.length; i++) {\r\n        keyframes.addKeyFrame(percPer * i, args[i]);\r\n    }\r\n    return keyframes;\r\n}\r\n\r\nexport class Keyframes<T> \r\n{\r\n    private interpolator: InterpolationFunction<T>;\r\n    private keys: {time: number, value: T}[];\r\n\r\n    constructor(start: T, interpolator?: InterpolationFunction<T>)\r\n    {\r\n        if(interpolator === undefined) {\r\n            if(typeof(start) === \"number\") {\r\n                this.interpolator = <any>numberInterpolator;\r\n            } else if((<Color><unknown>start).r !== undefined) {\r\n                // Assume this is color\r\n                this.interpolator = <any>fastColorInterpolator;\r\n            }\r\n            else {\r\n                throw 'No default interpolator found';\r\n            }\r\n        } else {\r\n            this.interpolator = interpolator;\r\n        }\r\n        this.keys = [{time: 0, value: start}];\r\n    }\r\n\r\n    public addKeyFrame(time: number, value: T) {\r\n        for(let i = 0; i < this.keys.length; i++)\r\n        {\r\n            if(time < this.keys[i].time) {\r\n                this.keys.splice(i, 0, {time, value});\r\n                return;\r\n            }\r\n        }\r\n        this.keys.push({time, value});\r\n    }\r\n\r\n    public sample(p: number): T {\r\n        if(this.keys.length === 1) return this.keys[0].value;\r\n\r\n        var keyIndex = 0;\r\n        while(this.keys[keyIndex + 1].time < p && keyIndex + 2 < this.keys.length) {\r\n            keyIndex ++;\r\n        }\r\n\r\n        let sampleRange = this.keys[keyIndex + 1].time - this.keys[keyIndex].time;\r\n        let samplePerc = (p - this.keys[keyIndex].time) / sampleRange;\r\n\r\n        return this.interpolator(this.keys[keyIndex].value, this.keys[keyIndex + 1].value, samplePerc);\r\n    }\r\n}","import { Color } from \"../../common/Color\";\r\nimport { Interpolated, InterpolationTimer } from \"../../common/interpolation/Interpolated\";\r\nimport Point from \"../../common/position/Point\";\r\nimport { IEffect } from \"../IEffect\";\r\nimport { Range } from '../../common/Range';\r\nimport { SingleExplosion } from \"./SingleExplosion\";\r\nimport { EvenlySpacedKeyframes } from \"../../common/interpolation/Keyframes\";\r\nimport { TimingFunctions } from \"../../common/interpolation/TimingFunction\";\r\nimport { any } from \"../../../LinqLike\";\r\n\r\nexport class Explosion implements IEffect {\r\n\r\n    private explosions: SingleExplosion[];\r\n    private currentBurstDelay = 0;\r\n    private maxExplosionIndex = 0;\r\n\r\n    constructor(\r\n        public position: Point,\r\n        public burstXVariance: Range,\r\n        public burstYVariance: Range,\r\n        public numBursts: Range,\r\n        public burstDelay: number,\r\n        public burstLifetime: Range,\r\n        public burstOuterRadius: Range,\r\n        )\r\n    {\r\n        const nb = Math.floor(numBursts.GetValue(Math.random()));\r\n        this.explosions = new Array(nb);\r\n        this.triggerExplosions();\r\n    }\r\n\r\n    triggerExplosions() {\r\n        while(this.currentBurstDelay === 0 && this.maxExplosionIndex < this.explosions.length) {\r\n            this.currentBurstDelay = this.burstDelay;\r\n            this.spawnBurst();\r\n        }\r\n    }\r\n\r\n    spawnBurst() {\r\n        const bx = this.position.x + this.burstXVariance.GetValue(Math.random());\r\n        const by = this.position.y + this.burstYVariance.GetValue(Math.random());\r\n        const lifetime = this.burstLifetime.GetValue(Math.random());\r\n        const outerRadius = this.burstOuterRadius.GetValue(Math.random());\r\n        const startingOuterRadius = outerRadius / 4;\r\n\r\n        this.explosions[this.maxExplosionIndex++] = new SingleExplosion(\r\n            new Point(bx, by),\r\n            new Interpolated<number>(EvenlySpacedKeyframes(startingOuterRadius, outerRadius), TimingFunctions.linear),\r\n            new Interpolated<number>(EvenlySpacedKeyframes(-startingOuterRadius, outerRadius), TimingFunctions.fastOut),\r\n            new Interpolated<Color>(EvenlySpacedKeyframes(Color.rgb(1, 1, 0.5), Color.rgb(1, 0, 0), Color.rgb(0.2, 0.2, 0)), TimingFunctions.linear),\r\n            lifetime\r\n        );\r\n    }\r\n\r\n    tick(): boolean {\r\n        let anyStillRunning = false;\r\n        for(let i = 0; i < this.maxExplosionIndex; i++) {\r\n            if(this.explosions[i] !== null && this.explosions[i] !== undefined) {\r\n                if(this.explosions[i].tick()){\r\n                    this.explosions[i] = null;\r\n                } else {\r\n                    anyStillRunning = true;\r\n                }\r\n            }\r\n        }\r\n        this.currentBurstDelay --;\r\n        if(this.currentBurstDelay === 0) this.triggerExplosions();\r\n        return (!anyStillRunning && this.maxExplosionIndex === this.explosions.length);\r\n    }\r\n    draw(ctx: CanvasRenderingContext2D): void {\r\n        for(let i = 0; i < this.maxExplosionIndex; i++) {\r\n            if(this.explosions[i] !== null && this.explosions[i] !== undefined) {\r\n                this.explosions[i].draw(ctx);\r\n            }\r\n        }\r\n    }\r\n\r\n}","import { RotTransformCanvas } from \"../CanvasHelpers\";\r\nimport Point from \"../position/Point\";\r\n\r\nexport class SpriteAtlas {\r\n    public image: HTMLImageElement;\r\n    constructor(spriteUrl: string, private onload: () => void) {\r\n        this.image = document.createElement('img');\r\n        this.image.src = spriteUrl;\r\n        this.image.addEventListener('load', () => this.loadFinished());\r\n    }\r\n\r\n    private loadFinished() {\r\n        this.onload();\r\n    }\r\n\r\n    getSprite(sourceOffset: Point, sourceSize: Point, origin?: Point, sourceRotation?: number) {\r\n        return new AtlasSprite(this, sourceOffset, sourceSize, origin, sourceRotation);\r\n    }\r\n}\r\n\r\nexport class AtlasSprite {\r\n    public origin: Point;\r\n    public sourceRotation: number;\r\n\r\n    constructor(public atlas: SpriteAtlas, public sourceOffset: Point, public sourceSize: Point, origin?: Point, sourceRotation?: number) {\r\n        this.origin = origin ?? new Point(0,0);\r\n        this.sourceRotation = sourceRotation ?? 0;\r\n    }\r\n\r\n    draw(ctx: CanvasRenderingContext2D, position: Point, size: Point, rotation?: number) {\r\n        ctx.save();\r\n        ctx.translate(position.x, position.y);\r\n        ctx.rotate((rotation ?? 0) + this.sourceRotation);\r\n        ctx.scale(size.x, size.y);\r\n        ctx.translate(-this.origin.x, -this.origin.y);\r\n        ctx.drawImage(this.atlas.image, this.sourceOffset.x, this.sourceOffset.y, this.sourceSize.x, this.sourceSize.y, 0, 0, 1, 1);\r\n        ctx.restore();\r\n    }\r\n}","import Point from \"./position/Point\";\r\n\r\nexport default class Angle {\r\n    /** Takes an angle and returns it in the range of [0, 2 PI) */\r\n    static normalize(angle: number) {\r\n        angle %= Math.PI * 2;\r\n        if(angle < 0) angle += Math.PI * 2;\r\n        return angle;\r\n    }\r\n\r\n    /** Takes an angle and returns it in the range of [-PI, PI) */\r\n    static relativeNormalize(angle: number){\r\n        var norm = Angle.normalize(angle);\r\n        if(norm >= Math.PI) {\r\n            return norm - Math.PI * 2;;\r\n        } else {\r\n            return norm;\r\n        }\r\n    }   \r\n\r\n    static accuteAngle(from: number, to: number){\r\n        return Angle.relativeNormalize(to - from);\r\n    }\r\n\r\n    static angleBetween(from: Point, to: Point) {\r\n        return Math.atan2(to.y - from.y, to.x - from.x);\r\n    }\r\n}","import Angle from \"../../common/Angle\";\r\nimport GameState from \"../GameState\";\r\nimport { Ship } from \"../Ship\";\r\nimport { IShipAI } from \"./IShipAI\";\r\n\r\nexport default class FigherAI implements IShipAI {\r\n    TickAI(gs: GameState, ship: Ship): { tgtVel: number; tgtHeading: number; } {\r\n        const player = gs.Player;\r\n        const tgtHeading = Angle.angleBetween(ship.position, player.position);\r\n\r\n        const deltaHeading = Angle.accuteAngle(ship.rotation, tgtHeading);\r\n        const tgtSpeed = 1 - Math.max(0, Math.min(1, Math.abs(deltaHeading) / Math.PI));\r\n\r\n        return { tgtVel: tgtSpeed * ship.definition.maxSpeed, tgtHeading: tgtHeading };\r\n    }\r\n}","import Angle from \"../common/Angle\";\r\nimport KeyboardManager from \"../common/input/KeyboardManager\";\r\nimport Point from \"../common/position/Point\";\r\nimport { IShipAI } from \"./ai/IShipAI\";\r\nimport { ETeam } from \"./ETeam\";\r\nimport GameState from \"./GameState\";\r\nimport IEntity from \"./IEntity\";\r\nimport { ShipDefinition } from \"./ShipDefinition\";\r\n\r\nexport class Ship implements IEntity{\r\n    \r\n    public Velocity: number;\r\n    private lastAccel: number;\r\n    private lastDeccel: number;\r\n    private lastTurn: number;\r\n    private currentHp: number;\r\n    \r\n    constructor(\r\n        public definition: ShipDefinition,\r\n        public position: Point,\r\n        public rotation: number,\r\n        public ai: IShipAI,\r\n        private team: ETeam) {\r\n            this.Velocity = 0;\r\n            this.lastAccel = this.lastDeccel = this.lastTurn = 0;\r\n            this.currentHp = this.definition.maxHp;\r\n    }\r\n\r\n    tick(keys: KeyboardManager, gs: GameState): boolean {\r\n        const { tgtVel, tgtHeading } = this.ai.TickAI(gs, this);\r\n        if(tgtVel < this.Velocity && this.definition.maxDeccel > 0) {\r\n            // Try deccel\r\n            var delta = this.Velocity - tgtVel;\r\n            this.lastDeccel = Math.min(1, delta / this.definition.maxDeccel);\r\n            this.Velocity -= this.lastDeccel * this.definition.maxDeccel;\r\n        } else if(tgtVel > this.Velocity) {\r\n            // Try accel\r\n            var delta = tgtVel - this.Velocity;\r\n            this.lastAccel = Math.min(1, delta / this.definition.maxAccel);\r\n            this.Velocity += this.lastAccel * this.definition.maxAccel;\r\n        }\r\n\r\n        // Try turn\r\n        var turnAmt = Angle.accuteAngle(this.rotation, tgtHeading);\r\n\r\n        var turnDirection = Math.sign(turnAmt);\r\n        turnAmt = Math.abs(turnAmt);\r\n        this.lastTurn = Math.min(turnAmt / this.definition.maxTurnRate, 1) * turnDirection;\r\n\r\n        this.rotation += this.lastTurn * this.definition.maxTurnRate;\r\n\r\n        if(this.Velocity >= 0) this.Velocity = Math.min(this.Velocity, this.definition.maxSpeed);\r\n        else this.Velocity = Math.max(this.Velocity, - this.definition.maxSpeed);\r\n        \r\n        this.position.AddWith(Point.fromAngle(this.rotation, this.Velocity));\r\n        return this.currentHp > 0;\r\n    }\r\n\r\n    render(ctx: CanvasRenderingContext2D) {\r\n        this.definition.sprite.draw(ctx, this.position, this.definition.size, this.rotation);\r\n    }\r\n\r\n    getTeam() {\r\n        return this.team;\r\n    }\r\n}","import { AtlasSprite, SpriteAtlas } from \"../common/assets/SpriteAtlas\";\r\nimport Point from \"../common/position/Point\";\r\nimport { IShipAI } from \"./ai/IShipAI\";\r\nimport { ETeam } from \"./ETeam\";\r\nimport { Ship } from \"./Ship\";\r\n\r\nexport class ShipDefinition {\r\n    sprite: AtlasSprite;\r\n    origin: Point;\r\n    \r\n    constructor(\r\n        atlas: SpriteAtlas, \r\n        public size: Point,\r\n        srcPoint: Point,\r\n        srcSize: Point,\r\n        srcRot: number,\r\n        origin: Point,\r\n        public maxHp: number,\r\n        public maxAccel: number,\r\n        public maxDeccel: number,\r\n        public maxSpeed: number,\r\n        public turnAccel: number, // NOT CURRENTLY USED because it makes AI tough\r\n        public maxTurnRate: number,\r\n        public buildAi: ()=>IShipAI) {\r\n        this.sprite = atlas.getSprite(srcPoint, srcSize, origin, srcRot)\r\n    }\r\n\r\n    buildShip(team: ETeam, position: Point, rotation?:number): Ship {\r\n        return new Ship(this, position, rotation ?? 0, this.buildAi(), team);\r\n    }\r\n}\r\n","import AssetLoader from '../common/assets/AssetLoader';\r\nimport Const from './const';\r\nimport NearestNeighborScalingHelper from '../common/NearestNeighborScalingHelper';\r\nimport { NearestNeighborScaling, RotTransformCanvas } from '../common/CanvasHelpers';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport entitySheetUrl from './assets/bullets_entities.png';\r\nimport shipSheetUrl from './assets/Ships.png';\r\nimport playerUrl from './assets/bullets_ship.png';\r\nimport ImageLoader from '../common/assets/ImageLoader';\r\nimport Player from './Player';\r\nimport KeyboardManager from '../common/input/KeyboardManager';\r\nimport KeyState from '../common/input/KeyState';\r\nimport Point from '../common/position/Point';\r\nimport GameState from './GameState';\r\nimport { SingleExplosion } from './Effects/SingleExplosion';\r\nimport { Interpolated } from '../common/interpolation/Interpolated';\r\nimport { TimingFunctions } from '../common/interpolation/TimingFunction';\r\nimport { Color } from '../common/Color';\r\nimport { EvenlySpacedKeyframes, Keyframes } from '../common/interpolation/Keyframes';\r\nimport { Explosion } from './Effects/Explosion';\r\nimport { Range } from '../common';\r\nimport { AtlasSprite, SpriteAtlas } from '../common/assets/SpriteAtlas';\r\nimport { buildAllDefinitions } from './AllShipDefinitions';\r\nimport { ETeam } from './ETeam';\r\n\r\nlet scalingHelper: NearestNeighborScalingHelper;\r\nlet shipAtlas: SpriteAtlas;\r\nlet shipSprite: AtlasSprite;\r\n\r\nexport default function Run() {\r\n    const assetLoader = new AssetLoader();\r\n    const entitySheet = new SpriteSheet(8, 16, entitySheetUrl, assetLoader.registerAssetLoadCallback());\r\n    shipAtlas = new SpriteAtlas(shipSheetUrl, assetLoader.registerAssetLoadCallback());\r\n\r\n    assetLoader.onAllFinished(() => onLoadDone(entitySheet));\r\n}\r\n\r\nfunction onLoadDone(entitySheet: SpriteSheet) {\r\n    const canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n    const ctx = canvas.getContext('2d');\r\n    scalingHelper = new NearestNeighborScalingHelper(canvas, ctx, Const.Width, Const.Height, true, () => { return; });\r\n    NearestNeighborScaling(ctx);\r\n\r\n    shipSprite = shipAtlas.getSprite(new Point(96, 0), new Point(32, 48), new Point(0.5, 0.5));\r\n\r\n    let definitions = buildAllDefinitions(shipAtlas);\r\n\r\n    const keys = new KeyboardManager(document.body, false);\r\n    const player = new Player(entitySheet);\r\n\r\n    const gs = new GameState(player, keys);\r\n\r\n    gs.Effects.push(new SingleExplosion(\r\n        new Point(0, 0),\r\n        new Interpolated<number>(EvenlySpacedKeyframes(0, 30), TimingFunctions.linear),\r\n        new Interpolated<number>(EvenlySpacedKeyframes(-10, 30), TimingFunctions.fastOut),\r\n        new Interpolated<Color>(EvenlySpacedKeyframes(Color.rgb(1, 1, 0.5), Color.rgb(1, 0, 0), Color.rgb(0.2, 0.2, 0)), TimingFunctions.linear),\r\n        120\r\n    ));\r\n\r\n    gs.Effects.push(new Explosion(\r\n        new Point(100, 0),\r\n        new Range(-30, 30),\r\n        new Range(-30, 30),\r\n        new Range(30, 30),\r\n        4,\r\n        new Range(20, 40),\r\n        new Range(20, 60)));\r\n\r\n    gs.Entities[ETeam.ally].push(definitions.fighter[0].buildShip(ETeam.ally, new Point(-100, 0), Math.PI / 2));\r\n\r\n    repaintLoop(gs, player, keys, canvas, ctx);\r\n}\r\n\r\n\r\nlet rot = 0;\r\n\r\nfunction repaintLoop(gameState: GameState, player: Player, keys: KeyboardManager, canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\r\n    rot += Math.PI / 60;\r\n    keys.update();\r\n    gameState.tick();\r\n    player.tick(keys);\r\n    repaint(gameState, player, canvas, ctx);\r\n    requestAnimationFrame(() => repaintLoop(gameState, player, keys, canvas, ctx));\r\n}\r\n\r\nfunction repaint(gameState: GameState, player: Player, canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\r\n    NearestNeighborScaling(ctx);\r\n    ctx.fillStyle = 'black';\r\n    ctx.fillRect(0, 0, Const.Width, Const.Height);\r\n    ctx.save();\r\n\r\n    const focusPoint = Point.add(player.position, Point.Multiply(player.velocity, 10));\r\n\r\n    ctx.translate(-(focusPoint.x - Const.Width / 2), -(focusPoint.y - Const.Height / 2));\r\n    ctx.fillStyle = 'gray';\r\n\r\n    const bg_line_size = 400;\r\n\r\n    // Render some bg lines so we can see motion\r\n    for (let ty = Math.floor((focusPoint.y - Const.Height / 2) / bg_line_size) * bg_line_size; ty <= Math.floor((focusPoint.y + Const.Height / 2) / bg_line_size) * bg_line_size; ty += bg_line_size) {\r\n        ctx.fillRect(focusPoint.x - Const.Width / 2, ty, Const.Width, 3);\r\n    }\r\n\r\n    for (let tx = Math.floor((focusPoint.x - Const.Width / 2) / bg_line_size) * bg_line_size; tx <= Math.floor((focusPoint.x + Const.Width / 2) / bg_line_size) * bg_line_size; tx += bg_line_size) {\r\n        ctx.fillRect(tx, focusPoint.y - Const.Height / 2, 3, Const.Height);\r\n    }\r\n\r\n    player.render(ctx);\r\n\r\n    shipSprite.draw(ctx, new Point(100,0), new Point(64, 96), rot);\r\n\r\n    gameState.draw(ctx);\r\n\r\n    \r\n\r\n    ctx.restore();\r\n}","import { SpriteAtlas } from \"../common/assets/SpriteAtlas\";\r\nimport Point from \"../common/position/Point\";\r\nimport FigherAI from \"./ai/FighterAI\";\r\nimport { ShipDefinition } from \"./ShipDefinition\";\r\n\r\nexport type ShipType = 'interceptor' | 'fighter';\r\nexport type AllDefinitions = {\r\n    [key in ShipType]: [ShipDefinition, ShipDefinition]\r\n}\r\n\r\nexport function buildAllDefinitions(sprites: SpriteAtlas): AllDefinitions {\r\n    return {\r\n        interceptor: [\r\n            new ShipDefinition(sprites, \r\n                new Point(32, 32),\r\n                new Point(32, 16),\r\n                new Point(16, 16),\r\n                Math.PI / 2,\r\n                new Point(0.5, 0.5),\r\n                5, 1, 1, 6, 0.001, Math.PI / 128, () => new FigherAI()),\r\n            new ShipDefinition(sprites, \r\n                new Point(32, 32),\r\n                new Point(128, 16),\r\n                new Point(16, 16),\r\n                Math.PI / 2,\r\n                new Point(0.5, 0.5),\r\n                5, 1, 1, 6, 0.001, Math.PI / 128, () => new FigherAI())\r\n        ],\r\n        fighter: [\r\n            new ShipDefinition(sprites, \r\n                new Point(64, 64),\r\n                new Point(64, 0),\r\n                new Point(32, 32),\r\n                Math.PI / 2,\r\n                new Point(0.5, 0.5),\r\n                5, 0.1, 0.01, 8, 0.001, Math.PI / 64, () => new FigherAI()),\r\n            new ShipDefinition(sprites, \r\n                new Point(64, 64),\r\n                new Point(160, 0),\r\n                new Point(32, 32),\r\n                Math.PI / 2,\r\n                new Point(0.5, 0.5),\r\n                5, 1, 1, 6, 0.001, Math.PI / 128, () => new FigherAI())\r\n        ]\r\n    };\r\n}"],"sourceRoot":""}