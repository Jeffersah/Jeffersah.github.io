{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///../../src/ILogger.ts","webpack:///../../src/Utils.ts","webpack:///../../src/Errors.ts","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///../../src/HttpClient.ts","webpack:///../../src/Loggers.ts","webpack:///../../src/TextMessageFormat.ts","webpack:///./src/projects/common/CanvasHelpers.ts","webpack:///./src/LinqLike.ts","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/react-dropdown/dist/index.js","webpack:///./node_modules/axios-observable/dist/index.js","webpack:///external \"ReactDOM\"","webpack:///./node_modules/mini-create-react-context/dist/esm/index.js","webpack:///./node_modules/path-to-regexp/index.js","webpack:///./src/projects/common/assets/AssetLoader.ts","webpack:///./src/projects/common/assets/SpriteSheet.ts","webpack:///./src/projects/common/NearestNeighborScalingHelper.ts","webpack:///./src/hooks/useUpdateState.ts","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/core/mergeConfig.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/react-is/index.js","webpack:///./src/hooks/useWindowSize.ts","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///../../src/NodeHttpClient.ts","webpack:///../../src/HandshakeProtocol.ts","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/core/buildFullPath.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/axios-observable/dist/create-observable.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/path-to-regexp/node_modules/isarray/index.js","webpack:///./node_modules/react-is/cjs/react-is.production.min.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/rxjs/src/internal/util/isFunction.ts","webpack:///./node_modules/rxjs/src/internal/config.ts","webpack:///./node_modules/rxjs/src/internal/util/hostReportError.ts","webpack:///./node_modules/rxjs/src/internal/Observer.ts","webpack:///./node_modules/rxjs/src/internal/util/isObject.ts","webpack:///./node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","webpack:///./node_modules/rxjs/src/internal/Subscription.ts","webpack:///./node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/Subscriber.ts","webpack:///./node_modules/rxjs/src/internal/util/canReportError.ts","webpack:///./node_modules/rxjs/src/internal/util/identity.ts","webpack:///./node_modules/rxjs/src/internal/util/pipe.ts","webpack:///./node_modules/rxjs/src/internal/Observable.ts","webpack:///./node_modules/rxjs/src/internal/util/toSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","webpack:///./node_modules/rxjs/src/internal/SubjectSubscription.ts","webpack:///./node_modules/rxjs/src/internal/Subject.ts","webpack:///./node_modules/rxjs/src/internal/operators/refCount.ts","webpack:///./node_modules/rxjs/src/internal/observable/ConnectableObservable.ts","webpack:///./node_modules/rxjs/src/internal/operators/groupBy.ts","webpack:///./node_modules/rxjs/src/internal/BehaviorSubject.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/Action.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/QueueAction.ts","webpack:///./node_modules/rxjs/src/internal/Scheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts","webpack:///./node_modules/rxjs/src/internal/observable/empty.ts","webpack:///./node_modules/rxjs/src/internal/util/isScheduler.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToArray.ts","webpack:///./node_modules/rxjs/src/internal/Notification.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","webpack:///./node_modules/rxjs/src/internal/observable/fromArray.ts","webpack:///./node_modules/rxjs/src/internal/observable/of.ts","webpack:///./node_modules/rxjs/src/internal/observable/throwError.ts","webpack:///./node_modules/rxjs/src/internal/operators/observeOn.ts","webpack:///./node_modules/rxjs/src/internal/ReplaySubject.ts","webpack:///./node_modules/rxjs/src/internal/AsyncSubject.ts","webpack:///./node_modules/rxjs/src/internal/util/Immediate.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsapAction.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts","webpack:///./node_modules/rxjs/src/internal/util/isObservable.ts","webpack:///./node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","webpack:///./node_modules/rxjs/src/internal/util/EmptyError.ts","webpack:///./node_modules/rxjs/src/internal/util/TimeoutError.ts","webpack:///./node_modules/rxjs/src/internal/operators/map.ts","webpack:///./node_modules/rxjs/src/internal/observable/bindCallback.ts","webpack:///./node_modules/rxjs/src/internal/observable/bindNodeCallback.ts","webpack:///./node_modules/rxjs/src/internal/OuterSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/InnerSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/symbol/iterator.ts","webpack:///./node_modules/rxjs/src/internal/util/isPromise.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeTo.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToObservable.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToPromise.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToIterable.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToResult.ts","webpack:///./node_modules/rxjs/src/internal/observable/combineLatest.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduled.ts","webpack:///./node_modules/rxjs/src/internal/util/isInteropObservable.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","webpack:///./node_modules/rxjs/src/internal/util/isIterable.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","webpack:///./node_modules/rxjs/src/internal/observable/from.ts","webpack:///./node_modules/rxjs/src/internal/operators/mergeMap.ts","webpack:///./node_modules/rxjs/src/internal/operators/mergeAll.ts","webpack:///./node_modules/rxjs/src/internal/operators/concatAll.ts","webpack:///./node_modules/rxjs/src/internal/observable/concat.ts","webpack:///./node_modules/rxjs/src/internal/observable/defer.ts","webpack:///./node_modules/rxjs/src/internal/observable/forkJoin.ts","webpack:///./node_modules/rxjs/src/internal/observable/fromEvent.ts","webpack:///./node_modules/rxjs/src/internal/observable/fromEventPattern.ts","webpack:///./node_modules/rxjs/src/internal/observable/generate.ts","webpack:///./node_modules/rxjs/src/internal/observable/iif.ts","webpack:///./node_modules/rxjs/src/internal/util/isNumeric.ts","webpack:///./node_modules/rxjs/src/internal/observable/interval.ts","webpack:///./node_modules/rxjs/src/internal/observable/merge.ts","webpack:///./node_modules/rxjs/src/internal/observable/never.ts","webpack:///./node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts","webpack:///./node_modules/rxjs/src/internal/observable/pairs.ts","webpack:///./node_modules/rxjs/src/internal/util/not.ts","webpack:///./node_modules/rxjs/src/internal/operators/filter.ts","webpack:///./node_modules/rxjs/src/internal/observable/partition.ts","webpack:///./node_modules/rxjs/src/internal/observable/race.ts","webpack:///./node_modules/rxjs/src/internal/observable/range.ts","webpack:///./node_modules/rxjs/src/internal/observable/timer.ts","webpack:///./node_modules/rxjs/src/internal/observable/using.ts","webpack:///./node_modules/rxjs/src/internal/observable/zip.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/resolve-pathname/esm/resolve-pathname.js","webpack:///./node_modules/tiny-invariant/dist/tiny-invariant.esm.js","webpack:///./node_modules/history/esm/history.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///../modules/HistoryContext.js","webpack:///../modules/createNameContext.js","webpack:///../modules/RouterContext.js","webpack:///../modules/Router.js","webpack:///../modules/MemoryRouter.js","webpack:///../modules/Lifecycle.js","webpack:///../modules/matchPath.js","webpack:///../modules/Route.js","webpack:///../modules/StaticRouter.js","webpack:///../modules/Switch.js","webpack:///../modules/hooks.js","webpack:///../modules/BrowserRouter.js","webpack:///../modules/HashRouter.js","webpack:///../modules/utils/locationUtils.js","webpack:///../modules/Link.js","webpack:///../modules/NavLink.js","webpack:///./src/components/renderFromUrl/CodeFromUrlComponent.tsx","webpack:///./src/views/home/home.tsx","webpack:///./src/projects/common/assets/ImageLoader.ts","webpack:///./src/projects/dndmech/assets/MechIndicators.png","webpack:///./src/projects/dndmech/assets/MechSymbols.png","webpack:///./src/projects/dndmech/Symbol.ts","webpack:///./src/projects/dndmech/SymbolDefinitions.ts","webpack:///./src/projects/dndmech/Coords.ts","webpack:///./src/projects/dndmech/index.ts","webpack:///./src/projects/dndmech/Constants.ts","webpack:///../../src/IHubProtocol.ts","webpack:///../../src/XhrHttpClient.ts","webpack:///../../src/DefaultHttpClient.ts","webpack:///../../src/HubConnection.ts","webpack:///../../src/Subject.ts","webpack:///../../src/ITransport.ts","webpack:///../../src/DefaultReconnectPolicy.ts","webpack:///../../src/AbortController.ts","webpack:///../../src/LongPollingTransport.ts","webpack:///../../src/ServerSentEventsTransport.ts","webpack:///../../src/WebSocketTransport.ts","webpack:///../../src/HttpConnection.ts","webpack:///../../src/JsonHubProtocol.ts","webpack:///../../src/HubConnectionBuilder.ts","webpack:///./src/views/projects/signalr-test/SignalrTestComponent.tsx","webpack:///./src/views/projects/dndmech2/DndMech2Wrapper.tsx","webpack:///./src/projects/sortVis/delta/EComplexity.ts","webpack:///./src/projects/sortVis/delta/SimpleOperations.ts","webpack:///./src/projects/sortVis/Record.ts","webpack:///./src/projects/sortVis/delta/SubArray.ts","webpack:///./src/projects/sortVis/SortArray.ts","webpack:///./src/projects/sortVis/SortState.ts","webpack:///./src/projects/sortVis/paints/BarDisplay.ts","webpack:///./src/views/projects/sortVis/SortVisPlaybackComponent.tsx","webpack:///./src/projects/sortVis/paints/RadialDisplay.ts","webpack:///./src/views/projects/sortVis/useAutoplay.ts","webpack:///./src/projects/sortVis/sorts/index.ts","webpack:///./src/projects/sortVis/sorts/selectionSort.ts","webpack:///./src/projects/sortVis/sorts/CycleSort.ts","webpack:///./src/projects/sortVis/sorts/heapSort.ts","webpack:///./src/projects/sortVis/sorts/quickSort.ts","webpack:///./src/projects/sortVis/sorts/quickDualPivot.ts","webpack:///./src/projects/sortVis/sorts/mergeSort.ts","webpack:///./src/projects/sortVis/dataGenerator/index.ts","webpack:///./src/projects/sortVis/dataGenerator/randomData.ts","webpack:///./src/projects/sortVis/dataGenerator/reverseSorted.ts","webpack:///./src/projects/sortVis/dataGenerator/nearSorted.ts","webpack:///./src/projects/sortVis/dataGenerator/sinData.ts","webpack:///./src/views/projects/index.ts","webpack:///./src/views/projects/mandelbrot/MandelbrotComponent.tsx","webpack:///./src/views/projects/tile-blend-test-1/TileBlendTest1Component.tsx","webpack:///./src/views/projects/spell-test/SpellTestComponent.tsx","webpack:///./src/views/projects/rpgt/RpgTest.tsx","webpack:///./src/views/projects/dndmech/DndMechComponent.tsx","webpack:///./src/views/projects/bullets/BulletsComponent.tsx","webpack:///./src/views/projects/sortVis/SortVisComponent.tsx","webpack:///./src/views/projects/tech-render/TechRenderComponent.tsx","webpack:///./src/views/projects/projects.tsx","webpack:///./src/page.tsx","webpack:///./src/routerComponent.tsx","webpack:///./src/index.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","installedModules","2","__webpack_require__","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","s","React","LogLevel","isRequired","val","isIn","values","self","this","isBrowser","isWebWorker","getDataDetail","includeContent","detail","isArrayBuffer","byteLength","view","Uint8Array","str","forEach","num","toString","substr","formatArrayBuffer","ArrayBuffer","constructor","logger","transportName","httpClient","url","accessTokenFactory","content","logMessageContent","token","headers","log","Trace","responseType","post","response","statusCode","createLogger","ConsoleLogger","Information","instance","subject","observer","dispose","index","observers","indexOf","splice","cancelCallback","catch","_","minimumLogLevel","outputConsole","logLevel","Critical","Date","toISOString","Warning","warn","info","errorMessage","trueProto","__proto__","isArray","isUndefined","isObject","isFunction","obj","fn","isBuffer","isFormData","FormData","isArrayBufferView","isView","buffer","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","merge","result","assignValue","arguments","deepMerge","extend","a","b","thisArg","trim","replace","_inheritsLoose","subClass","superClass","statusText","options","send","method","delete","getCookieString","_logLevel","_message","NullLogger","write","output","TextMessageFormat","RecordSeparator","parse","input","messages","split","pop","RecordSeparatorCode","String","fromCharCode","ResizeCanvas","canvas","tgtWidth","tgtHeight","width","height","style","NearestNeighborScaling","ctx","imageSmoothingEnabled","groupBy","items","keySelector","results","item","keys","map","repeat","count","arr","Array","fill","first","predicate","_react","_typeof","cache","_getRequireWildcardCache","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","desc","set","_interopRequireWildcard","_reactDom","_interopRequireDefault","_classnames","WeakMap","iterator","_defineProperty","configurable","writable","_defineProperties","props","descriptor","_getPrototypeOf","setPrototypeOf","getPrototypeOf","_assertThisInitialized","ReferenceError","_setPrototypeOf","Dropdown","_Component","_this","Constructor","TypeError","_classCallCheck","_possibleConstructorReturn","state","selected","parseValue","label","placeholder","isOpen","mounted","handleDocumentClick","fireChangeEvent","protoProps","staticProps","_inherits","newProps","setState","addEventListener","removeEventListener","onFocus","button","stopPropagation","preventDefault","disabled","option","match","filter","newState","onChange","_classes","isSelected","classes","concat","baseClassName","className","optionClass","onMouseDown","setValue","onClick","role","_this2","_this$props","ops","groupTitle","_options","renderOption","tabIndex","findDOMNode","contains","_classNames","_classNames2","_classNames3","_classNames4","_classNames5","_this$props2","controlClassName","placeholderClassName","menuClassName","arrowClassName","arrowClosed","arrowOpen","disabledClass","placeHolderValue","dropdownClass","controlClass","placeholderClass","isValueSelected","menuClass","arrowClass","menu","buildMenu","handleMouseDown","onTouchEnd","Component","defaultProps","_default","axios_1","create_observable_1","Axios","axiosInstance","defaults","interceptors","config","createObservable","default","put","patch","ReactDOM","commonjsGlobal","globalThis","global","createEventEmitter","handlers","on","handler","off","h","newValue","changedBits","createContext","defaultValue","calculateChangedBits","_Provider$childContex","_Consumer$contextType","contextProp","Provider","apply","emitter","_proto","getChildContext","_ref","componentWillReceiveProps","nextProps","oldValue","x","y","render","children","childContextTypes","Consumer","_Component2","getValue","onUpdate","observedBits","_proto2","componentDidMount","context","componentWillUnmount","contextTypes","isarray","pathToRegexp","compile","tokensToFunction","tokensToRegExp","PATH_REGEXP","RegExp","join","res","tokens","path","defaultDelimiter","delimiter","exec","escaped","offset","next","prefix","capture","group","modifier","asterisk","partial","optional","pattern","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","charCodeAt","toUpperCase","matches","flags","opts","encode","pretty","encodeURIComponent","segment","JSON","stringify","j","test","attachKeys","re","sensitive","strict","end","route","endsWithDelimiter","groups","source","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","AssetLoader","waitingAssetCount","loadedAssetCount","boundCallback","act","SpriteSheet","spriteWidth","spriteHeight","spriteUrl","image","loadFinished","tilesWide","tilesHigh","v","tx","ty","tw","th","srcx","srcy","sx","isTuple","sy","drawImage","twid","thei","NearestNeighborScalingHelper","baseWidth","baseHeight","scaleByWindowSize","onResize","Rescale","parentElement","currentWidth","currentHeight","innerWidth","innerHeight","clientWidth","clientHeight","maxXScale","maxYScale","scaleFactor","Math","max","floor","min","setTransform","useUpdateState","initial","beforeChange","updateValue","args","utils","params","paramsSerializer","serializedParams","hashmarkIndex","__CANCEL__","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","adapter","XMLHttpRequest","process","transformRequest","transformResponse","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","settle","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","auth","username","password","Authorization","btoa","fullPath","baseURL","open","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseText","onabort","ontimeout","timeoutErrorMessage","cookies","xsrfValue","withCredentials","read","toLowerCase","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancelToken","then","cancel","abort","enhanceError","code","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","prop","axiosKeys","otherKeys","Cancel","g","Function","useWindowSize","isClient","getSize","windowSize","setWindowSize","handleResize","base64","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","from","array","byteOffset","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","fromString","len","checked","copy","fromObject","assertSize","size","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","compare","list","pos","swap16","swap32","swap64","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","dst","reactIs","REACT_STATICS","contextType","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","Memo","getOwnPropertyNames","getOwnPropertySymbols","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","requestModule","requireFunc","cookieJar","jar","httpRequest","abortSignal","aborted","requestBody","currentRequest","body","statusMessage","writeHandshakeRequest","handshakeRequest","parseHandshakeResponse","messageData","remainingData","binaryData","separatorIndex","responseLength","textData","substring","mergeConfig","createInstance","defaultConfig","axios","instanceConfig","CancelToken","isCancel","spread","InterceptorManager","dispatchRequest","chain","interceptor","unshift","fulfilled","rejected","getUri","use","eject","id","transformData","throwIfCancellationRequested","throwIfRequested","reason","fns","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","normalizedName","isAxiosError","description","number","fileName","lineNumber","columnNumber","stack","isAbsoluteURL","combineURLs","requestedURL","relativeURL","ignoreDuplicateOf","line","originURL","msie","userAgent","urlParsingNode","resolveURL","href","protocol","host","search","hash","hostname","port","pathname","charAt","location","requestURL","expires","domain","secure","cookie","toGMTString","decodeURIComponent","remove","now","executor","resolvePromise","callback","__assign","assign","rxjs_1","promiseFactory","_i","cancelSource","hasCancelToken","observable","Observable","subscriber","complete","_subscribe","subscribe","args2","subscription","_unsubscribe","unsubscribe","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","getShim","ReactPropTypes","bool","func","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","for","f","k","q","u","$$typeof","typeOf","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isValidElementType","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","hasOwn","classNames","argType","inner","extendStatics","__extends","__","_parentOrParents","subscriptions","subscriptionIndex","destinationOrNext","destination","isStopped","observerOrNext","_parentSubscriber","parent","sink","syncErrorThrowable","promiseCtor","subscriberIndex","connectable","refCounter","refCount","sharedConnection","connection","refCountSubscription","requestAsyncId","delay","actions","SchedulerAction","Scheduler","active","NotificationKind","nextOrObserver","scheduleMessage","bufferSize","closed","_events","spliceCount","activeHandles","handle","scheduler","action","VirtualAction","project","resultSelector","return","innerSubscriber","observables","add","schedule","concurrent","hasValue","sourceObj","trueResult","period","not","notPred","hasFirst","dueTime","periodOrScheduler","isScheduler","resource","iterators","_extends","isAbsolute","spliceOne","to","hasTrailingSlash","toParts","fromParts","isToAbs","isFromAbs","mustEndAbs","last","up","part","condition","addLeadingSlash","stripLeadingSlash","stripBasename","hasBasename","stripTrailingSlash","createPath","createLocation","currentLocation","hashIndex","searchIndex","parsePath","decodeURI","URIError","createTransitionManager","prompt","setPrompt","nextPrompt","confirmTransitionTo","getUserConfirmation","appendListener","isActive","listener","notifyListeners","_len","_key","canUseDOM","getConfirmation","confirm","getHistoryState","history","createBrowserHistory","ua","globalHistory","canUseHistory","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_window$location","createKey","random","transitionManager","nextState","handlePopState","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","ok","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","listenerCount","checkDOMListeners","isBlocked","pushState","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","HashPathCoders","hashbang","encodePath","decodePath","noslash","slash","stripHash","getHashPath","replaceHashPath","createHashHistory","_props$hashType","hashType","_HashPathCoders$hashT","ignorePath","encodedPath","prevLocation","allPaths","baseTag","querySelector","getAttribute","pushHashPath","nextPaths","clamp","lowerBound","upperBound","createMemoryHistory","_props$initialEntries","initialEntries","_props$initialIndex","initialIndex","entries","entry","nextIndex","nextEntries","canGo","_objectWithoutPropertiesLoose","excluded","sourceKeys","historyContext","createNamedContext","Router","_isMounted","_pendingLocation","staticContext","computeRootMatch","isExact","RouterContext","HistoryContext","cacheCount","matchPath","reduce","matched","cacheKey","pathCache","regexp","compilePath","memo","Route","invariant","computedMatch","base","createURL","staticHandler","methodName","useContext","BrowserRouter","createHistory","resolveToLocation","normalizeToLocation","forwardRefShim","C","forwardRef","LinkAnchor","forwardedRef","innerRef","navigate","rest","ex","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","ref","Link","ariaCurrent","activeClassName","activeStyle","classNameProp","isActiveProp","locationProp","styleProp","escapedPath","classnames","joinClassnames","keywords","CodeFromUrlComponent","setContent","asString","lines","dangerouslySetInnerHTML","__html","HomeComponent","ImageLoader","imageUrl","onLoad","definition","currentXCoord","SpriteStartXCoord","SpriteEndXCoord","sheet","fullHealth","partHealth","critHealth","armor","SYMBOL_LOC","SymbolRow","SymbolBlock","def","dx","dy","types","xn","baseImg","symbolSheet","symbols","scaleHelper","ForceResizeCheck","assetLoadDone","getElementById","getContext","mouseEvent","px","offsetX","py","offsetY","sym","Toggle","clearRect","fillStyle","fillRect","Draw","MessageType","xhr","header","HttpClient","NodeHttpClient","HubConnectionState","HttpTransportType","TransferFormat","reconnectPolicy","serverTimeoutInMilliseconds","keepAliveIntervalInMilliseconds","handshakeProtocol","HandshakeProtocol","onreceive","processIncomingData","onclose","connectionClosed","callbacks","methods","closedCallbacks","reconnectingCallbacks","reconnectedCallbacks","invocationId","receivedHandshakeResponse","connectionState","Disconnected","connectionStarted","cachedPingMessage","writeMessage","Ping","HubConnection","connectionId","baseUrl","Reconnecting","startPromise","startWithStateTransitions","Connecting","Debug","startInternal","Connected","stopDuringStartError","handshakePromise","handshakeResolver","handshakeRejecter","transferFormat","sendMessage","cleanupTimeout","resetTimeoutPeriod","resetKeepAliveInterval","cleanupPingTimer","stop","stopPromise","stopInternal","Disconnecting","reconnectDelayHandle","completeClose","stream","promiseQueue","streams","streamIds","invocationDescriptor","createStreamInvocation","cancelInvocation","createCancelInvocation","sendWithProtocol","invocationEvent","Completion","launchStreams","sendPromise","createInvocation","invoke","newMethod","removeIdx","onreconnecting","onreconnected","processHandshakeResponse","parseMessages","Invocation","invokeClientMethod","StreamItem","Close","allowReconnect","responseMessage","pingServerHandle","features","inherentKeepAlive","timeoutHandle","serverTimeout","invocationMessage","cancelCallbacksWithError","reconnect","reconnectStartTime","previousReconnectAttempts","retryError","nextRetryDelay","getNextRetryDelay","previousRetryCount","elapsedMilliseconds","retryReason","nextRetryDelayInMilliseconds","nonblocking","streamId","createCompletionMessage","createStreamItemMessage","replaceStreamingParams","argument","isObservable","StreamInvocation","CancelInvocation","DEFAULT_RETRY_DELAYS_IN_MILLISECONDS","retryDelays","retryContext","isAborted","pollAbort","AbortController","running","connect","Binary","pollOptions","signal","getAccessToken","updateHeaderToken","pollUrl","closeError","receiving","poll","pollAborted","raiseOnClose","deleteOptions","logMessage","eventSourceConstructor","opened","Text","eventSource","Cookie","onmessage","close","onopen","webSocketConstructor","webSocket","isNode","binaryType","_event","ErrorEvent","OPEN","wasClean","WebSocketModule","EventSourceModule","negotiateVersion","resolveUrl","WebSocket","EventSource","startInternalPromise","sendQueue","TransportSendQueue","transport","stopPromiseResolver","stopError","stopConnection","skipNegotiation","WebSockets","constructTransport","startTransport","negotiateResponse","redirects","getNegotiationResponse","ProtocolVersion","accessToken","createTransport","negotiateUrl","resolveNegotiateUrl","connectionToken","createConnectUrl","requestedTransport","requestedTransferFormat","connectUrl","isITransport","transportExceptions","transports","availableTransports","negotiate","endpoint","transportOrError","resolveTransportOrError","ServerSentEvents","LongPolling","actualTransport","transportMatches","transferFormats","aTag","executing","sendBufferedData","PromiseSource","transportResult","sendLoopPromise","sendLoop","bufferData","concatBuffers","arrayBuffers","totalLength","resolver","rejecter","hubMessages","parsedMessage","isInvocationMessage","isStreamItemMessage","isCompletionMessage","assertNotEmptyString","LogLevelNameMapping","trace","debug","information","warning","critical","none","None","configureLogging","logging","mapping","parseLogLevel","withUrl","transportTypeOrOptions","httpConnectionOptions","withHubProtocol","withAutomaticReconnect","retryDelaysOrReconnectPolicy","DefaultReconnectPolicy","build","super","inputText","hubConnection","msg","onMessageRecieved","ev","DndMech2Component","EComplexity","array1","index1","array2","index2","complexity","Compare","srcArray","srcIndex","tgtArray","tgtIndex","replacedValue","Set","internalSet","internalGet","Swap","v1","other","pushDelta","startingSize","Get","internalFill","internalCreateArray","internalRemoveArray","endingData","arrayId","i1","i2","initialValue","deltas","arrays","maxValue","nextArrayId","currentDeltaIndex","nextDecoratorId","requiresMemoryAllocation","allArrayInfo","arrId","tgt","deltaHere","deltaStart","deltaEnd","seekToInternal","rollback","maxSteps","step","stepResult","newArr","getDeleteDelta","generateCoordFunc","arrLen","wx","wy","ww","wh","widthPer","heightPer","allPainters","coordsFrom","mainArr","getArray","coordFuncsByArrayIndex","arrWindows","mainWindow","doesRequireMemory","repaintArr","bezierYAdj","arrid","strokeStyle","lineWidth","beginPath","x2","y2","bezierY","moveTo","bezierCurveTo","stroke","lineTo","midX","midY","radiansPerX","PI","transformCoords","angle","radius","cos","sin","coordsArr","closePath","SortVisPlaybackComponent","deltaIndex","setDeltaIndex","painter","setCurrentPainter","nv","repaint","autoplaying","setAutoplaying","currentSpeed","setCurrentSpeed","updateDeltaIndex","cvs","enable","speed","savedCallback","waitId","waitIdIsAnimationFrame","current","tick","triggerTick","frameRange","MAX_DELAY_TIME","sleepPercent","sleepTime","requestAnimationFrame","cancelAnimationFrame","useAutoplayHook","applyUntil","speedPerc","numTicks","allDeltas","remainingStepsFwd","algo","ch","totalDeltas","seekTo","valueAsNumber","rollbackUntil","minV","minI","swpIndex","isInFinalPosition","swapIndex","upHeap","downHeap","parentIndex","pval","idx","cidx","childIndex","maxChildIdx","recurse","pivot","lp","rp","mp","midp","ceil","sortedArr","createArray","tp","deleteArray","effectiveIndex","xp","AllProjects","projectName","projectTitle","projectComponent","Run","display","assetLoader","registerAssetLoadCallback","onAllFinished","symdef","flexGrow","fallback","setArrLen","arrMax","setArrMax","currentAlgo","setCurrentAlgo","runningSortState","setSortState","currentDataGen","setDataGen","initialValues","generate","sortState","sort","subCategory","ProjectsComponent","projectGroups","PageComponent","PageRoute","PAGE_LOADED"],"mappings":"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","file":"main.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"0\":\"blendTest\",\"1\":\"bullets\",\"3\":\"mandelbrot\",\"4\":\"rpgTest\",\"5\":\"spellTest\",\"6\":\"techRender\"}[chunkId]||chunkId) + \".bundle.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 65);\n","module.exports = React;","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport enum LogLevel {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    Trace = 0,\r\n    /** Log level for low severity diagnostic messages. */\r\n    Debug = 1,\r\n    /** Log level for informational diagnostic messages. */\r\n    Information = 2,\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    Warning = 3,\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    Error = 4,\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    Critical = 5,\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    None = 6,\r\n}\r\n\r\n/** An abstraction that provides a sink for diagnostic messages. */\r\nexport interface ILogger {\r\n    /** Called by the framework to emit a diagnostic message.\r\n     *\r\n     * @param {LogLevel} logLevel The severity level of the message.\r\n     * @param {string} message The message.\r\n     */\r\n    log(logLevel: LogLevel, message: string): void;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\n\r\n/** @private */\r\nexport class Arg {\r\n    public static isRequired(val: any, name: string): void {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n\r\n    public static isIn(val: any, values: any, name: string): void {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class Platform {\r\n\r\n    public static get isBrowser(): boolean {\r\n        return typeof window === \"object\";\r\n    }\r\n\r\n    public static get isWebWorker(): boolean {\r\n        return typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n\r\n    public static get isNode(): boolean {\r\n        return !this.isBrowser && !this.isWebWorker;\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getDataDetail(data: any, includeContent: boolean): string {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    } else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n\r\n/** @private */\r\nexport function formatArrayBuffer(data: ArrayBuffer): string {\r\n    const view = new Uint8Array(data);\r\n\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n\r\n/** @private */\r\nexport async function sendMessage(logger: ILogger, transportName: string, httpClient: HttpClient, url: string, accessTokenFactory: (() => string | Promise<string>) | undefined, content: string | ArrayBuffer, logMessageContent: boolean): Promise<void> {\r\n    let headers;\r\n    if (accessTokenFactory) {\r\n        const token = await accessTokenFactory();\r\n        if (token) {\r\n            headers = {\r\n                [\"Authorization\"]: `Bearer ${token}`,\r\n            };\r\n        }\r\n    }\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, logMessageContent)}.`);\r\n\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers,\r\n        responseType,\r\n    });\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n\r\n/** @private */\r\nexport function createLogger(logger?: ILogger | LogLevel) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n\r\n    if ((logger as ILogger).log) {\r\n        return logger as ILogger;\r\n    }\r\n\r\n    return new ConsoleLogger(logger as LogLevel);\r\n}\r\n\r\n/** @private */\r\nexport class SubjectSubscription<T> implements ISubscription<T> {\r\n    private subject: Subject<T>;\r\n    private observer: IStreamSubscriber<T>;\r\n\r\n    constructor(subject: Subject<T>, observer: IStreamSubscriber<T>) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n\r\n    public dispose(): void {\r\n        const index: number = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n\r\n        if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\r\n            this.subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class ConsoleLogger implements ILogger {\r\n    private readonly minimumLogLevel: LogLevel;\r\n\r\n    // Public for testing purposes.\r\n    public outputConsole: {\r\n        error(message: any): void,\r\n        warn(message: any): void,\r\n        info(message: any): void,\r\n        log(message: any): void,\r\n    };\r\n\r\n    constructor(minimumLogLevel: LogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n        this.outputConsole = console;\r\n    }\r\n\r\n    public log(logLevel: LogLevel, message: string): void {\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.outputConsole.error(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.outputConsole.warn(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.outputConsole.info(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.outputConsole.log(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** The HTTP status code represented by this error. */\r\n    public statusCode: number;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage: string, statusCode: number) {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        this.statusCode = statusCode;\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortSignal } from \"./AbortController\";\r\n\r\n/** Represents an HTTP request. */\r\nexport interface HttpRequest {\r\n    /** The HTTP method to use for the request. */\r\n    method?: string;\r\n\r\n    /** The URL for the request. */\r\n    url?: string;\r\n\r\n    /** The body content for the request. May be a string or an ArrayBuffer (for binary data). */\r\n    content?: string | ArrayBuffer;\r\n\r\n    /** An object describing headers to apply to the request. */\r\n    headers?: { [key: string]: string };\r\n\r\n    /** The XMLHttpRequestResponseType to apply to the request. */\r\n    responseType?: XMLHttpRequestResponseType;\r\n\r\n    /** An AbortSignal that can be monitored for cancellation. */\r\n    abortSignal?: AbortSignal;\r\n\r\n    /** The time to wait for the request to complete before throwing a TimeoutError. Measured in milliseconds. */\r\n    timeout?: number;\r\n}\r\n\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     */\r\n    constructor(statusCode: number);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code and message.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and string content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: ArrayBuffer);\r\n    constructor(\r\n        public readonly statusCode: number,\r\n        public readonly statusText?: string,\r\n        public readonly content?: string | ArrayBuffer) {\r\n    }\r\n}\r\n\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport abstract class HttpClient {\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public get(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public post(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public delete(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP request to the specified URL, returning a {@link Promise} that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {HttpRequest} request An {@link @microsoft/signalr.HttpRequest} describing the request to send.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an HttpResponse describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public abstract send(request: HttpRequest): Promise<HttpResponse>;\r\n\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    public getCookieString(url: string): string {\r\n        return \"\";\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger implements ILogger {\r\n    /** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\n    public static instance: ILogger = new NullLogger();\r\n\r\n    private constructor() {}\r\n\r\n    /** @inheritDoc */\r\n    // tslint:disable-next-line\r\n    public log(_logLevel: LogLevel, _message: string): void {\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    public static RecordSeparatorCode = 0x1e;\r\n    public static RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n\r\n    public static write(output: string): string {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n\r\n    public static parse(input: string): string[] {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\n","export function ResizeCanvas(canvas: HTMLCanvasElement, tgtWidth: number, tgtHeight: number) {\r\n    canvas.width = tgtWidth;\r\n    canvas.height = tgtHeight;\r\n    canvas.style.width = tgtWidth + 'px';\r\n    canvas.style.height = tgtHeight + 'px';\r\n}\r\n\r\nexport function NearestNeighborScaling(ctx: CanvasRenderingContext2D) {\r\n    ctx.imageSmoothingEnabled = false;\r\n}","export function distinct<T>(items: T[]) {\r\n    const results = [];\r\n    for (const item of items) {\r\n        if (results.indexOf(item) === -1) {\r\n            results.push(item);\r\n        }\r\n    }\r\n    return results;\r\n}\r\n\r\nexport function groupBy<T>(items: T[], keySelector: (item: T) => string): { key: string, items: T[] }[] {\r\n    const results: { [key: string]: T[] } = {};\r\n    for (const item of items) {\r\n        const key = keySelector(item);\r\n        if (results[key] !== undefined) {\r\n            results[key].push(item);\r\n        } else {\r\n            results[key] = [ item ];\r\n        }\r\n    }\r\n    return Object.keys(results).map(key => ({ key, items: results[key] }));\r\n}\r\n\r\nexport function repeat<T>(item: T, count: number): T[] {\r\n    const arr = Array(count);\r\n    arr.fill(item);\r\n    return arr;\r\n}\r\n\r\nexport function first<T>(items: T[], predicate: (item: T) => boolean): T {\r\n    for (const item of items) {\r\n        if (predicate(item)) return item;\r\n    }\r\n    return undefined;\r\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar DEFAULT_PLACEHOLDER_STRING = 'Select...';\n\nvar Dropdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dropdown, _Component);\n\n  function Dropdown(props) {\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dropdown).call(this, props));\n    _this.state = {\n      selected: _this.parseValue(props.value, props.options) || {\n        label: typeof props.placeholder === 'undefined' ? DEFAULT_PLACEHOLDER_STRING : props.placeholder,\n        value: ''\n      },\n      isOpen: false\n    };\n    _this.mounted = true;\n    _this.handleDocumentClick = _this.handleDocumentClick.bind(_assertThisInitialized(_this));\n    _this.fireChangeEvent = _this.fireChangeEvent.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps.value) {\n        var selected = this.parseValue(newProps.value, newProps.options);\n\n        if (selected !== this.state.selected) {\n          this.setState({\n            selected: selected\n          });\n        }\n      } else {\n        this.setState({\n          selected: {\n            label: typeof newProps.placeholder === 'undefined' ? DEFAULT_PLACEHOLDER_STRING : newProps.placeholder,\n            value: ''\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('click', this.handleDocumentClick, false);\n      document.addEventListener('touchend', this.handleDocumentClick, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n      document.removeEventListener('click', this.handleDocumentClick, false);\n      document.removeEventListener('touchend', this.handleDocumentClick, false);\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(event) {\n      if (this.props.onFocus && typeof this.props.onFocus === 'function') {\n        this.props.onFocus(this.state.isOpen);\n      }\n\n      if (event.type === 'mousedown' && event.button !== 0) return;\n      event.stopPropagation();\n      event.preventDefault();\n\n      if (!this.props.disabled) {\n        this.setState({\n          isOpen: !this.state.isOpen\n        });\n      }\n    }\n  }, {\n    key: \"parseValue\",\n    value: function parseValue(value, options) {\n      var option;\n\n      if (typeof value === 'string') {\n        for (var i = 0, num = options.length; i < num; i++) {\n          if (options[i].type === 'group') {\n            var match = options[i].items.filter(function (item) {\n              return item.value === value;\n            });\n\n            if (match.length) {\n              option = match[0];\n            }\n          } else if (typeof options[i].value !== 'undefined' && options[i].value === value) {\n            option = options[i];\n          }\n        }\n      }\n\n      return option || value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value, label) {\n      var newState = {\n        selected: {\n          value: value,\n          label: label\n        },\n        isOpen: false\n      };\n      this.fireChangeEvent(newState);\n      this.setState(newState);\n    }\n  }, {\n    key: \"fireChangeEvent\",\n    value: function fireChangeEvent(newState) {\n      if (newState.selected !== this.state.selected && this.props.onChange) {\n        this.props.onChange(newState.selected);\n      }\n    }\n  }, {\n    key: \"renderOption\",\n    value: function renderOption(option) {\n      var _classes;\n\n      var value = option.value;\n\n      if (typeof value === 'undefined') {\n        value = option.label || option;\n      }\n\n      var label = option.label || option.value || option;\n      var isSelected = value === this.state.selected.value || value === this.state.selected;\n      var classes = (_classes = {}, _defineProperty(_classes, \"\".concat(this.props.baseClassName, \"-option\"), true), _defineProperty(_classes, option.className, !!option.className), _defineProperty(_classes, 'is-selected', isSelected), _classes);\n      var optionClass = (0, _classnames[\"default\"])(classes);\n      return _react[\"default\"].createElement(\"div\", {\n        key: value,\n        className: optionClass,\n        onMouseDown: this.setValue.bind(this, value, label),\n        onClick: this.setValue.bind(this, value, label),\n        role: \"option\",\n        \"aria-selected\": isSelected ? 'true' : 'false'\n      }, label);\n    }\n  }, {\n    key: \"buildMenu\",\n    value: function buildMenu() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          options = _this$props.options,\n          baseClassName = _this$props.baseClassName;\n      var ops = options.map(function (option) {\n        if (option.type === 'group') {\n          var groupTitle = _react[\"default\"].createElement(\"div\", {\n            className: \"\".concat(baseClassName, \"-title\")\n          }, option.name);\n\n          var _options = option.items.map(function (item) {\n            return _this2.renderOption(item);\n          });\n\n          return _react[\"default\"].createElement(\"div\", {\n            className: \"\".concat(baseClassName, \"-group\"),\n            key: option.name,\n            role: \"listbox\",\n            tabIndex: \"-1\"\n          }, groupTitle, _options);\n        } else {\n          return _this2.renderOption(option);\n        }\n      });\n      return ops.length ? ops : _react[\"default\"].createElement(\"div\", {\n        className: \"\".concat(baseClassName, \"-noresults\")\n      }, \"No options found\");\n    }\n  }, {\n    key: \"handleDocumentClick\",\n    value: function handleDocumentClick(event) {\n      if (this.mounted) {\n        if (!_reactDom[\"default\"].findDOMNode(this).contains(event.target)) {\n          if (this.state.isOpen) {\n            this.setState({\n              isOpen: false\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isValueSelected\",\n    value: function isValueSelected() {\n      return typeof this.state.selected === 'string' || this.state.selected.value !== '';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames, _classNames2, _classNames3, _classNames4, _classNames5;\n\n      var _this$props2 = this.props,\n          baseClassName = _this$props2.baseClassName,\n          controlClassName = _this$props2.controlClassName,\n          placeholderClassName = _this$props2.placeholderClassName,\n          menuClassName = _this$props2.menuClassName,\n          arrowClassName = _this$props2.arrowClassName,\n          arrowClosed = _this$props2.arrowClosed,\n          arrowOpen = _this$props2.arrowOpen,\n          className = _this$props2.className;\n      var disabledClass = this.props.disabled ? 'Dropdown-disabled' : '';\n      var placeHolderValue = typeof this.state.selected === 'string' ? this.state.selected : this.state.selected.label;\n      var dropdownClass = (0, _classnames[\"default\"])((_classNames = {}, _defineProperty(_classNames, \"\".concat(baseClassName, \"-root\"), true), _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, 'is-open', this.state.isOpen), _classNames));\n      var controlClass = (0, _classnames[\"default\"])((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(baseClassName, \"-control\"), true), _defineProperty(_classNames2, controlClassName, !!controlClassName), _defineProperty(_classNames2, disabledClass, !!disabledClass), _classNames2));\n      var placeholderClass = (0, _classnames[\"default\"])((_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(baseClassName, \"-placeholder\"), true), _defineProperty(_classNames3, placeholderClassName, !!placeholderClassName), _defineProperty(_classNames3, 'is-selected', this.isValueSelected()), _classNames3));\n      var menuClass = (0, _classnames[\"default\"])((_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(baseClassName, \"-menu\"), true), _defineProperty(_classNames4, menuClassName, !!menuClassName), _classNames4));\n      var arrowClass = (0, _classnames[\"default\"])((_classNames5 = {}, _defineProperty(_classNames5, \"\".concat(baseClassName, \"-arrow\"), true), _defineProperty(_classNames5, arrowClassName, !!arrowClassName), _classNames5));\n\n      var value = _react[\"default\"].createElement(\"div\", {\n        className: placeholderClass\n      }, placeHolderValue);\n\n      var menu = this.state.isOpen ? _react[\"default\"].createElement(\"div\", {\n        className: menuClass,\n        \"aria-expanded\": \"true\"\n      }, this.buildMenu()) : null;\n      return _react[\"default\"].createElement(\"div\", {\n        className: dropdownClass\n      }, _react[\"default\"].createElement(\"div\", {\n        className: controlClass,\n        onMouseDown: this.handleMouseDown.bind(this),\n        onTouchEnd: this.handleMouseDown.bind(this),\n        \"aria-haspopup\": \"listbox\"\n      }, value, _react[\"default\"].createElement(\"div\", {\n        className: \"\".concat(baseClassName, \"-arrow-wrapper\")\n      }, arrowOpen && arrowClosed ? this.state.isOpen ? arrowOpen : arrowClosed : _react[\"default\"].createElement(\"span\", {\n        className: arrowClass\n      }))), menu);\n    }\n  }]);\n\n  return Dropdown;\n}(_react.Component);\n\nDropdown.defaultProps = {\n  baseClassName: 'Dropdown'\n};\nvar _default = Dropdown;\nexports[\"default\"] = _default;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar axios_1 = require(\"axios\");\nvar create_observable_1 = require(\"./create-observable\");\nvar Axios = /** @class */ (function () {\n    function Axios(axiosInstance) {\n        this.axiosInstance = axiosInstance;\n    }\n    Object.defineProperty(Axios.prototype, \"defaults\", {\n        get: function () {\n            return this.axiosInstance.defaults;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Axios.prototype, \"interceptors\", {\n        get: function () {\n            return this.axiosInstance.interceptors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Axios.request = function (config) {\n        return create_observable_1.createObservable(axios_1.default.request, config);\n    };\n    Axios.get = function (url, config) {\n        return create_observable_1.createObservable(axios_1.default.get, url, config);\n    };\n    Axios.post = function (url, data, config) {\n        return create_observable_1.createObservable(axios_1.default.post, url, data, config);\n    };\n    Axios.put = function (url, data, config) {\n        return create_observable_1.createObservable(axios_1.default.put, url, data, config);\n    };\n    Axios.patch = function (url, data, config) {\n        return create_observable_1.createObservable(axios_1.default.patch, url, data, config);\n    };\n    Axios.delete = function (url, config) {\n        return create_observable_1.createObservable(axios_1.default.delete, url, config);\n    };\n    Axios.head = function (url, config) {\n        return create_observable_1.createObservable(axios_1.default.head, url, config);\n    };\n    Axios.create = function (config) {\n        return new Axios(axios_1.default.create(config));\n    };\n    Axios.prototype.request = function (config) {\n        return create_observable_1.createObservable(this.axiosInstance.request, config);\n    };\n    Axios.prototype.get = function (url, config) {\n        return create_observable_1.createObservable(this.axiosInstance.get, url, config);\n    };\n    Axios.prototype.head = function (url, config) {\n        return create_observable_1.createObservable(this.axiosInstance.head, url, config);\n    };\n    Axios.prototype.post = function (url, data, config) {\n        return create_observable_1.createObservable(this.axiosInstance.post, url, data, config);\n    };\n    Axios.prototype.put = function (url, data, config) {\n        return create_observable_1.createObservable(this.axiosInstance.put, url, data, config);\n    };\n    Axios.prototype.patch = function (url, data, config) {\n        return create_observable_1.createObservable(this.axiosInstance.patch, url, data, config);\n    };\n    Axios.prototype.delete = function (url, config) {\n        return create_observable_1.createObservable(this.axiosInstance.delete, url, config);\n    };\n    Axios.defaults = axios_1.default.defaults;\n    Axios.interceptors = axios_1.default.interceptors;\n    return Axios;\n}());\nexports.Axios = Axios;\nexports.default = Axios;\n","module.exports = ReactDOM;","import React, { Component } from 'react';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823;\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n\nfunction getUniqueId() {\n  var key = '__global_unique_id__';\n  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;\n}\n\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + getUniqueId() + '__';\n\n  var Provider = /*#__PURE__*/function (_Component) {\n    _inheritsLoose(Provider, _Component);\n\n    function Provider() {\n      var _this;\n\n      _this = _Component.apply(this, arguments) || this;\n      _this.emitter = createEventEmitter(_this.props.value);\n      return _this;\n    }\n\n    var _proto = Provider.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0;\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n          if (process.env.NODE_ENV !== 'production') {\n            warning((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    _proto.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = PropTypes.object.isRequired, _Provider$childContex);\n\n  var Consumer = /*#__PURE__*/function (_Component2) {\n    _inheritsLoose(Consumer, _Component2);\n\n    function Consumer() {\n      var _this2;\n\n      _this2 = _Component2.apply(this, arguments) || this;\n      _this2.state = {\n        value: _this2.getValue()\n      };\n\n      _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({\n            value: _this2.getValue()\n          });\n        }\n      };\n\n      return _this2;\n    }\n\n    var _proto2 = Consumer.prototype;\n\n    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n\n      var observedBits = this.props.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    _proto2.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    _proto2.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = PropTypes.object, _Consumer$contextType);\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\nvar index = React.createContext || createReactContext;\n\nexport default index;\n","var isarray = require('isarray')\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n","export default class AssetLoader {\r\n    waitingAssetCount: number;\r\n    loadedAssetCount: number;\r\n    boundCallback: undefined|(() => void);\r\n\r\n    constructor() {\r\n        this.waitingAssetCount = 0;\r\n        this.loadedAssetCount = 0;\r\n        this.boundCallback = undefined;\r\n    }\r\n\r\n    onAllFinished(act: () => void) {\r\n        this.boundCallback = act;\r\n        if (this.waitingAssetCount > 0 && this.waitingAssetCount === this.loadedAssetCount) {\r\n            this.boundCallback();\r\n        }\r\n    }\r\n\r\n    registerAssetLoadCallback(): (() => void) {\r\n        this.waitingAssetCount++;\r\n        return () => {\r\n            this.loadedAssetCount++;\r\n            if (this.waitingAssetCount === this.loadedAssetCount && this.boundCallback !== undefined) {\r\n                this.boundCallback();\r\n            }\r\n        };\r\n    }\r\n}","export class SpriteSheet {\r\n    public image: HTMLImageElement;\r\n    public tilesWide: number;\r\n    public tilesHigh: number;\r\n    constructor(public spriteWidth: number, public spriteHeight: number, spriteUrl: string, private onload: () => void) {\r\n        this.image = document.createElement('img');\r\n        this.image.src = spriteUrl;\r\n        this.image.addEventListener('load', () => this.loadFinished());\r\n    }\r\n\r\n    private loadFinished() {\r\n        this.tilesWide = this.image.width / this.spriteWidth;\r\n        this.tilesHigh = this.image.height / this.spriteHeight;\r\n        this.onload();\r\n    }\r\n\r\n    private isTuple(v: number|{x: number, y: number}): v is {x: number, y: number} {\r\n        return (v as any).y !== undefined;\r\n    }\r\n\r\n    render(ctx: CanvasRenderingContext2D, tx: number, ty: number, tw: number, th: number, srcx: number, srcy: number): void;\r\n    render(ctx: CanvasRenderingContext2D, tx: number, ty: number, tw: number, th: number, srcx: {x: number, y: number}): void;\r\n    render(ctx: CanvasRenderingContext2D, tx: number, ty: number, tw: number, th: number, srcx: number|{x: number, y: number}, srcy?: number): void {\r\n        const sx = this.isTuple(srcx) ? srcx.x : srcx;\r\n        const sy = this.isTuple(srcx) ? srcx.y : srcy;\r\n        ctx.drawImage(\r\n            this.image,\r\n            sx * this.spriteWidth,\r\n            sy * this.spriteHeight,\r\n            this.spriteWidth,\r\n            this.spriteHeight,\r\n            tx,\r\n            ty,\r\n            tw,\r\n            th\r\n        );\r\n    }\r\n\r\n    renderCustom(ctx: CanvasRenderingContext2D, tx: number, ty: number, tw: number, th: number, srcx: number, srcy: number, twid: number, thei: number) {\r\n        const sx = srcx * twid;\r\n        const sy = srcy * thei;\r\n        ctx.drawImage(\r\n            this.image,\r\n            sx,\r\n            sy,\r\n            twid,\r\n            thei,\r\n            tx,\r\n            ty,\r\n            tw,\r\n            th\r\n        );\r\n    }\r\n}","import { ResizeCanvas } from './CanvasHelpers';\r\n\r\nexport default class NearestNeighborScalingHelper {\r\n\r\n    public scaleFactor: number;\r\n    constructor(public canvas: HTMLCanvasElement, public context: CanvasRenderingContext2D, public baseWidth: number, public baseHeight: number, private scaleByWindowSize: boolean, public onResize: (() => void)|undefined) {\r\n        this.Rescale();\r\n        if (this.scaleByWindowSize) {\r\n            window.addEventListener('resize', () => this.Rescale());\r\n        }\r\n        else {\r\n            canvas.parentElement.addEventListener('resize', () => this.Rescale());\r\n        }\r\n    }\r\n\r\n    public Rescale() {\r\n        let currentWidth: number;\r\n        let currentHeight: number;\r\n        if (this.scaleByWindowSize) {\r\n            currentWidth = window.innerWidth;\r\n            currentHeight = window.innerHeight;\r\n        }\r\n        else {\r\n            currentWidth = this.canvas.parentElement.clientWidth;\r\n            currentHeight = this.canvas.parentElement.clientHeight;\r\n        }\r\n        const maxXScale = currentWidth / this.baseWidth;\r\n        const maxYScale = currentHeight / this.baseHeight;\r\n\r\n        this.scaleFactor = Math.max(Math.floor(Math.min(maxXScale, maxYScale)), 1);\r\n        ResizeCanvas(this.canvas, this.scaleFactor * this.baseWidth, this.baseHeight * this.scaleFactor);\r\n\r\n        this.context.setTransform(this.scaleFactor, 0, 0, this.scaleFactor, 0, 0);\r\n\r\n        if (this.onResize !== undefined) {\r\n            this.onResize();\r\n        }\r\n    }\r\n}","import { useState } from 'react';\r\n\r\n// Same as useState, but with a change handler that fires before the state is updated\r\nexport default function useUpdateState<T>(initial: T, beforeChange: (newValue: T, oldValue?: T) => void): [T, (item: T) => void] {\r\n  const [value, updateValue] = useState(initial);\r\n  return [value, (newValue: T) => { beforeChange(newValue, value); updateValue(newValue); }];\r\n}","module.exports = require('./lib/axios');","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","import { useState, useEffect } from 'react';\r\n\r\n// Stolen from https://usehooks.com/useWindowSize/\r\nexport default function useWindowSize() {\r\n    const isClient = typeof window === 'object';\r\n    function getSize() {\r\n      return {\r\n        width: isClient ? window.innerWidth : undefined,\r\n        height: isClient ? window.innerHeight : undefined\r\n      };\r\n    }\r\n    const [windowSize, setWindowSize] = useState(getSize);\r\n    useEffect(() => {\r\n      if (!isClient) {\r\n        return;\r\n      }\r\n      function handleResize() {\r\n        setWindowSize(getSize());\r\n      }\r\n      window.addEventListener('resize', handleResize);\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    }, []); // Empty array ensures that effect is only run on mount and unmount\r\n    return windowSize;\r\n}","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// @ts-ignore: This will be removed from built files and is here to make the types available during dev work\r\nimport * as Request from \"@types/request\";\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\nlet requestModule: Request.RequestAPI<Request.Request, Request.CoreOptions, Request.RequiredUriUrl>;\r\nif (typeof XMLHttpRequest === \"undefined\") {\r\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n    // @ts-ignore: TS doesn't know about these names\r\n    const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n    requestModule = requireFunc(\"request\");\r\n}\r\n\r\n/** @private */\r\nexport class NodeHttpClient extends HttpClient {\r\n    private readonly logger: ILogger;\r\n    private readonly request: typeof requestModule;\r\n    private readonly cookieJar: Request.CookieJar;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        if (typeof requestModule === \"undefined\") {\r\n            throw new Error(\"The 'request' module could not be loaded.\");\r\n        }\r\n\r\n        this.logger = logger;\r\n        this.cookieJar = requestModule.jar();\r\n        this.request = requestModule.defaults({ jar: this.cookieJar });\r\n    }\r\n\r\n    public send(httpRequest: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (httpRequest.abortSignal) {\r\n            if (httpRequest.abortSignal.aborted) {\r\n                return Promise.reject(new AbortError());\r\n            }\r\n        }\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n\r\n            let requestBody: Buffer | string;\r\n            if (isArrayBuffer(httpRequest.content)) {\r\n                requestBody = Buffer.from(httpRequest.content);\r\n            } else {\r\n                requestBody = httpRequest.content || \"\";\r\n            }\r\n\r\n            const currentRequest = this.request(httpRequest.url!, {\r\n                body: requestBody,\r\n                // If binary is expected 'null' should be used, otherwise for text 'utf8'\r\n                encoding: httpRequest.responseType === \"arraybuffer\" ? null : \"utf8\",\r\n                headers: {\r\n                    // Tell auth middleware to 401 instead of redirecting\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...httpRequest.headers,\r\n                },\r\n                method: httpRequest.method,\r\n                timeout: httpRequest.timeout,\r\n            },\r\n            (error, response, body) => {\r\n                if (httpRequest.abortSignal) {\r\n                    httpRequest.abortSignal.onabort = null;\r\n                }\r\n\r\n                if (error) {\r\n                    if (error.code === \"ETIMEDOUT\") {\r\n                        this.logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                        reject(new TimeoutError());\r\n                    }\r\n                    this.logger.log(LogLevel.Warning, `Error from HTTP request. ${error}`);\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                if (response.statusCode >= 200 && response.statusCode < 300) {\r\n                    resolve(new HttpResponse(response.statusCode, response.statusMessage || \"\", body));\r\n                } else {\r\n                    reject(new HttpError(response.statusMessage || \"\", response.statusCode || 0));\r\n                }\r\n            });\r\n\r\n            if (httpRequest.abortSignal) {\r\n                httpRequest.abortSignal.onabort = () => {\r\n                    currentRequest.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this.cookieJar.getCookieString(url);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\n/** @private */\r\nexport interface HandshakeRequestMessage {\r\n    readonly protocol: string;\r\n    readonly version: number;\r\n}\r\n\r\n/** @private */\r\nexport interface HandshakeResponseMessage {\r\n    readonly error: string;\r\n    readonly minorVersion: number;\r\n}\r\n\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    public writeHandshakeRequest(handshakeRequest: HandshakeRequestMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n\r\n    public parseHandshakeResponse(data: any): [any, HandshakeResponseMessage] {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let messageData: string;\r\n        let remainingData: any;\r\n\r\n        if (isArrayBuffer(data) || (typeof Buffer !== \"undefined\" && data instanceof Buffer)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        } else {\r\n            const textData: string = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        responseMessage = response;\r\n\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar axios_1 = require(\"axios\");\nfunction createObservable(promiseFactory) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var config = args[args.length - 1];\n    config = config ? __assign({}, config) : {};\n    args[args.length - 1] = config;\n    var cancelSource;\n    var hasCancelToken = !!config.cancelToken;\n    if (hasCancelToken) {\n        console.warn(\"No need to use cancel token, just unsubscribe the subscription would cancel the http request automatically\");\n    }\n    var observable = new rxjs_1.Observable(function (subscriber) {\n        if (!hasCancelToken) {\n            cancelSource = axios_1.default.CancelToken.source();\n            config.cancelToken = cancelSource.token;\n        }\n        promiseFactory.apply(void 0, args).then(function (response) {\n            subscriber.next(response);\n            subscriber.complete();\n        })\n            .catch(function (error) { return subscriber.error(error); });\n    });\n    var _subscribe = observable.subscribe.bind(observable);\n    observable.subscribe = function () {\n        var args2 = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args2[_i] = arguments[_i];\n        }\n        var subscription = _subscribe.apply(void 0, args2);\n        var _unsubscribe = subscription.unsubscribe.bind(subscription);\n        subscription.unsubscribe = function () {\n            if (cancelSource) {\n                cancelSource.cancel();\n            }\n            _unsubscribe();\n        };\n        return subscription;\n    };\n    return observable;\n}\nexports.createObservable = createObservable;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","/** @license React v16.8.4\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?Symbol.for(\"react.memo\"):\n60115,r=b?Symbol.for(\"react.lazy\"):60116;function t(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case r:case q:case d:return u}}}function v(a){return t(a)===m}exports.typeOf=t;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;\nexports.Fragment=e;exports.Lazy=r;exports.Memo=q;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||\"object\"===typeof a&&null!==a&&(a.$$typeof===r||a.$$typeof===q||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||t(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return t(a)===k};\nexports.isContextProvider=function(a){return t(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return t(a)===n};exports.isFragment=function(a){return t(a)===e};exports.isLazy=function(a){return t(a)===r};exports.isMemo=function(a){return t(a)===q};exports.isPortal=function(a){return t(a)===d};exports.isProfiler=function(a){return t(a)===g};exports.isStrictMode=function(a){return t(a)===f};\nexports.isSuspense=function(a){return t(a)===p};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; }, 0);\n}","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!(<any>teardown)) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { noop } from './noop';\nimport { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse\n   * @deprecated use new Subject() instead\n  */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the *publish* operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { tap, publish, refCount } from 'rxjs/operators';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap((num) => console.log(`refCount ${num}`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap((num) => console.log(`publish ${num}`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the publish operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // )\n    // .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = (() => {\n  const connectableProto = <any>ConnectableObservable.prototype;\n  return {\n    operator: { value: null as null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null as null, writable: true },\n    _connection: { value: null as null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n  };\n})();\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // ).subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the keySelector function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Elsewhere, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the key field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the elementSelector function.\n *\n * ## Examples\n *\n * ### Group objects by id and return as array\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { mergeMap, groupBy, reduce } from 'rxjs/operators';\n *\n * of(\n *   {id: 1, name: 'JavaScript'},\n *   {id: 2, name: 'Parcel'},\n *   {id: 2, name: 'webpack'},\n *   {id: 1, name: 'TypeScript'},\n *   {id: 3, name: 'TSLint'}\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap((group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], []))),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'JavaScript'},\n * //   { id: 1, name: 'TypeScript'} ]\n * //\n * // [ { id: 2, name: 'Parcel'},\n * //   { id: 2, name: 'webpack'} ]\n * //\n * // [ { id: 3, name: 'TSLint'} ]\n * ```\n *\n * ### Pivot data on the id field\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { groupBy, map, mergeMap, reduce } from 'rxjs/operators';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * )\n *   .pipe(\n *     groupBy(p => p.id, p => p.name),\n *     mergeMap(group$ =>\n *       group$.pipe(reduce((acc, cur) => [...acc, cur], [`${group$.key}`]))\n *     ),\n *     map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n *  )\n *  .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T | R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map<K, Subject<T | R>>();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = (this.subjectSelector ? this.subjectSelector() : new Subject<R>()) as Subject<T | R>;\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T | any>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  /** @deprecated Do not construct this type. Internal use only */\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const { refCountSubscription, groupSubject } = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```ts\n * import { empty } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```ts\n * import { empty, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return An \"empty\" Observable: emits only the complete\n * notification.\n * @deprecated Deprecated in favor of using {@link EMPTY} constant, or {@link scheduled} (e.g. `scheduled([], scheduler)`)\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  subscriber.complete();\n};\n","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { deprecate } from 'util';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated NotificationKind is deprecated as const enums are not compatible with isolated modules. Use a string literal instead.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: 'N' | 'E' | 'C', public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let i = 0;\n    sub.add(scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n        return;\n      }\n      subscriber.next(input[i++]);\n      if (!subscriber.closed) {\n        sub.add(this.schedule());\n      }\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return scheduleArray(input, scheduler);\n  }\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { Observable } from '../Observable';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T>(a: T, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2>(a: T, b: T2, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: (T | SchedulerLike)[]): Observable<T>;\n\n// TODO(benlesh): Update the typings for this when we can switch to TS 3.x\nexport function of<T>(a: T): Observable<T>;\nexport function of<T, T2>(a: T, b: T2): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: T[]): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n    return scheduleArray(args as T[], scheduler);\n  } else {\n    return fromArray(args as T[]);\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * ![](throw.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then emit an error\n * ```ts\n * import { throwError, concat, of } from 'rxjs';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // 7\n * // Error: oops!\n * ```\n *\n * ---\n *\n * ### Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 2\n * ```ts\n * import { throwError, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 2\n *     ? throwError('Twos are bad')\n *     : of('a', 'b', 'c')\n *   ),\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // a\n * // b\n * // c\n * // a\n * // b\n * // c\n * // Twos are bad\n * ```\n *\n * @see {@link Observable}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throwError\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n * Ensure values in subscribe are called just before browser repaint.\n * ```ts\n * import { interval } from 'rxjs';\n * import { observeOn } from 'rxjs/operators';\n *\n * const intervals = interval(10);                // Intervals are scheduled\n *                                                // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler),          // ...but we will observe on animationFrame\n * )                                              // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  /** @nocollapse */\n  static dispatch(this: SchedulerAction<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: SchedulerLike,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    const destination = this.destination as Subscription;\n    destination.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Subject } from './Subject';\nimport { SchedulerLike } from './types';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * A variant of Subject that \"replays\" or emits old values to new subscribers.\n * It buffers a set number of values and will emit those values immediately to\n * any new subscribers in addition to emitting new values to existing subscribers.\n *\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: (ReplayEvent<T> | T)[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n  private _infiniteTimeWindow: boolean = false;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: SchedulerLike) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      this._infiniteTimeWindow = true;\n      this.next = this.nextInfiniteTimeWindow;\n    } else {\n      this.next = this.nextTimeWindow;\n    }\n  }\n\n  private nextInfiniteTimeWindow(value: T): void {\n    const _events = this._events;\n    _events.push(value);\n    // Since this method is invoked in every next() call than the buffer\n    // can overgrow the max size only by one item\n    if (_events.length > this._bufferSize) {\n      _events.shift();\n    }\n\n    super.next(value);\n  }\n\n  private nextTimeWindow(value: T): void {\n    this._events.push(new ReplayEvent(this._getNow(), value));\n    this._trimBufferThenGetEvents();\n\n    super.next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n    const _infiniteTimeWindow = this._infiniteTimeWindow;\n    const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    const len = _events.length;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.isStopped || this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    if (_infiniteTimeWindow) {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(<T>_events[i]);\n      }\n    } else {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next((<ReplayEvent<T>>_events[i]).value);\n      }\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = <ReplayEvent<T>[]>this._events;\n\n    const eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    RESOLVED.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @nodoc\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable<T>(obj: any): obj is Observable<T> {\n  return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","export interface ArgumentOutOfRangeError extends Error {\n}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  new(): ArgumentOutOfRangeError;\n}\n\nconst ArgumentOutOfRangeErrorImpl = (() => {\n  function ArgumentOutOfRangeErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n  }\n\n  ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ArgumentOutOfRangeErrorImpl;\n})();\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = ArgumentOutOfRangeErrorImpl as any;","export interface EmptyError extends Error {\n}\n\nexport interface EmptyErrorCtor {\n  new(): EmptyError;\n}\n\nconst EmptyErrorImpl = (() => {\n  function EmptyErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'no elements in sequence';\n    this.name = 'EmptyError';\n    return this;\n  }\n\n  EmptyErrorImpl.prototype = Object.create(Error.prototype);\n\n  return EmptyErrorImpl;\n})();\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = EmptyErrorImpl as any;","export interface TimeoutError extends Error {\n}\n\nexport interface TimeoutErrorCtor {\n  new(): TimeoutError;\n}\n\nconst TimeoutErrorImpl = (() => {\n  function TimeoutErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    return this;\n  }\n\n  TimeoutErrorImpl.prototype = Object.create(Error.prototype);\n\n  return TimeoutErrorImpl;\n})();\n\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link operators/timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = TimeoutErrorImpl as any;\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: R;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n\n// tslint:disable:max-line-length\n/** @deprecated resultSelector is no longer supported, use a mapping function. */\nexport function bindCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindCallback<R1, R2, R3, R4>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): () => Observable<any[]>;\nexport function bindCallback<R1, R2, R3>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindCallback<R1, R2>(callbackFunc: (callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindCallback<R1>(callbackFunc: (callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindCallback(callbackFunc: (callback: () => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<any[]>;\nexport function bindCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindCallback<A1>(callbackFunc: (arg1: A1, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<any[]>;\nexport function bindCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>;\n\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((result: R) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R>;\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((...results: R[]) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R[]>;\n\nexport function bindCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\n// tslint:enable:max-line-length\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback<T>(\n  callbackFunc: Function,\n  resultSelector?: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindCallback(callbackFunc, scheduler)(...args).pipe(\n        map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)),\n      );\n    }\n  }\n\n  return function (this: any, ...args: any[]): Observable<T> {\n    const context = this;\n    let subject: AsyncSubject<T>;\n    const params = {\n      context,\n      subject,\n      callbackFunc,\n      scheduler,\n    };\n    return new Observable<T>(subscriber => {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        const state: DispatchState<T> = {\n          args, subscriber, params,\n        };\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, state);\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  args: any[];\n  subscriber: Subscriber<T>;\n  params: ParamsContext<T>;\n}\n\ninterface ParamsContext<T> {\n  callbackFunc: Function;\n  scheduler: SchedulerLike;\n  context: any;\n  subject: AsyncSubject<T>;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const self = this;\n  const { args, subscriber, params } = state;\n  const { callbackFunc, context, scheduler } = params;\n  let { subject } = params;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n      this.add(scheduler.schedule<NextState<T>>(dispatchNext, 0, { value, subject }));\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface NextState<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(this: SchedulerAction<NextState<T>>, state: NextState<T>) {\n  const { value, subject } = state;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface ErrorState<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(this: SchedulerAction<ErrorState<T>>, state: ErrorState<T>) {\n  const { err, subject } = state;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function bindNodeCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindNodeCallback<R1, R2, R3, R4>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<R1, R2, R3>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<R1, R2>(callbackFunc: (callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindNodeCallback<R1>(callbackFunc: (callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindNodeCallback(callbackFunc: (callback: (err: any) => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindNodeCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindNodeCallback<A1>(callbackFunc: (arg1: A1, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindNodeCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>; /* tslint:enable:max-line-length */\n\nexport function bindNodeCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback<T>(\n  callbackFunc: Function,\n  resultSelector: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(\n        map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n      );\n    }\n  }\n\n  return function(this: any, ...args: any[]): Observable<T> {\n    const params: ParamsState<T> = {\n      subject: undefined,\n      args,\n      callbackFunc,\n      scheduler,\n      context: this,\n    };\n    return new Observable<T>(subscriber => {\n      const { context } = params;\n      let { subject } = params;\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            const err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, { params, subscriber, context });\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  subscriber: Subscriber<T>;\n  context: any;\n  params: ParamsState<T>;\n}\n\ninterface ParamsState<T> {\n  callbackFunc: Function;\n  args: any[];\n  scheduler: SchedulerLike;\n  subject: AsyncSubject<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const { params, subscriber, context } = state;\n  const { callbackFunc, args, scheduler } = params;\n  let subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const err = innerArgs.shift();\n      if (err) {\n        this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        this.add(scheduler.schedule<DispatchNextArg<T>>(dispatchNext, 0, { value, subject }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","/**\n * Tests to see if the object is an ES2015 (ES6) Promise\n * @see {@link https://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects}\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return !!value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>): (subscriber: Subscriber<T>) => Subscription | void => {\n  if (!!result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (!!result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = iterable[Symbol_iterator]();\n  do {\n    const item = iterator.next();\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue: undefined,\n  outerIndex: undefined,\n  innerSubscriber: InnerSubscriber<T, R>\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  innerSubscriber: Subscriber<R> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)\n): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  return subscribeTo(result)(innerSubscriber) as Subscription;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler  } from '../util/isScheduler';\nimport { isArray  } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Operator } from '../Operator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\n\nconst NONE = {};\n\n/* tslint:disable:max-line-length */\n\n// If called with a single array, it \"auto-spreads\" the array, with result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(sources: [O1], resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(sources: [O1, O2], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(sources: [O1, O2, O3], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5, O6], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(sources: O[], resultSelector: (...args: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// standard call, but with a result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// With a scheduler (deprecated)\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[], scheduler: SchedulerLike): Observable<ObservedValueOf<O>[]>;\n\n// Best case\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1]): Observable<[ObservedValueOf<O1>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[]): Observable<ObservedValueOf<O>[]>;\n\n// Standard calls\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>>(v1: O1, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: O[]): Observable<any[]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: Array<O | SchedulerLike>): Observable<any[]>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike>): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | SchedulerLike>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n * ## Examples\n * ### Combine two timer Observables\n * ```ts\n * import { combineLatest, timer } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * ### Combine an array of Observables\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { delay, starWith } from 'rxjs/operators';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000),   // emit 0 and then emit n after n seconds\n *     startWith(0),\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n *\n * ### Use project function to dynamically calculate the Body-Mass Index\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest(weight, height).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(\n  ...observables: (O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike)[]\n): Observable<R> {\n  let resultSelector: (...values: Array<any>) => R =  null;\n  let scheduler: SchedulerLike = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop() as SchedulerLike;\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop() as (...values: Array<any>) => R;\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0] as any;\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator<ObservedValueOf<O>, R>(resultSelector));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private resultSelector?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private resultSelector?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryResultSelector(values: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { ObservableInput, SchedulerLike, Observable } from 'rxjs';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see from\n * @see of\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => input.then(\n      value => {\n        sub.add(scheduler.schedule(() => {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(() => subscriber.complete()));\n        }));\n      },\n      err => {\n        sub.add(scheduler.schedule(() => subscriber.error(err)));\n      }\n    )));\n    return sub;\n  });\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let iterator: Iterator<T>;\n    sub.add(() => {\n      // Finalize generators\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(() => {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n        let value: T;\n        let done: boolean;\n        try {\n          const result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated use {@link scheduled} instead. */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  } else {\n    return scheduled(input, scheduler);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```ts\n * import { of, interval } from 'rxjs';\n * import { mergeMap, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: number) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = subscribeToResult<T, R>(this, ish, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map((ev) => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { take, map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(10))),\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<ObservableInput<T>, T> {\n  return mergeMap(identity, concurrent);\n}\n","\nimport { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function concatAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.png)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, take, concatAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev => interval(1000).pipe(take(4))),\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return mergeAll<T>(1);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>>(v1: O1, scheduler: SchedulerLike): Observable<ObservedValueOf<O1>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\n\nexport function concat<O1 extends ObservableInput<any>>(v1: O1): Observable<ObservedValueOf<O1>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\nexport function concat<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O extends ObservableInput<any>>(...observables: (O | SchedulerLike)[]): Observable<ObservedValueOf<O>>;\nexport function concat<R>(...observables: ObservableInput<any>[]): Observable<R>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<R>(...observables: (ObservableInput<any> | SchedulerLike)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n * ### Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n * ```ts\n * import { concat, interval, range } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * ### Concatenate 3 Observables\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * ### Concatenate the same Observable to repeat it\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {SchedulerLike} [scheduler=null] An optional {@link SchedulerLike} to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<O extends ObservableInput<any>, R>(...observables: Array<O | SchedulerLike>): Observable<ObservedValueOf<O> | R> {\n  return concatAll<R>()(of(...observables));\n}\n","import { Observable } from '../Observable';\nimport { SubscribableOrPromise, ObservedValueOf, ObservableInput } from '../types';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * ## Example\n * ### Subscribe to either an Observable of clicks or an Observable of interval, at random\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(function () {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer<R extends ObservableInput<any> | void>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>(subscriber => {\n    let input: R | void;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    const source = input ? from(input as ObservableInput<ObservedValueOf<R>>) : empty();\n    return source.subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservedValuesFromArray, ObservedValueOf, SubscribableOrPromise } from '../types';\nimport { isArray } from '../util/isArray';\nimport { map } from '../operators/map';\nimport { isObject } from '../util/isObject';\nimport { isObservable } from '../util/isObservable';\nimport { from } from './from';\n\n/* tslint:disable:max-line-length */\n\n// forkJoin(a$, b$, c$)\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(v1: SubscribableOrPromise<T>): Observable<[T]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n// forkJoin([a$, b$, c$]);\n// TODO(benlesh): Uncomment for TS 3.0\n// export function forkJoin(sources: []): Observable<never>;\nexport function forkJoin<A>(sources: [ObservableInput<A>]): Observable<[A]>;\nexport function forkJoin<A, B>(sources: [ObservableInput<A>, ObservableInput<B>]): Observable<[A, B]>;\nexport function forkJoin<A, B, C>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<[A, B, C]>;\nexport function forkJoin<A, B, C, D>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<[A, B, C, D]>;\nexport function forkJoin<A, B, C, D, E>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<[A, B, C, D, E]>;\nexport function forkJoin<A, B, C, D, E, F>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>, ObservableInput<F>]): Observable<[A, B, C, D, E, F]>;\nexport function forkJoin<A extends ObservableInput<any>[]>(sources: A): Observable<ObservedValuesFromArray<A>[]>;\n\n// forkJoin({})\nexport function forkJoin(sourcesObject: {}): Observable<never>;\nexport function forkJoin<T, K extends keyof T>(sourcesObject: T): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function forkJoin(...args: Array<ObservableInput<any>|Function>): Observable<any>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(...sources: ObservableInput<T>[]): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed observables to complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first observable,\n * second value is the last thing emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, resulting\n * objects will have the same keys as the dictionary passed, with their last values they've emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input observables, whenever any of\n * that observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input observable errors at some point, `forkJoin` will error as well and all other observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output observable is supposed to emit a result.\n *\n * ## Examples\n *\n * ### Use forkJoin with a dictionary of observable inputs\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000),\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * ### Use forkJoin with an array of observable inputs\n * ```ts\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000),\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(\n  ...sources: any[]\n): Observable<any> {\n  if (sources.length === 1) {\n    const first = sources[0];\n    if (isArray(first)) {\n      return forkJoinInternal(first, null);\n    }\n    // TODO(benlesh): isObservable check will not be necessary when deprecated path is removed.\n    if (isObject(first) && Object.getPrototypeOf(first) === Object.prototype) {\n      const keys = Object.keys(first);\n      return forkJoinInternal(keys.map(key => first[key]), keys);\n    }\n  }\n\n  // DEPRECATED PATHS BELOW HERE\n  if (typeof sources[sources.length - 1] === 'function') {\n    const resultSelector = sources.pop() as Function;\n    sources = (sources.length === 1 && isArray(sources[0])) ? sources[0] : sources;\n    return forkJoinInternal(sources, null).pipe(\n      map((args: any[]) => resultSelector(...args))\n    );\n  }\n\n  return forkJoinInternal(sources, null);\n}\n\nfunction forkJoinInternal(sources: ObservableInput<any>[], keys: string[] | null): Observable<any> {\n  return new Observable(subscriber => {\n    const len = sources.length;\n    if (len === 0) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(len);\n    let completed = 0;\n    let emitted = 0;\n    for (let i = 0; i < len; i++) {\n      const source = from(sources[i]);\n      let hasValue = false;\n      subscriber.add(source.subscribe({\n        next: value => {\n          if (!hasValue) {\n            hasValue = true;\n            emitted++;\n          }\n          values[i] = value;\n        },\n        error: err => subscriber.error(err),\n        complete: () => {\n          completed++;\n          if (completed === len || !hasValue) {\n            if (emitted === len) {\n              subscriber.next(keys ?\n                keys.reduce((result, key, i) => (result[key] = values[i], result), {}) :\n                values);\n            }\n            subscriber.complete();\n          }\n        }\n      }));\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\nconst toString: Function = (() => Object.prototype.toString)();\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener: (eventName: string, handler: NodeEventHandler) => void | {};\n  removeListener: (eventName: string, handler: NodeEventHandler) => void | {};\n}\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(type: string, listener: ((evt: E) => void) | null, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener?: ((evt: E) => void) | null, options?: EventListenerOptions | boolean): void;\n}\n\nexport type EventTargetLike<T> = HasEventTargetAddRemove<T> | NodeStyleEventEmitter | NodeCompatibleEventEmitter | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> = EventTargetLike<T> | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, resultSelector: (...args: any[]) => T): Observable<T>;\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions, resultSelector: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n * ### Emits clicks happening on the DOM document\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * ### Use addEventListener with capture option\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: ((...args: any[]) => T)\n): Observable<T> {\n\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(target, eventName, <EventListenerOptions | undefined>options).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T>(subscriber => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options as EventListenerOptions);\n  });\n}\n\nfunction setupSubscription<T>(sourceObj: FromEventTarget<T>, eventName: string,\n                              handler: (...args: any[]) => void, subscriber: Subscriber<T>,\n                              options?: EventListenerOptions) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n    unsubscribe = () => source.removeEventListener(eventName, handler, options);\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is HasEventTargetAddRemove<any> {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * then one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Example\n * ### Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * ## Example\n * ### Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * ## Example\n * ### Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs \"EVENT_TYPE\" \"EVENT_MESSAGE\" to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + \" --- \" + eventMessage // without that function only \"EVENT_TYPE\"\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"EVENT_TYPE --- EVENT_MESSAGE\"\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n * @static true\n * @name fromEventPattern\n * @owner Observable\n */\n\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any,\n                                    removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n                                    resultSelector?: (...args: any[]) => T): Observable<T | T[]> {\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T | T[]>(subscriber => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n\n    let retValue: any;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return () => removeHandler(handler, retValue) ;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { identity } from '../util/identity';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate(0, x => x < 10, x => x + 1, x => x);\n *\n * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n * const res = generate(1, x => x < 5, x => x * 2, x => x + 1, asap);\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n */\n  export function generate<T, S>(initialState: S,\n                                 condition: ConditionFunc<S>,\n                                 iterate: IterateFunc<S>,\n                                 resultSelector: ResultFunc<S, T>,\n                                 scheduler?: SchedulerLike): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * `generate` allows you to create stream of values generated with a loop very similar to\n * traditional for loop. First argument of `generate` is a beginning value. Second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * loop continues, if not, it stops. Third value is a function which takes previously defined\n * value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in regular for loop: first expression\n * initializes some state (for example numeric index), second tests if loop can make next\n * iteration (for example if index is lower than 10) and third states how defined value\n * will be modified on every step (index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First, condition function is ran. If it returned true, Observable\n * emits currently stored value (initial value at the first iteration) and then updates\n * that value with iterate function. If at some point condition returned false, Observable\n * completes at that moment.\n *\n * Optionally you can pass fourth parameter to `generate` - a result selector function which allows you\n * to immediately map value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * single object to the operator instead. That object has properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, so output Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is resultSelector\n * function or not). In case of single-parameter call, you can provide it as a\n * `scheduler` property on object passed to the operator. In both cases scheduler decides when\n * next iteration of the loop will happen and therefore when next value will be emitted\n * by the Observable. For example to ensure that each value is pushed to the observer\n * on separate task in event loop, you could use `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * @example <caption>Use with condition and iterate functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with condition, iterate and resultSelector functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with options object.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n * @example <caption>Use options object without condition function.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!') // This will never run.\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n *\n *\n * @see {@link from}\n * @see {@link index/Observable.create}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n */\nexport function generate<S>(initialState: S,\n                            condition: ConditionFunc<S>,\n                            iterate: IterateFunc<S>,\n                            scheduler?: SchedulerLike): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n *   resultSelector: x => x,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                               condition?: ConditionFunc<S>,\n                               iterate?: IterateFunc<S>,\n                               resultSelectorOrObservable?: (ResultFunc<S, T>) | SchedulerLike,\n                               scheduler?: SchedulerLike): Observable<T> {\n\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  if (arguments.length == 1) {\n    const options = initialStateOrOptions as GenerateOptions<T, S>;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity as ResultFunc<S, T>;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions as S;\n    resultSelector = identity as ResultFunc<S, T>;\n    scheduler = resultSelectorOrObservable as SchedulerLike;\n  } else {\n    initialState = initialStateOrOptions as S;\n    resultSelector = resultSelectorOrObservable as ResultFunc<S, T>;\n  }\n\n  return new Observable<T>(subscriber => {\n    let state = initialState;\n    if (scheduler) {\n      return scheduler.schedule<SchedulerState<T, S>>(dispatch, 0, {\n        subscriber,\n        iterate,\n        condition,\n        resultSelector,\n        state\n      });\n    }\n\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch<T, S>(this: SchedulerAction<SchedulerState<T, S>>, state: SchedulerState<T, S>) {\n  const { subscriber, condition } = state;\n  if (subscriber.closed) {\n    return undefined;\n  }\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n  if (condition) {\n    let conditionResult: boolean;\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n  let value: T;\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n  if (subscriber.closed) {\n    return undefined;\n  }\n  subscriber.next(value);\n  if (subscriber.closed) {\n    return undefined;\n  }\n  return this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\nimport { SubscribableOrPromise } from '../types';\n\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `iif` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * than controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `iif` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * ## Examples\n * ### Change at runtime which Observable will be subscribed\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second'),\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n * ```\n *\n * ### Control an access to an Observable\n * ```ts\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'), // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"The end\"\n * ```\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n*/\nexport function iif<T = never, F = never>(\n  condition: () => boolean,\n  trueResult: SubscribableOrPromise<T> = EMPTY,\n  falseResult: SubscribableOrPromise<F> = EMPTY\n): Observable<T|F> {\n  return defer(() => condition() ? trueResult : falseResult);\n}\n","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isNumeric } from '../util/isNumeric';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = async): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, concurrent: number, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n\nexport function merge<T>(v1: ObservableInput<T>): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | number)[]): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | number)[]): Observable<R>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```ts\n * import { merge, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n * ### Emit the number 7, then never emit anything else (not even complete)\n * ```ts\n * import { NEVER } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * function info() {\n *   console.log('Will not be called');\n * }\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe(x => console.log(x), info, info);\n *\n * ```\n *\n * @see {@link Observable}\n * @see {@link index/EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Deprecated in favor of using {@link NEVER} constant.\n */\nexport function never () {\n  return NEVER;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNext<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link index/EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n * Subscribe to the next Observable after map fails</caption>\n * ```ts\n * import { onErrorResumeNext, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done'),\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<T, R>(...sources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  const [ first, ...remainder ] = sources;\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext(...first);\n  }\n\n  return new Observable(subscriber => {\n    const subNext = () => subscriber.add(\n      onErrorResumeNext(...remainder).subscribe(subscriber)\n    );\n\n    return from(first).subscribe({\n      next(value) { subscriber.next(value); },\n      error: subNext,\n      complete: subNext,\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * <img src=\"./img/pairs.png\" width=\"100%\">\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj)\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('the end!')\n * );\n *\n * // Logs:\n * // [\"foo\", 42],\n * // [\"bar\", 56],\n * // [\"baz\", 78],\n * // \"the end!\"\n * ```\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs<T>(obj: Object, scheduler?: SchedulerLike): Observable<[string, T]> {\n  if (!scheduler) {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(\n        scheduler.schedule<{ keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }>\n          (dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n      return subscription;\n    });\n  }\n}\n\n/** @internal */\nexport function dispatch<T>(this: SchedulerAction<any>,\n                            state: { keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }) {\n  const { keys, index, subscriber, subscription, obj } = state;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { filter } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","import { not } from '../util/not';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition a set of numbers into odds and evens observables\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, (value, index) => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [\n    filter(predicate, thisArg)(new Observable<T>(subscribeTo(source))),\n    filter(not(predicate, thisArg) as any)(new Observable<T>(subscribeTo(source)))\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic, ObservableInput } from '../types';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n// tslint:disable:max-line-length\nexport function race<A>(arg: [ObservableInput<A>]): Observable<A>;\nexport function race<A, B>(arg: [ObservableInput<A>, ObservableInput<B>]): Observable<A | B>;\nexport function race<A, B, C>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<A | B | C>;\nexport function race<A, B, C, D>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<A | B | C | D | E>;\nexport function race<T>(arg: ObservableInput<T>[]): Observable<T>;\nexport function race(arg: ObservableInput<any>[]): Observable<{}>;\n\nexport function race<A>(a: ObservableInput<A>): Observable<A>;\nexport function race<A, B>(a: ObservableInput<A>, b: ObservableInput<B>): Observable<A | B>;\nexport function race<A, B, C>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>): Observable<A | B | C>;\nexport function race<A, B, C, D>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>, e: ObservableInput<E>): Observable<A | B | C | D | E>;\n// tslint:enable:max-line-length\n\nexport function race<T>(observables: ObservableInput<T>[]): Observable<T>;\nexport function race(observables: ObservableInput<any>[]): Observable<{}>;\nexport function race<T>(...observables: ObservableInput<T>[]): Observable<T>;\nexport function race(...observables: ObservableInput<any>[]): Observable<{}>;\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n *\n * ## Example\n * ### Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { race, interval } from 'rxjs';\n * import { mapTo } from 'rxjs/operators';\n *\n * const obs1 = interval(1000).pipe(mapTo('fast one'));\n * const obs2 = interval(3000).pipe(mapTo('medium one'));\n * const obs3 = interval(5000).pipe(mapTo('slow one'));\n *\n * race(obs3, obs1, obs2)\n * .subscribe(\n *   winner => console.log(winner)\n * );\n *\n * // result:\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(...observables: ObservableInput<any>[]): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = observables[0] as Observable<any>[];\n    } else {\n      return observables[0] as Observable<T>;\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable as any, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { SchedulerAction, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n * Emits the numbers 1 to 10</caption>\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 10);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link timer}\n * @see {@link index/interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start: number = 0,\n                      count?: number,\n                      scheduler?: SchedulerLike): Observable<number> {\n  return new Observable<number>(subscriber => {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n\n    let index = 0;\n    let current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(current++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\n\n/** @internal */\nexport function dispatch(this: SchedulerAction<any>, state: any) {\n  const { start, index, count, subscriber } = state;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n\n  this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `dueTime` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `dueTime`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time specified as a Date object or as an integer denoting\n * milliseconds to wait before emitting the first value of 0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `dueTime` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput } from '../types';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T>(resourceFactory: () => Unsubscribable | void,\n                         observableFactory: (resource: Unsubscribable | void) => ObservableInput<T> | void): Observable<T> {\n  return new Observable<T>(subscriber => {\n    let resource: Unsubscribable | void;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    let result: ObservableInput<T> | void;\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    const source = result ? from(result) : EMPTY;\n    const subscription = source.subscribe(subscriber);\n    return () => {\n      subscription.unsubscribe();\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { ObservableInput, PartialObserver, ObservedValueOf } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R): Observable<R>;\n\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\nexport function zip<O extends ObservableInput<any>>(array: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<R>(array: ObservableInput<any>[]): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<R>(array: ObservableInput<any>[], resultSelector: (...values: any[]) => R): Observable<R>;\n\nexport function zip<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>): Observable<R>;\nexport function zip<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n * Combine age and name from different sources\n * ```ts\n * import { zip, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * let age$ = of<number>(27, 25, 29);\n * let name$ = of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = of<boolean>(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev })),\n * )\n * .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip<O extends ObservableInput<any>, R>(\n  ...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>\n): Observable<ObservedValueOf<O>[]|R> {\n  const resultSelector = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  resultSelector: (...values: Array<any>) => R;\n\n  constructor(resultSelector?: (...values: Array<any>) => R) {\n    this.resultSelector = resultSelector;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private resultSelector: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              resultSelector?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    this.unsubscribe();\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        const destination = this.destination as Subscription;\n        destination.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryresultSelector(args: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n\n  var toParts = (to && to.split('/')) || [];\n  var fromParts = (from && from.split('/')) || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');\n\n  if (\n    mustEndAbs &&\n    fromParts[0] !== '' &&\n    (!fromParts[0] || !isAbsolute(fromParts[0]))\n  )\n    fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\nexport default resolvePathname;\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    throw new Error(prefix + \": \" + (message || ''));\n}\n\nexport default invariant;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction stripHash(url) {\n  var hashIndex = url.indexOf('#');\n  return hashIndex === -1 ? url : url.slice(0, hashIndex);\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(stripHash(window.location.href) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function locationsAreEqual$$1(a, b) {\n    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;\n  }\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    var baseTag = document.querySelector('base');\n    var href = '';\n\n    if (baseTag && baseTag.getAttribute('href')) {\n      href = stripHash(window.location.href);\n    }\n\n    return href + '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import createNamedContext from \"./createNameContext\";\n\nconst historyContext = /*#__PURE__*/ createNamedContext(\"Router-History\");\nexport default historyContext;\n","// TODO: Replace with React.createContext once we can assume React 16+\nimport createContext from \"mini-create-react-context\";\n\nconst createNamedContext = name => {\n  const context = createContext();\n  context.displayName = name;\n\n  return context;\n};\n\nexport default createNamedContext;\n","// TODO: Replace with React.createContext once we can assume React 16+\nimport createContext from \"mini-create-react-context\";\n\nconst createNamedContext = name => {\n  const context = createContext();\n  context.displayName = name;\n\n  return context;\n};\n\nconst context = /*#__PURE__*/ createNamedContext(\"Router\");\nexport default context;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\nimport HistoryContext from \"./HistoryContext.js\";\nimport RouterContext from \"./RouterContext.js\";\n\n/**\n * The public API for putting history on context.\n */\nclass Router extends React.Component {\n  static computeRootMatch(pathname) {\n    return { path: \"/\", url: \"/\", params: {}, isExact: pathname === \"/\" };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      location: props.history.location\n    };\n\n    // This is a bit of a hack. We have to start listening for location\n    // changes here in the constructor in case there are any <Redirect>s\n    // on the initial render. If there are, they will replace/push when\n    // they mount and since cDM fires in children before parents, we may\n    // get a new location before the <Router> is mounted.\n    this._isMounted = false;\n    this._pendingLocation = null;\n\n    if (!props.staticContext) {\n      this.unlisten = props.history.listen(location => {\n        if (this._isMounted) {\n          this.setState({ location });\n        } else {\n          this._pendingLocation = location;\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._pendingLocation) {\n      this.setState({ location: this._pendingLocation });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.unlisten) this.unlisten();\n  }\n\n  render() {\n    return (\n      <RouterContext.Provider\n        value={{\n          history: this.props.history,\n          location: this.state.location,\n          match: Router.computeRootMatch(this.state.location.pathname),\n          staticContext: this.props.staticContext\n        }}\n      >\n        <HistoryContext.Provider\n          children={this.props.children || null}\n          value={this.props.history}\n        />\n      </RouterContext.Provider>\n    );\n  }\n}\n\nif (__DEV__) {\n  Router.propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.object.isRequired,\n    staticContext: PropTypes.object\n  };\n\n  Router.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      prevProps.history === this.props.history,\n      \"You cannot change <Router history>\"\n    );\n  };\n}\n\nexport default Router;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createMemoryHistory as createHistory } from \"history\";\nimport warning from \"tiny-warning\";\n\nimport Router from \"./Router.js\";\n\n/**\n * The public API for a <Router> that stores location in memory.\n */\nclass MemoryRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  MemoryRouter.propTypes = {\n    initialEntries: PropTypes.array,\n    initialIndex: PropTypes.number,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number,\n    children: PropTypes.node\n  };\n\n  MemoryRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<MemoryRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { MemoryRouter as Router }`.\"\n    );\n  };\n}\n\nexport default MemoryRouter;\n","import React from \"react\";\n\nclass Lifecycle extends React.Component {\n  componentDidMount() {\n    if (this.props.onMount) this.props.onMount.call(this, this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);\n  }\n\n  componentWillUnmount() {\n    if (this.props.onUnmount) this.props.onUnmount.call(this, this);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Lifecycle;\n","import pathToRegexp from \"path-to-regexp\";\n\nconst cache = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;\n\nfunction compilePath(path, options) {\n  const cacheKey = `${options.end}${options.strict}${options.sensitive}`;\n  const pathCache = cache[cacheKey] || (cache[cacheKey] = {});\n\n  if (pathCache[path]) return pathCache[path];\n\n  const keys = [];\n  const regexp = pathToRegexp(path, keys, options);\n  const result = { regexp, keys };\n\n  if (cacheCount < cacheLimit) {\n    pathCache[path] = result;\n    cacheCount++;\n  }\n\n  return result;\n}\n\n/**\n * Public API for matching a URL pathname to a path.\n */\nfunction matchPath(pathname, options = {}) {\n  if (typeof options === \"string\" || Array.isArray(options)) {\n    options = { path: options };\n  }\n\n  const { path, exact = false, strict = false, sensitive = false } = options;\n\n  const paths = [].concat(path);\n\n  return paths.reduce((matched, path) => {\n    if (!path && path !== \"\") return null;\n    if (matched) return matched;\n\n    const { regexp, keys } = compilePath(path, {\n      end: exact,\n      strict,\n      sensitive\n    });\n    const match = regexp.exec(pathname);\n\n    if (!match) return null;\n\n    const [url, ...values] = match;\n    const isExact = pathname === url;\n\n    if (exact && !isExact) return null;\n\n    return {\n      path, // the path used to match\n      url: path === \"/\" && url === \"\" ? \"/\" : url, // the matched portion of the URL\n      isExact, // whether or not we matched exactly\n      params: keys.reduce((memo, key, index) => {\n        memo[key.name] = values[index];\n        return memo;\n      }, {})\n    };\n  }, null);\n}\n\nexport default matchPath;\n","import React from \"react\";\nimport { isValidElementType } from \"react-is\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport RouterContext from \"./RouterContext.js\";\nimport matchPath from \"./matchPath.js\";\n\nfunction isEmptyChildren(children) {\n  return React.Children.count(children) === 0;\n}\n\nfunction evalChildrenDev(children, props, path) {\n  const value = children(props);\n\n  warning(\n    value !== undefined,\n    \"You returned `undefined` from the `children` function of \" +\n      `<Route${path ? ` path=\"${path}\"` : \"\"}>, but you ` +\n      \"should have returned a React element or `null`\"\n  );\n\n  return value || null;\n}\n\n/**\n * The public API for matching a single path and rendering.\n */\nclass Route extends React.Component {\n  render() {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Route> outside a <Router>\");\n\n          const location = this.props.location || context.location;\n          const match = this.props.computedMatch\n            ? this.props.computedMatch // <Switch> already computed the match for us\n            : this.props.path\n            ? matchPath(location.pathname, this.props)\n            : context.match;\n\n          const props = { ...context, location, match };\n\n          let { children, component, render } = this.props;\n\n          // Preact uses an empty array as children by\n          // default, so use null if that's the case.\n          if (Array.isArray(children) && children.length === 0) {\n            children = null;\n          }\n\n          return (\n            <RouterContext.Provider value={props}>\n              {props.match\n                ? children\n                  ? typeof children === \"function\"\n                    ? __DEV__\n                      ? evalChildrenDev(children, props, this.props.path)\n                      : children(props)\n                    : children\n                  : component\n                  ? React.createElement(component, props)\n                  : render\n                  ? render(props)\n                  : null\n                : typeof children === \"function\"\n                ? __DEV__\n                  ? evalChildrenDev(children, props, this.props.path)\n                  : children(props)\n                : null}\n            </RouterContext.Provider>\n          );\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n}\n\nif (__DEV__) {\n  Route.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n    component: (props, propName) => {\n      if (props[propName] && !isValidElementType(props[propName])) {\n        return new Error(\n          `Invalid prop 'component' supplied to 'Route': the prop is not a valid React component`\n        );\n      }\n    },\n    exact: PropTypes.bool,\n    location: PropTypes.object,\n    path: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string)\n    ]),\n    render: PropTypes.func,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool\n  };\n\n  Route.prototype.componentDidMount = function() {\n    warning(\n      !(\n        this.props.children &&\n        !isEmptyChildren(this.props.children) &&\n        this.props.component\n      ),\n      \"You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored\"\n    );\n\n    warning(\n      !(\n        this.props.children &&\n        !isEmptyChildren(this.props.children) &&\n        this.props.render\n      ),\n      \"You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored\"\n    );\n\n    warning(\n      !(this.props.component && this.props.render),\n      \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\"\n    );\n  };\n\n  Route.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      !(this.props.location && !prevProps.location),\n      '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.'\n    );\n\n    warning(\n      !(!this.props.location && prevProps.location),\n      '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.'\n    );\n  };\n}\n\nexport default Route;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createLocation, createPath } from \"history\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport Router from \"./Router.js\";\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === \"/\" ? path : \"/\" + path;\n}\n\nfunction addBasename(basename, location) {\n  if (!basename) return location;\n\n  return {\n    ...location,\n    pathname: addLeadingSlash(basename) + location.pathname\n  };\n}\n\nfunction stripBasename(basename, location) {\n  if (!basename) return location;\n\n  const base = addLeadingSlash(basename);\n\n  if (location.pathname.indexOf(base) !== 0) return location;\n\n  return {\n    ...location,\n    pathname: location.pathname.substr(base.length)\n  };\n}\n\nfunction createURL(location) {\n  return typeof location === \"string\" ? location : createPath(location);\n}\n\nfunction staticHandler(methodName) {\n  return () => {\n    invariant(false, \"You cannot %s with <StaticRouter>\", methodName);\n  };\n}\n\nfunction noop() {}\n\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */\nclass StaticRouter extends React.Component {\n  navigateTo(location, action) {\n    const { basename = \"\", context = {} } = this.props;\n    context.action = action;\n    context.location = addBasename(basename, createLocation(location));\n    context.url = createURL(context.location);\n  }\n\n  handlePush = location => this.navigateTo(location, \"PUSH\");\n  handleReplace = location => this.navigateTo(location, \"REPLACE\");\n  handleListen = () => noop;\n  handleBlock = () => noop;\n\n  render() {\n    const { basename = \"\", context = {}, location = \"/\", ...rest } = this.props;\n\n    const history = {\n      createHref: path => addLeadingSlash(basename + createURL(path)),\n      action: \"POP\",\n      location: stripBasename(basename, createLocation(location)),\n      push: this.handlePush,\n      replace: this.handleReplace,\n      go: staticHandler(\"go\"),\n      goBack: staticHandler(\"goBack\"),\n      goForward: staticHandler(\"goForward\"),\n      listen: this.handleListen,\n      block: this.handleBlock\n    };\n\n    return <Router {...rest} history={history} staticContext={context} />;\n  }\n}\n\nif (__DEV__) {\n  StaticRouter.propTypes = {\n    basename: PropTypes.string,\n    context: PropTypes.object,\n    location: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n  };\n\n  StaticRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<StaticRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { StaticRouter as Router }`.\"\n    );\n  };\n}\n\nexport default StaticRouter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport RouterContext from \"./RouterContext.js\";\nimport matchPath from \"./matchPath.js\";\n\n/**\n * The public API for rendering the first <Route> that matches.\n */\nclass Switch extends React.Component {\n  render() {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Switch> outside a <Router>\");\n\n          const location = this.props.location || context.location;\n\n          let element, match;\n\n          // We use React.Children.forEach instead of React.Children.toArray().find()\n          // here because toArray adds keys to all child elements and we do not want\n          // to trigger an unmount/remount for two <Route>s that render the same\n          // component at different URLs.\n          React.Children.forEach(this.props.children, child => {\n            if (match == null && React.isValidElement(child)) {\n              element = child;\n\n              const path = child.props.path || child.props.from;\n\n              match = path\n                ? matchPath(location.pathname, { ...child.props, path })\n                : context.match;\n            }\n          });\n\n          return match\n            ? React.cloneElement(element, { location, computedMatch: match })\n            : null;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n}\n\nif (__DEV__) {\n  Switch.propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object\n  };\n\n  Switch.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      !(this.props.location && !prevProps.location),\n      '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.'\n    );\n\n    warning(\n      !(!this.props.location && prevProps.location),\n      '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.'\n    );\n  };\n}\n\nexport default Switch;\n","import React from \"react\";\nimport invariant from \"tiny-invariant\";\n\nimport Context from \"./RouterContext.js\";\nimport HistoryContext from \"./HistoryContext.js\";\nimport matchPath from \"./matchPath.js\";\n\nconst useContext = React.useContext;\n\nexport function useHistory() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useHistory()\"\n    );\n  }\n\n  return useContext(HistoryContext);\n}\n\nexport function useLocation() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useLocation()\"\n    );\n  }\n\n  return useContext(Context).location;\n}\n\nexport function useParams() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useParams()\"\n    );\n  }\n\n  const match = useContext(Context).match;\n  return match ? match.params : {};\n}\n\nexport function useRouteMatch(path) {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useRouteMatch()\"\n    );\n  }\n\n  const location = useLocation();\n  const match = useContext(Context).match;\n\n  return path ? matchPath(location.pathname, path) : match;\n}\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const method = replace ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\",\n      activeStyle,\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          const className = isActive\n            ? joinClassnames(classNameProp, activeClassName)\n            : classNameProp;\n          const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.string,\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.object\n  };\n}\n\nexport default NavLink;\n","import * as React from 'react';\r\nimport Axios from 'axios-observable';\r\n\r\nconst keywords = /([^a-zA-Z0-9_])(public|private|protected|internal|static|void|operator|if|for|while|foreach|do|bool|byte|sbyte|int|uint|long|ulong|short|ushort|string|char|var|true|false|ref|out|class)(?![a-zA-Z0-9_])/g\r\n\r\nexport function CodeFromUrlComponent({ url }: { url: string }) {\r\n    const [content, setContent] = React.useState<string[]>([]);\r\n\r\n    React.useEffect(()=>{\r\n        Axios.get(url).subscribe((content) => {\r\n            let asString = content.data as string;\r\n            asString = asString\r\n                .replace(keywords, \"$1<span class='k'>$2</span>\")\r\n                .replace(/([^a-zA-Z0-9_])((0[bx])?\\d+)/g, \"$1<span class='n'>$2</span>\")\r\n                .replace(/([^a-zA-Z0-9_])(return|break|continue|export|import)(?![a-zA-Z0-9_])/g, \"$1<span class='r'>$2</span>\")\r\n                .replace(/%([a-zA-Z0-9])%/g, \"<span class='$1'>\")\r\n                .replace(/%%/g, \"</span>\");\r\n            const lines = asString.split(/\\r?\\n/)\r\n                .map(l => l === '' ? ' ' : l);\r\n            setContent(lines);\r\n        });\r\n    }, []);\r\n\r\n    if(content.length === 0) {\r\n        return <div>Loading...</div>\r\n    }\r\n    return <div className='code'>\r\n        <div className='lineNums'>\r\n            {content.map((e, i) =>\r\n                <div key={i}>{i}</div>\r\n            )}\r\n        </div>\r\n        <div className='content'>\r\n            {content.map((e, i) =>\r\n                <div key={i} dangerouslySetInnerHTML={{__html:e}} />\r\n            )}\r\n        </div>\r\n    </div>;\r\n}","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { RenderFromUrlComponent, CodeFromUrlComponent } from '../../components';\r\n\r\nexport function HomeComponent() {\r\n    return <div>\r\n        <h1>Hi!</h1>\r\n        <Link to='/projects/'>Projects</Link>\r\n        <h2>Test below:</h2>\r\n        <CodeFromUrlComponent url='/dist/content/testContent.txt' />\r\n    </div>;\r\n}","export default class ImageLoader {\r\n    public image: HTMLImageElement;\r\n\r\n    constructor(imageUrl: string, onLoad: () => void) {\r\n        this.image = document.createElement('img');\r\n        this.image.src = imageUrl;\r\n        this.image.addEventListener('load', onLoad);\r\n    }\r\n}","export default __webpack_public_path__ + \"a992a82de8a4d45e189cc9dde3c67903.png\";","export default __webpack_public_path__ + \"a8b1c8f36276b2667488aa9d218adda4.png\";","import { ISymbolDefinition } from './SymbolDefinitions';\r\nimport { ClickDragWrapper } from '../mandelbrot/ClickDragWrapper';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\n\r\nexport default class Symbol {\r\n    private currentXCoord: number;\r\n    constructor(public x: number, public y: number, public definition: ISymbolDefinition) {\r\n        this.currentXCoord = this.definition.SpriteStartXCoord;\r\n    }\r\n\r\n    Toggle() {\r\n        this.currentXCoord++;\r\n        if (this.currentXCoord > this.definition.SpriteEndXCoord) {\r\n            this.currentXCoord = this.definition.SpriteStartXCoord;\r\n        }\r\n    }\r\n\r\n    Draw(ctx: CanvasRenderingContext2D, sheet: SpriteSheet) {\r\n        sheet.render(ctx, this.x, this.y, 6, 6, this.currentXCoord, 0);\r\n    }\r\n}","export interface ISymbolDefinition {\r\n    SpriteStartXCoord: number;\r\n    SpriteEndXCoord: number;\r\n}\r\n\r\nexport const fullHealth: ISymbolDefinition = {\r\n    SpriteStartXCoord: 0,\r\n    SpriteEndXCoord: 1\r\n};\r\n\r\nexport const partHealth: ISymbolDefinition = {\r\n    SpriteStartXCoord: 2,\r\n    SpriteEndXCoord: 3\r\n};\r\n\r\nexport const critHealth: ISymbolDefinition = {\r\n    SpriteStartXCoord: 4,\r\n    SpriteEndXCoord: 5\r\n};\r\n\r\nexport const armor: ISymbolDefinition = {\r\n    SpriteStartXCoord: 6,\r\n    SpriteEndXCoord: 9\r\n};","import { ISymbolDefinition, fullHealth, armor, partHealth, critHealth } from './SymbolDefinitions';\r\n\r\nexport const SYMBOL_LOC: { x: number, y: number, def: ISymbolDefinition }[] = [\r\n    // HEAD\r\n    ...SymbolRow(37, 0, 2, 0, 7, armor),\r\n    ...SymbolBlock(44, 0, 3, [ { count: 3, def: fullHealth }, { count: 2, def: partHealth }, {count: 1, def: critHealth}]),\r\n\r\n    // BODY\r\n    ...SymbolRow(94, 14, 4, 7, 0, armor),\r\n    ...SymbolBlock(94, 21, 8, [ { count: 8, def: fullHealth }, { count: 4, def: partHealth }, {count: 4, def: critHealth}]),\r\n\r\n    // CORE\r\n    ...SymbolRow(8, 19, 3, 7, 0, fullHealth),\r\n\r\n    // L-ARM\r\n    ...SymbolRow(0, 36, 4, 7, 0, armor),\r\n    ...SymbolBlock(0, 43, 5, [ { count: 2, def: fullHealth }, { count: 2, def: partHealth }, {count: 1, def: critHealth}]),\r\n\r\n    // R-ARM\r\n    ...SymbolRow(101, 42, 4, 7, 0, armor),\r\n    ...SymbolBlock(101, 49, 5, [ { count: 2, def: fullHealth }, { count: 2, def: partHealth }, {count: 1, def: critHealth}]),\r\n\r\n    // L-HAND\r\n    ...SymbolRow(17, 66, 2, 7, 0, armor),\r\n    ...SymbolBlock(17, 73, 3, [ { count: 1, def: fullHealth }, { count: 1, def: partHealth }, {count: 1, def: critHealth}]),\r\n\r\n    // R-HAND\r\n    ...SymbolRow(93, 66, 2, 7, 0, armor),\r\n    ...SymbolBlock(93, 73, 3, [ { count: 1, def: fullHealth }, { count: 1, def: partHealth }, {count: 1, def: critHealth}]),\r\n\r\n    // L-LEG\r\n    ...SymbolRow(13, 91, 4, 7, 0, armor),\r\n    ...SymbolBlock(13, 98, 5, [ { count: 2, def: fullHealth }, { count: 2, def: partHealth }, {count: 1, def: critHealth}]),\r\n\r\n    // R-LEG\r\n    ...SymbolRow(85, 91, 4, 7, 0, armor),\r\n    ...SymbolBlock(85, 98, 5, [ { count: 2, def: fullHealth }, { count: 2, def: partHealth }, {count: 1, def: critHealth}]),\r\n];\r\n\r\nfunction SymbolRow(x: number, y: number, count: number, dx: number, dy: number, def: ISymbolDefinition) {\r\n    const results: { x: number, y: number, def: ISymbolDefinition }[] = [];\r\n    for (let i = 0; i < count; i++) {\r\n        results.push({x, y, def});\r\n        if (dx !== 0) x += dx;\r\n        if (dy !== 0) y += dy;\r\n    }\r\n    return results;\r\n}\r\n\r\nfunction SymbolBlock(sx: number, sy: number, width: number, types: { def: ISymbolDefinition, count: number }[]) {\r\n    let x = sx;\r\n    let xn = 0;\r\n    let y = sy;\r\n    const results: { x: number, y: number, def: ISymbolDefinition }[] = [];\r\n    while (types.length > 0) {\r\n        results.push({ x, y, def: types[0].def});\r\n        xn ++;\r\n        x += 7;\r\n        if (xn === width) {\r\n            // New row\r\n            x = sx;\r\n            y += 7;\r\n            xn = 0;\r\n        }\r\n\r\n        types[0].count--;\r\n        if (types[0].count === 0) types.splice(0, 1);\r\n    }\r\n    return results;\r\n}","import * as Const from './Constants';\r\nimport AssetLoader from '../common/assets/AssetLoader';\r\nimport { NearestNeighborScaling, ResizeCanvas } from '../common/CanvasHelpers';\r\nimport NearestNeighborScalingHelper from '../common/NearestNeighborScalingHelper';\r\nimport ImageLoader from '../common/assets/ImageLoader';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport baseImgUrl from './assets/MechIndicators.png';\r\nimport symbolUrl from './assets/MechSymbols.png';\r\nimport Symbol from './Symbol';\r\nimport { SYMBOL_LOC } from './Coords';\r\n\r\nlet ctx: CanvasRenderingContext2D;\r\nlet baseImg: ImageLoader;\r\nlet symbolSheet: SpriteSheet;\r\n\r\nconst symbols: Symbol[] = [];\r\n\r\nexport default function Run() {\r\n    const assetLoader = new AssetLoader();\r\n    baseImg = new ImageLoader(baseImgUrl, assetLoader.registerAssetLoadCallback());\r\n    symbolSheet = new SpriteSheet(6, 6, symbolUrl, assetLoader.registerAssetLoadCallback());\r\n    assetLoader.onAllFinished(assetLoadDone);\r\n\r\n    for (const symdef of SYMBOL_LOC) {\r\n        symbols.push(new Symbol(symdef.x, symdef.y, symdef.def));\r\n    }\r\n}\r\n\r\nlet scaleHelper: NearestNeighborScalingHelper;\r\nexport function ForceResizeCheck() {\r\n    if (scaleHelper !== undefined) {\r\n        scaleHelper.Rescale();\r\n    }\r\n}\r\n\r\nfunction assetLoadDone() {\r\n    const canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n    ctx = canvas.getContext('2d');\r\n    scaleHelper = new NearestNeighborScalingHelper(canvas, ctx, Const.FULL_W, Const.FULL_H, false, repaint);\r\n\r\n    canvas.addEventListener('mousedown', mouseEvent => {\r\n        const px = mouseEvent.offsetX / scaleHelper.scaleFactor;\r\n        const py = mouseEvent.offsetY / scaleHelper.scaleFactor;\r\n        for (const sym of symbols) {\r\n            if (px >= sym.x && px <= sym.x + 6 && py >= sym.y && py <= sym.y + 6) {\r\n                sym.Toggle();\r\n                repaint();\r\n                return;\r\n            }\r\n        }\r\n    });\r\n\r\n    repaint();\r\n}\r\n\r\nfunction repaint() {\r\n    ctx.clearRect(0, 0, Const.FULL_W, Const.FULL_H);\r\n    NearestNeighborScaling(ctx);\r\n    ctx.fillStyle = '#9eaec7';\r\n    ctx.fillRect(0, 0, Const.FULL_W, Const.FULL_H);\r\n    ctx.drawImage(baseImg.image, 0, 0);\r\n\r\n    for (const sym of symbols) {\r\n        sym.Draw(ctx, symbolSheet);\r\n    }\r\n}","export const FULL_W = 150;\r\nexport const FULL_H = 125;","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\n\r\n/** Defines the type of a Hub Message. */\r\nexport enum MessageType {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    Invocation = 1,\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    StreamItem = 2,\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    Completion = 3,\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    StreamInvocation = 4,\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    CancelInvocation = 5,\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    Ping = 6,\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    Close = 7,\r\n}\r\n\r\n/** Defines a dictionary of string keys and string values representing headers attached to a Hub message. */\r\nexport interface MessageHeaders {\r\n    /** Gets or sets the header with the specified key. */\r\n    [key: string]: string;\r\n}\r\n\r\n/** Union type of all known Hub messages. */\r\nexport type HubMessage =\r\n    InvocationMessage |\r\n    StreamInvocationMessage |\r\n    StreamItemMessage |\r\n    CompletionMessage |\r\n    CancelInvocationMessage |\r\n    PingMessage |\r\n    CloseMessage;\r\n\r\n/** Defines properties common to all Hub messages. */\r\nexport interface HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageType} value indicating the type of this message. */\r\n    readonly type: MessageType;\r\n}\r\n\r\n/** Defines properties common to all Hub messages relating to a specific invocation. */\r\nexport interface HubInvocationMessage extends HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageHeaders} dictionary containing headers attached to the message. */\r\n    readonly headers?: MessageHeaders;\r\n    /** The ID of the invocation relating to this message.\r\n     *\r\n     * This is expected to be present for {@link @microsoft/signalr.StreamInvocationMessage} and {@link @microsoft/signalr.CompletionMessage}. It may\r\n     * be 'undefined' for an {@link @microsoft/signalr.InvocationMessage} if the sender does not expect a response.\r\n     */\r\n    readonly invocationId?: string;\r\n}\r\n\r\n/** A hub message representing a non-streaming invocation. */\r\nexport interface InvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Invocation;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds: string[];\r\n}\r\n\r\n/** A hub message representing a streaming invocation. */\r\nexport interface StreamInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamInvocation;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds: string[];\r\n}\r\n\r\n/** A hub message representing a single item produced as part of a result stream. */\r\nexport interface StreamItemMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamItem;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n\r\n    /** The item produced by the server. */\r\n    readonly item?: any;\r\n}\r\n\r\n/** A hub message representing the result of an invocation. */\r\nexport interface CompletionMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Completion;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The error produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly error?: string;\r\n    /** The result produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly result?: any;\r\n}\r\n\r\n/** A hub message indicating that the sender is still active. */\r\nexport interface PingMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Ping;\r\n}\r\n\r\n/** A hub message indicating that the sender is closing the connection.\r\n *\r\n * If {@link @microsoft/signalr.CloseMessage.error} is defined, the sender is closing the connection due to an error.\r\n */\r\nexport interface CloseMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Close;\r\n    /** The error that triggered the close, if any.\r\n     *\r\n     * If this property is undefined, the connection was closed normally and without error.\r\n     */\r\n    readonly error?: string;\r\n\r\n    /** If true, clients with automatic reconnects enabled should attempt to reconnect after receiving the CloseMessage. Otherwise, they should not. */\r\n    readonly allowReconnect?: boolean;\r\n}\r\n\r\n/** A hub message sent to request that a streaming invocation be canceled. */\r\nexport interface CancelInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.CancelInvocation;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n}\r\n\r\n/** A protocol abstraction for communicating with SignalR Hubs.  */\r\nexport interface IHubProtocol {\r\n    /** The name of the protocol. This is used by SignalR to resolve the protocol between the client and server. */\r\n    readonly name: string;\r\n    /** The version of the protocol. */\r\n    readonly version: number;\r\n    /** The {@link @microsoft/signalr.TransferFormat} of the protocol. */\r\n    readonly transferFormat: TransferFormat;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the `input` parameter must be a string, otherwise it must be an ArrayBuffer.\r\n     *\r\n     * @param {string | ArrayBuffer | Buffer} input A string, ArrayBuffer, or Buffer containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input: string | ArrayBuffer | Buffer, logger: ILogger): HubMessage[];\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string or ArrayBuffer and returns it.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the result of this method will be a string, otherwise it will be an ArrayBuffer.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string | ArrayBuffer} A string or ArrayBuffer containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message: HubMessage): string | ArrayBuffer;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\nexport class XhrHttpClient extends HttpClient {\r\n    private readonly logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this.logger = logger;\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n\r\n            xhr.open(request.method!, request.url!, true);\r\n            xhr.withCredentials = true;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                        xhr.setRequestHeader(header, headers[header]);\r\n                    });\r\n            }\r\n\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                } else {\r\n                    reject(new HttpError(xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n\r\n            xhr.onerror = () => {\r\n                this.logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n\r\n            xhr.ontimeout = () => {\r\n                this.logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger } from \"./ILogger\";\r\nimport { NodeHttpClient } from \"./NodeHttpClient\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    private readonly httpClient: HttpClient;\r\n\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n\r\n        if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this.httpClient = new XhrHttpClient(logger);\r\n        } else {\r\n            this.httpClient = new NodeHttpClient(logger);\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return this.httpClient.send(request);\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this.httpClient.getCookieString(url);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HandshakeProtocol, HandshakeRequestMessage, HandshakeResponseMessage } from \"./HandshakeProtocol\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { CancelInvocationMessage, CompletionMessage, IHubProtocol, InvocationMessage, MessageType, StreamInvocationMessage, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { IStreamResult } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg } from \"./Utils\";\r\n\r\nconst DEFAULT_TIMEOUT_IN_MS: number = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS: number = 15 * 1000;\r\n\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport enum HubConnectionState {\r\n    /** The hub connection is disconnected. */\r\n    Disconnected = \"Disconnected\",\r\n    /** The hub connection is connecting. */\r\n    Connecting = \"Connecting\",\r\n    /** The hub connection is connected. */\r\n    Connected = \"Connected\",\r\n    /** The hub connection is disconnecting. */\r\n    Disconnecting = \"Disconnecting\",\r\n    /** The hub connection is reconnecting. */\r\n    Reconnecting = \"Reconnecting\",\r\n}\r\n\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    private readonly cachedPingMessage: string | ArrayBuffer;\r\n    private readonly connection: IConnection;\r\n    private readonly logger: ILogger;\r\n    private readonly reconnectPolicy?: IRetryPolicy;\r\n    private protocol: IHubProtocol;\r\n    private handshakeProtocol: HandshakeProtocol;\r\n    private callbacks: { [invocationId: string]: (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => void };\r\n    private methods: { [name: string]: Array<(...args: any[]) => void> };\r\n    private invocationId: number;\r\n\r\n    private closedCallbacks: Array<(error?: Error) => void>;\r\n    private reconnectingCallbacks: Array<(error?: Error) => void>;\r\n    private reconnectedCallbacks: Array<(connectionId?: string) => void>;\r\n\r\n    private receivedHandshakeResponse: boolean;\r\n    private handshakeResolver!: (value?: PromiseLike<{}>) => void;\r\n    private handshakeRejecter!: (reason?: any) => void;\r\n    private stopDuringStartError?: Error;\r\n\r\n    private connectionState: HubConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private connectionStarted: boolean;\r\n    private startPromise?: Promise<void>;\r\n    private stopPromise?: Promise<void>;\r\n\r\n    // The type of these a) doesn't matter and b) varies when building in browser and node contexts\r\n    // Since we're building the WebPack bundle directly from the TypeScript, this matters (previously\r\n    // we built the bundle from the compiled JavaScript).\r\n    private reconnectDelayHandle?: any;\r\n    private timeoutHandle?: any;\r\n    private pingServerHandle?: any;\r\n\r\n    /** The server timeout in milliseconds.\r\n     *\r\n     * If this timeout elapses without receiving any messages from the server, the connection will be terminated with an error.\r\n     * The default timeout value is 30,000 milliseconds (30 seconds).\r\n     */\r\n    public serverTimeoutInMilliseconds: number;\r\n\r\n    /** Default interval at which to ping the server.\r\n     *\r\n     * The default value is 15,000 milliseconds (15 seconds).\r\n     * Allows the server to detect hard disconnects (like when a client unplugs their computer).\r\n     */\r\n    public keepAliveIntervalInMilliseconds: number;\r\n\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    public static create(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy): HubConnection {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy);\r\n    }\r\n\r\n    private constructor(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy) {\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n\r\n        this.logger = logger;\r\n        this.protocol = protocol;\r\n        this.connection = connection;\r\n        this.reconnectPolicy = reconnectPolicy;\r\n        this.handshakeProtocol = new HandshakeProtocol();\r\n\r\n        this.connection.onreceive = (data: any) => this.processIncomingData(data);\r\n        this.connection.onclose = (error?: Error) => this.connectionClosed(error);\r\n\r\n        this.callbacks = {};\r\n        this.methods = {};\r\n        this.closedCallbacks = [];\r\n        this.reconnectingCallbacks = [];\r\n        this.reconnectedCallbacks = [];\r\n        this.invocationId = 0;\r\n        this.receivedHandshakeResponse = false;\r\n        this.connectionState = HubConnectionState.Disconnected;\r\n        this.connectionStarted = false;\r\n\r\n        this.cachedPingMessage = this.protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state(): HubConnectionState {\r\n        return this.connectionState;\r\n    }\r\n\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId(): string | null {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl(): string {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url: string) {\r\n        if (this.connectionState !== HubConnectionState.Disconnected && this.connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n\r\n        this.connection.baseUrl = url;\r\n    }\r\n\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    public start(): Promise<void> {\r\n        this.startPromise = this.startWithStateTransitions();\r\n        return this.startPromise;\r\n    }\r\n\r\n    private async startWithStateTransitions(): Promise<void> {\r\n        if (this.connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Connecting;\r\n        this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n\r\n        try {\r\n            await this.startInternal();\r\n\r\n            this.connectionState = HubConnectionState.Connected;\r\n            this.connectionStarted = true;\r\n            this.logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        } catch (e) {\r\n            this.connectionState = HubConnectionState.Disconnected;\r\n            this.logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async startInternal() {\r\n        this.stopDuringStartError = undefined;\r\n        this.receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this.handshakeResolver = resolve;\r\n            this.handshakeRejecter = reject;\r\n        });\r\n\r\n        await this.connection.start(this.protocol.transferFormat);\r\n\r\n        try {\r\n            const handshakeRequest: HandshakeRequestMessage = {\r\n                protocol: this.protocol.name,\r\n                version: this.protocol.version,\r\n            };\r\n\r\n            this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n\r\n            await this.sendMessage(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n\r\n            this.logger.log(LogLevel.Information, `Using HubProtocol '${this.protocol.name}'.`);\r\n\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this.cleanupTimeout();\r\n            this.resetTimeoutPeriod();\r\n            this.resetKeepAliveInterval();\r\n\r\n            await handshakePromise;\r\n\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this.stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                throw this.stopDuringStartError;\r\n            }\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n\r\n            this.cleanupTimeout();\r\n            this.cleanupPingTimer();\r\n\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    public async stop(): Promise<void> {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this.startPromise;\r\n\r\n        this.stopPromise = this.stopInternal();\r\n        await this.stopPromise;\r\n\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n\r\n    private stopInternal(error?: Error): Promise<void> {\r\n        if (this.connectionState === HubConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this.stopPromise!;\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Disconnecting;\r\n\r\n        this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n\r\n        if (this.reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this.logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n\r\n            clearTimeout(this.reconnectDelayHandle);\r\n            this.reconnectDelayHandle = undefined;\r\n\r\n            this.completeClose();\r\n            return Promise.resolve();\r\n        }\r\n\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n        this.stopDuringStartError = error || new Error(\"The connection was stopped before the hub handshake could complete.\");\r\n\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    public stream<T = any>(methodName: string, ...args: any[]): IStreamResult<T> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const invocationDescriptor = this.createStreamInvocation(methodName, args, streamIds);\r\n\r\n        let promiseQueue: Promise<void>;\r\n        const subject = new Subject<T>();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation: CancelInvocationMessage = this.createCancelInvocation(invocationDescriptor.invocationId);\r\n\r\n            delete this.callbacks[invocationDescriptor.invocationId];\r\n\r\n            return promiseQueue.then(() => {\r\n                return this.sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n\r\n        this.callbacks[invocationDescriptor.invocationId] = (invocationEvent: CompletionMessage | StreamItemMessage | null, error?: Error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            } else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    } else {\r\n                        subject.complete();\r\n                    }\r\n                } else {\r\n                    subject.next((invocationEvent.item) as T);\r\n                }\r\n            }\r\n        };\r\n\r\n        promiseQueue = this.sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n                subject.error(e);\r\n                delete this.callbacks[invocationDescriptor.invocationId];\r\n            });\r\n\r\n        this.launchStreams(streams, promiseQueue);\r\n\r\n        return subject;\r\n    }\r\n\r\n    private sendMessage(message: any) {\r\n        this.resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    private sendWithProtocol(message: any) {\r\n        return this.sendMessage(this.protocol.writeMessage(message));\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    public send(methodName: string, ...args: any[]): Promise<void> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const sendPromise = this.sendWithProtocol(this.createInvocation(methodName, args, true, streamIds));\r\n\r\n        this.launchStreams(streams, sendPromise);\r\n\r\n        return sendPromise;\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    public invoke<T = any>(methodName: string, ...args: any[]): Promise<T> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const invocationDescriptor = this.createInvocation(methodName, args, false, streamIds);\r\n\r\n        const p = new Promise<any>((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this.callbacks[invocationDescriptor.invocationId!] = (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                } else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        } else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    } else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n\r\n            const promiseQueue = this.sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                    reject(e);\r\n                    // invocationId will always have a value for a non-blocking invocation\r\n                    delete this.callbacks[invocationDescriptor.invocationId!];\r\n                });\r\n\r\n            this.launchStreams(streams, promiseQueue);\r\n        });\r\n\r\n        return p;\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    public on(methodName: string, newMethod: (...args: any[]) => void) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        if (!this.methods[methodName]) {\r\n            this.methods[methodName] = [];\r\n        }\r\n\r\n        // Preventing adding the same handler multiple times.\r\n        if (this.methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n\r\n        this.methods[methodName].push(newMethod);\r\n    }\r\n\r\n    /** Removes all handlers for the specified hub method.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     */\r\n    public off(methodName: string): void;\r\n\r\n    /** Removes the specified handler for the specified hub method.\r\n     *\r\n     * You must pass the exact same Function instance as was previously passed to {@link @microsoft/signalr.HubConnection.on}. Passing a different instance (even if the function\r\n     * body is the same) will not remove the handler.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     * @param {Function} method The handler to remove. This must be the same Function instance as the one passed to {@link @microsoft/signalr.HubConnection.on}.\r\n     */\r\n    public off(methodName: string, method: (...args: any[]) => void): void;\r\n    public off(methodName: string, method?: (...args: any[]) => void): void {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this.methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this.methods[methodName];\r\n                }\r\n            }\r\n        } else {\r\n            delete this.methods[methodName];\r\n        }\r\n\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    public onclose(callback: (error?: Error) => void) {\r\n        if (callback) {\r\n            this.closedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    public onreconnecting(callback: (error?: Error) => void) {\r\n        if (callback) {\r\n            this.reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    public onreconnected(callback: (connectionId?: string) => void) {\r\n        if (callback) {\r\n            this.reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    private processIncomingData(data: any) {\r\n        this.cleanupTimeout();\r\n\r\n        if (!this.receivedHandshakeResponse) {\r\n            data = this.processHandshakeResponse(data);\r\n            this.receivedHandshakeResponse = true;\r\n        }\r\n\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this.protocol.parseMessages(data, this.logger);\r\n\r\n            for (const message of messages) {\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this.invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion:\r\n                        const callback = this.callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this.callbacks[message.invocationId];\r\n                            }\r\n                            callback(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close:\r\n                        this.logger.log(LogLevel.Information, \"Close message received from server.\");\r\n\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n\r\n                            // tslint:disable-next-line:no-floating-promises\r\n                            this.connection.stop(error);\r\n                        } else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this.stopPromise = this.stopInternal(error);\r\n                        }\r\n\r\n                        break;\r\n                    default:\r\n                        this.logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.resetTimeoutPeriod();\r\n    }\r\n\r\n    private processHandshakeResponse(data: any): any {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let remainingData: any;\r\n\r\n        try {\r\n            [remainingData, responseMessage] = this.handshakeProtocol.parseHandshakeResponse(data);\r\n        } catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        } else {\r\n            this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n\r\n        this.handshakeResolver();\r\n        return remainingData;\r\n    }\r\n\r\n    private resetKeepAliveInterval() {\r\n        this.cleanupPingTimer();\r\n        this.pingServerHandle = setTimeout(async () => {\r\n            if (this.connectionState === HubConnectionState.Connected) {\r\n                try {\r\n                    await this.sendMessage(this.cachedPingMessage);\r\n                } catch {\r\n                    // We don't care about the error. It should be seen elsewhere in the client.\r\n                    // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                    this.cleanupPingTimer();\r\n                }\r\n            }\r\n        }, this.keepAliveIntervalInMilliseconds);\r\n    }\r\n\r\n    private resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this.timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n        }\r\n    }\r\n\r\n    private serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // tslint:disable-next-line:no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n\r\n    private invokeClientMethod(invocationMessage: InvocationMessage) {\r\n        const methods = this.methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            try {\r\n                methods.forEach((m) => m.apply(this, invocationMessage.arguments));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `A callback for the method ${invocationMessage.target.toLowerCase()} threw error '${e}'.`);\r\n            }\r\n\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                const message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this.logger.log(LogLevel.Error, message);\r\n\r\n                // We don't want to wait on the stop itself.\r\n                this.stopPromise = this.stopInternal(new Error(message));\r\n            }\r\n        } else {\r\n            this.logger.log(LogLevel.Warning, `No client method with the name '${invocationMessage.target}' found.`);\r\n        }\r\n    }\r\n\r\n    private connectionClosed(error?: Error) {\r\n        this.logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this.connectionState}.`);\r\n\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this.stopDuringStartError = this.stopDuringStartError || error || new Error(\"The underlying connection was closed before the hub handshake could complete.\");\r\n\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this.handshakeResolver) {\r\n            this.handshakeResolver();\r\n        }\r\n\r\n        this.cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.completeClose(error);\r\n        } else if (this.connectionState === HubConnectionState.Connected && this.reconnectPolicy) {\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.reconnect(error);\r\n        } else if (this.connectionState === HubConnectionState.Connected) {\r\n            this.completeClose(error);\r\n        }\r\n\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n\r\n    private completeClose(error?: Error) {\r\n        if (this.connectionStarted) {\r\n            this.connectionState = HubConnectionState.Disconnected;\r\n            this.connectionStarted = false;\r\n\r\n            try {\r\n                this.closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private async reconnect(error?: Error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n\r\n        let nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n\r\n        if (nextRetryDelay === null) {\r\n            this.logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this.completeClose(error);\r\n            return;\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Reconnecting;\r\n\r\n        if (error) {\r\n            this.logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        } else {\r\n            this.logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n\r\n        if (this.onreconnecting) {\r\n            try {\r\n                this.reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        while (nextRetryDelay !== null) {\r\n            this.logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n\r\n            await new Promise((resolve) => {\r\n                this.reconnectDelayHandle = setTimeout(resolve, nextRetryDelay!);\r\n            });\r\n            this.reconnectDelayHandle = undefined;\r\n\r\n            if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n\r\n            try {\r\n                await this.startInternal();\r\n\r\n                this.connectionState = HubConnectionState.Connected;\r\n                this.logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n\r\n                if (this.onreconnected) {\r\n                    try {\r\n                        this.reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    } catch (e) {\r\n                        this.logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n\r\n                return;\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n\r\n                if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                    this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect attempt. Done reconnecting.\");\r\n                    return;\r\n                }\r\n\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n\r\n        this.logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n\r\n        this.completeClose();\r\n    }\r\n\r\n    private getNextRetryDelay(previousRetryCount: number, elapsedMilliseconds: number, retryReason: Error) {\r\n        try {\r\n            return this.reconnectPolicy!.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private cancelCallbacksWithError(error: Error) {\r\n        const callbacks = this.callbacks;\r\n        this.callbacks = {};\r\n\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n                const callback = callbacks[key];\r\n                callback(null, error);\r\n            });\r\n    }\r\n\r\n    private cleanupPingTimer(): void {\r\n        if (this.pingServerHandle) {\r\n            clearTimeout(this.pingServerHandle);\r\n        }\r\n    }\r\n\r\n    private cleanupTimeout(): void {\r\n        if (this.timeoutHandle) {\r\n            clearTimeout(this.timeoutHandle);\r\n        }\r\n    }\r\n\r\n    private createInvocation(methodName: string, args: any[], nonblocking: boolean, streamIds: string[]): InvocationMessage {\r\n        if (nonblocking) {\r\n            return {\r\n                arguments: args,\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        } else {\r\n            const invocationId = this.invocationId;\r\n            this.invocationId++;\r\n\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n    }\r\n\r\n    private launchStreams(streams: Array<IStreamResult<any>>, promiseQueue: Promise<void>): void {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // tslint:disable-next-line:forin\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message: string;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    } else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    } else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    private replaceStreamingParams(args: any[]): [Array<IStreamResult<any>>, string[]] {\r\n        const streams: Array<IStreamResult<any>> = [];\r\n        const streamIds: string[] = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this.isObservable(argument)) {\r\n                const streamId = this.invocationId;\r\n                this.invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        return [streams, streamIds];\r\n    }\r\n\r\n    private isObservable(arg: any): arg is IStreamResult<any> {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n\r\n    private createStreamInvocation(methodName: string, args: any[], streamIds: string[]): StreamInvocationMessage {\r\n        const invocationId = this.invocationId;\r\n        this.invocationId++;\r\n\r\n        return {\r\n            arguments: args,\r\n            invocationId: invocationId.toString(),\r\n            streamIds,\r\n            target: methodName,\r\n            type: MessageType.StreamInvocation,\r\n        };\r\n    }\r\n\r\n    private createCancelInvocation(id: string): CancelInvocationMessage {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n\r\n    private createStreamItemMessage(id: string, item: any): StreamItemMessage {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n\r\n    private createCompletionMessage(id: string, error?: any, result?: any): CompletionMessage {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { IStreamResult, IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { SubjectSubscription } from \"./Utils\";\r\n\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject<T> implements IStreamResult<T> {\r\n    /** @internal */\r\n    public observers: Array<IStreamSubscriber<T>>;\r\n\r\n    /** @internal */\r\n    public cancelCallback?: () => Promise<void>;\r\n\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n\r\n    public next(item: T): void {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n\r\n    public error(err: any): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n\r\n    public subscribe(observer: IStreamSubscriber<T>): ISubscription<T> {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport enum HttpTransportType {\r\n    /** Specifies no transport preference. */\r\n    None = 0,\r\n    /** Specifies the WebSockets transport. */\r\n    WebSockets = 1,\r\n    /** Specifies the Server-Sent Events transport. */\r\n    ServerSentEvents = 2,\r\n    /** Specifies the Long Polling transport. */\r\n    LongPolling = 4,\r\n}\r\n\r\n/** Specifies the transfer format for a connection. */\r\nexport enum TransferFormat {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    Text = 1,\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    Binary = 2,\r\n}\r\n\r\n/** An abstraction over the behavior of transports. This is designed to support the framework and not intended for use by applications. */\r\nexport interface ITransport {\r\n    connect(url: string, transferFormat: TransferFormat): Promise<void>;\r\n    send(data: any): Promise<void>;\r\n    stop(): Promise<void>;\r\n    onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    onclose: ((error?: Error) => void) | null;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\n\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n\r\n/** @private */\r\nexport class DefaultReconnectPolicy implements IRetryPolicy {\r\n    private readonly retryDelays: Array<number | null>;\r\n\r\n    constructor(retryDelays?: number[]) {\r\n        this.retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n\r\n    public nextRetryDelayInMilliseconds(retryContext: RetryContext): number | null {\r\n        return this.retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController implements AbortSignal {\r\n    private isAborted: boolean = false;\r\n    public onabort: (() => void) | null = null;\r\n\r\n    public abort() {\r\n        if (!this.isAborted) {\r\n            this.isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n\r\n    get signal(): AbortSignal {\r\n        return this;\r\n    }\r\n\r\n    get aborted(): boolean {\r\n        return this.isAborted;\r\n    }\r\n}\r\n\r\n/** Represents a signal that can be monitored to determine if a request has been aborted. */\r\nexport interface AbortSignal {\r\n    /** Indicates if the request has been aborted. */\r\n    aborted: boolean;\r\n    /** Set this to a handler that will be invoked when the request is aborted. */\r\n    onabort: (() => void) | null;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\n\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport implements ITransport {\r\n    private readonly httpClient: HttpClient;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logger: ILogger;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly pollAbort: AbortController;\r\n\r\n    private url?: string;\r\n    private running: boolean;\r\n    private receiving?: Promise<void>;\r\n    private closeError?: Error;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    public get pollAborted() {\r\n        return this.pollAbort.aborted;\r\n    }\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger, logMessageContent: boolean) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.pollAbort = new AbortController();\r\n        this.logMessageContent = logMessageContent;\r\n\r\n        this.running = false;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.url = url;\r\n\r\n        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n\r\n        const pollOptions: HttpRequest = {\r\n            abortSignal: this.pollAbort.signal,\r\n            headers: {},\r\n            timeout: 100000,\r\n        };\r\n\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n\r\n        const token = await this.getAccessToken();\r\n        this.updateHeaderToken(pollOptions, token);\r\n\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this.logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this.httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this.logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this.running = false;\r\n        } else {\r\n            this.running = true;\r\n        }\r\n\r\n        this.receiving = this.poll(this.url, pollOptions);\r\n    }\r\n\r\n    private async getAccessToken(): Promise<string | null> {\r\n        if (this.accessTokenFactory) {\r\n            return await this.accessTokenFactory();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private updateHeaderToken(request: HttpRequest, token: string | null) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (token) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            request.headers[\"Authorization\"] = `Bearer ${token}`;\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-string-literal\r\n        if (request.headers[\"Authorization\"]) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            delete request.headers[\"Authorization\"];\r\n        }\r\n    }\r\n\r\n    private async poll(url: string, pollOptions: HttpRequest): Promise<void> {\r\n        try {\r\n            while (this.running) {\r\n                // We have to get the access token on each poll, in case it changes\r\n                const token = await this.getAccessToken();\r\n                this.updateHeaderToken(pollOptions, token);\r\n\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this.logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this.httpClient.get(pollUrl, pollOptions);\r\n\r\n                    if (response.statusCode === 204) {\r\n                        this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n\r\n                        this.running = false;\r\n                    } else if (response.statusCode !== 200) {\r\n                        this.logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n                        // Unexpected status code\r\n                        this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this.running = false;\r\n                    } else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this.logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        } else {\r\n                            // This is another way timeout manifest.\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    if (!this.running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this.logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    } else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        } else {\r\n                            // Close the connection with the error as the result.\r\n                            this.closeError = e;\r\n                            this.running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } finally {\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this.raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this.running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this.logger, \"LongPolling\", this.httpClient, this.url!, this.accessTokenFactory, data, this.logMessageContent);\r\n    }\r\n\r\n    public async stop(): Promise<void> {\r\n        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this.running = false;\r\n        this.pollAbort.abort();\r\n\r\n        try {\r\n            await this.receiving;\r\n\r\n            // Send DELETE to clean up long polling on the server\r\n            this.logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this.url}.`);\r\n\r\n            const deleteOptions: HttpRequest = {\r\n                headers: {},\r\n            };\r\n            const token = await this.getAccessToken();\r\n            this.updateHeaderToken(deleteOptions, token);\r\n            await this.httpClient.delete(this.url!, deleteOptions);\r\n\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n        } finally {\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this.raiseOnClose();\r\n        }\r\n    }\r\n\r\n    private raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this.closeError) {\r\n                logMessage += \" Error: \" + this.closeError;\r\n            }\r\n            this.logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this.closeError);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { EventSourceConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, Platform, sendMessage } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class ServerSentEventsTransport implements ITransport {\r\n    private readonly httpClient: HttpClient;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logger: ILogger;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly eventSourceConstructor: EventSourceConstructor;\r\n    private eventSource?: EventSource;\r\n    private url?: string;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, eventSourceConstructor: EventSourceConstructor) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.logMessageContent = logMessageContent;\r\n        this.eventSourceConstructor = eventSourceConstructor;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n\r\n        // set url before accessTokenFactory because this.url is only for send and we set the auth header instead of the query string for send\r\n        this.url = url;\r\n\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n\r\n            let eventSource: EventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this.eventSourceConstructor(url, { withCredentials: true });\r\n            } else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this.httpClient.getCookieString(url);\r\n                eventSource = new this.eventSourceConstructor(url, { withCredentials: true, headers: { Cookie: cookies } } as EventSourceInit);\r\n            }\r\n\r\n            try {\r\n                eventSource.onmessage = (e: MessageEvent) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this.logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        } catch (error) {\r\n                            this.close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                eventSource.onerror = (e: MessageEvent) => {\r\n                    const error = new Error(e.data || \"Error occurred\");\r\n                    if (opened) {\r\n                        this.close(error);\r\n                    } else {\r\n                        reject(error);\r\n                    }\r\n                };\r\n\r\n                eventSource.onopen = () => {\r\n                    this.logger.log(LogLevel.Information, `SSE connected to ${this.url}`);\r\n                    this.eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            } catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this.eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this.logger, \"SSE\", this.httpClient, this.url!, this.accessTokenFactory, data, this.logMessageContent);\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this.close();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private close(e?: Error) {\r\n        if (this.eventSource) {\r\n            this.eventSource.close();\r\n            this.eventSource = undefined;\r\n\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { WebSocketConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, Platform } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class WebSocketTransport implements ITransport {\r\n    private readonly logger: ILogger;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly webSocketConstructor: WebSocketConstructor;\r\n    private readonly httpClient: HttpClient;\r\n    private webSocket?: WebSocket;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, webSocketConstructor: WebSocketConstructor) {\r\n        this.logger = logger;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logMessageContent = logMessageContent;\r\n        this.webSocketConstructor = webSocketConstructor;\r\n        this.httpClient = httpClient;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket: WebSocket | undefined;\r\n            const cookies = this.httpClient.getCookieString(url);\r\n            let opened = false;\r\n\r\n            if (Platform.isNode && cookies) {\r\n                // Only pass cookies when in non-browser environments\r\n                webSocket = new this.webSocketConstructor(url, undefined, {\r\n                    headers: {\r\n                        Cookie: `${cookies}`,\r\n                    },\r\n                });\r\n            }\r\n\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this.webSocketConstructor(url);\r\n            }\r\n\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n\r\n            // tslint:disable-next-line:variable-name\r\n            webSocket.onopen = (_event: Event) => {\r\n                this.logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this.webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n\r\n            webSocket.onerror = (event: Event) => {\r\n                let error: any = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                } else {\r\n                    error = new Error(\"There was an error with the transport.\");\r\n                }\r\n\r\n                reject(error);\r\n            };\r\n\r\n            webSocket.onmessage = (message: MessageEvent) => {\r\n                this.logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this.logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    this.onreceive(message.data);\r\n                }\r\n            };\r\n\r\n            webSocket.onclose = (event: CloseEvent) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this.close(event);\r\n                } else {\r\n                    let error: any = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    } else {\r\n                        error = new Error(\"There was an error with the transport.\");\r\n                    }\r\n\r\n                    reject(error);\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    public send(data: any): Promise<void> {\r\n        if (this.webSocket && this.webSocket.readyState === this.webSocketConstructor.OPEN) {\r\n            this.logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this.logMessageContent)}.`);\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        if (this.webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this.close(undefined);\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private close(event?: CloseEvent): void {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this.webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this.webSocket.onclose = () => {};\r\n            this.webSocket.onmessage = () => {};\r\n            this.webSocket.onerror = () => {};\r\n            this.webSocket.close();\r\n            this.webSocket = undefined;\r\n        }\r\n\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (event && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason}).`));\r\n            } else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, ITransport, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\n\r\n/** @private */\r\nconst enum ConnectionState {\r\n    Connecting = \"Connecting \",\r\n    Connected = \"Connected\",\r\n    Disconnected = \"Disconnected\",\r\n    Disconnecting = \"Disconnecting\",\r\n}\r\n\r\n/** @private */\r\nexport interface INegotiateResponse {\r\n    connectionId?: string;\r\n    connectionToken?: string;\r\n    negotiateVersion?: number;\r\n    availableTransports?: IAvailableTransport[];\r\n    url?: string;\r\n    accessToken?: string;\r\n    error?: string;\r\n}\r\n\r\n/** @private */\r\nexport interface IAvailableTransport {\r\n    transport: keyof typeof HttpTransportType;\r\n    transferFormats: Array<keyof typeof TransferFormat>;\r\n}\r\n\r\nconst MAX_REDIRECTS = 100;\r\n\r\nlet WebSocketModule: any = null;\r\nlet EventSourceModule: any = null;\r\nif (Platform.isNode && typeof require !== \"undefined\") {\r\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n    // @ts-ignore: TS doesn't know about these names\r\n    const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n    WebSocketModule = requireFunc(\"ws\");\r\n    EventSourceModule = requireFunc(\"eventsource\");\r\n}\r\n\r\n/** @private */\r\nexport class HttpConnection implements IConnection {\r\n    private connectionState: ConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private connectionStarted: boolean;\r\n    private readonly httpClient: HttpClient;\r\n    private readonly logger: ILogger;\r\n    private readonly options: IHttpConnectionOptions;\r\n    private transport?: ITransport;\r\n    private startInternalPromise?: Promise<void>;\r\n    private stopPromise?: Promise<void>;\r\n    private stopPromiseResolver!: (value?: PromiseLike<void>) => void;\r\n    private stopError?: Error;\r\n    private accessTokenFactory?: () => string | Promise<string>;\r\n    private sendQueue?: TransportSendQueue;\r\n\r\n    public readonly features: any = {};\r\n    public baseUrl: string;\r\n    public connectionId?: string;\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((e?: Error) => void) | null;\r\n\r\n    private readonly negotiateVersion: number = 1;\r\n\r\n    constructor(url: string, options: IHttpConnectionOptions = {}) {\r\n        Arg.isRequired(url, \"url\");\r\n\r\n        this.logger = createLogger(options.logger);\r\n        this.baseUrl = this.resolveUrl(url);\r\n\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent || false;\r\n\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        } else if (Platform.isNode && !options.WebSocket) {\r\n            if (WebSocketModule) {\r\n                options.WebSocket = WebSocketModule;\r\n            }\r\n        }\r\n\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        } else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof EventSourceModule !== \"undefined\") {\r\n                options.EventSource = EventSourceModule;\r\n            }\r\n        }\r\n\r\n        this.httpClient = options.httpClient || new DefaultHttpClient(this.logger);\r\n        this.connectionState = ConnectionState.Disconnected;\r\n        this.connectionStarted = false;\r\n        this.options = options;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public start(): Promise<void>;\r\n    public start(transferFormat: TransferFormat): Promise<void>;\r\n    public async start(transferFormat?: TransferFormat): Promise<void> {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n\r\n        if (this.connectionState !== ConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this.connectionState = ConnectionState.Connecting;\r\n\r\n        this.startInternalPromise = this.startInternal(transferFormat);\r\n        await this.startInternalPromise;\r\n\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this.connectionState as any === ConnectionState.Disconnecting) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this.stopPromise;\r\n\r\n            return Promise.reject(new Error(message));\r\n        } else if (this.connectionState as any !== ConnectionState.Connected) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this.logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new Error(message));\r\n        }\r\n\r\n        this.connectionStarted = true;\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        if (this.connectionState !== ConnectionState.Connected) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n\r\n        if (!this.sendQueue) {\r\n            this.sendQueue = new TransportSendQueue(this.transport!);\r\n        }\r\n\r\n        // Transport will not be null if state is connected\r\n        return this.sendQueue.send(data);\r\n    }\r\n\r\n    public async stop(error?: Error): Promise<void> {\r\n        if (this.connectionState === ConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Disconnecting) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this.stopPromise;\r\n        }\r\n\r\n        this.connectionState = ConnectionState.Disconnecting;\r\n\r\n        this.stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this.stopPromiseResolver = resolve;\r\n        });\r\n\r\n        // stopInternal should never throw so just observe it.\r\n        await this.stopInternal(error);\r\n        await this.stopPromise;\r\n    }\r\n\r\n    private async stopInternal(error?: Error): Promise<void> {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this.stopError = error;\r\n\r\n        try {\r\n            await this.startInternalPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this.stopConnection();\r\n            }\r\n\r\n            this.transport = undefined;\r\n        } else {\r\n            this.logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n            this.stopConnection();\r\n        }\r\n    }\r\n\r\n    private async startInternal(transferFormat: TransferFormat): Promise<void> {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this.accessTokenFactory = this.options.accessTokenFactory;\r\n\r\n        try {\r\n            if (this.options.skipNegotiation) {\r\n                if (this.options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this.constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this.startTransport(url, transferFormat);\r\n                } else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            } else {\r\n                let negotiateResponse: INegotiateResponse | null = null;\r\n                let redirects = 0;\r\n\r\n                do {\r\n                    negotiateResponse = await this.getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this.connectionState === ConnectionState.Disconnecting || this.connectionState === ConnectionState.Disconnected) {\r\n                        throw new Error(\"The connection was stopped during negotiation.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n\r\n                    if ((negotiateResponse as any).ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this.accessTokenFactory = () => accessToken;\r\n                    }\r\n\r\n                    redirects++;\r\n                }\r\n                while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n\r\n                await this.createTransport(url, this.options.transport, negotiateResponse, transferFormat);\r\n            }\r\n\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n\r\n            if (this.connectionState === ConnectionState.Connecting) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this.logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this.connectionState = ConnectionState.Connected;\r\n            }\r\n\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this.connectionState = ConnectionState.Disconnected;\r\n            this.transport = undefined;\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async getNegotiationResponse(url: string): Promise<INegotiateResponse> {\r\n        let headers;\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                headers = {\r\n                    [\"Authorization\"]: `Bearer ${token}`,\r\n                };\r\n            }\r\n        }\r\n\r\n        const negotiateUrl = this.resolveNegotiateUrl(url);\r\n        this.logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this.httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers,\r\n            });\r\n\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate ${response.statusCode}`));\r\n            }\r\n\r\n            const negotiateResponse = JSON.parse(response.content as string) as INegotiateResponse;\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            return negotiateResponse;\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \" + e);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private createConnectUrl(url: string, connectionToken: string | null | undefined) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n\r\n    private async createTransport(url: string, requestedTransport: HttpTransportType | ITransport | undefined, negotiateResponse: INegotiateResponse, requestedTransferFormat: TransferFormat): Promise<void> {\r\n        let connectUrl = this.createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this.isITransport(requestedTransport)) {\r\n            this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this.startTransport(connectUrl, requestedTransferFormat);\r\n\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n\r\n        const transportExceptions: any[] = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate: INegotiateResponse | undefined = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this.resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed: ${transportOrError}`);\r\n            } else if (this.isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this.getNegotiationResponse(url);\r\n                    } catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this.createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this.startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                } catch (ex) {\r\n                    this.logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(`${endpoint.transport} failed: ${ex}`);\r\n\r\n                    if (this.connectionState !== ConnectionState.Connecting) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this.logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new Error(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new Error(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n\r\n    private constructTransport(transport: HttpTransportType): ITransport {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this.options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.WebSocket);\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this.options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.EventSource);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n\r\n    private startTransport(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        this.transport!.onreceive = this.onreceive;\r\n        this.transport!.onclose = (e) => this.stopConnection(e);\r\n        return this.transport!.connect(url, transferFormat);\r\n    }\r\n\r\n    private resolveTransportOrError(endpoint: IAvailableTransport, requestedTransport: HttpTransportType | undefined, requestedTransferFormat: TransferFormat): ITransport | Error {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this.logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        } else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this.options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this.options.EventSource)) {\r\n                        this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new Error(`'${HttpTransportType[transport]}' is not supported in your environment.`);\r\n                    } else {\r\n                        this.logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            return this.constructTransport(transport);\r\n                        } catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            } else {\r\n                this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new Error(`'${HttpTransportType[transport]}' is disabled by the client.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private isITransport(transport: any): transport is ITransport {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n\r\n    private stopConnection(error?: Error): void {\r\n        this.logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this.connectionState}.`);\r\n\r\n        this.transport = undefined;\r\n\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this.stopError || error;\r\n        this.stopError = undefined;\r\n\r\n        if (this.connectionState === ConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Connecting) {\r\n            this.logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection hasn't yet left the in the connecting state.`);\r\n            return;\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Disconnecting) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this.stopPromiseResolver();\r\n        }\r\n\r\n        if (error) {\r\n            this.logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        } else {\r\n            this.logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n\r\n        if (this.sendQueue) {\r\n            this.sendQueue.stop().catch((e) => {\r\n                this.logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this.sendQueue = undefined;\r\n        }\r\n\r\n        this.connectionId = undefined;\r\n        this.connectionState = ConnectionState.Disconnected;\r\n\r\n        if (this.connectionStarted) {\r\n            this.connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private resolveUrl(url: string): string {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n\r\n        if (!Platform.isBrowser || !window.document) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n\r\n        this.logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n\r\n    private resolveNegotiateUrl(url: string): string {\r\n        const index = url.indexOf(\"?\");\r\n        let negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n\r\n        if (negotiateUrl.indexOf(\"negotiateVersion\") === -1) {\r\n            negotiateUrl += index === -1 ? \"?\" : \"&\";\r\n            negotiateUrl += \"negotiateVersion=\" + this.negotiateVersion;\r\n        }\r\n        return negotiateUrl;\r\n    }\r\n}\r\n\r\nfunction transportMatches(requestedTransport: HttpTransportType | undefined, actualTransport: HttpTransportType) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    private buffer: any[] = [];\r\n    private sendBufferedData: PromiseSource;\r\n    private executing: boolean = true;\r\n    private transportResult?: PromiseSource;\r\n    private sendLoopPromise: Promise<void>;\r\n\r\n    constructor(private readonly transport: ITransport) {\r\n        this.sendBufferedData = new PromiseSource();\r\n        this.transportResult = new PromiseSource();\r\n\r\n        this.sendLoopPromise = this.sendLoop();\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        this.bufferData(data);\r\n        if (!this.transportResult) {\r\n            this.transportResult = new PromiseSource();\r\n        }\r\n        return this.transportResult.promise;\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this.executing = false;\r\n        this.sendBufferedData.resolve();\r\n        return this.sendLoopPromise;\r\n    }\r\n\r\n    private bufferData(data: string | ArrayBuffer): void {\r\n        if (this.buffer.length && typeof(this.buffer[0]) !== typeof(data)) {\r\n            throw new Error(`Expected data to be of type ${typeof(this.buffer)} but was of type ${typeof(data)}`);\r\n        }\r\n\r\n        this.buffer.push(data);\r\n        this.sendBufferedData.resolve();\r\n    }\r\n\r\n    private async sendLoop(): Promise<void> {\r\n        while (true) {\r\n            await this.sendBufferedData.promise;\r\n\r\n            if (!this.executing) {\r\n                if (this.transportResult) {\r\n                    this.transportResult.reject(\"Connection stopped.\");\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            this.sendBufferedData = new PromiseSource();\r\n\r\n            const transportResult = this.transportResult!;\r\n            this.transportResult = undefined;\r\n\r\n            const data = typeof(this.buffer[0]) === \"string\" ?\r\n                this.buffer.join(\"\") :\r\n                TransportSendQueue.concatBuffers(this.buffer);\r\n\r\n            this.buffer.length = 0;\r\n\r\n            try {\r\n                await this.transport.send(data);\r\n                transportResult.resolve();\r\n            } catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static concatBuffers(arrayBuffers: ArrayBuffer[]): ArrayBuffer {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass PromiseSource {\r\n    private resolver?: () => void;\r\n    private rejecter!: (reason?: any) => void;\r\n    public promise: Promise<void>;\r\n\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this.resolver, this.rejecter] = [resolve, reject]);\r\n    }\r\n\r\n    public resolve(): void {\r\n        this.resolver!();\r\n    }\r\n\r\n    public reject(reason?: any): void {\r\n        this.rejecter!(reason);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { CompletionMessage, HubMessage, IHubProtocol, InvocationMessage, MessageType, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\n\r\nconst JSON_HUB_PROTOCOL_NAME: string = \"json\";\r\n\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol implements IHubProtocol {\r\n\r\n    /** @inheritDoc */\r\n    public readonly name: string = JSON_HUB_PROTOCOL_NAME;\r\n    /** @inheritDoc */\r\n    public readonly version: number = 1;\r\n\r\n    /** @inheritDoc */\r\n    public readonly transferFormat: TransferFormat = TransferFormat.Text;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    public parseMessages(input: string, logger: ILogger): HubMessage[] {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n\r\n        if (!input) {\r\n            return [];\r\n        }\r\n\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message) as HubMessage;\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this.isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this.isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this.isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n\r\n        return hubMessages;\r\n    }\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    public writeMessage(message: HubMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n\r\n    private isInvocationMessage(message: InvocationMessage): void {\r\n        this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n\r\n        if (message.invocationId !== undefined) {\r\n            this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n\r\n    private isStreamItemMessage(message: StreamItemMessage): void {\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n\r\n    private isCompletionMessage(message: CompletionMessage): void {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        if (!message.result && message.error) {\r\n            this.assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n\r\n    private assertNotEmptyString(value: any, errorMessage: string): void {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { IHubProtocol } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { HttpTransportType } from \"./ITransport\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n\r\n// tslint:disable:object-literal-sort-keys\r\nconst LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\n\r\nfunction parseLogLevel(name: string): LogLevel {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    } else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    /** @internal */\r\n    public protocol?: IHubProtocol;\r\n    /** @internal */\r\n    public httpConnectionOptions?: IHttpConnectionOptions;\r\n    /** @internal */\r\n    public url?: string;\r\n    /** @internal */\r\n    public logger?: ILogger;\r\n\r\n    /** If defined, this indicates the client should automatically attempt to reconnect if the connection is lost. */\r\n    /** @internal */\r\n    public reconnectPolicy?: IRetryPolicy;\r\n\r\n    /** Configures console logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel} logLevel The minimum level of messages to log. Anything at this level, or a more severe level, will be logged.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logLevel: LogLevel): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {ILogger} logger An object implementing the {@link @microsoft/signalr.ILogger} interface, which will be used to write all log messages.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logger: ILogger): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {string} logLevel A string representing a LogLevel setting a minimum level of messages to log.\r\n     *    See {@link https://docs.microsoft.com/en-us/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     */\r\n    public configureLogging(logLevel: string): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel | string | ILogger} logging A {@link @microsoft/signalr.LogLevel}, a string representing a LogLevel, or an object implementing the {@link @microsoft/signalr.ILogger} interface.\r\n     *    See {@link https://docs.microsoft.com/en-us/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder;\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder {\r\n        Arg.isRequired(logging, \"logging\");\r\n\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        } else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        } else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * The transport will be selected automatically based on what the server and client support.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified HTTP-based transport to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {HttpTransportType} transportType The specific transport to use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, transportType: HttpTransportType): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {IHttpConnectionOptions} options An options object used to configure the connection.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, options: IHttpConnectionOptions): HubConnectionBuilder;\r\n    public withUrl(url: string, transportTypeOrOptions?: IHttpConnectionOptions | HttpTransportType): HubConnectionBuilder {\r\n        Arg.isRequired(url, \"url\");\r\n\r\n        this.url = url;\r\n\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        } else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    public withHubProtocol(protocol: IHubProtocol): HubConnectionBuilder {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     * By default, the client will wait 0, 2, 10 and 30 seconds respectively before trying up to 4 reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {number[]} retryDelays An array containing the delays in milliseconds before trying each reconnect attempt.\r\n     * The length of the array represents how many failed reconnect attempts it takes before the client will stop attempting to reconnect.\r\n     */\r\n    public withAutomaticReconnect(retryDelays: number[]): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {IRetryPolicy} reconnectPolicy An {@link @microsoft/signalR.IRetryPolicy} that controls the timing and number of reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(reconnectPolicy: IRetryPolicy): HubConnectionBuilder;\r\n    public withAutomaticReconnect(retryDelaysOrReconnectPolicy?: number[] | IRetryPolicy): HubConnectionBuilder {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        } else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        } else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    public build(): HubConnection {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n\r\n        return HubConnection.create(\r\n            connection,\r\n            this.logger || NullLogger.instance,\r\n            this.protocol || new JsonHubProtocol(),\r\n            this.reconnectPolicy);\r\n    }\r\n}\r\n\r\nfunction isLogger(logger: any): logger is ILogger {\r\n    return logger.log !== undefined;\r\n}\r\n","import * as React from 'react';\r\nimport Run, { ForceResizeCheck } from '../../../projects/dndmech';\r\nimport useWindowSize from '../../../hooks/useWindowSize';\r\nimport * as signalR from '@microsoft/signalr';\r\nimport useSignalR from '../../../hooks/useSignalr';\r\n\r\n// tslint:disable-next-line: no-empty-interface\r\ninterface ISignalRTestComponentProps {\r\n\r\n}\r\n// tslint:disable-next-line: no-empty-interface\r\ninterface ISignalRTestComponentState {\r\n    connection?: signalR.HubConnection;\r\n    sendMessage?: (channel: string, data: any) => void;\r\n    err?: any;\r\n\r\n    messages: string[];\r\n    inputText: string;\r\n}\r\n\r\nexport class SignalrTestComponent extends React.Component<ISignalRTestComponentProps, ISignalRTestComponentState> {\r\n\r\n    constructor(props: ISignalRTestComponentProps) {\r\n        super(props);\r\n\r\n        this.state = { messages: [], inputText: '' };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Bind signalr\r\n        const hubConnection = new signalR.HubConnectionBuilder()\r\n            .configureLogging(signalR.LogLevel.Trace)\r\n            .withUrl(window.prompt('Enter server'))\r\n            .build();\r\n\r\n        this.setState({ connection: hubConnection });\r\n\r\n        hubConnection.start()\r\n            .then(() => {\r\n                this.setState({ sendMessage: (methodName: string, data: any) => {\r\n                    // Send message func\r\n                    this.state.connection.send(methodName, data)\r\n                        .catch(err => this.setState({ err }));\r\n                }});\r\n\r\n                // BIND LISTENERS\r\n                hubConnection.on('message', (msg) => {\r\n                    this.onMessageRecieved(msg);\r\n                });\r\n            })\r\n            .catch(err => this.setState({ err }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // Dispose connection\r\n        if (this.state.connection !== undefined) this.state.connection.stop();\r\n    }\r\n\r\n    onMessageRecieved(msg: any) {\r\n        this.setState({\r\n            messages: [...this.state.messages, msg as string]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.connection === undefined) return <div>Waiting...</div>;\r\n        if (this.state.sendMessage === undefined) return <div>Connecting...</div>;\r\n        return <div>\r\n            <h1>Connected!</h1>\r\n            <div>Messages: </div>\r\n            {this.state.messages.map((msg, i) =>\r\n                    <div key={i}>{msg}</div>)}\r\n            <input type='text' value={this.state.inputText} onChange={ev => this.setState({ inputText: ev.target.value })}></input>\r\n            <button onClick={() => {\r\n                this.state.sendMessage('message', this.state.inputText);\r\n                this.setState({ inputText: '' });\r\n            }}>Send</button>\r\n        </div>;\r\n    }\r\n}","import * as React from 'react';\r\n\r\nconst DndMech2Component = React.lazy(() => import('./DndMech2Component'));\r\n\r\nexport function DndMech2Wrapper() {\r\n    return <React.Suspense fallback={<div>loading...</div>}>\r\n        <DndMech2Component></DndMech2Component>\r\n    </React.Suspense>;\r\n}\r\n","enum EComplexity {\r\n    Decorative = 0,\r\n    Get = 1,\r\n    Compare = 2,\r\n    Set = 3,\r\n    Swap = 4,\r\n    CSwap = 5\r\n}\r\n\r\nexport default EComplexity;","import IDelta from './IDelta';\r\nimport EComplexity from './EComplexity';\r\nimport SortState from '../SortState';\r\nimport SortArray from '../SortArray';\r\n\r\nexport class Get implements IDelta {\r\n    complexity: EComplexity;\r\n    type = 'get';\r\n    constructor(public array: SortArray, public index: number) {\r\n        this.complexity = EComplexity.Get;\r\n    }\r\n    apply(state: SortState): void { return; }\r\n    rollback(state: SortState): void { return; }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class Compare implements IDelta {\r\n    complexity: EComplexity;\r\n    type = 'compare';\r\n    constructor(public array1: SortArray, public index1: number, public array2: SortArray, public index2: number) {\r\n        this.complexity = EComplexity.Compare;\r\n    }\r\n    apply(state: SortState): void { return; }\r\n    rollback(state: SortState): void { return; }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class Set implements IDelta {\r\n    complexity: EComplexity;\r\n    type = 'set';\r\n    constructor(public array: SortArray, public index: number, private oldValue: number, private newValue: number) {\r\n        this.complexity = EComplexity.Set;\r\n    }\r\n    apply(state: SortState): void {\r\n        this.array.internalSet(this.index, this.newValue);\r\n    }\r\n    rollback(state: SortState): void {\r\n        this.array.internalSet(this.index, this.oldValue);\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class Copy implements IDelta {\r\n    type = 'copy';\r\n    complexity: EComplexity;\r\n    constructor(public srcArray: SortArray, public srcIndex: number, public tgtArray: SortArray, public tgtIndex: number, private replacedValue: number) {\r\n        this.complexity = EComplexity.Set;\r\n    }\r\n    apply(state: SortState): void {\r\n        this.tgtArray.internalSet(this.tgtIndex, this.srcArray.internalGet(this.srcIndex).value);\r\n    }\r\n    rollback(state: SortState): void {\r\n        this.tgtArray.internalSet(this.tgtIndex, this.replacedValue);\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class Swap implements IDelta {\r\n    type = 'swap';\r\n    complexity: EComplexity;\r\n    constructor(public srcArray: SortArray, public srcIndex: number, public tgtArray: SortArray, public tgtIndex: number) {\r\n        this.complexity = EComplexity.Swap;\r\n    }\r\n    apply(state: SortState): void {\r\n        const v1 = this.srcArray.internalGet(this.srcIndex).value;\r\n        this.srcArray.internalSet(this.srcIndex, this.tgtArray.internalGet(this.tgtIndex).value);\r\n        this.tgtArray.internalSet(this.tgtIndex, v1);\r\n    }\r\n    rollback(state: SortState): void {\r\n        this.apply(state);\r\n    }\r\n}","import SortState from './SortState';\r\nimport { Compare } from './delta/SimpleOperations';\r\nimport SortArray from './SortArray';\r\n\r\nexport default class Record {\r\n    constructor(private state: SortState, public array: SortArray, public value: number, public index: number) {\r\n\r\n    }\r\n\r\n    public compare(other: Record): number {\r\n        this.state.pushDelta(new Compare(this.array, this.index, other.array, other.index));\r\n        const v = this.value - other.value;\r\n        return v === 0 ? 0 : v < 0 ? -1 : 1;\r\n    }\r\n}","import IDelta from './IDelta';\r\nimport EComplexity from './EComplexity';\r\nimport SortArray from '../SortArray';\r\nimport SortState from '../SortState';\r\n\r\nexport class CreateSubArray implements IDelta {\r\n    complexity: EComplexity;\r\n    type = 'createSubArray';\r\n    constructor(public array: SortArray, public startingSize: number, public offset: number) {\r\n        this.complexity = EComplexity.Get;\r\n    }\r\n    apply(state: SortState): void {\r\n        this.array.internalFill(new Array(this.startingSize));\r\n        state.internalCreateArray(this.array);\r\n    }\r\n    rollback(state: SortState): void {\r\n        state.internalRemoveArray(this.array);\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nexport class DeleteSubArray implements IDelta {\r\n    complexity: EComplexity;\r\n    type = 'deleteSubArray';\r\n    constructor(public array: SortArray, private endingData: number[]) {\r\n        this.complexity = EComplexity.Get;\r\n    }\r\n    apply(state: SortState): void {\r\n        state.internalRemoveArray(this.array);\r\n    }\r\n    rollback(state: SortState): void {\r\n        this.array.internalFill(this.endingData);\r\n        state.internalCreateArray(this.array);\r\n    }\r\n}","import SortState from './SortState';\r\nimport Record from './Record';\r\nimport { DeleteSubArray } from './delta/SubArray';\r\nimport { Get, Swap, Copy as Copy } from './delta/SimpleOperations';\r\n\r\nexport default class SortArray {\r\n    private data: Record[];\r\n    constructor(private state: SortState, public arrayId: number, public offset: number, data: number[]) {\r\n        this.data = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            this.data.push(new Record(state, this, data[i], i));\r\n        }\r\n    }\r\n\r\n    public length () {\r\n        return this.data.length;\r\n    }\r\n\r\n    public get(index: number): Record {\r\n        // Don't record get accesses, it'll just clog everything up\r\n        // this.state.deltas.push(new Get(this.arrayId, index));\r\n        return this.data[index];\r\n    }\r\n\r\n    public swap(i1: number, i2: number) {\r\n        this.state.pushDelta(new Swap(this, i1, this, i2));\r\n        const tmp = this.data[i1].value;\r\n        this.data[i1].value = this.data[i2].value;\r\n        this.data[i2].value = tmp;\r\n    }\r\n\r\n    public set(index: number, r: Record) {\r\n        this.state.pushDelta(new Copy(r.array, r.index, this, index, this.data[index].value));\r\n        this.data[index].value = r.value;\r\n    }\r\n\r\n    public getDeleteDelta() {\r\n        return new DeleteSubArray(this, this.data.map(d => d.value));\r\n    }\r\n\r\n    public internalSet(index: number, value: number) {\r\n        this.data[index].value = value;\r\n    }\r\n\r\n    public internalSwap(i1: number, i2: number) {\r\n        const tmp = this.data[i1].value;\r\n        this.data[i1].value = this.data[i2].value;\r\n        this.data[i2].value = tmp;\r\n    }\r\n\r\n    public internalGet(index: number): Record {\r\n        return this.data[index];\r\n    }\r\n\r\n    public internalFill (data: number[]) {\r\n        this.data = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            this.data.push(new Record(this.state, this, data[i], i));\r\n        }\r\n    }\r\n}","import IDelta from './delta/IDelta';\r\nimport SortArray from './SortArray';\r\nimport { CreateSubArray, DeleteSubArray } from './delta/SubArray';\r\nimport EComplexity from './delta/EComplexity';\r\n\r\nexport default class SortState {\r\n    private deltas: IDelta [];\r\n    public arrays: SortArray [];\r\n    private nextArrayId: number;\r\n    public currentDeltaIndex: number;\r\n    public maxValue: number;\r\n    private initialValue: number[];\r\n    private nextDecoratorId: number;\r\n    private requiresMemoryAllocation: boolean;\r\n    public allArrayInfo: {arrId: number, offset: number, length: number}[];\r\n\r\n    constructor(data: number[]) {\r\n        this.initialValue = data;\r\n        this.deltas = [];\r\n        this.arrays = [\r\n            new SortArray(this, 0, 0, data)\r\n        ];\r\n        this.maxValue = 0;\r\n        for (const d of data) {\r\n            if (d > this.maxValue) this.maxValue = d;\r\n        }\r\n        this.nextArrayId = 1;\r\n        this.currentDeltaIndex = 0;\r\n        this.nextDecoratorId = 0;\r\n        this.requiresMemoryAllocation = false;\r\n        this.allArrayInfo = [{\r\n            arrId: 0,\r\n            offset: 0,\r\n            length: data.length\r\n        }];\r\n    }\r\n\r\n    pushDelta(delta: IDelta) {\r\n        this.deltas.push(delta);\r\n        this.currentDeltaIndex ++;\r\n    }\r\n\r\n    totalDeltas(): number {\r\n        return this.deltas.length;\r\n    }\r\n\r\n    deltaIndex(): number {\r\n        return this.currentDeltaIndex;\r\n    }\r\n\r\n    remainingStepsFwd(): number {\r\n        return this.deltas.length - this.currentDeltaIndex;\r\n    }\r\n\r\n    remainingStepsBack(): number {\r\n        return this.currentDeltaIndex;\r\n    }\r\n\r\n    seekTo(tgt: number) {\r\n        const deltaHere = Math.abs(tgt - this.currentDeltaIndex);\r\n        const deltaStart = tgt;\r\n        const deltaEnd = this.deltas.length - tgt;\r\n\r\n        if (deltaStart <= deltaEnd && deltaStart <= deltaHere) {\r\n            // Skip to start, seek from there\r\n            this.arrays = [\r\n                this.arrays[0]\r\n            ];\r\n            this.arrays[0].internalFill(this.initialValue);\r\n            this.currentDeltaIndex = 0;\r\n        }\r\n        else if (deltaEnd <= deltaStart && deltaEnd <= deltaHere) {\r\n            // Skip to end, seek from there\r\n            // (Can't currently seek to end - save the terminal state?)\r\n        }\r\n\r\n        this.seekToInternal(tgt);\r\n    }\r\n\r\n    private seekToInternal(tgt: number) {\r\n        while (tgt > this.currentDeltaIndex) this.apply();\r\n        while (tgt < this.currentDeltaIndex) this.rollback();\r\n    }\r\n\r\n    apply(): IDelta|undefined {\r\n        if (this.currentDeltaIndex === this.deltas.length) return undefined;\r\n        this.deltas[this.currentDeltaIndex].apply(this);\r\n        return this.deltas[this.currentDeltaIndex++];\r\n    }\r\n\r\n    applyUntil(maxSteps: number, complexity: EComplexity): IDelta[] {\r\n        const result: IDelta[] = [];\r\n        for (let step = 0; maxSteps === -1 || step < maxSteps; step++) {\r\n            const stepResult = this.apply();\r\n            if (stepResult === undefined) return result;\r\n            result.push(stepResult);\r\n            if (stepResult.complexity >= complexity)  return result;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    rollback(): IDelta|undefined {\r\n        if (this.currentDeltaIndex === 0) return undefined;\r\n        this.deltas[--this.currentDeltaIndex].rollback(this);\r\n        return this.deltas[this.currentDeltaIndex];\r\n    }\r\n\r\n    rollbackUntil(maxSteps: number, complexity: EComplexity): IDelta[] {\r\n        const result: IDelta[] = [];\r\n        for (let step = 0; maxSteps === -1 || step < maxSteps; step++) {\r\n            const stepResult = this.rollback();\r\n            if (stepResult === undefined) return result;\r\n            result.push(stepResult);\r\n            if (stepResult.complexity >= complexity)  return result;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    getArray(index: number): SortArray {\r\n        return this.arrays[index];\r\n    }\r\n\r\n    createArray(length?: number, offset?: number): SortArray {\r\n        this.requiresMemoryAllocation = true;\r\n        this.allArrayInfo.push({arrId: this.nextArrayId, offset: offset === undefined ? 0 : offset, length: length === undefined ? 0 : length});\r\n        const newArr = new SortArray(this, this.nextArrayId++, offset === undefined ? 0 : offset, new Array(length === undefined ? 0 : length));\r\n        this.arrays.push(newArr);\r\n        this.deltas.push(new CreateSubArray(newArr, length, offset));\r\n        return newArr;\r\n    }\r\n\r\n    deleteArray(arr: SortArray) {\r\n        this.deltas.push(arr.getDeleteDelta());\r\n        this.internalRemoveArray(arr);\r\n    }\r\n\r\n    internalCreateArray(arr: SortArray) {\r\n        this.arrays.push(arr);\r\n    }\r\n\r\n    internalRemoveArray(arr: SortArray) {\r\n        for (let i = 0; i < this.arrays.length; i++) {\r\n            if (this.arrays[i] === arr) {\r\n                this.arrays.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    doesRequireMemory(): boolean {\r\n        return this.requiresMemoryAllocation;\r\n    }\r\n}","import IPaint from './IPaint';\r\nimport SortState from '../SortState';\r\nimport IDelta from '../delta/IDelta';\r\nimport EComplexity from '../delta/EComplexity';\r\nimport { Compare, Swap, Copy } from '../delta/SimpleOperations';\r\nimport SortArray from '../SortArray';\r\n\r\ntype GetCoordFunc = (index: number, value: number) => { x: number, y: number, height: number };\r\n\r\nfunction generateCoordFunc(state: SortState, arrLen: number, wx: number, wy: number, ww: number, wh: number): GetCoordFunc {\r\n    const widthPer = ww / arrLen;\r\n    const heightPer = wh / state.maxValue;\r\n    return (index: number, value: number) => {\r\n        const x = wx + Math.floor(widthPer * index);\r\n        const height = Math.floor(heightPer * value);\r\n        const y = wy + wh - height;\r\n        return { x, y, height};\r\n    };\r\n}\r\n\r\nexport default class BarDisplay implements IPaint {\r\n    public name = 'Bar';\r\n\r\n    repaintArr(state: SortState, arr: SortArray, wx: number, wy: number, ww: number, wh: number, ctx: CanvasRenderingContext2D) {\r\n        const widthPer = ww / arr.length();\r\n        const dx = Math.max(Math.floor(widthPer), 1);\r\n\r\n        const coordsFrom = generateCoordFunc(state, arr.length(), wx, wy, ww, wh);\r\n\r\n        ctx.fillStyle = '#333';\r\n        for (let i = 0; i < arr.length(); i++) {\r\n            const { x, y, height } = coordsFrom(i, arr.internalGet(i).value);\r\n            ctx.fillRect(x, y, dx, height);\r\n        }\r\n\r\n        ctx.fillStyle = 'white';\r\n        for (let i = 0; i < arr.length(); i++) {\r\n            const { x, y, height } = coordsFrom(i, arr.internalGet(i).value);\r\n            ctx.fillRect(x, wh + wy - height - dx, dx, dx);\r\n        }\r\n    }\r\n\r\n    repaint(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, state: SortState, deltas: IDelta[]): void {\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        const mainArr = state.getArray(0);\r\n        const widthPer = canvas.width / mainArr.length();\r\n        const PERC_WINDOW_FOR_SUBARR = 0.2;\r\n\r\n        const coordFuncsByArrayIndex: GetCoordFunc[] = [];\r\n        const arrWindows: { wx: number, wy: number, ww: number, wh: number }[] = [];\r\n\r\n        const mainWindow = {\r\n            wx: 0,\r\n            wy: 0,\r\n            ww: canvas.width,\r\n            wh: state.doesRequireMemory() ? Math.floor(canvas.height * (1 - PERC_WINDOW_FOR_SUBARR)) : canvas.height\r\n        };\r\n\r\n        for (const arr of state.allArrayInfo) {\r\n            const window = arr.arrId === 0 ? mainWindow : {\r\n                wx: Math.floor(arr.offset * widthPer),\r\n                wy: Math.floor(canvas.height - (canvas.height * PERC_WINDOW_FOR_SUBARR)),\r\n                ww: Math.floor(arr.length * widthPer),\r\n                wh: Math.floor(canvas.height * PERC_WINDOW_FOR_SUBARR)\r\n            };\r\n            arrWindows[arr.arrId] = window;\r\n            coordFuncsByArrayIndex[arr.arrId] = generateCoordFunc(state, arr.length, window.wx, window.wy, window.ww, window.wh);\r\n        }\r\n\r\n\r\n        this.repaintArr(state, mainArr, mainWindow.wx, mainWindow.wy, mainWindow.ww, mainWindow.wh, ctx);\r\n        for (let i = 1; i < state.arrays.length; i++) {\r\n            const window = arrWindows[state.arrays[i].arrayId];\r\n            this.repaintArr(state, state.arrays[i], window.wx, window.wy, window.ww, window.wh, ctx);\r\n        }\r\n\r\n        const bezierYAdj = Math.floor(canvas.height / 20);\r\n\r\n        function coordsFrom(arrid: number, index: number, value: number) {\r\n            return coordFuncsByArrayIndex[arrid](index, value);\r\n        }\r\n\r\n        ctx.strokeStyle = '#D00';\r\n        ctx.lineWidth = 1;\r\n        for (const delta of deltas.filter(d => d.type === 'compare')) {\r\n            const d = delta as Compare;\r\n            ctx.beginPath();\r\n\r\n            const { x, y } = coordsFrom(d.array1.arrayId, d.index1, d.array1.get(d.index1).value);\r\n            const { x: x2, y: y2 } = coordsFrom(d.array2.arrayId, d.index2, d.array2.get(d.index2).value);\r\n            const bezierY = Math.min(y, y2) - bezierYAdj;\r\n\r\n            ctx.moveTo(x, y);\r\n            ctx.bezierCurveTo(x, bezierY, x2, bezierY, x2, y2);\r\n            // ctx.lineTo(x2, y2);\r\n            ctx.stroke();\r\n        }\r\n\r\n        ctx.strokeStyle = '#F80';\r\n        ctx.lineWidth = 1;\r\n        const crossSize = 5;\r\n        for (const delta of deltas.filter(d => d.type === 'copy')) {\r\n            const d = delta as Copy;\r\n            ctx.beginPath();\r\n\r\n            const { x, y } = coordsFrom(d.srcArray.arrayId, d.srcIndex, d.srcArray.get(d.srcIndex).value);\r\n            const { x: x2, y: y2 } = coordsFrom(d.tgtArray.arrayId, d.tgtIndex, d.tgtArray.get(d.tgtIndex).value);\r\n\r\n            ctx.moveTo(x - crossSize, y - crossSize);\r\n            ctx.lineTo(x + crossSize, y + crossSize);\r\n            ctx.moveTo(x + crossSize, y - crossSize);\r\n            ctx.lineTo(x - crossSize, y + crossSize);\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x2, y2);\r\n            ctx.stroke();\r\n        }\r\n\r\n        ctx.strokeStyle = '#0f0';\r\n        ctx.lineWidth = 2;\r\n        for (const delta of deltas.filter(d => d.type === 'swap')) {\r\n            const d = delta as Swap;\r\n            ctx.beginPath();\r\n\r\n            const { x, y } = coordsFrom(d.srcArray.arrayId, d.srcIndex, d.srcArray.get(d.srcIndex).value);\r\n            const { x: x2, y: y2 } = coordsFrom(d.tgtArray.arrayId, d.tgtIndex, d.tgtArray.get(d.tgtIndex).value);\r\n            const bezierY = Math.min(y, y2) - bezierYAdj;\r\n\r\n            ctx.moveTo(x, y);\r\n            ctx.bezierCurveTo(x, bezierY, x2, bezierY, x2, y2);\r\n            // ctx.lineTo(x2, y2);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}","import * as React from 'react';\r\nimport Dropdown from 'react-dropdown';\r\nimport SortState from '../../../projects/sortVis/SortState';\r\nimport { ResizeCanvas } from '../../../projects/common/CanvasHelpers';\r\nimport IDelta from '../../../projects/sortVis/delta/IDelta';\r\nimport BarDisplay from '../../../projects/sortVis/paints/BarDisplay';\r\nimport useUpdateState from '../../../hooks/useUpdateState';\r\nimport { first } from '../../../LinqLike';\r\nimport IPaint from '../../../projects/sortVis/paints/IPaint';\r\nimport EComplexity from '../../../projects/sortVis/delta/EComplexity';\r\nimport useAutoplayHook from './useAutoplay';\r\nimport RadialDisplay from '../../../projects/sortVis/paints/RadialDisplay';\r\n\r\nconst allPainters: IPaint[] = [\r\n    new BarDisplay(),\r\n    new RadialDisplay()\r\n];\r\n\r\nconst MaxUpdatesPerTick = 75;\r\n\r\nconst CVS_WIDTH = 1024;\r\nconst CVS_HEIGHT = 800;\r\n\r\nlet canvas: HTMLCanvasElement;\r\nlet ctx: CanvasRenderingContext2D;\r\n\r\n\r\nexport default function SortVisPlaybackComponent(props: { state: SortState }) {\r\n    const [deltaIndex, setDeltaIndex] = React.useState(props.state.deltaIndex());\r\n    const [painter, setCurrentPainter] = useUpdateState<IPaint>(allPainters[0], (nv) => repaint(props.state, [], nv));\r\n    const [autoplaying, setAutoplaying] = React.useState(false);\r\n    const [currentSpeed, setCurrentSpeed] = React.useState(0);\r\n\r\n    React.useEffect(() => {\r\n        const cvs = document.getElementById('canvas') as HTMLCanvasElement;\r\n        ResizeCanvas(cvs, CVS_WIDTH, CVS_HEIGHT);\r\n        canvas = cvs;\r\n        ctx = cvs.getContext('2d');\r\n        repaint(props.state, [], painter);\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        repaint(props.state, [], painter);\r\n    }, [ props.state ]);\r\n\r\n    // Autoplay effect\r\n    useAutoplayHook(() => {\r\n        if (currentSpeed <= 0.25) {\r\n            const deltas = props.state.applyUntil(10, EComplexity.Compare);\r\n            updateDeltaIndex();\r\n            repaint(props.state, deltas, painter);\r\n        }\r\n        else {\r\n            const speedPerc = (currentSpeed - 0.25) * (1 / .75);\r\n            const numTicks = Math.floor(speedPerc * MaxUpdatesPerTick);\r\n            const allDeltas = [];\r\n            for (let i = 0; i < numTicks; i++) {\r\n                allDeltas.push(...props.state.applyUntil(-1, EComplexity.Compare));\r\n            }\r\n            updateDeltaIndex();\r\n            repaint(props.state, allDeltas, painter);\r\n        }\r\n        if (props.state.remainingStepsFwd() === 0) setAutoplaying(false);\r\n    }, autoplaying, currentSpeed);\r\n\r\n    function updateDeltaIndex() {\r\n        setDeltaIndex(props.state.deltaIndex());\r\n    }\r\n\r\n    function repaint(state: SortState, deltas: IDelta[], p: IPaint) {\r\n        // Not ready to paint yet, do nothing\r\n        if (canvas === undefined || ctx === undefined || p === undefined) return;\r\n        p.repaint(canvas, ctx, state, deltas);\r\n    }\r\n\r\n    return <div className='flex row'>\r\n        <canvas id='canvas'></canvas>\r\n        <div className='flex col'>\r\n            <div className='flex row'>\r\n                <span>Display:</span>\r\n                <Dropdown\r\n                    options={allPainters.map(algo => algo.name)}\r\n                    value={painter.name}\r\n                    onChange={ch => setCurrentPainter(first(allPainters, algo => algo.name === ch.value))} />\r\n            </div>\r\n            <input type='range' min={0} max={props.state.totalDeltas()} value={deltaIndex} onChange={ev => {\r\n                props.state.seekTo(ev.target.valueAsNumber);\r\n                updateDeltaIndex();\r\n                repaint(props.state, [], painter);\r\n            }} />\r\n            <span>Step {deltaIndex} / {props.state.totalDeltas()}</span>\r\n            <div className='flex row'>\r\n                <button onClick={() => { props.state.seekTo(0); updateDeltaIndex(); repaint(props.state, [], painter); }}>&lt;&lt;&lt;</button>\r\n                <button onClick={() => { const deltas = props.state.rollbackUntil(-1, EComplexity.Set); updateDeltaIndex(); repaint(props.state, deltas, painter); }}>&lt;&lt;</button>\r\n                <button onClick={() => { const deltas = [props.state.rollback()]; updateDeltaIndex(); repaint(props.state, deltas, painter); }}>&lt;</button>\r\n                <button onClick={() => { const deltas = [props.state.apply()]; updateDeltaIndex(); repaint(props.state, deltas, painter); }}>&gt;</button>\r\n                <button onClick={() => { const deltas = props.state.applyUntil(-1, EComplexity.Set); updateDeltaIndex(); repaint(props.state, deltas, painter); }}>&gt;&gt;</button>\r\n                <button onClick={() => { props.state.seekTo(props.state.totalDeltas()); updateDeltaIndex(); repaint(props.state, [], painter); }}>&gt;&gt;&gt;</button>\r\n            </div>\r\n            <span>Autoplay:</span>\r\n            <div className='flex row'>\r\n                <span>Speed: </span>\r\n                <input type='range' min={0} max={1} step={0.01} value={currentSpeed} onChange={ev => setCurrentSpeed(ev.target.valueAsNumber)} />\r\n                <button onClick={() => setAutoplaying(!autoplaying)}>{autoplaying ? 'Pause' : 'Play'}</button>\r\n            </div>\r\n        </div>\r\n    </div>;\r\n}","import IPaint from './IPaint';\r\nimport SortState from '../SortState';\r\nimport IDelta from '../delta/IDelta';\r\nimport EComplexity from '../delta/EComplexity';\r\nimport { Compare, Swap } from '../delta/SimpleOperations';\r\nimport { mkdirSync } from 'fs';\r\n\r\nexport default class RadialDisplay implements IPaint {\r\n    public name = 'Radial';\r\n\r\n    repaint(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, state: SortState, deltas: IDelta[]): void {\r\n        ctx.fillStyle = 'black';\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n        const midX = canvas.width / 2;\r\n        const midY = canvas.height / 2;\r\n\r\n        const arr = state.getArray(0);\r\n        const radiansPerX = 2 * Math.PI / arr.length();\r\n\r\n        function transformCoords(index: number, value: number) {\r\n            const angle = radiansPerX * index;\r\n            const radius = value / state.maxValue;\r\n            const x = Math.floor(midX + Math.cos(angle) * radius * midX);\r\n            const y = Math.floor(midY + Math.sin(angle) * radius * midY);\r\n            return { x, y };\r\n        }\r\n\r\n        ctx.fillStyle = '#333';\r\n        ctx.beginPath();\r\n        ctx.moveTo(midX, midY);\r\n        const coordsArr = [];\r\n        for (let i = 0; i < arr.length(); i++) {\r\n            const { x, y } = transformCoords(i, arr.internalGet(i).value);\r\n            ctx.lineTo(x, y);\r\n            coordsArr.push({x, y});\r\n        }\r\n        ctx.closePath();\r\n        ctx.fill();\r\n\r\n\r\n        ctx.fillStyle = 'white';\r\n        for (let i = 0; i < arr.length(); i++) {\r\n            const { x, y } = coordsArr[i];\r\n            ctx.fillRect(x, y, 1, 1);\r\n        }\r\n\r\n        ctx.strokeStyle = '#D00';\r\n        ctx.lineWidth = 1;\r\n        for (const delta of deltas.filter(d => d.type === 'compare')) {\r\n            const d = delta as Compare;\r\n            ctx.beginPath();\r\n\r\n            const { x, y } = transformCoords(d.index1, d.array1.get(d.index1).value);\r\n            const { x: x2, y: y2 } = transformCoords(d.index2, d.array2.get(d.index2).value);\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x2, y2);\r\n            ctx.stroke();\r\n        }\r\n\r\n        ctx.strokeStyle = '#0f0';\r\n        ctx.lineWidth = 2;\r\n        for (const delta of deltas.filter(d => d.type === 'swap')) {\r\n            const d = delta as Swap;\r\n            ctx.beginPath();\r\n\r\n            const { x, y } = transformCoords(d.srcIndex, d.srcArray.get(d.srcIndex).value);\r\n            const { x: x2, y: y2 } = transformCoords(d.tgtIndex, d.tgtArray.get(d.tgtIndex).value);\r\n            ctx.moveTo(x, y);\r\n            ctx.lineTo(x2, y2);\r\n            ctx.stroke();\r\n        }\r\n    }\r\n}","import useInterval from '../../../hooks/useInterval';\r\nimport useAnimationFrame from '../../../hooks/useAnimationFrame';\r\nimport { useEffect, useRef } from 'react';\r\n\r\nconst MAX_DELAY_TIME = 1000;\r\nconst MIN_DELAY_BEFORE_FRAMES = 60;\r\n\r\nexport default function useAutoplayHook(callback: () => void, enable: boolean, speed: number) {\r\n    const savedCallback = useRef(() => { return; });\r\n    const waitId = useRef<number | NodeJS.Timeout>(0);\r\n    const waitIdIsAnimationFrame = useRef(false);\r\n\r\n    // Remember the latest callback.\r\n    useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the repeater.\r\n    useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n            triggerTick();\r\n        }\r\n\r\n        function triggerTick() {\r\n            if (speed <= 0.25) {\r\n                const frameRange = MAX_DELAY_TIME - MIN_DELAY_BEFORE_FRAMES;\r\n                const sleepPercent = 1 - (speed * 4);\r\n                const sleepTime = Math.floor(frameRange * sleepPercent) + MIN_DELAY_BEFORE_FRAMES;\r\n                waitId.current = setTimeout(tick, sleepTime);\r\n                waitIdIsAnimationFrame.current = false;\r\n            }\r\n            else  {\r\n                waitId.current = requestAnimationFrame(tick);\r\n                waitIdIsAnimationFrame.current = true;\r\n            }\r\n        }\r\n\r\n        if (enable) triggerTick();\r\n        return () => {\r\n            if  (waitIdIsAnimationFrame.current) {\r\n                cancelAnimationFrame(waitId.current as number);\r\n            } else {\r\n                clearTimeout(waitId.current as NodeJS.Timeout);\r\n            }\r\n        };\r\n    }, [enable, speed]);\r\n}","import ISort from './ISort';\r\nimport SelectionSort from './selectionSort';\r\nimport CycleSort from './CycleSort';\r\nimport HeapSort from './heapSort';\r\nimport QuickSort from './quickSort';\r\nimport QuickDualPivot from './quickDualPivot';\r\nimport MergeSort from './mergeSort';\r\n\r\nconst allSortingAlgorithms: ISort[] = [\r\n    new SelectionSort(),\r\n    new CycleSort(),\r\n    new HeapSort(),\r\n    new QuickSort(),\r\n    new QuickDualPivot(),\r\n    new MergeSort()\r\n];\r\n\r\nexport default allSortingAlgorithms;","import ISort from './ISort';\r\nimport SortState from '../SortState';\r\nimport SortArray from '../SortArray';\r\n\r\nexport default class SelectionSort implements ISort {\r\n    public name = 'SelectionSort';\r\n\r\n    sort(state: SortState, arr: SortArray): void {\r\n        for (let tgtIndex = 0; tgtIndex < arr.length(); tgtIndex++) {\r\n            let minV = arr.get(tgtIndex);\r\n            let minI = tgtIndex;\r\n            for (let swpIndex = tgtIndex + 1; swpIndex < arr.length(); swpIndex++) {\r\n                const v = arr.get(swpIndex);\r\n                if (v.compare(minV) < 0) {\r\n                    minV = v;\r\n                    minI = swpIndex;\r\n                }\r\n            }\r\n            if (minI !== tgtIndex) {\r\n                arr.swap(tgtIndex, minI);\r\n            }\r\n        }\r\n    }\r\n}","import ISort from './ISort';\r\nimport SortState from '../SortState';\r\nimport SortArray from '../SortArray';\r\n\r\nexport default class CycleSort implements ISort {\r\n    public name = 'CycleSort';\r\n\r\n    sort(state: SortState, arr: SortArray): void {\r\n        const isInFinalPosition = new Array(arr.length());\r\n        for (let i = 0; i < isInFinalPosition.length; i++) {\r\n            isInFinalPosition[i] = false;\r\n        }\r\n        for (let tgtIndex = 0; tgtIndex < arr.length() - 1;) {\r\n            if (isInFinalPosition[tgtIndex]) {\r\n                tgtIndex++;\r\n                continue;\r\n            }\r\n            const item = arr.get(tgtIndex);\r\n            let index = tgtIndex;\r\n            for (let swapIndex = tgtIndex + 1; swapIndex < arr.length(); swapIndex++) {\r\n                if (arr.get(swapIndex).compare(item) <= 0) index ++;\r\n            }\r\n\r\n            while (arr.get(index).compare(item) === 0 && index > tgtIndex) index--;\r\n\r\n            if (index === tgtIndex) tgtIndex++;\r\n            else {\r\n                arr.swap(tgtIndex, index);\r\n                isInFinalPosition[index] = true;\r\n            }\r\n        }\r\n    }\r\n}","import ISort from './ISort';\r\nimport SortState from '../SortState';\r\nimport SortArray from '../SortArray';\r\n\r\nexport default class HeapSort implements ISort {\r\n    public name = 'HeapSort';\r\n\r\n    sort(state: SortState, arr: SortArray): void {\r\n        for (let i = 0; i < arr.length(); i++) {\r\n            this.upHeap(arr, i);\r\n        }\r\n\r\n        for (let i = arr.length() - 1; i > 0; i--) {\r\n            arr.swap(0, i);\r\n            this.downHeap(arr, i);\r\n        }\r\n    }\r\n\r\n    upHeap(arr: SortArray, index: number) {\r\n        while (index > 0) {\r\n            const val = arr.get(index);\r\n            const parentIndex = this.parentIndex(index);\r\n            const pval = arr.get(parentIndex);\r\n            if (val.compare(pval) > 0) {\r\n                arr.swap(index, parentIndex);\r\n                index = parentIndex;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    downHeap(arr: SortArray, length: number) {\r\n        let idx = 0;\r\n        while (idx < length) {\r\n            const cidx = this.childIndex(idx);\r\n            // no children in range - done!\r\n            if (cidx >= length) return;\r\n            // Find my max child index\r\n            let maxChildIdx = cidx;\r\n            if (cidx + 1 < length) {\r\n                if (arr.get(maxChildIdx).compare(arr.get(maxChildIdx + 1)) <= 0) {\r\n                    maxChildIdx++;\r\n                }\r\n            }\r\n\r\n            if (arr.get(idx).compare(arr.get(maxChildIdx)) < 0) {\r\n                // I'm smaller - swap down and continue\r\n                arr.swap(idx, maxChildIdx);\r\n                idx = maxChildIdx;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    parentIndex(index: number) {\r\n        return Math.floor((index - 1) / 2);\r\n    }\r\n\r\n    childIndex(index: number) {\r\n        return index * 2 + 1;\r\n    }\r\n}","import ISort from './ISort';\r\nimport SortState from '../SortState';\r\nimport SortArray from '../SortArray';\r\n\r\nexport default class QuickSort implements ISort {\r\n    public name = 'Quicksort';\r\n\r\n    sort(state: SortState, arr: SortArray): void {\r\n        this.recurse(arr, 0, arr.length());\r\n    }\r\n\r\n    recurse(arr: SortArray, min: number, max: number) {\r\n        if (max - min <= 1) return;\r\n        const pivot = arr.get(min);\r\n        let lp = min + 1;\r\n        let rp = max - 1;\r\n        while (lp <= rp) {\r\n            if (arr.get(lp).compare(pivot) < 0) {\r\n                lp++;\r\n            } else {\r\n                arr.swap(lp, rp--);\r\n            }\r\n        }\r\n        arr.swap(min, rp);\r\n        this.recurse(arr, min, rp);\r\n        this.recurse(arr, rp + 1, max);\r\n    }\r\n}","import ISort from './ISort';\r\nimport SortState from '../SortState';\r\nimport SortArray from '../SortArray';\r\n\r\nexport default class QuickDualPivot implements ISort {\r\n    public name = 'QuickDualPivot';\r\n\r\n    sort(state: SortState, arr: SortArray): void {\r\n        this.recurse(arr, 0, arr.length());\r\n    }\r\n\r\n    recurse(arr: SortArray, min: number, max: number) {\r\n        if (max - min <= 1) return;\r\n        const pivot = arr.get(min);\r\n        let lp = min + 1;\r\n        let mp = min + 1;\r\n        let rp = max - 1;\r\n        while (mp <= rp) {\r\n            switch (arr.get(mp).compare(pivot)) {\r\n                case 0:\r\n                    mp++;\r\n                    break;\r\n                case -1:\r\n                    arr.swap(lp++, mp++);\r\n                    break;\r\n                case 1:\r\n                    arr.swap(mp, rp--);\r\n                    break;\r\n            }\r\n        }\r\n        arr.swap(min, rp);\r\n        this.recurse(arr, min, lp);\r\n        this.recurse(arr, mp, max);\r\n    }\r\n}","import ISort from './ISort';\r\nimport SortState from '../SortState';\r\nimport SortArray from '../SortArray';\r\n\r\nexport default class MergeSort implements ISort {\r\n    public name = 'MergeSort';\r\n\r\n    sort(state: SortState, arr: SortArray): void {\r\n        this.recurse(state, arr, 0, arr.length());\r\n    }\r\n\r\n    recurse(state: SortState, arr: SortArray, min: number, max: number) {\r\n        if (max - min <= 1) return;\r\n\r\n        // Use the ceiling, so that the left-side is always larger or equal.\r\n        // Then we only need to allocate for the left-side\r\n        const midp = min + Math.ceil((max - min) / 2);\r\n        this.recurse(state, arr, min, midp);\r\n        this.recurse(state, arr, midp, max);\r\n\r\n        const sortedArr = state.createArray(max - min, min);\r\n        let lp = min;\r\n        let rp = midp;\r\n        let tp = 0;\r\n        while (lp < midp && rp < max) {\r\n            if (arr.get(lp).compare(arr.get(rp)) <= 0) {\r\n                sortedArr.set(tp, arr.get(lp));\r\n                lp++;\r\n                tp++;\r\n            } else {\r\n                sortedArr.set(tp, arr.get(rp));\r\n                rp++;\r\n                tp++;\r\n            }\r\n        }\r\n        while (lp < midp) {\r\n            sortedArr.set(tp, arr.get(lp));\r\n            lp++;\r\n            tp++;\r\n        }\r\n        while (rp < max) {\r\n            sortedArr.set(tp, arr.get(rp));\r\n            rp++;\r\n            tp++;\r\n        }\r\n\r\n        // Copy sorted array back over this array\r\n        for (let i = 0; i < max - min; i++) {\r\n            arr.set(i + min, sortedArr.get(i));\r\n        }\r\n\r\n        state.deleteArray(sortedArr);\r\n    }\r\n}","import RandomData from './randomData';\r\nimport IDataGenerator from './IDataGenerator';\r\nimport ReverseSorted from './reverseSorted';\r\nimport NearSorted from './nearSorted';\r\nimport SinData from './sinData';\r\n\r\nconst allDataGenerators: IDataGenerator[] = [\r\n    new RandomData(),\r\n    new ReverseSorted(),\r\n    new NearSorted(),\r\n    new SinData()\r\n];\r\n\r\nexport default allDataGenerators;","import IDataGenerator from './IDataGenerator';\r\n\r\nexport default class RandomData implements IDataGenerator {\r\n    name = 'Random';\r\n    generate(index: number, totalLength: number): number {\r\n        return Math.random();\r\n    }\r\n}","import IDataGenerator from './IDataGenerator';\r\n\r\nexport default class ReverseSorted implements IDataGenerator {\r\n    name = 'Reversed';\r\n    generate(index: number, totalLength: number): number {\r\n        return 1 - (index / totalLength);\r\n    }\r\n}","import IDataGenerator from './IDataGenerator';\r\n\r\nexport default class NearSorted implements IDataGenerator {\r\n    name = 'Near Sorted';\r\n    generate(index: number, totalLength: number): number {\r\n        let effectiveIndex = Math.floor(index + (Math.random() * (totalLength / 100) - (totalLength / 50)));\r\n        if (effectiveIndex < 0) effectiveIndex = 0;\r\n        if (effectiveIndex > totalLength) effectiveIndex = totalLength;\r\n        return effectiveIndex / totalLength;\r\n    }\r\n}","import IDataGenerator from './IDataGenerator';\r\n\r\nexport default class SinData implements IDataGenerator {\r\n    name = 'Sinusoidal';\r\n    generate(index: number, totalLength: number): number {\r\n        const xp = index / totalLength;\r\n        return (Math.sin(xp * 2 * Math.PI) / 2) + 0.5;\r\n    }\r\n}","\r\nimport { MandelbrotComponent } from './mandelbrot/MandelbrotComponent';\r\nimport { TileBlendTest1Component } from './tile-blend-test-1/TileBlendTest1Component';\r\nimport { SpellTestComponent } from './spell-test/SpellTestComponent';\r\nimport { QTreeConwayComponent } from './qtree-conway/QTreeConwayComponent';\r\nimport { RpgTestComponent } from './rpgt/RpgTest';\r\nimport { DndMechComponent } from './dndmech/DndMechComponent';\r\nimport { SignalrTestComponent } from './signalr-test/SignalrTestComponent';\r\nimport { DndMech2Wrapper } from './dndmech2/DndMech2Wrapper';\r\nimport { TechRenderComponent } from './tech-render/TechRenderComponent';\r\nimport { ProjectsComponent } from './projects';\r\nimport SortVisComponent from './sortVis/SortVisComponent';\r\nimport BulletsComponent from './bullets/BulletsComponent';\r\n\r\nexport interface IProject {\r\n    projectName: string;\r\n    projectTitle: string;\r\n    subCategory?: string;\r\n    projectComponent: React.ComponentType<{}>;\r\n}\r\n\r\n// tslint:disable-next-line: variable-name\r\nexport const AllProjects: IProject[] = [\r\n    {\r\n        projectName: 'mandelbrot',\r\n        projectTitle: 'Mandelbrot',\r\n        projectComponent: MandelbrotComponent\r\n    },\r\n\r\n    {\r\n        projectName: 'tile-blend-test-1',\r\n        projectTitle: 'Tile Blending Test 1',\r\n        projectComponent: TileBlendTest1Component\r\n    },\r\n\r\n    {\r\n        projectName: 'spell-test',\r\n        projectTitle: 'Spell Test',\r\n        projectComponent: SpellTestComponent\r\n    },\r\n\r\n    // {\r\n    //     projectName: 'qtree-conway',\r\n    //     projectTitle: 'QTree Conway',\r\n    //     projectComponent: QTreeConwayComponent\r\n    // },\r\n\r\n    {\r\n        projectName: 'rpgt',\r\n        projectTitle: 'Rpg Test',\r\n        projectComponent: RpgTestComponent\r\n    },\r\n\r\n    {\r\n        projectName: 'dndmech',\r\n        projectTitle: 'D&D Mech',\r\n        projectComponent: DndMechComponent\r\n    },\r\n\r\n    {\r\n        projectName: 'dndmech2',\r\n        projectTitle: 'D&D Mech 2',\r\n        projectComponent: DndMech2Wrapper\r\n    },\r\n\r\n    {\r\n        projectName: 'bullets',\r\n        projectTitle: 'Bullets!',\r\n        projectComponent: BulletsComponent\r\n    },\r\n\r\n    {\r\n        projectName: 'sortvis',\r\n        projectTitle: 'Sort Visualizer',\r\n        projectComponent: SortVisComponent\r\n    },\r\n\r\n    {\r\n        projectName: 'signalr-test',\r\n        projectTitle: 'SignalR Test',\r\n        subCategory: 'Test',\r\n        projectComponent: SignalrTestComponent\r\n    },\r\n\r\n    {\r\n        projectName: 'tech-render',\r\n        projectTitle: 'Tech Render Test',\r\n        subCategory: 'Test',\r\n        projectComponent: TechRenderComponent\r\n    }\r\n];","import * as React from 'react';\r\n\r\nexport function MandelbrotComponent() {\r\n    React.useEffect(() => {\r\n        import(\r\n            /* webpackChunkName: \"mandelbrot\" */\r\n            /* webpackMode: \"lazy\" */\r\n            '../../../projects/mandelbrot/main').then(({ default: Run }) => {\r\n            Run();\r\n        });\r\n    }, []);\r\n    return <div className='mandelbrot mandelbrot_body full_body'>\r\n        <canvas id='mainCanvas'></canvas>\r\n        <canvas id='subCanvas'></canvas>\r\n    </div>;\r\n}","import * as React from 'react';\r\n\r\nexport function TileBlendTest1Component() {\r\n    React.useEffect(() => {\r\n        import(\r\n            /* webpackChunkName: \"blendTest\" */\r\n            /* webpackMode: \"lazy\" */\r\n            '../../../projects/tile-blend-test-1').then(({ default: Run }) => {\r\n            Run();\r\n        });\r\n    }, []);\r\n    return <div className='full_body center'>\r\n        <canvas id='canvas'></canvas>\r\n    </div>;\r\n}","import * as React from 'react';\r\n\r\nexport function SpellTestComponent() {\r\n    React.useEffect(() => {\r\n        import(\r\n            /* webpackChunkName: \"spellTest\" */\r\n            /* webpackMode: \"lazy\" */\r\n            '../../../projects/spell-test').then(({ default: Run }) => {\r\n            Run();\r\n        });\r\n    }, []);\r\n    return <div className='full_body center'>\r\n        <canvas id='canvas'></canvas>\r\n    </div>;\r\n}","import * as React from 'react';\r\n\r\nexport function RpgTestComponent() {\r\n    React.useEffect(() => {\r\n        import(\r\n            /* webpackChunkName: \"rpgTest\" */\r\n            /* webpackMode: \"lazy\" */\r\n            '../../../projects/rpgt').then(({ default: Run }) => {\r\n            Run();\r\n        });\r\n    }, []);\r\n    return <div className='rpgt rpgt_body full_body center'>\r\n        <canvas id='mainCanvas'></canvas>\r\n        <canvas style={{display: 'none'}} id='world_prerender'></canvas>\r\n    </div>;\r\n}","import * as React from 'react';\r\nimport Run, { ForceResizeCheck } from '../../../projects/dndmech';\r\nimport useWindowSize from '../../../hooks/useWindowSize';\r\n\r\nexport function DndMechComponent() {\r\n\r\n    React.useEffect(() => {\r\n        Run();\r\n    }, []);\r\n\r\n    React.useEffect(ForceResizeCheck);\r\n\r\n    const { width, height } = useWindowSize();\r\n\r\n    return <div className='full_body' style={{ display: 'flex', height: height + 'px' }}>\r\n        <div style={{ flexGrow: 0 }}>MECH STATUS</div>\r\n        <div className='center' style={{ flexGrow: 1, height: '100%' }}>\r\n            <canvas id='canvas'></canvas>\r\n        </div>\r\n    </div>;\r\n}","import * as React from 'react';\r\n\r\n\r\nexport default function BulletsComponent() {\r\n    React.useEffect(() => {\r\n        import(\r\n            /* webpackChunkName: \"bullets\" */\r\n            /* webpackMode: \"lazy\" */\r\n            '../../../projects/bullets').then(({ default: Run }) => {\r\n            Run();\r\n        });\r\n    }, []);\r\n    return <div className='center'>\r\n        <canvas id='canvas' />\r\n    </div>;\r\n}","import * as React from 'react';\r\nimport Dropdown from 'react-dropdown';\r\nimport ISort from '../../../projects/sortVis/sorts/ISort';\r\nimport SortState from '../../../projects/sortVis/SortState';\r\nimport { first } from '../../../LinqLike';\r\nimport SortVisPlaybackComponent from './SortVisPlaybackComponent';\r\nimport IDataGenerator from '../../../projects/sortVis/dataGenerator/IDataGenerator';\r\nimport allSortingAlgorithms from '../../../projects/sortVis/sorts';\r\nimport allDataGenerators from '../../../projects/sortVis/dataGenerator';\r\n\r\nexport default function SortVisComponent() {\r\n    const [arrLen, setArrLen] = React.useState(1024);\r\n    const [arrMax, setArrMax] = React.useState(1000);\r\n    const [currentAlgo, setCurrentAlgo] = React.useState<ISort | undefined>(undefined);\r\n    const [runningSortState, setSortState] = React.useState<SortState | undefined>(undefined);\r\n    const [currentDataGen, setDataGen] = React.useState<IDataGenerator>(allDataGenerators[0]);\r\n\r\n    function runState() {\r\n        const initialValues = new Array(arrLen);\r\n        for (let i = 0; i < initialValues.length; i++) {\r\n            initialValues[i] = Math.floor(currentDataGen.generate(i, initialValues.length) * arrMax);\r\n        }\r\n        const sortState = new SortState(initialValues);\r\n        currentAlgo.sort(sortState, sortState.getArray(0));\r\n        sortState.seekTo(0);\r\n        setSortState(sortState);\r\n    }\r\n\r\n    return <div>\r\n        <div className='flex col align-center'>\r\n            <div className='flex col align-stretch'>\r\n                <div className='flex row justify-space-between'>\r\n                    <span>Array Length:</span>\r\n                    <input type='number' value={arrLen} onChange={ch => setArrLen(ch.target.valueAsNumber)} />\r\n                </div>\r\n                <div className='flex row justify-space-between'>\r\n                    <span>Array Max:</span>\r\n                    <input type='number' value={arrMax} onChange={ch => setArrMax(ch.target.valueAsNumber)} />\r\n                </div>\r\n                <div>\r\n                    <span>Data: </span>\r\n                    <Dropdown\r\n                        options={allDataGenerators.map(item => item.name)}\r\n                        value={currentDataGen.name}\r\n                        onChange={ch => setDataGen(first(allDataGenerators, algo => algo.name === ch.value))}\r\n                        />\r\n                </div>\r\n                <div>Algorithm: <Dropdown\r\n                    options={allSortingAlgorithms.map(algo => algo.name)}\r\n                    value={currentAlgo === undefined ? undefined : currentAlgo.name}\r\n                    onChange={ch => setCurrentAlgo(first(allSortingAlgorithms, algo => algo.name === ch.value))} /></div>\r\n                <button disabled={arrLen <= 0 || arrMax <= 0 || currentAlgo === undefined} onClick={runState}>Go!</button>\r\n            </div>\r\n        </div>\r\n        {runningSortState === undefined ? <></> : <>\r\n            <hr />\r\n            <SortVisPlaybackComponent state={runningSortState} />\r\n        </>}\r\n    </div>;\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function TechRenderComponent() {\r\n    React.useEffect(() => {\r\n        import(\r\n            /* webpackChunkName: \"techRender\" */\r\n            /* webpackMode: \"lazy\" */\r\n            '../../../projects/tech-render').then(({ default: Run }) => {\r\n            Run();\r\n        });\r\n    }, []);\r\n    return <div className='full_body center'>\r\n        <canvas id='canvas'></canvas>\r\n    </div>;\r\n}","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AllProjects } from './index';\r\nimport { groupBy } from '../../LinqLike';\r\n\r\nexport function ProjectsComponent() {\r\n    const projectGroups = groupBy(AllProjects.filter(p => p.subCategory !== undefined), p => p.subCategory);\r\n\r\n    return <div>\r\n        <h1>Let's see some projects!</h1>\r\n        <ul>\r\n            {\r\n                AllProjects.filter(p => p.subCategory === undefined).map(project => {\r\n                    return <li key={project.projectName}><Link to={'/projects/' + project.projectName}>{project.projectTitle}</Link></li>;\r\n                })\r\n            }\r\n        </ul>\r\n        {\r\n            projectGroups.map(group =>\r\n                <div key={group.key}>\r\n                    <h2>{group.key}</h2>\r\n                    <ul>\r\n                        {group.items.map(project => <li key={project.projectName}><Link to={'/projects/' + project.projectName}>{project.projectTitle}</Link></li>)}\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n    </div>;\r\n}","import * as React from 'react';\r\n\r\nexport interface IPageProps {\r\n    title: string;\r\n    component: React.ComponentType<{}>;\r\n}\r\n\r\nexport class Page extends React.Component<IPageProps, {}> {\r\n    componentDidMount() {\r\n        document.title = this.props.title;\r\n    }\r\n    render() {\r\n        // tslint:disable-next-line: variable-name\r\n        const PageComponent = this.props.component;\r\n\r\n        return (\r\n            <PageComponent />\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport { HomeComponent, ProjectsComponent } from './views';\r\nimport { AllProjects } from './views/projects/';\r\nimport { Page } from './page';\r\n\r\nconst DEFAULT_TITLE = \"Nathan's Github Pages\";\r\n\r\nexport default function RouterComponent() {\r\n    return <BrowserRouter basename='/'>\r\n        <PageRoute exact path='/' component={HomeComponent} />\r\n        <PageRoute exact path='/projects/' component={ProjectsComponent} />\r\n        {\r\n            AllProjects.map(project => {\r\n                return <PageRoute key={project.projectName} path={'/projects/' + project.projectName} title={project.projectTitle} component={project.projectComponent} />;\r\n            })\r\n        }\r\n    </BrowserRouter>;\r\n}\r\n\r\nexport function PageRoute(props: {exact?: boolean, path: string, title?: string, component: React.ComponentType<{}>}) {\r\n    return <Route exact={props.exact} path={props.path} render={p => <Page {...p} component={props.component} title={props.title || DEFAULT_TITLE} />} />;\r\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport RouterComponent from './routerComponent';\r\n\r\n// We look for this in our fallback-load script for testing locally\r\n(window as any).PAGE_LOADED = true;\r\n\r\nReactDOM.render(\r\n    <RouterComponent />,\r\n    document.getElementById('react_content')\r\n);"],"sourceRoot":""}