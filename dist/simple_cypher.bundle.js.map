{"version":3,"file":"simple_cypher.bundle.js","mappings":"uJAKe,SAASA,IACpB,MAAOC,EAAOC,GAAY,WAAe,KAClCC,EAAWC,GAAgB,WAAe,IAEjD,IAAIC,EACAC,EAEJ,GAAa,KAAVL,EAAgBK,EAAe,6BAC7B,GAAiB,KAAdH,EAAoBG,EAAe,yBACtC,CACDD,EAAS,GACTC,OAAeC,EAEf,MAAMC,EAAcL,EAAUM,MAAM,KAAKC,IAAIC,UAE7C,IAAI,IAAIC,EAAK,EAAGA,EAAKX,EAAMY,OAAQD,IAC/BP,GAAUS,OAAOC,aAAad,EAAMe,WAAWJ,GAAMJ,EAAYI,EAAKT,EAAUU,SAIxF,OACI,2BACI,2CACA,uCACA,yBAAOI,GAAG,QAAQC,KAAK,OAAOC,MAAOlB,EAAOmB,SAAWC,GAAMnB,EAASmB,EAAEC,OAAOH,SAC/E,4CACA,yBAAOF,GAAG,aAAaC,KAAK,OAAOC,MAAOhB,EAAWiB,SAAWC,GAAMjB,EAAaiB,EAAEC,OAAOH,SAC5F,6CACkBZ,IAAjBD,EACG,uBAAKiB,MAAO,CAAEC,MAAO,QAAUlB,GAC/B,4BAAUW,GAAG,SAASQ,KAAM,GAAIC,KAAM,GAAIP,MAAOd,EAAQsB,UAAU","sources":["webpack://trading-game/./src/views/projects/simple-cypher/SimpleCypherComponent.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\n// Threw this together as a simple little component to test Github Copilot\r\n// Turns out, it's pretty cool!\r\n\r\nexport default function SimpleCypherComponent() {\r\n    const [input, setInput] = React.useState('');\r\n    const [cypherKey, setCypherKey] = React.useState('');\r\n    \r\n    let output: string | undefined;\r\n    let errorMessage;\r\n\r\n    if(input === '') { errorMessage = 'Enter an input string' }\r\n    else if(cypherKey === '') { errorMessage = 'Enter a cypher key' }\r\n    else {\r\n        output = '';\r\n        errorMessage = undefined;\r\n\r\n        const cypherCodes = cypherKey.split(' ').map(parseInt);\r\n\r\n        for(let ch = 0; ch < input.length; ch++) {\r\n            output += String.fromCharCode(input.charCodeAt(ch) ^ cypherCodes[ch % cypherKey.length]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Simple Cypher</h1>\r\n            <label>Input:</label>\r\n            <input id='input' type='text' value={input} onChange={(e) => setInput(e.target.value)}/>\r\n            <label>Cypher Key:</label>\r\n            <input id='cypher-key' type='text' value={cypherKey} onChange={(e) => setCypherKey(e.target.value)}/>\r\n            <label>Output:</label>\r\n            {errorMessage !== undefined ? \r\n                <div style={{ color: 'red' }}>{errorMessage}</div> : \r\n                <textarea id='output' rows={10} cols={50} value={output} readOnly={true}/>}\r\n        </div>\r\n    );\r\n}"],"names":["SimpleCypherComponent","input","setInput","cypherKey","setCypherKey","output","errorMessage","undefined","cypherCodes","split","map","parseInt","ch","length","String","fromCharCode","charCodeAt","id","type","value","onChange","e","target","style","color","rows","cols","readOnly"],"sourceRoot":""}