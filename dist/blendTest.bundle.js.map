{"version":3,"sources":["webpack:///./src/projects/common/position/Point.ts","webpack:///./src/projects/common/position/Direction.ts","webpack:///./src/projects/tile-blend-test-1/Terrain.ts","webpack:///./src/projects/common-assets/RockLavaAllBlends_crop.png","webpack:///./src/projects/common-assets/Selectors16x16.png","webpack:///./src/projects/tile-blend-test-1/index.ts"],"names":["Point","x","y","Dot","this","Math","sqrt","LengthSq","p1","p2","other","atan2","nx","undefined","ny","a","b","sy","Direction","directionValues","allDirections","Up","UpRight","Right","DownRight","Down","DownLeft","Left","UpLeft","ToPoint","direction","TileType","tilesWide","tilesHigh","tiles","Array","Rock","subTileIds","updateTile","d","Lava","fixCoords","coords","fixSubCoords","t","updateSelfAndAdjacent","tx","ty","dx","dy","tid","type","adjacency","forEach","dir","i","adjMask","pt","getTile","selectors","pvMousePos","terrain","context","assetLoadDone","canvas","document","getElementById","getContext","ctx","terr","sprites","RenderTerrainCell","RenderTerrain","addEventListener","onMouseMove","onMouseLeave","onMouseClick","spriteSheetX","getSubTileId","spriteSheetY","rtx","rty","render","ev","mouseCoords","floor","offsetX","offsetY","Equals","tile","setTile","assetLoader","AssetLoader","SpriteSheet","registerAssetLoadCallback","onAllFinished"],"mappings":"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","file":"blendTest.bundle.js","sourcesContent":["export default class Point {\r\n    constructor(public x: number, public y: number) {\r\n\r\n    }\r\n\r\n    public LengthSq(): number {\r\n        return Point.Dot(this, this);\r\n    }\r\n\r\n    public Length(): number {\r\n        return Math.sqrt(this.LengthSq());\r\n    }\r\n\r\n    public Clone(): Point {\r\n        return new Point(this.x, this.y);\r\n    }\r\n\r\n    public Negate(): Point {\r\n        return new Point(-this.x, -this.y);\r\n    }\r\n\r\n    public NegateInPlace(): this {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        return this;\r\n    }\r\n\r\n    public static Dot(p1: Point, p2: Point): number {\r\n        return p1.x * p2.x + p1.y * p2.y;\r\n    }\r\n\r\n    public DotWith(other: Point): number {\r\n        return Point.Dot(this, other);\r\n    }\r\n\r\n\r\n    public Direction(): number {\r\n        return Math.atan2(this.y, this.x);\r\n    }\r\n\r\n    public AddWith(x: number, y: number): this;\r\n    public AddWith(other: Point): this;\r\n    public AddWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x += nx;\r\n        this.y += ny;\r\n        return this;\r\n    }\r\n\r\n    public MultWith(x: number, y: number): this;\r\n    public MultWith(other: Point): this;\r\n    public MultWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x *= nx;\r\n        this.y *= ny;\r\n        return this;\r\n    }\r\n\r\n    public SubtractWith(x: number, y: number): this;\r\n    public SubtractWith(other: Point): this;\r\n    public SubtractWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x -= nx;\r\n        this.y -= ny;\r\n        return this;\r\n    }\r\n\r\n    public DivideWith(x: number, y: number): this;\r\n    public DivideWith(other: Point): this;\r\n    public DivideWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x /= nx;\r\n        this.y /= ny;\r\n        return this;\r\n    }\r\n\r\n    public Equals(other: Point): boolean {\r\n        return this.x === other.x && this.y === other.y;\r\n    }\r\n\r\n    static Add(a: Point, b: Point): Point {\r\n        return new Point(a.x + b.x, a.y + b.y);\r\n    }\r\n\r\n    static Multiply(a: Point, s: number, sy?: number): Point;\r\n    static Multiply(a: Point, b: Point): Point;\r\n    static Multiply(a: Point, b: Point|number, sy ?: number): Point {\r\n        if (sy !== undefined) {\r\n            return new Point(a.x * (b as number), a.y * sy);\r\n        }\r\n        else if ((b as any).x !== undefined) {\r\n            return new Point(a.x * (b as Point).x, a.y * (b as Point).y);\r\n        } else {\r\n            return new Point(a.x * (b as number), a.y * (b as number));\r\n        }\r\n    }\r\n}","import Point from './Point';\r\n\r\nexport enum Direction {\r\n    Up = 0,\r\n    UpRight,\r\n    Right,\r\n    DownRight,\r\n    Down,\r\n    DownLeft,\r\n    Left,\r\n    UpLeft,\r\n}\r\n\r\nexport type ECardinalDirection = Direction.Up | Direction.Right | Direction.Down | Direction.Left;\r\nexport type EDiagonalDirection = Direction.UpRight | Direction.DownRight | Direction.DownLeft | Direction.UpLeft;\r\n\r\nexport const directionValues: Point[] = [\r\n    new Point(0, -1),\r\n    new Point(1, -1),\r\n    new Point(1, 0),\r\n    new Point(1, 1),\r\n    new Point(0, 1),\r\n    new Point(-1, 1),\r\n    new Point(-1, 0),\r\n    new Point(-1, -1),\r\n];\r\n\r\nexport const allDirections: Direction[] = [\r\n    Direction.Up,\r\n    Direction.UpRight,\r\n    Direction.Right,\r\n    Direction.DownRight,\r\n    Direction.Down,\r\n    Direction.DownLeft,\r\n    Direction.Left,\r\n    Direction.UpLeft,\r\n];\r\nexport const cardinalDirections: Direction[] = [\r\n    Direction.Up,\r\n    Direction.Right,\r\n    Direction.Down,\r\n    Direction.Left\r\n];\r\nexport const diagonalDirections: Direction[] = [\r\n    Direction.UpRight,\r\n    Direction.DownRight,\r\n    Direction.DownLeft,\r\n    Direction.UpLeft,\r\n];\r\n\r\nexport function ToPoint(direction: Direction): Point {\r\n    return directionValues[direction];\r\n}","import { Direction, cardinalDirections, diagonalDirections, ToPoint, allDirections } from '../common/position/Direction';\r\n\r\nexport enum TileType {\r\n    Rock,\r\n    Lava\r\n}\r\n\r\nexport class Terrain {\r\n    private tiles: TileType[];\r\n    private subTileIds: number[];\r\n\r\n    constructor(public tilesWide: number, public tilesHigh: number) {\r\n        this.tiles = new Array(tilesHigh * tilesWide);\r\n        for (let x = 0; x < tilesWide * tilesHigh; x++) {\r\n            this.tiles[x] = TileType.Rock;\r\n        }\r\n\r\n        this.subTileIds = new Array(tilesHigh * tilesWide * 4);\r\n        for (let x = 0; x < tilesWide * tilesHigh * 4; x++) {\r\n            this.subTileIds[x] = 0;\r\n        }\r\n\r\n        for (let x = 0; x < tilesWide; x++) {\r\n            for (let y = 0; y < tilesHigh; y++) {\r\n                this.updateTile(x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    private fixCoords(x: number, y: number) {\r\n        return x + y * this.tilesWide;\r\n    }\r\n\r\n    private fixSubCoords(x: number, y: number, d: Direction) {\r\n        return x * 4 + (y * this.tilesWide * 4) + ((d - Direction.UpRight) / 2);\r\n    }\r\n\r\n    public getTile(x: number, y: number): TileType {\r\n        if (x < 0 || y < 0 || x >= this.tilesWide || y >= this.tilesWide) return TileType.Lava;\r\n        const coords = this.fixCoords(x, y);\r\n        return this.tiles[this.fixCoords(x, y)];\r\n    }\r\n\r\n    public getSubTileId(x: number, y: number, d: Direction) {\r\n        if (x < 0 || y < 0 || x >= this.tilesWide || y >= this.tilesWide) return 0;\r\n        const coords = this.fixSubCoords(x, y, d);\r\n        return this.subTileIds[coords];\r\n    }\r\n\r\n    public setTile(x: number, y: number, t: TileType) {\r\n        if (x < 0 || y < 0 || x >= this.tilesWide || y >= this.tilesWide) return;\r\n        const coords = this.fixCoords(x, y);\r\n        if (this.tiles[coords] === t) return;\r\n\r\n        this.tiles[coords] = t;\r\n        this.updateSelfAndAdjacent(x, y);\r\n    }\r\n\r\n    private updateSelfAndAdjacent(tx: number, ty: number) {\r\n        for (let dx = -1; dx <= 1; dx++) {\r\n            for (let dy = -1; dy <= 1; dy++) {\r\n                this.updateTile(tx + dx, ty + dy);\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateTile(tx: number, ty: number): void {\r\n        if (tx < 0 || ty < 0 || tx >= this.tilesWide || ty >= this.tilesWide) return;\r\n        const tid = this.fixCoords(tx, ty);\r\n        const type = this.tiles[tid];\r\n\r\n        let adjacency = 0x00;\r\n        allDirections.forEach((dir, i) => {\r\n            const adjMask = 1 << i;\r\n            const pt = ToPoint(dir);\r\n            if (this.getTile(pt.x + tx, pt.y + ty) !== type) {\r\n                adjacency |= adjMask;\r\n            }\r\n        });\r\n\r\n        // adjacency now contains a bitmask of (adjacent=different) where\r\n        // b[0] == T diff, b[1] = TR diff, b[2] = R diff, etc...\r\n        // Therefore, bits [0..2] are the TopRight id,\r\n        // bits [2..4] are the BottomRight id,\r\n        // bits [4..6] are the BottomLeft id,\r\n        // bits [6, 7, 0] are the TopLeft id\r\n\r\n        this.subTileIds[this.fixSubCoords(tx, ty, Direction.UpRight)] = adjacency & 0b111;\r\n        this.subTileIds[this.fixSubCoords(tx, ty, Direction.DownRight)] = (adjacency >> 2) & 0b111;\r\n        this.subTileIds[this.fixSubCoords(tx, ty, Direction.DownLeft)] = (adjacency >> 4) & 0b111;\r\n        this.subTileIds[this.fixSubCoords(tx, ty, Direction.UpLeft)] = (adjacency >> 6) | ((adjacency & 1) << 2) & 0b111;\r\n    }\r\n}","export default __webpack_public_path__ + \"e6ca7ebcac9136ce5511288e898c8371.png\";","export default __webpack_public_path__ + \"f1cd5c392c5447559f3a20ac58e20646.png\";","import AssetLoader from '../common/assets/AssetLoader';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport { ResizeCanvas, NearestNeighborScaling } from '../common/CanvasHelpers';\r\nimport blendTilesUrl from '../common-assets/RockLavaAllBlends_crop.png';\r\nimport seletorsUrl from '../common-assets/Selectors16x16.png';\r\nimport { Terrain, TileType } from './Terrain';\r\nimport { Direction, ToPoint } from '../common/position/Direction';\r\nimport Point from '../common/position/Point';\r\n\r\nlet tiles: SpriteSheet;\r\nlet selectors: SpriteSheet;\r\nlet pvMousePos: Point | undefined;\r\nlet terrain: Terrain;\r\nlet context: CanvasRenderingContext2D;\r\n\r\nconst SCALE_FACTOR = 3;\r\n\r\n\r\nfunction Run() {\r\n    const assetLoader = new AssetLoader();\r\n    tiles = new SpriteSheet(8, 8, blendTilesUrl, assetLoader.registerAssetLoadCallback());\r\n    selectors = new SpriteSheet(16, 16, seletorsUrl, assetLoader.registerAssetLoadCallback());\r\n    pvMousePos = undefined;\r\n\r\n    assetLoader.onAllFinished(assetLoadDone);\r\n}\r\n\r\nfunction assetLoadDone() {\r\n    const canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n    terrain = new Terrain(20, 20);\r\n\r\n    ResizeCanvas(canvas, terrain.tilesWide * 16 * SCALE_FACTOR, terrain.tilesHigh * 16 * SCALE_FACTOR);\r\n    context = canvas.getContext('2d');\r\n    NearestNeighborScaling(context);\r\n\r\n    RenderTerrain(context, terrain, tiles);\r\n\r\n    canvas.addEventListener('mousemove', onMouseMove);\r\n    canvas.addEventListener('mouseleave', onMouseLeave);\r\n    canvas.addEventListener('mousedown', onMouseClick);\r\n}\r\n\r\nfunction RenderTerrain(ctx: CanvasRenderingContext2D, terr: Terrain, sprites: SpriteSheet) {\r\n    for (let x = 0; x < terr.tilesWide; x++) {\r\n        for (let y = 0; y < terr.tilesHigh; y++) {\r\n            RenderTerrainCell(ctx, terr, sprites, x, y);\r\n        }\r\n    }\r\n}\r\nfunction RenderTerrainCell(ctx: CanvasRenderingContext2D, terr: Terrain, sprites: SpriteSheet, x: number, y: number) {\r\n    for (let d = 0; d < 4; d++) {\r\n        const dir = Direction.UpRight + (d * 2);\r\n        const spriteSheetX = terr.getSubTileId(x, y, dir);\r\n        let spriteSheetY = d;\r\n        if (terr.getTile(x, y) === TileType.Lava) spriteSheetY += 4;\r\n\r\n        const rtx = x * 16 + (ToPoint(dir).x === 1 ? 8 : 0);\r\n        const rty = y * 16 + (ToPoint(dir).y === 1 ? 8 : 0);\r\n        sprites.render(ctx, rtx * SCALE_FACTOR, rty * SCALE_FACTOR, 8 * SCALE_FACTOR, 8 * SCALE_FACTOR,\r\n            spriteSheetX, spriteSheetY);\r\n    }\r\n}\r\n\r\nfunction onMouseMove(ev: MouseEvent) {\r\n    const mouseCoords = new Point(Math.floor(ev.offsetX / (16 * SCALE_FACTOR)), Math.floor(ev.offsetY / (16 * SCALE_FACTOR)));\r\n    if (pvMousePos !== undefined) {\r\n        if (!mouseCoords.Equals(pvMousePos)) {\r\n            RenderTerrainCell(context, terrain, tiles, pvMousePos.x, pvMousePos.y);\r\n            selectors.render(context, mouseCoords.x * 16 * SCALE_FACTOR, mouseCoords.y * 16 * SCALE_FACTOR, 16 * SCALE_FACTOR, 16 * SCALE_FACTOR,\r\n                1, 0);\r\n            pvMousePos = mouseCoords;\r\n        }\r\n    }\r\n    else {\r\n        selectors.render(context, mouseCoords.x * 16 * SCALE_FACTOR, mouseCoords.y * 16 * SCALE_FACTOR, 16 * SCALE_FACTOR, 16 * SCALE_FACTOR,\r\n            1, 0);\r\n        pvMousePos = mouseCoords;\r\n    }\r\n}\r\n\r\nfunction onMouseLeave(ev: MouseEvent) {\r\n    if (pvMousePos !== undefined) {\r\n        pvMousePos = undefined;\r\n    }\r\n}\r\n\r\nfunction onMouseClick(ev: MouseEvent) {\r\n    const mouseCoords = new Point(Math.floor(ev.offsetX / (16 * SCALE_FACTOR)), Math.floor(ev.offsetY / (16 * SCALE_FACTOR)));\r\n    const tile = terrain.getTile(mouseCoords.x, mouseCoords.y);\r\n    terrain.setTile(mouseCoords.x, mouseCoords.y, tile === TileType.Lava ? TileType.Rock : TileType.Lava);\r\n\r\n    for (let dx = -1; dx <= 1; dx ++) {\r\n        for (let dy = -1; dy <= 1; dy++) {\r\n            RenderTerrainCell(context, terrain, tiles, pvMousePos.x + dx, pvMousePos.y + dy);\r\n        }\r\n    }\r\n\r\n    selectors.render(context, mouseCoords.x * 16 * SCALE_FACTOR, mouseCoords.y * 16 * SCALE_FACTOR, 16 * SCALE_FACTOR, 16 * SCALE_FACTOR,\r\n        1, 0);\r\n}\r\n\r\nexport default Run;"],"sourceRoot":""}