{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../../src/ILogger.ts","webpack:///external \"React\"","webpack:///../../src/Utils.ts","webpack:///../../src/Errors.ts","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///../../src/HttpClient.ts","webpack:///../../src/Loggers.ts","webpack:///../../src/TextMessageFormat.ts","webpack:///./src/projects/common/CanvasHelpers.ts","webpack:///./node_modules/prop-types/index.js","webpack:///./src/projects/common/assets/AssetLoader.ts","webpack:///./src/projects/common/assets/SpriteSheet.ts","webpack:///./src/projects/common/position/Direction.ts","webpack:///./src/projects/common/position/Point.ts","webpack:///./node_modules/axios-observable/dist/index.js","webpack:///./src/projects/common/index.ts","webpack:///./src/projects/spell-test/EArrow.ts","webpack:///./src/projects/rpgt/Constants.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/resolve-pathname/esm/resolve-pathname.js","webpack:///./node_modules/value-equal/esm/value-equal.js","webpack:///./node_modules/tiny-invariant/dist/tiny-invariant.esm.js","webpack:///./node_modules/history/esm/history.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///../modules/HistoryContext.js","webpack:///../modules/createNameContext.js","webpack:///../modules/RouterContext.js","webpack:///../modules/Router.js","webpack:///../modules/MemoryRouter.js","webpack:///../modules/Lifecycle.js","webpack:///../modules/Prompt.js","webpack:///../modules/generatePath.js","webpack:///../modules/Redirect.js","webpack:///../modules/matchPath.js","webpack:///../modules/Route.js","webpack:///../modules/StaticRouter.js","webpack:///../modules/Switch.js","webpack:///../modules/withRouter.js","webpack:///../modules/hooks.js","webpack:///../modules/BrowserRouter.js","webpack:///../modules/HashRouter.js","webpack:///../modules/utils/locationUtils.js","webpack:///../modules/Link.js","webpack:///../modules/NavLink.js","webpack:///./node_modules/mini-create-react-context/dist/esm/index.js","webpack:///./node_modules/path-to-regexp/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/react-is/index.js","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/core/mergeConfig.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./src/views/projects/index.ts","webpack:///./src/projects/mandelbrot/Constants.ts","webpack:///./src/projects/common/Range.ts","webpack:///./src/projects/common-assets/arrows.png","webpack:///./src/projects/spell-test/spells/SpellGroup.ts","webpack:///./src/projects/common/NearestNeighborScalingHelper.ts","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///../../src/NodeHttpClient.ts","webpack:///../../src/HandshakeProtocol.ts","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/routerComponent.tsx","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/path-to-regexp/node_modules/isarray/index.js","webpack:///./node_modules/react-is/cjs/react-is.production.min.js","webpack:///./src/views/index.ts","webpack:///./src/views/home/home.tsx","webpack:///./src/components/index.ts","webpack:///./src/components/renderFromUrl/RenderFromUrlComponent.tsx","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/core/buildFullPath.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/axios-observable/dist/create-observable.js","webpack:///./src/components/renderFromUrl/CodeFromUrlComponent.tsx","webpack:///./src/views/projects/projects.tsx","webpack:///./src/views/projects/mandelbrot/MandelbrotComponent.tsx","webpack:///./src/projects/mandelbrot/main.ts","webpack:///./src/projects/mandelbrot/Renderer.ts","webpack:///./src/projects/common/Range2d.ts","webpack:///./src/projects/common/ColorRange.ts","webpack:///./src/projects/common/Complex.ts","webpack:///./src/projects/mandelbrot/ProgressiveRepaint.ts","webpack:///./src/projects/mandelbrot/iterativeFunctions/Mandelbrot.ts","webpack:///./src/projects/mandelbrot/iterativeFunctions/Julia.ts","webpack:///./src/projects/mandelbrot/ClickDragWrapper.ts","webpack:///./src/views/projects/tile-blend-test-1/TileBlendTest1Component.tsx","webpack:///./src/projects/tile-blend-test-1/index.ts","webpack:///./src/projects/common-assets/RockLavaAllBlends_crop.png","webpack:///./src/projects/common-assets/Selectors16x16.png","webpack:///./src/projects/tile-blend-test-1/Terrain.ts","webpack:///./src/views/projects/spell-test/SpellTestComponent.tsx","webpack:///./src/projects/spell-test/index.ts","webpack:///./src/projects/spell-test/spells/SpellStep.ts","webpack:///./src/views/projects/rpgt/RpgTest.tsx","webpack:///./src/projects/rpgt/index.ts","webpack:///./src/projects/common-assets/rpg1.png","webpack:///./src/projects/common-assets/wizard16.png","webpack:///./src/projects/rpgt/world/World.ts","webpack:///./src/projects/common/Iterate.ts","webpack:///./src/projects/rpgt/world/Cell.ts","webpack:///./src/projects/rpgt/SheetGraphic.ts","webpack:///./src/projects/common/position/Rectangle.ts","webpack:///./src/projects/common/input/KeyboardManager.ts","webpack:///./src/projects/common/input/KeyWatcher.ts","webpack:///./src/projects/common/input/KeyState.ts","webpack:///./src/projects/common/assets/FileResource.ts","webpack:///./src/views/projects/dndmech/DndMechComponent.tsx","webpack:///./src/projects/dndmech/index.ts","webpack:///./src/projects/dndmech/Constants.ts","webpack:///./src/projects/common/assets/ImageLoader.ts","webpack:///./src/projects/dndmech/assets/MechIndicators.png","webpack:///./src/projects/dndmech/assets/MechSymbols.png","webpack:///./src/projects/dndmech/Symbol.ts","webpack:///./src/projects/dndmech/Coords.ts","webpack:///./src/projects/dndmech/SymbolDefinitions.ts","webpack:///./src/hooks/useWindowSize.ts","webpack:///./src/views/projects/signalr-test/SignalrTestComponent.tsx","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./src/LinqLike.ts","webpack:///./src/page.tsx","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/rxjs/src/internal/util/isFunction.ts","webpack:///./node_modules/rxjs/src/internal/config.ts","webpack:///./node_modules/rxjs/src/internal/util/hostReportError.ts","webpack:///./node_modules/rxjs/src/internal/Observer.ts","webpack:///./node_modules/rxjs/src/internal/util/isObject.ts","webpack:///./node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","webpack:///./node_modules/rxjs/src/internal/Subscription.ts","webpack:///./node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/Subscriber.ts","webpack:///./node_modules/rxjs/src/internal/util/canReportError.ts","webpack:///./node_modules/rxjs/src/internal/util/identity.ts","webpack:///./node_modules/rxjs/src/internal/util/pipe.ts","webpack:///./node_modules/rxjs/src/internal/Observable.ts","webpack:///./node_modules/rxjs/src/internal/util/toSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","webpack:///./node_modules/rxjs/src/internal/SubjectSubscription.ts","webpack:///./node_modules/rxjs/src/internal/Subject.ts","webpack:///./node_modules/rxjs/src/internal/operators/refCount.ts","webpack:///./node_modules/rxjs/src/internal/observable/ConnectableObservable.ts","webpack:///./node_modules/rxjs/src/internal/operators/groupBy.ts","webpack:///./node_modules/rxjs/src/internal/BehaviorSubject.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/Action.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/QueueAction.ts","webpack:///./node_modules/rxjs/src/internal/Scheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts","webpack:///./node_modules/rxjs/src/internal/observable/empty.ts","webpack:///./node_modules/rxjs/src/internal/util/isScheduler.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToArray.ts","webpack:///./node_modules/rxjs/src/internal/Notification.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","webpack:///./node_modules/rxjs/src/internal/observable/fromArray.ts","webpack:///./node_modules/rxjs/src/internal/observable/of.ts","webpack:///./node_modules/rxjs/src/internal/observable/throwError.ts","webpack:///./node_modules/rxjs/src/internal/operators/observeOn.ts","webpack:///./node_modules/rxjs/src/internal/ReplaySubject.ts","webpack:///./node_modules/rxjs/src/internal/AsyncSubject.ts","webpack:///./node_modules/rxjs/src/internal/util/Immediate.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsapAction.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts","webpack:///./node_modules/rxjs/src/internal/util/isObservable.ts","webpack:///./node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","webpack:///./node_modules/rxjs/src/internal/util/EmptyError.ts","webpack:///./node_modules/rxjs/src/internal/util/TimeoutError.ts","webpack:///./node_modules/rxjs/src/internal/operators/map.ts","webpack:///./node_modules/rxjs/src/internal/observable/bindCallback.ts","webpack:///./node_modules/rxjs/src/internal/observable/bindNodeCallback.ts","webpack:///./node_modules/rxjs/src/internal/OuterSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/InnerSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/symbol/iterator.ts","webpack:///./node_modules/rxjs/src/internal/util/isPromise.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeTo.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToObservable.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToPromise.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToIterable.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToResult.ts","webpack:///./node_modules/rxjs/src/internal/observable/combineLatest.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduled.ts","webpack:///./node_modules/rxjs/src/internal/util/isInteropObservable.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","webpack:///./node_modules/rxjs/src/internal/util/isIterable.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","webpack:///./node_modules/rxjs/src/internal/observable/from.ts","webpack:///./node_modules/rxjs/src/internal/operators/mergeMap.ts","webpack:///./node_modules/rxjs/src/internal/operators/mergeAll.ts","webpack:///./node_modules/rxjs/src/internal/observable/concat.ts","webpack:///./node_modules/rxjs/src/internal/operators/concatAll.ts","webpack:///./node_modules/rxjs/src/internal/observable/defer.ts","webpack:///./node_modules/rxjs/src/internal/observable/forkJoin.ts","webpack:///./node_modules/rxjs/src/internal/observable/fromEvent.ts","webpack:///./node_modules/rxjs/src/internal/observable/fromEventPattern.ts","webpack:///./node_modules/rxjs/src/internal/observable/generate.ts","webpack:///./node_modules/rxjs/src/internal/observable/iif.ts","webpack:///./node_modules/rxjs/src/internal/util/isNumeric.ts","webpack:///./node_modules/rxjs/src/internal/observable/interval.ts","webpack:///./node_modules/rxjs/src/internal/observable/merge.ts","webpack:///./node_modules/rxjs/src/internal/observable/never.ts","webpack:///./node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts","webpack:///./node_modules/rxjs/src/internal/observable/pairs.ts","webpack:///./node_modules/rxjs/src/internal/util/not.ts","webpack:///./node_modules/rxjs/src/internal/operators/filter.ts","webpack:///./node_modules/rxjs/src/internal/observable/partition.ts","webpack:///./node_modules/rxjs/src/internal/observable/race.ts","webpack:///./node_modules/rxjs/src/internal/observable/range.ts","webpack:///./node_modules/rxjs/src/internal/observable/timer.ts","webpack:///./node_modules/rxjs/src/internal/observable/using.ts","webpack:///./node_modules/rxjs/src/internal/observable/zip.ts","webpack:///./node_modules/rxjs/src/index.ts","webpack:///../../src/IHubProtocol.ts","webpack:///../../src/XhrHttpClient.ts","webpack:///../../src/DefaultHttpClient.ts","webpack:///../../src/HubConnection.ts","webpack:///../../src/Subject.ts","webpack:///../../src/ITransport.ts","webpack:///../../src/DefaultReconnectPolicy.ts","webpack:///../../src/AbortController.ts","webpack:///../../src/LongPollingTransport.ts","webpack:///../../src/ServerSentEventsTransport.ts","webpack:///../../src/WebSocketTransport.ts","webpack:///../../src/HttpConnection.ts","webpack:///../../src/JsonHubProtocol.ts","webpack:///../../src/HubConnectionBuilder.ts","webpack:///../../src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","LogLevel","__webpack_exports__","React","Arg","Platform","getDataDetail","isArrayBuffer","sendMessage","createLogger","SubjectSubscription","ConsoleLogger","_ILogger__WEBPACK_IMPORTED_MODULE_0__","_Loggers__WEBPACK_IMPORTED_MODULE_1__","isRequired","val","Error","isIn","values","window","self","this","isBrowser","isWebWorker","data","includeContent","detail","byteLength","view","Uint8Array","str","forEach","num","toString","substr","length","formatArrayBuffer","ArrayBuffer","constructor","logger","transportName","httpClient","url","accessTokenFactory","content","logMessageContent","token","_b","sent","_a","headers","log","Trace","responseType","post","response","statusCode","undefined","Information","instance","subject","observer","dispose","index","observers","indexOf","splice","cancelCallback","catch","_","minimumLogLevel","outputConsole","console","logLevel","message","Critical","error","Date","toISOString","Warning","warn","info","HttpError","TimeoutError","AbortError","_super","errorMessage","_this","trueProto","__proto__","__extends","isArray","isUndefined","isObject","isFunction","obj","fn","isBuffer","isFormData","FormData","isArrayBufferView","isView","buffer","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","document","merge","result","assignValue","arguments","deepMerge","extend","a","b","thisArg","trim","replace","_inheritsLoose","subClass","superClass","HttpResponse","HttpClient","statusText","options","send","__assign","method","delete","getCookieString","NullLogger","_logLevel","_message","TextMessageFormat","write","output","RecordSeparator","parse","input","messages","split","pop","RecordSeparatorCode","String","fromCharCode","ResizeCanvas","canvas","tgtWidth","tgtHeight","width","height","style","NearestNeighborScaling","ctx","imageSmoothingEnabled","default","[object Object]","waitingAssetCount","loadedAssetCount","boundCallback","act","SpriteSheet","spriteWidth","spriteHeight","spriteUrl","onload","image","createElement","src","addEventListener","loadFinished","tilesWide","tilesHigh","v","y","tx","ty","tw","th","srcx","srcy","sx","isTuple","x","sy","drawImage","twid","thei","Point_1","Direction","directionValues","allDirections","Up","UpRight","Right","DownRight","Down","DownLeft","Left","UpLeft","cardinalDirections","diagonalDirections","ToPoint","direction","Point","Dot","Math","sqrt","LengthSq","p1","p2","other","nx","ny","axios_1","create_observable_1","Axios","axiosInstance","defaults","configurable","interceptors","request","config","createObservable","put","patch","head","Range_1","Range","Range2d_1","Range2d","ColorRange_1","ColorRange","Complex_1","Complex","EArrow","Matches","arr","pattern","Any","Stop","ERepeat","TILES_WIDE","TILES_HIGH","TILE_SIZE","_extends","assign","target","source","apply","isAbsolute","pathname","charAt","spliceOne","list","k","resolve_pathname","to","from","hasTrailingSlash","toParts","fromParts","isToAbs","isFromAbs","mustEndAbs","concat","last","up","part","unshift","join","value_equal_valueOf","valueOf","value_equal","valueEqual","Array","every","item","aValue","bValue","keys","isProduction","prefix","tiny_invariant_esm","condition","addLeadingSlash","path","stripLeadingSlash","stripBasename","toLowerCase","hasBasename","stripTrailingSlash","slice","createPath","location","search","hash","createLocation","state","currentLocation","hashIndex","searchIndex","parsePath","decodeURI","e","URIError","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","action","getUserConfirmation","callback","appendListener","isActive","listener","push","filter","notifyListeners","_len","args","_key","canUseDOM","getConfirmation","confirm","PopStateEvent","HashChangeEvent","getHistoryState","history","createBrowserHistory","props","ua","globalHistory","canUseHistory","userAgent","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_ref","_window$location","createKey","random","transitionManager","setState","nextState","handlePopState","event","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","ok","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","listenerCount","checkDOMListeners","removeEventListener","isBlocked","href","pushState","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","HashChangeEvent$1","HashPathCoders","hashbang","encodePath","decodePath","noslash","slash","stripHash","getHashPath","substring","replaceHashPath","createHashHistory","_props$hashType","hashType","_HashPathCoders$hashT","ignorePath","encodedPath","prevLocation","allPaths","lastIndexOf","baseTag","querySelector","getAttribute","pushHashPath","nextPaths","clamp","lowerBound","upperBound","min","max","_objectWithoutPropertiesLoose","excluded","sourceKeys","historyContext","context","createContext","displayName","createNamedContext","Router","_isMounted","_pendingLocation","staticContext","computeRootMatch","params","isExact","componentDidMount","componentWillUnmount","render","external_React_default","RouterContext","Provider","match","HistoryContext","children","Component","MemoryRouter","_props$initialEntries","initialEntries","_props$initialIndex","initialIndex","entries","map","entry","nextIndex","nextEntries","canGo","createHistory","react_router_Router","Lifecycle","onMount","componentDidUpdate","prevProps","onUpdate","onUnmount","Prompt","when","_ref$when","Consumer","invariant","react_router_Lifecycle","release","cache","cacheLimit","cacheCount","generatePath","generator","pathToRegexp","compile","compilePath","pretty","Redirect","computedMatch","_ref$push","matchPath","_options","exact","_options$exact","strict","_options$strict","sensitive","_options$sensitive","reduce","matched","cacheKey","end","pathCache","regexp","_compilePath","exec","memo","Route","_this$props","component","base","createURL","staticHandler","methodName","noop","StaticRouter","handlePush","navigateTo","handleReplace","handleListen","handleBlock","_this$props$basename","_this$props$context","addBasename","_this$props2$basename","_this$props2$context","_this$props2$location","rest","_this$props2","Switch","element","Children","child","isValidElement","cloneElement","withRouter","C","wrappedComponentRef","remainingProps","ref","WrappedComponent","hoistStatics","useContext","useHistory","useLocation","Context","useParams","useRouteMatch","BrowserRouter","HashRouter","resolveToLocation","normalizeToLocation","forwardRefShim","forwardRef","LinkAnchor","forwardedRef","innerRef","navigate","onClick","ex","preventDefault","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","Link","_ref2","_ref2$component","NavLink","ariaCurrent","_ref$ariaCurrent","activeClassName","_ref$activeClassName","activeStyle","classNameProp","className","isActiveProp","locationProp","styleProp","escapedPath","classnames","joinClassnames","global","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","MAX_SIGNED_31_BIT_INT","commonjsGlobal","globalThis","defaultValue","calculateChangedBits","_Provider$childContex","_Consumer$contextType","contextProp","_Component","handlers","emitter","on","handler","off","h","set","newValue","changedBits","_proto","getChildContext","componentWillReceiveProps","nextProps","oldValue","childContextTypes","_Component2","_this2","getValue","observedBits","_proto2","contextTypes","isarray","tokensToFunction","tokensToRegExp","PATH_REGEXP","RegExp","res","tokens","defaultDelimiter","delimiter","escaped","offset","next","capture","group","modifier","asterisk","partial","repeat","optional","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","charCodeAt","toUpperCase","matches","flags","opts","encode","encodeURIComponent","segment","TypeError","JSON","stringify","j","test","attachKeys","re","route","endsWithDelimiter","groups","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","g","Function","utils","paramsSerializer","serializedParams","hashmarkIndex","__CANCEL__","process","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","adapter","XMLHttpRequest","transformRequest","transformResponse","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","settle","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","Promise","resolve","reject","requestData","requestHeaders","auth","username","password","Authorization","btoa","fullPath","baseURL","open","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseText","onabort","onerror","ontimeout","timeoutErrorMessage","cookies","xsrfValue","withCredentials","read","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","enhanceError","code","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","prop","axiosKeys","otherKeys","Cancel","MandelbrotComponent_1","TileBlendTest1Component_1","SpellTestComponent_1","RpgTest_1","DndMechComponent_1","SignalrTestComponent_1","AllProjects","projectName","projectTitle","projectComponent","MandelbrotComponent","TileBlendTest1Component","SpellTestComponent","RpgTestComponent","DndMechComponent","subCategory","SignalrTestComponent","CANVAS_WIDTH","CANVAS_HEIGHT","percentage","point","amt","range","anchor","ScaleTo","Length","targetWidth","deltaRange","targetRange","GetValue","GetPercentage","ConvertTo","unitRange","EArrow_1","SpellGroup","GidTracker","reverse","gids","spellData","parent","gid","Increment","repeatType","None","LeftRight","UpDown","parentIndex","pushToPrevious","Optional","Repeatable","rep","lastIndex","lastElement","isArrow","nextGid","CanvasHelpers_1","baseWidth","baseHeight","scaleByWindowSize","onResize","Rescale","parentElement","currentWidth","currentHeight","innerWidth","innerHeight","clientWidth","clientHeight","maxXScale","maxYScale","scaleFactor","floor","setTransform","base64","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","array","byteOffset","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","fromString","len","checked","copy","type","fromObject","assertSize","size","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","fromByteArray","utf8Slice","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","fill","allocUnsafeSlow","_isBuffer","compare","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","dst","reactIs","REACT_STATICS","contextType","defaultProps","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","$$typeof","TYPE_STATICS","getStatics","isMemo","ForwardRef","Memo","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","descriptor","NodeHttpClient","requestModule","_Errors__WEBPACK_IMPORTED_MODULE_0__","_HttpClient__WEBPACK_IMPORTED_MODULE_1__","_ILogger__WEBPACK_IMPORTED_MODULE_2__","_Utils__WEBPACK_IMPORTED_MODULE_3__","requireFunc","require","cookieJar","jar","httpRequest","abortSignal","aborted","requestBody","currentRequest","body","X-Requested-With","statusMessage","HandshakeProtocol","_TextMessageFormat__WEBPACK_IMPORTED_MODULE_0__","_Utils__WEBPACK_IMPORTED_MODULE_1__","writeHandshakeRequest","handshakeRequest","parseHandshakeResponse","messageData","remainingData","binaryData","separatorIndex","responseLength","textData","ReactDOM","routerComponent_1","PAGE_LOADED","getElementById","react_router_dom_1","views_1","projects_1","page_1","DEFAULT_TITLE","PageRoute","Page","title","HomeComponent","ProjectsComponent","project","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","err","getShim","ReactPropTypes","bool","func","number","symbol","any","arrayOf","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","checkPropTypes","PropTypes","for","f","q","u","typeOf","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isValidElementType","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","home_1","components_1","CodeFromUrlComponent","RenderFromUrlComponent_1","RenderFromUrlComponent","CodeFromUrlComponent_1","axios_observable_1","setContent","useState","useEffect","subscribe","dangerouslySetInnerHTML","__html","mergeConfig","createInstance","defaultConfig","axios","instanceConfig","CancelToken","isCancel","all","promises","spread","InterceptorManager","dispatchRequest","chain","interceptor","fulfilled","rejected","shift","getUri","use","eject","id","transformData","throwIfCancellationRequested","throwIfRequested","reason","fns","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","nextTick","browser","env","argv","version","versions","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","umask","normalizedName","isAxiosError","description","fileName","lineNumber","columnNumber","stack","isAbsoluteURL","combineURLs","requestedURL","relativeURL","ignoreDuplicateOf","line","originURL","msie","urlParsingNode","resolveURL","setAttribute","protocol","host","hostname","port","requestURL","expires","domain","secure","cookie","toGMTString","decodeURIComponent","remove","now","executor","resolvePromise","rxjs_1","promiseFactory","_i","cancelSource","hasCancelToken","observable","Observable","subscriber","complete","_subscribe","args2","subscription","_unsubscribe","unsubscribe","keywords","asString","lines","index_1","LinqLike_1","projectGroups","groupBy","items","main_1","Const","Renderer_1","Mandelbrot_1","Julia_1","common_1","ClickDragWrapper_1","mandelRender","juliaRender","mandelbrotSelect","renderer","Julia","reset","Tick","requestAnimationFrame","subCanvas","ClickDragWrapper","Renderer","Mandelbrot","ProgressiveRepaint_1","MAX_DEPTH","PAINT_PER_TICK","paintColor","repainter","ProgressiveRepaint","getContext","screenRange","offsetWidth","offsetHeight","windowRange","finished","X","Y","Scale","worldCoords","fillStyle","CalcColor","fillRect","Advance","coords","original","rolling","iter","AbsSq","MaxAbsSq","Iterate","perc","ToColor","Reset","xRange","yRange","xPercent","yPercent","xValue","yValue","xAmt","yAmt","Shift","xShift","yShift","ShiftByPercentage","percent","xAnchor","yAnchor","intermediate","rMin","rMax","gMin","gMax","bMin","bMax","rRange","gRange","bRange","real","imaginary","tmpReal","power","rs","theta","atan2","cos","sin","canvasWidth","canvasHeight","scale","maxScale","fastLog2","MultiplyWith","AddWith","radius","Abs","SCROLL_DIV","SCROLL_POW","MAX_ZOOM_WIDTH","MIN_WINDOW","MAX_WINDOW","control","paintWindow","onSelect","handleMouseDown","handleMouseUp","handleMouseLeave","handleMouseMove","handleScroll","screenBounds","ResetPaint","grabX","offsetX","grabY","offsetY","isGrabbed","buttons","dx","dy","assertBounds","scalePercentage","deltaY","scalePerc","AspectScale","assertRangeBounds","Paint","tile_blend_test_1_1","AssetLoader_1","SpriteSheet_1","RockLavaAllBlends_crop_png_1","Selectors16x16_png_1","Terrain_1","Direction_1","tiles","selectors","pvMousePos","terrain","SCALE_FACTOR","assetLoadDone","Terrain","terr","sprites","RenderTerrainCell","RenderTerrain","onMouseMove","onMouseLeave","onMouseClick","spriteSheetX","getSubTileId","spriteSheetY","getTile","TileType","Lava","rtx","rty","ev","mouseCoords","Equals","tile","setTile","Rock","assetLoader","registerAssetLoadCallback","onAllFinished","subTileIds","updateTile","fixCoords","fixSubCoords","updateSelfAndAdjacent","tid","adjacency","adjMask","pt","spell_test_1","arrows_png_1","SpellGroup_1","SpellStep_1","handledKeys","PrintSpell","spell","arrows","steps","drawParens","renderCustom","selfSteps","sort","Parse","SpellStep","FirstSteps","currentSteps","pressedArrow","lastLength","step","ArrowHere","NextSteps","clearRect","AdvanceAndPrint","Start","parentNextSteps","firsts","stepInto","stepOver","rpgt_1","display","rpg1_png_1","wizard16_png_1","NearestNeighborScalingHelper_1","World_1","Cell_1","Rectangle_1","KeyboardManager_1","FileResource_1","CAMERA_SLOWDOWN_FACTOR","assets","world","RockWall","GrassFloor","updatePrerender","tick","save","cx","cy","playerPos","camPos","MultWith","DivideWith","translate","prerender","update","w","vel","isKeyDown","globalAlpha","tryMoveEntity","toggle","restore","wizard","tilesets","FileResource","Iterate_1","generateCell","cells","col","pctx","paint","onChecked","xDirection","yDirection","startXTile","Edge","endXTile","startYTile","endYTile","xColision","IterateRange","ctrl","break","pathable","yColision","handle","breakIteration","loopControl","finalValue","SheetGraphic_1","GRASS_TILES","Cell","graphic","sheet","grassCoords","tileX","tileY","Rect","xp","KeyWatcher_1","logKeyNames","watcher","prvState","currentState","Update","isKeyUp","changes","KeyState_1","attachedElement","onKeyDown","onKeyUp","downKeys","change","idx","storeKeys","storeChanges","fileUrl","dndmech_1","useWindowSize_1","ForceResizeCheck","flexGrow","ImageLoader_1","MechIndicators_png_1","MechSymbols_png_1","Symbol_1","Coords_1","baseImg","symbolSheet","symbols","scaleHelper","FULL_W","FULL_H","repaint","mouseEvent","px","py","sym","Toggle","Draw","symdef","SYMBOL_LOC","def","imageUrl","onLoad","definition","currentXCoord","SpriteStartXCoord","SpriteEndXCoord","SymbolDefinitions_1","SymbolRow","count","results","SymbolBlock","types","xn","armor","fullHealth","partHealth","critHealth","react_1","isClient","getSize","windowSize","setWindowSize","handleResize","signalR","super","inputText","hubConnection","HubConnectionBuilder","configureLogging","withUrl","build","connection","msg","onMessageRecieved","stop","onChange","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","distinct","keySelector","PageComponent","extendStatics","setPrototypeOf","__","_enable_super_gross_mode_that_will_cause_bad_things","hostReportError","empty","closed","useDeprecatedSynchronousErrorHandling","UnsubscriptionErrorImpl","errors","Subscription_Subscription","Subscription","_parentOrParents","_subscriptions","UnsubscriptionError","flattenUnsubscriptionErrors","add","teardown","EMPTY","subscriptions","subscriptionIndex","errs","rxSubscriber","Subscriber_Subscriber","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","Subscriber_SafeSubscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","canReportError","closed_1","identity","pipeFromArray","prev","Observable_Observable","_isScalar","lift","operator","sink","nextOrObserver","toSubscriber","_trySubscribe","promiseCtor","getPromiseCtor","observable_observable","operations","toPromise","ObjectUnsubscribedErrorImpl","SubjectSubscription_SubjectSubscription","subscriberIndex","Subject_SubjectSubscriber","SubjectSubscriber","Subject_Subject","Subject","hasError","Subject_AnonymousSubject","ObjectUnsubscribedError","thrownError","asObservable","AnonymousSubject","RefCountOperator","connectable","_refCount","refCounter","refCount_RefCountSubscriber","connect","RefCountSubscriber","refCount","sharedConnection","_connection","ConnectableObservable_ConnectableObservable","ConnectableObservable","subjectFactory","getSubject","_subject","_isComplete","ConnectableObservable_ConnectableSubscriber","ConnectableSubscriber","groupBy_GroupedObservable","GroupedObservable","groupSubject","refCountSubscription","groupBy_InnerRefCountSubscription","InnerRefCountSubscription","attemptedToUnsubscribe","BehaviorSubject_BehaviorSubject","BehaviorSubject","_value","AsyncAction_AsyncAction","AsyncAction","scheduler","work","schedule","delay","recycleAsyncId","pending","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","Action","QueueAction_QueueAction","QueueAction","Scheduler","SchedulerAction","AsyncScheduler_AsyncScheduler","AsyncScheduler","delegate","active","scheduled","QueueScheduler","empty_empty","emptyScheduled","isScheduler","NotificationKind","subscribeToArray","scheduleArray","fromArray","of","throwError","dispatch","Notification_Notification","Notification","kind","hasValue","observe","do","accept","toObservable","createNext","undefinedValueNotification","createComplete","completeNotification","ObserveOnSubscriber","notification","scheduleMessage","ObserveOnMessage","ReplaySubject_ReplaySubject","ReplaySubject","bufferSize","windowTime","POSITIVE_INFINITY","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextTimeWindow","nextInfiniteTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","observeOn_ObserveOnSubscriber","spliceCount","eventsCount","time","AsyncSubject_AsyncSubject","AsyncSubject","hasNext","hasCompleted","nextHandle","RESOLVED","activeHandles","findAndClearHandle","Immediate","cb","AsapAction_AsapAction","AsapAction","AsapScheduler","AnimationFrameAction_AnimationFrameAction","AnimationFrameAction","cancelAnimationFrame","AnimationFrameScheduler","VirtualTimeScheduler_VirtualTimeScheduler","VirtualTimeScheduler","maxFrames","VirtualTimeScheduler_VirtualAction","frame","frameTimeFactor","VirtualAction","sortActions","isObservable","ArgumentOutOfRangeErrorImpl","EmptyErrorImpl","TimeoutErrorImpl","MapOperator","map_MapSubscriber","MapSubscriber","bindCallback","callbackFunc","resultSelector","bindCallback_dispatch","innerArgs","dispatchNext","bindNodeCallback","bindNodeCallback_dispatch","bindNodeCallback_dispatchError","bindNodeCallback_dispatchNext","OuterSubscriber_OuterSubscriber","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","InnerSubscriber_InnerSubscriber","InnerSubscriber","getSymbolIterator","iterator","iterator_iterator","isPromise","subscribeTo","obs","isArrayLike","iterable","done","return","subscribeToResult","outerSubscriber","innerSubscriber","NONE","combineLatest","observables","CombineLatestOperator","combineLatest_CombineLatestSubscriber","CombineLatestSubscriber","toRespond","unused","oldVal","_tryResultSelector","isInteropObservable","scheduleObservable","schedulePromise","isIterable","scheduleIterable","MergeMapOperator","concurrent","mergeMap_MergeMapSubscriber","MergeMapSubscriber","_tryNext","_innerSub","ish","innerSubscription","mergeAll","mergeMap","ii","concatAll","defer","observableFactory","forkJoin","sources","first_1","forkJoinInternal","resultSelector_1","completed","_loop_1","emitted","fromEvent","eventName","setupSubscription","sourceObj","isEventTarget","source_1","isJQueryStyleEventEmitter","source_2","isNodeStyleEventEmitter","source_3","fromEventPattern","addHandler","removeHandler","retValue","generate","initialStateOrOptions","iterate","resultSelectorOrObservable","initialState","generate_dispatch","conditionResult","needIterate","iif","trueResult","falseResult","isNumeric","parseFloat","interval","period","async_async","interval_dispatch","counter","NEVER","never","onErrorResumeNext","first","remainder","subNext","pairs","pairs_dispatch","not","pred","notPred","predicate","FilterOperator","filter_FilterSubscriber","FilterSubscriber","partition","race","RaceOperator","race_RaceSubscriber","RaceSubscriber","hasFirst","range_dispatch","current","timer","dueTime","periodOrScheduler","due","timer_dispatch","using","resourceFactory","resource","zip","ZipOperator","zip_ZipSubscriber","ZipSubscriber","iterators","zip_StaticArrayIterator","StaticIterator","zip_ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","_tryresultSelector","nextResult","StaticArrayIterator","ZipBufferIterator","isComplete","asap","animationFrame","ArgumentOutOfRangeError","EmptyError","MessageType","XhrHttpClient_XhrHttpClient","XhrHttpClient","Errors","xhr","header","ILogger","DefaultHttpClient_DefaultHttpClient","DefaultHttpClient","DefaultHttpClient_extends","HubConnectionState","Utils","DEFAULT_TIMEOUT_IN_MS","DEFAULT_PING_INTERVAL_IN_MS","HttpTransportType","TransferFormat","HubConnection_HubConnection","HubConnection","reconnectPolicy","serverTimeoutInMilliseconds","keepAliveIntervalInMilliseconds","handshakeProtocol","onreceive","processIncomingData","onclose","connectionClosed","callbacks","methods","closedCallbacks","reconnectingCallbacks","reconnectedCallbacks","invocationId","receivedHandshakeResponse","connectionState","Disconnected","connectionStarted","cachedPingMessage","writeMessage","Ping","connectionId","baseUrl","Reconnecting","startPromise","startWithStateTransitions","Connecting","Debug","startInternal","Connected","e_1","stopDuringStartError","handshakePromise","handshakeResolver","handshakeRejecter","transferFormat","cleanupTimeout","resetTimeoutPeriod","resetKeepAliveInterval","e_2","cleanupPingTimer","stopPromise","stopInternal","Disconnecting","reconnectDelayHandle","completeClose","stream","promiseQueue","replaceStreamingParams","streams","streamIds","invocationDescriptor","createStreamInvocation","cancelInvocation","createCancelInvocation","sendWithProtocol","invocationEvent","Completion","launchStreams","sendPromise","createInvocation","invoke","newMethod","removeIdx","onreconnecting","onreconnected","processHandshakeResponse","messages_1","parseMessages","Invocation","invokeClientMethod","StreamItem","Close","allowReconnect","responseMessage","pingServerHandle","__awaiter","features","inherentKeepAlive","timeoutHandle","serverTimeout","invocationMessage","cancelCallbacksWithError","reconnect","reconnectStartTime","previousReconnectAttempts","retryError","nextRetryDelay","getNextRetryDelay","e_4","previousRetryCount","elapsedMilliseconds","retryReason","nextRetryDelayInMilliseconds","nonblocking","streamId","createCompletionMessage","createStreamItemMessage","argument","StreamInvocation","CancelInvocation","DEFAULT_RETRY_DELAYS_IN_MILLISECONDS","DefaultReconnectPolicy","retryDelays","retryContext","AbortController","isAborted","LongPollingTransport_LongPollingTransport","LongPollingTransport","pollAbort","running","Binary","pollOptions","signal","getAccessToken","updateHeaderToken","pollUrl","closeError","receiving","poll","pollAborted","raiseOnClose","deleteOptions","logMessage","ServerSentEventsTransport_ServerSentEventsTransport","ServerSentEventsTransport","eventSourceConstructor","opened","Text","eventSource","Cookie","onmessage","close","onopen","WebSocketTransport_WebSocketTransport","WebSocketTransport","webSocketConstructor","webSocket","isNode","binaryType","_event","ErrorEvent","OPEN","wasClean","WebSocketModule","EventSourceModule","HttpConnection_HttpConnection","HttpConnection","negotiateVersion","resolveUrl","WebSocket","EventSource","startInternalPromise","sendQueue","TransportSendQueue","transport","stopPromiseResolver","stopError","stopConnection","skipNegotiation","WebSockets","constructTransport","startTransport","negotiateResponse","redirects","this_1","getNegotiationResponse","ProtocolVersion","accessToken","accessToken_1","createTransport","e_3","negotiateUrl","resolveNegotiateUrl","connectionToken","createConnectUrl","requestedTransport","requestedTransferFormat","connectUrl","isITransport","transportExceptions","transports","availableTransports","negotiate","transports_1","endpoint","transportOrError","resolveTransportOrError","ex_1","ex_2","ServerSentEvents","LongPolling","actualTransport","transportMatches","transferFormats","aTag","executing","sendBufferedData","PromiseSource","transportResult","sendLoopPromise","sendLoop","bufferData","concatBuffers","error_1","arrayBuffers","totalLength","arrayBuffers_1","resolver","rejecter","JSON_HUB_PROTOCOL_NAME","JsonHubProtocol_JsonHubProtocol","JsonHubProtocol","Loggers","hubMessages","parsedMessage","isInvocationMessage","isStreamItemMessage","isCompletionMessage","assertNotEmptyString","LogLevelNameMapping","trace","debug","information","warning","critical","none","HubConnectionBuilder_HubConnectionBuilder","logging","mapping","parseLogLevel","transportTypeOrOptions","httpConnectionOptions","withHubProtocol","withAutomaticReconnect","retryDelaysOrReconnectPolicy","VERSION"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 44);\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport enum LogLevel {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    Trace = 0,\r\n    /** Log level for low severity diagnostic messages. */\r\n    Debug = 1,\r\n    /** Log level for informational diagnostic messages. */\r\n    Information = 2,\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    Warning = 3,\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    Error = 4,\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    Critical = 5,\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    None = 6,\r\n}\r\n\r\n/** An abstraction that provides a sink for diagnostic messages. */\r\nexport interface ILogger {\r\n    /** Called by the framework to emit a diagnostic message.\r\n     *\r\n     * @param {LogLevel} logLevel The severity level of the message.\r\n     * @param {string} message The message.\r\n     */\r\n    log(logLevel: LogLevel, message: string): void;\r\n}\r\n","module.exports = React;","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\n\r\n/** @private */\r\nexport class Arg {\r\n    public static isRequired(val: any, name: string): void {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n\r\n    public static isIn(val: any, values: any, name: string): void {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class Platform {\r\n\r\n    public static get isBrowser(): boolean {\r\n        return typeof window === \"object\";\r\n    }\r\n\r\n    public static get isWebWorker(): boolean {\r\n        return typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n\r\n    public static get isNode(): boolean {\r\n        return !this.isBrowser && !this.isWebWorker;\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getDataDetail(data: any, includeContent: boolean): string {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    } else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n\r\n/** @private */\r\nexport function formatArrayBuffer(data: ArrayBuffer): string {\r\n    const view = new Uint8Array(data);\r\n\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n\r\n/** @private */\r\nexport async function sendMessage(logger: ILogger, transportName: string, httpClient: HttpClient, url: string, accessTokenFactory: (() => string | Promise<string>) | undefined, content: string | ArrayBuffer, logMessageContent: boolean): Promise<void> {\r\n    let headers;\r\n    if (accessTokenFactory) {\r\n        const token = await accessTokenFactory();\r\n        if (token) {\r\n            headers = {\r\n                [\"Authorization\"]: `Bearer ${token}`,\r\n            };\r\n        }\r\n    }\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, logMessageContent)}.`);\r\n\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers,\r\n        responseType,\r\n    });\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n\r\n/** @private */\r\nexport function createLogger(logger?: ILogger | LogLevel) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n\r\n    if ((logger as ILogger).log) {\r\n        return logger as ILogger;\r\n    }\r\n\r\n    return new ConsoleLogger(logger as LogLevel);\r\n}\r\n\r\n/** @private */\r\nexport class SubjectSubscription<T> implements ISubscription<T> {\r\n    private subject: Subject<T>;\r\n    private observer: IStreamSubscriber<T>;\r\n\r\n    constructor(subject: Subject<T>, observer: IStreamSubscriber<T>) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n\r\n    public dispose(): void {\r\n        const index: number = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n\r\n        if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\r\n            this.subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class ConsoleLogger implements ILogger {\r\n    private readonly minimumLogLevel: LogLevel;\r\n\r\n    // Public for testing purposes.\r\n    public outputConsole: {\r\n        error(message: any): void,\r\n        warn(message: any): void,\r\n        info(message: any): void,\r\n        log(message: any): void,\r\n    };\r\n\r\n    constructor(minimumLogLevel: LogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n        this.outputConsole = console;\r\n    }\r\n\r\n    public log(logLevel: LogLevel, message: string): void {\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.outputConsole.error(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.outputConsole.warn(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.outputConsole.info(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.outputConsole.log(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** The HTTP status code represented by this error. */\r\n    public statusCode: number;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage: string, statusCode: number) {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        this.statusCode = statusCode;\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortSignal } from \"./AbortController\";\r\n\r\n/** Represents an HTTP request. */\r\nexport interface HttpRequest {\r\n    /** The HTTP method to use for the request. */\r\n    method?: string;\r\n\r\n    /** The URL for the request. */\r\n    url?: string;\r\n\r\n    /** The body content for the request. May be a string or an ArrayBuffer (for binary data). */\r\n    content?: string | ArrayBuffer;\r\n\r\n    /** An object describing headers to apply to the request. */\r\n    headers?: { [key: string]: string };\r\n\r\n    /** The XMLHttpRequestResponseType to apply to the request. */\r\n    responseType?: XMLHttpRequestResponseType;\r\n\r\n    /** An AbortSignal that can be monitored for cancellation. */\r\n    abortSignal?: AbortSignal;\r\n\r\n    /** The time to wait for the request to complete before throwing a TimeoutError. Measured in milliseconds. */\r\n    timeout?: number;\r\n}\r\n\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     */\r\n    constructor(statusCode: number);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code and message.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and string content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: ArrayBuffer);\r\n    constructor(\r\n        public readonly statusCode: number,\r\n        public readonly statusText?: string,\r\n        public readonly content?: string | ArrayBuffer) {\r\n    }\r\n}\r\n\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport abstract class HttpClient {\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public get(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public post(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public delete(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP request to the specified URL, returning a {@link Promise} that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {HttpRequest} request An {@link @microsoft/signalr.HttpRequest} describing the request to send.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an HttpResponse describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public abstract send(request: HttpRequest): Promise<HttpResponse>;\r\n\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    public getCookieString(url: string): string {\r\n        return \"\";\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger implements ILogger {\r\n    /** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\n    public static instance: ILogger = new NullLogger();\r\n\r\n    private constructor() {}\r\n\r\n    /** @inheritDoc */\r\n    // tslint:disable-next-line\r\n    public log(_logLevel: LogLevel, _message: string): void {\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    public static RecordSeparatorCode = 0x1e;\r\n    public static RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n\r\n    public static write(output: string): string {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n\r\n    public static parse(input: string): string[] {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\n","export function ResizeCanvas(canvas: HTMLCanvasElement, tgtWidth: number, tgtHeight: number) {\r\n    canvas.width = tgtWidth;\r\n    canvas.height = tgtHeight;\r\n    canvas.style.width = tgtWidth + 'px';\r\n    canvas.style.height = tgtHeight + 'px';\r\n}\r\n\r\nexport function NearestNeighborScaling(ctx: CanvasRenderingContext2D) {\r\n    ctx.imageSmoothingEnabled = false;\r\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","export default class AssetLoader {\r\n    waitingAssetCount: number;\r\n    loadedAssetCount: number;\r\n    boundCallback: undefined|(() => void);\r\n\r\n    constructor() {\r\n        this.waitingAssetCount = 0;\r\n        this.loadedAssetCount = 0;\r\n        this.boundCallback = undefined;\r\n    }\r\n\r\n    onAllFinished(act: () => void) {\r\n        this.boundCallback = act;\r\n        if (this.waitingAssetCount > 0 && this.waitingAssetCount === this.loadedAssetCount) {\r\n            this.boundCallback();\r\n        }\r\n    }\r\n\r\n    registerAssetLoadCallback(): (() => void) {\r\n        this.waitingAssetCount++;\r\n        return () => {\r\n            this.loadedAssetCount++;\r\n            if (this.waitingAssetCount === this.loadedAssetCount && this.boundCallback !== undefined) {\r\n                this.boundCallback();\r\n            }\r\n        };\r\n    }\r\n}","export class SpriteSheet {\r\n    public image: HTMLImageElement;\r\n    public tilesWide: number;\r\n    public tilesHigh: number;\r\n    constructor(public spriteWidth: number, public spriteHeight: number, spriteUrl: string, private onload: () => void) {\r\n        this.image = document.createElement('img');\r\n        this.image.src = '/dist/' + spriteUrl;\r\n        this.image.addEventListener('load', () => this.loadFinished());\r\n    }\r\n\r\n    private loadFinished() {\r\n        this.tilesWide = this.image.width / this.spriteWidth;\r\n        this.tilesHigh = this.image.height / this.spriteHeight;\r\n        this.onload();\r\n    }\r\n\r\n    private isTuple(v: number|{x: number, y: number}): v is {x: number, y: number} {\r\n        return (v as any).y !== undefined;\r\n    }\r\n\r\n    render(ctx: CanvasRenderingContext2D, tx: number, ty: number, tw: number, th: number, srcx: number, srcy: number): void;\r\n    render(ctx: CanvasRenderingContext2D, tx: number, ty: number, tw: number, th: number, srcx: {x: number, y: number}): void;\r\n    render(ctx: CanvasRenderingContext2D, tx: number, ty: number, tw: number, th: number, srcx: number|{x: number, y: number}, srcy?: number): void {\r\n        const sx = this.isTuple(srcx) ? srcx.x : srcx;\r\n        const sy = this.isTuple(srcx) ? srcx.y : srcy;\r\n        ctx.drawImage(\r\n            this.image,\r\n            sx * this.spriteWidth,\r\n            sy * this.spriteHeight,\r\n            this.spriteWidth,\r\n            this.spriteHeight,\r\n            tx,\r\n            ty,\r\n            tw,\r\n            th\r\n        );\r\n    }\r\n\r\n    renderCustom(ctx: CanvasRenderingContext2D, tx: number, ty: number, tw: number, th: number, srcx: number, srcy: number, twid: number, thei: number) {\r\n        const sx = srcx * twid;\r\n        const sy = srcy * thei;\r\n        ctx.drawImage(\r\n            this.image,\r\n            sx,\r\n            sy,\r\n            twid,\r\n            thei,\r\n            tx,\r\n            ty,\r\n            tw,\r\n            th\r\n        );\r\n    }\r\n}","import Point from './Point';\r\n\r\nexport enum Direction {\r\n    Up = 0,\r\n    UpRight,\r\n    Right,\r\n    DownRight,\r\n    Down,\r\n    DownLeft,\r\n    Left,\r\n    UpLeft,\r\n}\r\n\r\nexport type ECardinalDirection = Direction.Up | Direction.Right | Direction.Down | Direction.Left;\r\nexport type EDiagonalDirection = Direction.UpRight | Direction.DownRight | Direction.DownLeft | Direction.UpLeft;\r\n\r\nexport const directionValues: Point[] = [\r\n    new Point(0, -1),\r\n    new Point(1, -1),\r\n    new Point(1, 0),\r\n    new Point(1, 1),\r\n    new Point(0, 1),\r\n    new Point(-1, 1),\r\n    new Point(-1, 0),\r\n    new Point(-1, -1),\r\n];\r\n\r\nexport const allDirections: Direction[] = [\r\n    Direction.Up,\r\n    Direction.UpRight,\r\n    Direction.Right,\r\n    Direction.DownRight,\r\n    Direction.Down,\r\n    Direction.DownLeft,\r\n    Direction.Left,\r\n    Direction.UpLeft,\r\n];\r\nexport const cardinalDirections: Direction[] = [\r\n    Direction.Up,\r\n    Direction.Right,\r\n    Direction.Down,\r\n    Direction.Left\r\n];\r\nexport const diagonalDirections: Direction[] = [\r\n    Direction.UpRight,\r\n    Direction.DownRight,\r\n    Direction.DownLeft,\r\n    Direction.UpLeft,\r\n];\r\n\r\nexport function ToPoint(direction: Direction): Point {\r\n    return directionValues[direction];\r\n}","export default class Point {\r\n    constructor(public x: number, public y: number) {\r\n\r\n    }\r\n\r\n    public LengthSq(): number {\r\n        return Point.Dot(this, this);\r\n    }\r\n\r\n    public Length(): number {\r\n        return Math.sqrt(this.LengthSq());\r\n    }\r\n\r\n    public Clone(): Point {\r\n        return new Point(this.x, this.y);\r\n    }\r\n\r\n    public Negate(): Point {\r\n        return new Point(-this.x, -this.y);\r\n    }\r\n\r\n    public NegateInPlace(): this {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        return this;\r\n    }\r\n\r\n    public static Dot(p1: Point, p2: Point): number {\r\n        return p1.x * p2.x + p1.y * p2.y;\r\n    }\r\n\r\n    public DotWith(other: Point): number {\r\n        return Point.Dot(this, other);\r\n    }\r\n\r\n    public AddWith(x: number, y: number): this;\r\n    public AddWith(other: Point): this;\r\n    public AddWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x += nx;\r\n        this.y += ny;\r\n        return this;\r\n    }\r\n\r\n    public MultWith(x: number, y: number): this;\r\n    public MultWith(other: Point): this;\r\n    public MultWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x *= nx;\r\n        this.y *= ny;\r\n        return this;\r\n    }\r\n\r\n    public SubtractWith(x: number, y: number): this;\r\n    public SubtractWith(other: Point): this;\r\n    public SubtractWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x -= nx;\r\n        this.y -= ny;\r\n        return this;\r\n    }\r\n\r\n    public DivideWith(x: number, y: number): this;\r\n    public DivideWith(other: Point): this;\r\n    public DivideWith(other: number|Point, y?: number): this {\r\n        const nx = y === undefined ? (other as Point).x : other as number;\r\n        const ny = y === undefined ? (other as Point).y : y;\r\n        this.x /= nx;\r\n        this.y /= ny;\r\n        return this;\r\n    }\r\n\r\n    public Equals(other: Point): boolean {\r\n        return this.x === other.x && this.y === other.y;\r\n    }\r\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar axios_1 = require(\"axios\");\nvar create_observable_1 = require(\"./create-observable\");\nvar Axios = /** @class */ (function () {\n    function Axios(axiosInstance) {\n        this.axiosInstance = axiosInstance;\n    }\n    Object.defineProperty(Axios.prototype, \"defaults\", {\n        get: function () {\n            return this.axiosInstance.defaults;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Axios.prototype, \"interceptors\", {\n        get: function () {\n            return this.axiosInstance.interceptors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Axios.request = function (config) {\n        return create_observable_1.createObservable(axios_1.default.request, config);\n    };\n    Axios.get = function (url, config) {\n        return create_observable_1.createObservable(axios_1.default.get, url, config);\n    };\n    Axios.post = function (url, data, config) {\n        return create_observable_1.createObservable(axios_1.default.post, url, data, config);\n    };\n    Axios.put = function (url, data, config) {\n        return create_observable_1.createObservable(axios_1.default.put, url, data, config);\n    };\n    Axios.patch = function (url, data, config) {\n        return create_observable_1.createObservable(axios_1.default.patch, url, data, config);\n    };\n    Axios.delete = function (url, config) {\n        return create_observable_1.createObservable(axios_1.default.delete, url, config);\n    };\n    Axios.head = function (url, config) {\n        return create_observable_1.createObservable(axios_1.default.head, url, config);\n    };\n    Axios.create = function (config) {\n        return new Axios(axios_1.default.create(config));\n    };\n    Axios.prototype.request = function (config) {\n        return create_observable_1.createObservable(this.axiosInstance.request, config);\n    };\n    Axios.prototype.get = function (url, config) {\n        return create_observable_1.createObservable(this.axiosInstance.get, url, config);\n    };\n    Axios.prototype.head = function (url, config) {\n        return create_observable_1.createObservable(this.axiosInstance.head, url, config);\n    };\n    Axios.prototype.post = function (url, data, config) {\n        return create_observable_1.createObservable(this.axiosInstance.post, url, data, config);\n    };\n    Axios.prototype.put = function (url, data, config) {\n        return create_observable_1.createObservable(this.axiosInstance.put, url, data, config);\n    };\n    Axios.prototype.patch = function (url, data, config) {\n        return create_observable_1.createObservable(this.axiosInstance.patch, url, data, config);\n    };\n    Axios.prototype.delete = function (url, config) {\n        return create_observable_1.createObservable(this.axiosInstance.delete, url, config);\n    };\n    Axios.defaults = axios_1.default.defaults;\n    Axios.interceptors = axios_1.default.interceptors;\n    return Axios;\n}());\nexports.Axios = Axios;\nexports.default = Axios;\n","export { Range } from './Range';\r\nexport { Range2d } from './Range2d';\r\nexport { ColorRange } from './ColorRange';\r\nexport { Complex } from './Complex';","export enum EArrow {\r\n    Up = 0,\r\n    Right = 1,\r\n    Down = 2,\r\n    Left = 3,\r\n    UpDown = 4,\r\n    LeftRight = 5,\r\n    Any,\r\n    Stop\r\n}\r\n\r\nexport function Matches(arr: EArrow, pattern: EArrow): boolean {\r\n    if (pattern === EArrow.Any) return true;\r\n    if (pattern === EArrow.Stop) return arr === EArrow.Stop;\r\n    if (arr === pattern) return true;\r\n    if (pattern >= 4 && arr <= 3) return (arr % 2) === (pattern % 2);\r\n    return false;\r\n}\r\n\r\nexport enum ERepeat {\r\n    None,\r\n    Optional,\r\n    Repeatable\r\n}","export const TILES_WIDE = 28;\r\nexport const TILES_HIGH = 28;\r\nexport const TILE_SIZE = 16;","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n\n  var toParts = (to && to.split('/')) || [];\n  var fromParts = (from && from.split('/')) || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');\n\n  if (\n    mustEndAbs &&\n    fromParts[0] !== '' &&\n    (!fromParts[0] || !isAbsolute(fromParts[0]))\n  )\n    fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\nexport default resolvePathname;\n","function valueOf(obj) {\n  return obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj);\n}\n\nfunction valueEqual(a, b) {\n  // Test for strict equality first.\n  if (a === b) return true;\n\n  // Otherwise, if either of them == null they are not equal.\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return (\n      Array.isArray(b) &&\n      a.length === b.length &&\n      a.every(function(item, index) {\n        return valueEqual(item, b[index]);\n      })\n    );\n  }\n\n  if (typeof a === 'object' || typeof b === 'object') {\n    var aValue = valueOf(a);\n    var bValue = valueOf(b);\n\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n\n    return Object.keys(Object.assign({}, a, b)).every(function(key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\nexport default valueEqual;\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    throw new Error(prefix + \": \" + (message || ''));\n}\n\nexport default invariant;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction stripHash(url) {\n  var hashIndex = url.indexOf('#');\n  return hashIndex === -1 ? url : url.slice(0, hashIndex);\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(stripHash(window.location.href) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function locationsAreEqual$$1(a, b) {\n    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;\n  }\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    var baseTag = document.querySelector('base');\n    var href = '';\n\n    if (baseTag && baseTag.getAttribute('href')) {\n      href = stripHash(window.location.href);\n    }\n\n    return href + '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import createNamedContext from \"./createNameContext\";\n\nconst historyContext = /*#__PURE__*/ createNamedContext(\"Router-History\");\nexport default historyContext;\n","// TODO: Replace with React.createContext once we can assume React 16+\nimport createContext from \"mini-create-react-context\";\n\nconst createNamedContext = name => {\n  const context = createContext();\n  context.displayName = name;\n\n  return context;\n};\n\nexport default createNamedContext;\n","// TODO: Replace with React.createContext once we can assume React 16+\nimport createContext from \"mini-create-react-context\";\n\nconst createNamedContext = name => {\n  const context = createContext();\n  context.displayName = name;\n\n  return context;\n};\n\nconst context = /*#__PURE__*/ createNamedContext(\"Router\");\nexport default context;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\nimport HistoryContext from \"./HistoryContext.js\";\nimport RouterContext from \"./RouterContext.js\";\n\n/**\n * The public API for putting history on context.\n */\nclass Router extends React.Component {\n  static computeRootMatch(pathname) {\n    return { path: \"/\", url: \"/\", params: {}, isExact: pathname === \"/\" };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      location: props.history.location\n    };\n\n    // This is a bit of a hack. We have to start listening for location\n    // changes here in the constructor in case there are any <Redirect>s\n    // on the initial render. If there are, they will replace/push when\n    // they mount and since cDM fires in children before parents, we may\n    // get a new location before the <Router> is mounted.\n    this._isMounted = false;\n    this._pendingLocation = null;\n\n    if (!props.staticContext) {\n      this.unlisten = props.history.listen(location => {\n        if (this._isMounted) {\n          this.setState({ location });\n        } else {\n          this._pendingLocation = location;\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._pendingLocation) {\n      this.setState({ location: this._pendingLocation });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.unlisten) this.unlisten();\n  }\n\n  render() {\n    return (\n      <RouterContext.Provider\n        value={{\n          history: this.props.history,\n          location: this.state.location,\n          match: Router.computeRootMatch(this.state.location.pathname),\n          staticContext: this.props.staticContext\n        }}\n      >\n        <HistoryContext.Provider\n          children={this.props.children || null}\n          value={this.props.history}\n        />\n      </RouterContext.Provider>\n    );\n  }\n}\n\nif (__DEV__) {\n  Router.propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.object.isRequired,\n    staticContext: PropTypes.object\n  };\n\n  Router.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      prevProps.history === this.props.history,\n      \"You cannot change <Router history>\"\n    );\n  };\n}\n\nexport default Router;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createMemoryHistory as createHistory } from \"history\";\nimport warning from \"tiny-warning\";\n\nimport Router from \"./Router.js\";\n\n/**\n * The public API for a <Router> that stores location in memory.\n */\nclass MemoryRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  MemoryRouter.propTypes = {\n    initialEntries: PropTypes.array,\n    initialIndex: PropTypes.number,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number,\n    children: PropTypes.node\n  };\n\n  MemoryRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<MemoryRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { MemoryRouter as Router }`.\"\n    );\n  };\n}\n\nexport default MemoryRouter;\n","import React from \"react\";\n\nclass Lifecycle extends React.Component {\n  componentDidMount() {\n    if (this.props.onMount) this.props.onMount.call(this, this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);\n  }\n\n  componentWillUnmount() {\n    if (this.props.onUnmount) this.props.onUnmount.call(this, this);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Lifecycle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\n\nimport Lifecycle from \"./Lifecycle.js\";\nimport RouterContext from \"./RouterContext.js\";\n\n/**\n * The public API for prompting the user before navigating away from a screen.\n */\nfunction Prompt({ message, when = true }) {\n  return (\n    <RouterContext.Consumer>\n      {context => {\n        invariant(context, \"You should not use <Prompt> outside a <Router>\");\n\n        if (!when || context.staticContext) return null;\n\n        const method = context.history.block;\n\n        return (\n          <Lifecycle\n            onMount={self => {\n              self.release = method(message);\n            }}\n            onUpdate={(self, prevProps) => {\n              if (prevProps.message !== message) {\n                self.release();\n                self.release = method(message);\n              }\n            }}\n            onUnmount={self => {\n              self.release();\n            }}\n            message={message}\n          />\n        );\n      }}\n    </RouterContext.Consumer>\n  );\n}\n\nif (__DEV__) {\n  const messageType = PropTypes.oneOfType([PropTypes.func, PropTypes.string]);\n\n  Prompt.propTypes = {\n    when: PropTypes.bool,\n    message: messageType.isRequired\n  };\n}\n\nexport default Prompt;\n","import pathToRegexp from \"path-to-regexp\";\n\nconst cache = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;\n\nfunction compilePath(path) {\n  if (cache[path]) return cache[path];\n\n  const generator = pathToRegexp.compile(path);\n\n  if (cacheCount < cacheLimit) {\n    cache[path] = generator;\n    cacheCount++;\n  }\n\n  return generator;\n}\n\n/**\n * Public API for generating a URL pathname from a path and parameters.\n */\nfunction generatePath(path = \"/\", params = {}) {\n  return path === \"/\" ? path : compilePath(path)(params, { pretty: true });\n}\n\nexport default generatePath;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createLocation, locationsAreEqual } from \"history\";\nimport invariant from \"tiny-invariant\";\n\nimport Lifecycle from \"./Lifecycle.js\";\nimport RouterContext from \"./RouterContext.js\";\nimport generatePath from \"./generatePath.js\";\n\n/**\n * The public API for navigating programmatically with a component.\n */\nfunction Redirect({ computedMatch, to, push = false }) {\n  return (\n    <RouterContext.Consumer>\n      {context => {\n        invariant(context, \"You should not use <Redirect> outside a <Router>\");\n\n        const { history, staticContext } = context;\n\n        const method = push ? history.push : history.replace;\n        const location = createLocation(\n          computedMatch\n            ? typeof to === \"string\"\n              ? generatePath(to, computedMatch.params)\n              : {\n                  ...to,\n                  pathname: generatePath(to.pathname, computedMatch.params)\n                }\n            : to\n        );\n\n        // When rendering in a static context,\n        // set the new location immediately.\n        if (staticContext) {\n          method(location);\n          return null;\n        }\n\n        return (\n          <Lifecycle\n            onMount={() => {\n              method(location);\n            }}\n            onUpdate={(self, prevProps) => {\n              const prevLocation = createLocation(prevProps.to);\n              if (\n                !locationsAreEqual(prevLocation, {\n                  ...location,\n                  key: prevLocation.key\n                })\n              ) {\n                method(location);\n              }\n            }}\n            to={to}\n          />\n        );\n      }}\n    </RouterContext.Consumer>\n  );\n}\n\nif (__DEV__) {\n  Redirect.propTypes = {\n    push: PropTypes.bool,\n    from: PropTypes.string,\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n  };\n}\n\nexport default Redirect;\n","import pathToRegexp from \"path-to-regexp\";\n\nconst cache = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;\n\nfunction compilePath(path, options) {\n  const cacheKey = `${options.end}${options.strict}${options.sensitive}`;\n  const pathCache = cache[cacheKey] || (cache[cacheKey] = {});\n\n  if (pathCache[path]) return pathCache[path];\n\n  const keys = [];\n  const regexp = pathToRegexp(path, keys, options);\n  const result = { regexp, keys };\n\n  if (cacheCount < cacheLimit) {\n    pathCache[path] = result;\n    cacheCount++;\n  }\n\n  return result;\n}\n\n/**\n * Public API for matching a URL pathname to a path.\n */\nfunction matchPath(pathname, options = {}) {\n  if (typeof options === \"string\" || Array.isArray(options)) {\n    options = { path: options };\n  }\n\n  const { path, exact = false, strict = false, sensitive = false } = options;\n\n  const paths = [].concat(path);\n\n  return paths.reduce((matched, path) => {\n    if (!path && path !== \"\") return null;\n    if (matched) return matched;\n\n    const { regexp, keys } = compilePath(path, {\n      end: exact,\n      strict,\n      sensitive\n    });\n    const match = regexp.exec(pathname);\n\n    if (!match) return null;\n\n    const [url, ...values] = match;\n    const isExact = pathname === url;\n\n    if (exact && !isExact) return null;\n\n    return {\n      path, // the path used to match\n      url: path === \"/\" && url === \"\" ? \"/\" : url, // the matched portion of the URL\n      isExact, // whether or not we matched exactly\n      params: keys.reduce((memo, key, index) => {\n        memo[key.name] = values[index];\n        return memo;\n      }, {})\n    };\n  }, null);\n}\n\nexport default matchPath;\n","import React from \"react\";\nimport { isValidElementType } from \"react-is\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport RouterContext from \"./RouterContext.js\";\nimport matchPath from \"./matchPath.js\";\n\nfunction isEmptyChildren(children) {\n  return React.Children.count(children) === 0;\n}\n\nfunction evalChildrenDev(children, props, path) {\n  const value = children(props);\n\n  warning(\n    value !== undefined,\n    \"You returned `undefined` from the `children` function of \" +\n      `<Route${path ? ` path=\"${path}\"` : \"\"}>, but you ` +\n      \"should have returned a React element or `null`\"\n  );\n\n  return value || null;\n}\n\n/**\n * The public API for matching a single path and rendering.\n */\nclass Route extends React.Component {\n  render() {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Route> outside a <Router>\");\n\n          const location = this.props.location || context.location;\n          const match = this.props.computedMatch\n            ? this.props.computedMatch // <Switch> already computed the match for us\n            : this.props.path\n            ? matchPath(location.pathname, this.props)\n            : context.match;\n\n          const props = { ...context, location, match };\n\n          let { children, component, render } = this.props;\n\n          // Preact uses an empty array as children by\n          // default, so use null if that's the case.\n          if (Array.isArray(children) && children.length === 0) {\n            children = null;\n          }\n\n          return (\n            <RouterContext.Provider value={props}>\n              {props.match\n                ? children\n                  ? typeof children === \"function\"\n                    ? __DEV__\n                      ? evalChildrenDev(children, props, this.props.path)\n                      : children(props)\n                    : children\n                  : component\n                  ? React.createElement(component, props)\n                  : render\n                  ? render(props)\n                  : null\n                : typeof children === \"function\"\n                ? __DEV__\n                  ? evalChildrenDev(children, props, this.props.path)\n                  : children(props)\n                : null}\n            </RouterContext.Provider>\n          );\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n}\n\nif (__DEV__) {\n  Route.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n    component: (props, propName) => {\n      if (props[propName] && !isValidElementType(props[propName])) {\n        return new Error(\n          `Invalid prop 'component' supplied to 'Route': the prop is not a valid React component`\n        );\n      }\n    },\n    exact: PropTypes.bool,\n    location: PropTypes.object,\n    path: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string)\n    ]),\n    render: PropTypes.func,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool\n  };\n\n  Route.prototype.componentDidMount = function() {\n    warning(\n      !(\n        this.props.children &&\n        !isEmptyChildren(this.props.children) &&\n        this.props.component\n      ),\n      \"You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored\"\n    );\n\n    warning(\n      !(\n        this.props.children &&\n        !isEmptyChildren(this.props.children) &&\n        this.props.render\n      ),\n      \"You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored\"\n    );\n\n    warning(\n      !(this.props.component && this.props.render),\n      \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\"\n    );\n  };\n\n  Route.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      !(this.props.location && !prevProps.location),\n      '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.'\n    );\n\n    warning(\n      !(!this.props.location && prevProps.location),\n      '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.'\n    );\n  };\n}\n\nexport default Route;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createLocation, createPath } from \"history\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport Router from \"./Router.js\";\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === \"/\" ? path : \"/\" + path;\n}\n\nfunction addBasename(basename, location) {\n  if (!basename) return location;\n\n  return {\n    ...location,\n    pathname: addLeadingSlash(basename) + location.pathname\n  };\n}\n\nfunction stripBasename(basename, location) {\n  if (!basename) return location;\n\n  const base = addLeadingSlash(basename);\n\n  if (location.pathname.indexOf(base) !== 0) return location;\n\n  return {\n    ...location,\n    pathname: location.pathname.substr(base.length)\n  };\n}\n\nfunction createURL(location) {\n  return typeof location === \"string\" ? location : createPath(location);\n}\n\nfunction staticHandler(methodName) {\n  return () => {\n    invariant(false, \"You cannot %s with <StaticRouter>\", methodName);\n  };\n}\n\nfunction noop() {}\n\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */\nclass StaticRouter extends React.Component {\n  navigateTo(location, action) {\n    const { basename = \"\", context = {} } = this.props;\n    context.action = action;\n    context.location = addBasename(basename, createLocation(location));\n    context.url = createURL(context.location);\n  }\n\n  handlePush = location => this.navigateTo(location, \"PUSH\");\n  handleReplace = location => this.navigateTo(location, \"REPLACE\");\n  handleListen = () => noop;\n  handleBlock = () => noop;\n\n  render() {\n    const { basename = \"\", context = {}, location = \"/\", ...rest } = this.props;\n\n    const history = {\n      createHref: path => addLeadingSlash(basename + createURL(path)),\n      action: \"POP\",\n      location: stripBasename(basename, createLocation(location)),\n      push: this.handlePush,\n      replace: this.handleReplace,\n      go: staticHandler(\"go\"),\n      goBack: staticHandler(\"goBack\"),\n      goForward: staticHandler(\"goForward\"),\n      listen: this.handleListen,\n      block: this.handleBlock\n    };\n\n    return <Router {...rest} history={history} staticContext={context} />;\n  }\n}\n\nif (__DEV__) {\n  StaticRouter.propTypes = {\n    basename: PropTypes.string,\n    context: PropTypes.object,\n    location: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n  };\n\n  StaticRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<StaticRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { StaticRouter as Router }`.\"\n    );\n  };\n}\n\nexport default StaticRouter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport RouterContext from \"./RouterContext.js\";\nimport matchPath from \"./matchPath.js\";\n\n/**\n * The public API for rendering the first <Route> that matches.\n */\nclass Switch extends React.Component {\n  render() {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Switch> outside a <Router>\");\n\n          const location = this.props.location || context.location;\n\n          let element, match;\n\n          // We use React.Children.forEach instead of React.Children.toArray().find()\n          // here because toArray adds keys to all child elements and we do not want\n          // to trigger an unmount/remount for two <Route>s that render the same\n          // component at different URLs.\n          React.Children.forEach(this.props.children, child => {\n            if (match == null && React.isValidElement(child)) {\n              element = child;\n\n              const path = child.props.path || child.props.from;\n\n              match = path\n                ? matchPath(location.pathname, { ...child.props, path })\n                : context.match;\n            }\n          });\n\n          return match\n            ? React.cloneElement(element, { location, computedMatch: match })\n            : null;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n}\n\nif (__DEV__) {\n  Switch.propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object\n  };\n\n  Switch.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      !(this.props.location && !prevProps.location),\n      '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.'\n    );\n\n    warning(\n      !(!this.props.location && prevProps.location),\n      '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.'\n    );\n  };\n}\n\nexport default Switch;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistStatics from \"hoist-non-react-statics\";\nimport invariant from \"tiny-invariant\";\n\nimport RouterContext from \"./RouterContext.js\";\n\n/**\n * A public higher-order component to access the imperative API\n */\nfunction withRouter(Component) {\n  const displayName = `withRouter(${Component.displayName || Component.name})`;\n  const C = props => {\n    const { wrappedComponentRef, ...remainingProps } = props;\n\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(\n            context,\n            `You should not use <${displayName} /> outside a <Router>`\n          );\n          return (\n            <Component\n              {...remainingProps}\n              {...context}\n              ref={wrappedComponentRef}\n            />\n          );\n        }}\n      </RouterContext.Consumer>\n    );\n  };\n\n  C.displayName = displayName;\n  C.WrappedComponent = Component;\n\n  if (__DEV__) {\n    C.propTypes = {\n      wrappedComponentRef: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.object\n      ])\n    };\n  }\n\n  return hoistStatics(C, Component);\n}\n\nexport default withRouter;\n","import React from \"react\";\nimport invariant from \"tiny-invariant\";\n\nimport Context from \"./RouterContext.js\";\nimport HistoryContext from \"./HistoryContext.js\";\nimport matchPath from \"./matchPath.js\";\n\nconst useContext = React.useContext;\n\nexport function useHistory() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useHistory()\"\n    );\n  }\n\n  return useContext(HistoryContext);\n}\n\nexport function useLocation() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useLocation()\"\n    );\n  }\n\n  return useContext(Context).location;\n}\n\nexport function useParams() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useParams()\"\n    );\n  }\n\n  const match = useContext(Context).match;\n  return match ? match.params : {};\n}\n\nexport function useRouteMatch(path) {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useRouteMatch()\"\n    );\n  }\n\n  const location = useLocation();\n  const match = useContext(Context).match;\n\n  return path ? matchPath(location.pathname, path) : match;\n}\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const method = replace ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\",\n      activeStyle,\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          const className = isActive\n            ? joinClassnames(classNameProp, activeClassName)\n            : classNameProp;\n          const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.string,\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.object\n  };\n}\n\nexport default NavLink;\n","import React, { Component } from 'react';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823;\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n\nfunction getUniqueId() {\n  var key = '__global_unique_id__';\n  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;\n}\n\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + getUniqueId() + '__';\n\n  var Provider = /*#__PURE__*/function (_Component) {\n    _inheritsLoose(Provider, _Component);\n\n    function Provider() {\n      var _this;\n\n      _this = _Component.apply(this, arguments) || this;\n      _this.emitter = createEventEmitter(_this.props.value);\n      return _this;\n    }\n\n    var _proto = Provider.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0;\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n          if (process.env.NODE_ENV !== 'production') {\n            warning((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    _proto.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = PropTypes.object.isRequired, _Provider$childContex);\n\n  var Consumer = /*#__PURE__*/function (_Component2) {\n    _inheritsLoose(Consumer, _Component2);\n\n    function Consumer() {\n      var _this2;\n\n      _this2 = _Component2.apply(this, arguments) || this;\n      _this2.state = {\n        value: _this2.getValue()\n      };\n\n      _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({\n            value: _this2.getValue()\n          });\n        }\n      };\n\n      return _this2;\n    }\n\n    var _proto2 = Consumer.prototype;\n\n    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n\n      var observedBits = this.props.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    _proto2.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    _proto2.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = PropTypes.object, _Consumer$contextType);\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\nvar index = React.createContext || createReactContext;\n\nexport default index;\n","var isarray = require('isarray')\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","module.exports = require('./lib/axios');","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","\r\nimport { MandelbrotComponent } from './mandelbrot/MandelbrotComponent';\r\nimport { TileBlendTest1Component } from './tile-blend-test-1/TileBlendTest1Component';\r\nimport { SpellTestComponent } from './spell-test/SpellTestComponent';\r\nimport { QTreeConwayComponent } from './qtree-conway/QTreeConwayComponent';\r\nimport { RpgTestComponent } from './rpgt/RpgTest';\r\nimport { DndMechComponent } from './dndmech/DndMechComponent';\r\nimport { SignalrTestComponent } from './signalr-test/SignalrTestComponent';\r\n\r\nexport interface IProject {\r\n    projectName: string;\r\n    projectTitle: string;\r\n    subCategory?: string;\r\n    projectComponent: React.ComponentType<{}>;\r\n}\r\n\r\n// tslint:disable-next-line: variable-name\r\nexport const AllProjects: IProject[] = [\r\n    {\r\n        projectName: 'mandelbrot',\r\n        projectTitle: 'Mandelbrot',\r\n        projectComponent: MandelbrotComponent\r\n    },\r\n\r\n    {\r\n        projectName: 'tile-blend-test-1',\r\n        projectTitle: 'Tile Blending Test 1',\r\n        projectComponent: TileBlendTest1Component\r\n    },\r\n\r\n    {\r\n        projectName: 'spell-test',\r\n        projectTitle: 'Spell Test',\r\n        projectComponent: SpellTestComponent\r\n    },\r\n\r\n    // {\r\n    //     projectName: 'qtree-conway',\r\n    //     projectTitle: 'QTree Conway',\r\n    //     projectComponent: QTreeConwayComponent\r\n    // },\r\n\r\n    {\r\n        projectName: 'rpgt',\r\n        projectTitle: 'Rpg Test',\r\n        projectComponent: RpgTestComponent\r\n    },\r\n\r\n    {\r\n        projectName: 'dndmech',\r\n        projectTitle: 'D&D Mech',\r\n        projectComponent: DndMechComponent\r\n    },\r\n\r\n    {\r\n        projectName: 'signalr-test',\r\n        projectTitle: 'SignalR Test',\r\n        subCategory: 'Test',\r\n        projectComponent: SignalrTestComponent\r\n    }\r\n];","export const CANVAS_WIDTH = 800;\r\nexport const CANVAS_HEIGHT = 800;","export class Range {\r\n    constructor(public min: number, public max: number) { }\r\n\r\n    Length() {\r\n        return this.max - this.min;\r\n    }\r\n\r\n    GetValue(percentage: number) {\r\n        return this.min + (this.max - this.min) * percentage;\r\n    }\r\n\r\n    GetPercentage(point: number) {\r\n        return (point - this.min) / (this.max - this.min);\r\n    }\r\n\r\n    Shift(amt: number) {\r\n        this.min += amt;\r\n        this.max += amt;\r\n    }\r\n\r\n    ShiftByPercentage(percentage: number) {\r\n        const range = this.max - this.min;\r\n        this.min += range * percentage;\r\n        this.max += range * percentage;\r\n    }\r\n\r\n    Scale(percentage: number, anchor = 0.5) {\r\n        this.ScaleTo(this.Length() * percentage, anchor);\r\n    }\r\n\r\n    ScaleTo(targetWidth: number, anchor: number) {\r\n        const range = this.max - this.min;\r\n        const deltaRange = targetWidth - range;\r\n        this.min -= deltaRange * anchor;\r\n        this.max += deltaRange * (1 - anchor);\r\n    }\r\n\r\n    ConvertTo(value: number, targetRange: Range) {\r\n        return targetRange.GetValue(this.GetPercentage(value));\r\n    }\r\n    ConvertFrom(value: number, targetRange: Range) {\r\n        return targetRange.ConvertTo(value, this);\r\n    }\r\n}\r\nexport const unitRange: Range = new Range(0, 1);\r\n(window as any).range = Range;","export default __webpack_public_path__ + \"bbb298f00b41bbd627d27aa0529a20ba.png\";","import { EArrow, ERepeat } from '../EArrow';\r\nimport { ISpellGroupParent } from './SpellGroupParent';\r\n\r\nexport class SpellGroup {\r\n\r\n    content: (EArrow | SpellGroup)[];\r\n    repeatType: ERepeat;\r\n    parent: ISpellGroupParent | undefined;\r\n    gid: number;\r\n\r\n    static Parse(str: string): SpellGroup {\r\n        return new SpellGroup(new GidTracker(), str.split('').reverse(), undefined);\r\n    }\r\n\r\n    constructor(gids: GidTracker, data: EArrow, repeat: ERepeat, parent: ISpellGroupParent | undefined);\r\n    constructor(gids: GidTracker, spellData: string[], parent: ISpellGroupParent | undefined);\r\n    constructor(gids: GidTracker, spellData: string[]|EArrow, repeat: ERepeat|ISpellGroupParent|undefined, parent?: ISpellGroupParent|undefined) {\r\n        this.gid = gids.Increment();\r\n        if ((spellData as any).length === undefined) {\r\n            this.content = [spellData as EArrow];\r\n            this.repeatType = repeat as ERepeat;\r\n            this.parent = parent;\r\n        }\r\n        else {\r\n            spellData = spellData as string[];\r\n            this.repeatType = ERepeat.None;\r\n            this.content = [];\r\n            this.parent = repeat as ISpellGroupParent | undefined;\r\n\r\n            while (spellData.length > 0) {\r\n                const next = spellData.pop();\r\n                switch (next) {\r\n                    // Push an arrow\r\n                    case 'u': this.content.push(EArrow.Up); break;\r\n                    case 'd': this.content.push(EArrow.Down); break;\r\n                    case 'l': this.content.push(EArrow.Left); break;\r\n                    case 'r': this.content.push(EArrow.Right); break;\r\n                    case 'h': this.content.push(EArrow.LeftRight); break;\r\n                    case 'v': this.content.push(EArrow.UpDown); break;\r\n                    case 'a': this.content.push(EArrow.Any); break;\r\n                    case 's': this.content.push(EArrow.Stop); break;\r\n                    // Push a group OR close the group\r\n                    case '(': this.content.push(new SpellGroup(gids, spellData, { parent: this, parentIndex: this.content.length })); break;\r\n                    case ')': return;\r\n                    // append an optional/repeat to the previous group\r\n                    case '?': this.pushToPrevious(gids, ERepeat.Optional); break;\r\n                    case '+': this.pushToPrevious(gids, ERepeat.Repeatable); break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static isArrow(element: EArrow | SpellGroup): element is EArrow {\r\n        return (element as any).content === undefined;\r\n    }\r\n\r\n    private pushToPrevious(gids: GidTracker, rep: ERepeat) {\r\n        if (this.content.length === 0) {\r\n            throw new Error(\"Can't push repeat group: Spell is empty\");\r\n        }\r\n        const lastIndex = this.content.length - 1;\r\n        const lastElement = this.content[lastIndex];\r\n        if (SpellGroup.isArrow(lastElement)) {\r\n            this.content[lastIndex] = new SpellGroup(gids, lastElement, rep, { parent: this, parentIndex: lastIndex });\r\n        }\r\n        else {\r\n            lastElement.repeatType = rep;\r\n        }\r\n    }\r\n}\r\n\r\n// tslint:disable-next-line: max-classes-per-file\r\nclass GidTracker {\r\n    nextGid: number;\r\n    constructor() {\r\n        this.nextGid = 0;\r\n    }\r\n\r\n    Increment(): number {\r\n        return this.nextGid++;\r\n    }\r\n}","import { ResizeCanvas } from './CanvasHelpers';\r\n\r\nexport default class NearestNeighborScalingHelper {\r\n\r\n    public scaleFactor: number;\r\n    constructor(public canvas: HTMLCanvasElement, public context: CanvasRenderingContext2D, public baseWidth: number, public baseHeight: number, private scaleByWindowSize: boolean, public onResize: (() => void)|undefined) {\r\n        this.Rescale();\r\n        if (this.scaleByWindowSize) {\r\n            window.addEventListener('resize', () => this.Rescale());\r\n        }\r\n        else {\r\n            canvas.parentElement.addEventListener('resize', () => this.Rescale());\r\n        }\r\n    }\r\n\r\n    public Rescale() {\r\n        let currentWidth: number;\r\n        let currentHeight: number;\r\n        if (this.scaleByWindowSize) {\r\n            currentWidth = window.innerWidth;\r\n            currentHeight = window.innerHeight;\r\n        }\r\n        else {\r\n            currentWidth = this.canvas.parentElement.clientWidth;\r\n            currentHeight = this.canvas.parentElement.clientHeight;\r\n        }\r\n        const maxXScale = currentWidth / this.baseWidth;\r\n        const maxYScale = currentHeight / this.baseHeight;\r\n\r\n        this.scaleFactor = Math.max(Math.floor(Math.min(maxXScale, maxYScale)), 1);\r\n        ResizeCanvas(this.canvas, this.scaleFactor * this.baseWidth, this.baseHeight * this.scaleFactor);\r\n\r\n        this.context.setTransform(this.scaleFactor, 0, 0, this.scaleFactor, 0, 0);\r\n\r\n        if (this.onResize !== undefined) {\r\n            this.onResize();\r\n        }\r\n    }\r\n}","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// @ts-ignore: This will be removed from built files and is here to make the types available during dev work\r\nimport * as Request from \"@types/request\";\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\nlet requestModule: Request.RequestAPI<Request.Request, Request.CoreOptions, Request.RequiredUriUrl>;\r\nif (typeof XMLHttpRequest === \"undefined\") {\r\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n    // @ts-ignore: TS doesn't know about these names\r\n    const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n    requestModule = requireFunc(\"request\");\r\n}\r\n\r\n/** @private */\r\nexport class NodeHttpClient extends HttpClient {\r\n    private readonly logger: ILogger;\r\n    private readonly request: typeof requestModule;\r\n    private readonly cookieJar: Request.CookieJar;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        if (typeof requestModule === \"undefined\") {\r\n            throw new Error(\"The 'request' module could not be loaded.\");\r\n        }\r\n\r\n        this.logger = logger;\r\n        this.cookieJar = requestModule.jar();\r\n        this.request = requestModule.defaults({ jar: this.cookieJar });\r\n    }\r\n\r\n    public send(httpRequest: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (httpRequest.abortSignal) {\r\n            if (httpRequest.abortSignal.aborted) {\r\n                return Promise.reject(new AbortError());\r\n            }\r\n        }\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n\r\n            let requestBody: Buffer | string;\r\n            if (isArrayBuffer(httpRequest.content)) {\r\n                requestBody = Buffer.from(httpRequest.content);\r\n            } else {\r\n                requestBody = httpRequest.content || \"\";\r\n            }\r\n\r\n            const currentRequest = this.request(httpRequest.url!, {\r\n                body: requestBody,\r\n                // If binary is expected 'null' should be used, otherwise for text 'utf8'\r\n                encoding: httpRequest.responseType === \"arraybuffer\" ? null : \"utf8\",\r\n                headers: {\r\n                    // Tell auth middleware to 401 instead of redirecting\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...httpRequest.headers,\r\n                },\r\n                method: httpRequest.method,\r\n                timeout: httpRequest.timeout,\r\n            },\r\n            (error, response, body) => {\r\n                if (httpRequest.abortSignal) {\r\n                    httpRequest.abortSignal.onabort = null;\r\n                }\r\n\r\n                if (error) {\r\n                    if (error.code === \"ETIMEDOUT\") {\r\n                        this.logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                        reject(new TimeoutError());\r\n                    }\r\n                    this.logger.log(LogLevel.Warning, `Error from HTTP request. ${error}`);\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                if (response.statusCode >= 200 && response.statusCode < 300) {\r\n                    resolve(new HttpResponse(response.statusCode, response.statusMessage || \"\", body));\r\n                } else {\r\n                    reject(new HttpError(response.statusMessage || \"\", response.statusCode || 0));\r\n                }\r\n            });\r\n\r\n            if (httpRequest.abortSignal) {\r\n                httpRequest.abortSignal.onabort = () => {\r\n                    currentRequest.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this.cookieJar.getCookieString(url);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\n/** @private */\r\nexport interface HandshakeRequestMessage {\r\n    readonly protocol: string;\r\n    readonly version: number;\r\n}\r\n\r\n/** @private */\r\nexport interface HandshakeResponseMessage {\r\n    readonly error: string;\r\n    readonly minorVersion: number;\r\n}\r\n\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    public writeHandshakeRequest(handshakeRequest: HandshakeRequestMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n\r\n    public parseHandshakeResponse(data: any): [any, HandshakeResponseMessage] {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let messageData: string;\r\n        let remainingData: any;\r\n\r\n        if (isArrayBuffer(data) || (typeof Buffer !== \"undefined\" && data instanceof Buffer)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        } else {\r\n            const textData: string = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        responseMessage = response;\r\n\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport RouterComponent from './routerComponent';\r\n\r\n// We look for this in our fallback-load script for testing locally\r\n(window as any).PAGE_LOADED = true;\r\n\r\nReactDOM.render(\r\n    <RouterComponent />,\r\n    document.getElementById('react_content')\r\n);","module.exports = ReactDOM;","import * as React from 'react';\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport { HomeComponent, ProjectsComponent } from './views';\r\nimport { AllProjects } from './views/projects/';\r\nimport { Page } from './page';\r\n\r\nconst DEFAULT_TITLE = \"Nathan's Github Pages\";\r\n\r\nexport default function RouterComponent() {\r\n    return <BrowserRouter basename='/'>\r\n        <PageRoute exact path='/' component={HomeComponent} />\r\n        <PageRoute exact path='/projects/' component={ProjectsComponent} />\r\n        {\r\n            AllProjects.map(project => {\r\n                return <PageRoute key={project.projectName} path={'/projects/' + project.projectName} title={project.projectTitle} component={project.projectComponent} />;\r\n            })\r\n        }\r\n    </BrowserRouter>;\r\n}\r\n\r\nexport function PageRoute(props: {exact?: boolean, path: string, title?: string, component: React.ComponentType<{}>}) {\r\n    return <Route exact={props.exact} path={props.path} render={p => <Page {...p} component={props.component} title={props.title || DEFAULT_TITLE} />} />;\r\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","/** @license React v16.8.4\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?Symbol.for(\"react.memo\"):\n60115,r=b?Symbol.for(\"react.lazy\"):60116;function t(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case r:case q:case d:return u}}}function v(a){return t(a)===m}exports.typeOf=t;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;\nexports.Fragment=e;exports.Lazy=r;exports.Memo=q;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||\"object\"===typeof a&&null!==a&&(a.$$typeof===r||a.$$typeof===q||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||t(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return t(a)===k};\nexports.isContextProvider=function(a){return t(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return t(a)===n};exports.isFragment=function(a){return t(a)===e};exports.isLazy=function(a){return t(a)===r};exports.isMemo=function(a){return t(a)===q};exports.isPortal=function(a){return t(a)===d};exports.isProfiler=function(a){return t(a)===g};exports.isStrictMode=function(a){return t(a)===f};\nexports.isSuspense=function(a){return t(a)===p};\n","export { HomeComponent } from './home/home';\r\nexport { ProjectsComponent } from './projects/projects';","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { RenderFromUrlComponent, CodeFromUrlComponent } from '../../components';\r\n\r\nexport function HomeComponent() {\r\n    return <div>\r\n        <h1>Hi!</h1>\r\n        <Link to='/projects/'>Projects</Link>\r\n        <h2>Test below:</h2>\r\n        <CodeFromUrlComponent url='/dist/content/testContent.txt' />\r\n    </div>;\r\n}","export { RenderFromUrlComponent } from './renderFromUrl/RenderFromUrlComponent';\r\nexport { CodeFromUrlComponent } from './renderFromUrl/CodeFromUrlComponent';","import * as React from 'react';\r\nimport { useEffect } from 'react';\r\nimport Axios from 'axios-observable';\r\n\r\n\r\nexport function RenderFromUrlComponent({ url }: { url: string }) {\r\n    const [content, setContent] = React.useState(null);\r\n\r\n    React.useEffect(()=>{\r\n        Axios.get(url).subscribe((content) => {\r\n            setContent(content.data);\r\n        });\r\n    }, []);\r\n\r\n    if(content === undefined) {\r\n        return <div>Loading...</div>\r\n    }\r\n    return <div dangerouslySetInnerHTML={{ __html: content}}>\r\n    </div>;\r\n}","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar axios_1 = require(\"axios\");\nfunction createObservable(promiseFactory) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var config = args[args.length - 1];\n    config = config ? __assign({}, config) : {};\n    args[args.length - 1] = config;\n    var cancelSource;\n    var hasCancelToken = !!config.cancelToken;\n    if (hasCancelToken) {\n        console.warn(\"No need to use cancel token, just unsubscribe the subscription would cancel the http request automatically\");\n    }\n    var observable = new rxjs_1.Observable(function (subscriber) {\n        if (!hasCancelToken) {\n            cancelSource = axios_1.default.CancelToken.source();\n            config.cancelToken = cancelSource.token;\n        }\n        promiseFactory.apply(void 0, args).then(function (response) {\n            subscriber.next(response);\n            subscriber.complete();\n        })\n            .catch(function (error) { return subscriber.error(error); });\n    });\n    var _subscribe = observable.subscribe.bind(observable);\n    observable.subscribe = function () {\n        var args2 = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args2[_i] = arguments[_i];\n        }\n        var subscription = _subscribe.apply(void 0, args2);\n        var _unsubscribe = subscription.unsubscribe.bind(subscription);\n        subscription.unsubscribe = function () {\n            if (cancelSource) {\n                cancelSource.cancel();\n            }\n            _unsubscribe();\n        };\n        return subscription;\n    };\n    return observable;\n}\nexports.createObservable = createObservable;\n","import * as React from 'react';\r\nimport Axios from 'axios-observable';\r\n\r\nconst keywords = /([^a-zA-Z0-9_])(public|private|protected|internal|static|void|operator|if|for|while|foreach|do|bool|byte|sbyte|int|uint|long|ulong|short|ushort|string|char|var|true|false|ref|out|class)(?![a-zA-Z0-9_])/g\r\n\r\nexport function CodeFromUrlComponent({ url }: { url: string }) {\r\n    const [content, setContent] = React.useState<string[]>([]);\r\n\r\n    React.useEffect(()=>{\r\n        Axios.get(url).subscribe((content) => {\r\n            let asString = content.data as string;\r\n            asString = asString\r\n                .replace(keywords, \"$1<span class='k'>$2</span>\")\r\n                .replace(/([^a-zA-Z0-9_])((0[bx])?\\d+)/g, \"$1<span class='n'>$2</span>\")\r\n                .replace(/([^a-zA-Z0-9_])(return|break|continue|export|import)(?![a-zA-Z0-9_])/g, \"$1<span class='r'>$2</span>\")\r\n                .replace(/%([a-zA-Z0-9])%/g, \"<span class='$1'>\")\r\n                .replace(/%%/g, \"</span>\");\r\n            const lines = asString.split(/\\r?\\n/)\r\n                .map(l => l === '' ? ' ' : l);\r\n            setContent(lines);\r\n        });\r\n    }, []);\r\n\r\n    if(content.length === 0) {\r\n        return <div>Loading...</div>\r\n    }\r\n    return <div className='code'>\r\n        <div className='lineNums'>\r\n            {content.map((e, i) =>\r\n                <div key={i}>{i}</div>\r\n            )}\r\n        </div>\r\n        <div className='content'>\r\n            {content.map((e, i) =>\r\n                <div key={i} dangerouslySetInnerHTML={{__html:e}} />\r\n            )}\r\n        </div>\r\n    </div>;\r\n}","import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AllProjects } from './index';\r\nimport { groupBy } from '../../LinqLike';\r\n\r\nexport function ProjectsComponent() {\r\n    const projectGroups = groupBy(AllProjects.filter(p => p.subCategory !== undefined), p => p.subCategory);\r\n\r\n    return <div>\r\n        <h1>Let's see some projects!</h1>\r\n        <ul>\r\n            {\r\n                AllProjects.filter(p => p.subCategory === undefined).map(project => {\r\n                    return <li key={project.projectName}><Link to={'/projects/' + project.projectName}>{project.projectTitle}</Link></li>;\r\n                })\r\n            }\r\n        </ul>\r\n        {\r\n            projectGroups.map(group =>\r\n                <div key={group.key}>\r\n                    <h2>{group.key}</h2>\r\n                    <ul>\r\n                        {group.items.map(project => <li key={project.projectName}><Link to={'/projects/' + project.projectName}>{project.projectTitle}</Link></li>)}\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n    </div>;\r\n}","import * as React from 'react';\r\nimport Run from '../../../projects/mandelbrot/main'; \r\n\r\nexport function MandelbrotComponent() {\r\n    React.useEffect(() => {\r\n        Run();\r\n    }, []);\r\n    return <div className='mandelbrot mandelbrot_body full_body'>\r\n        <canvas id='mainCanvas'></canvas>\r\n        <canvas id='subCanvas'></canvas>\r\n    </div>;\r\n}","import * as Const from './Constants';\r\nimport { Renderer } from './Renderer';\r\nimport { Mandelbrot } from './iterativeFunctions/Mandelbrot';\r\nimport { Julia } from './iterativeFunctions/Julia';\r\nimport { Range2d, Range, Complex } from '../common';\r\nimport { ClickDragWrapper } from './ClickDragWrapper';\r\n\r\n\r\nlet mandelRender: ClickDragWrapper;\r\nlet juliaRender: ClickDragWrapper;\r\n\r\nexport default function Run() {\r\n    const canvas = document.getElementById('mainCanvas') as HTMLCanvasElement;\r\n    const subCanvas = document.getElementById('subCanvas') as HTMLCanvasElement;\r\n\r\n    canvas.setAttribute('width', Const.CANVAS_WIDTH + '');\r\n    canvas.setAttribute('height', Const.CANVAS_HEIGHT + '');\r\n    canvas.style.width = Const.CANVAS_WIDTH + 'px';\r\n    canvas.style.height = Const.CANVAS_HEIGHT + 'px';\r\n\r\n    subCanvas.setAttribute('width', Const.CANVAS_WIDTH + '');\r\n    subCanvas.setAttribute('height', Const.CANVAS_HEIGHT + '');\r\n    subCanvas.style.width = Const.CANVAS_WIDTH + 'px';\r\n    subCanvas.style.height = Const.CANVAS_HEIGHT + 'px';\r\n\r\n    mandelRender = new ClickDragWrapper(canvas, new Range2d(new Range(-1, 1), new Range(-1, 1)), new Renderer(canvas, new Mandelbrot()), mandelbrotSelect);\r\n    juliaRender = new ClickDragWrapper(subCanvas, new Range2d(new Range(-1, 1), new Range(-1, 1)), new Renderer(subCanvas,  new Julia(new Complex(0, 0))), (x, y) => undefined);\r\n\r\n    setTimeout(Tick, 0);\r\n}\r\n\r\nfunction mandelbrotSelect(x: number, y: number) {\r\n    juliaRender.renderer.func = new Julia(new Complex(x, y));\r\n    juliaRender.reset();\r\n}\r\n\r\nfunction Tick() {\r\n    mandelRender.Tick();\r\n    juliaRender.Tick();\r\n    requestAnimationFrame(Tick);\r\n}","import * as Const from './Constants';\r\nimport { Range2d, Range, ColorRange, Complex } from '../common';\r\nimport { IIterativeFunction } from './iterativeFunctions/IIterativeFunction';\r\nimport { ProgressiveRepaint } from './ProgressiveRepaint';\r\n\r\nconst MAX_DEPTH = 255;\r\nconst PAINT_PER_TICK = Const.CANVAS_WIDTH * 20;\r\nconst paintColor: ColorRange = new ColorRange(0, 255, 0, 200, 0, 0);\r\n\r\nexport class Renderer {\r\n\r\n    private ctx: CanvasRenderingContext2D;\r\n    private screenRange: Range2d;\r\n    private repainter: ProgressiveRepaint;\r\n\r\n    constructor(private canvas: HTMLCanvasElement, public func: IIterativeFunction) {\r\n        this.repainter = new ProgressiveRepaint(Const.CANVAS_WIDTH, Const.CANVAS_HEIGHT);\r\n        this.ctx = canvas.getContext('2d');\r\n        this.screenRange = new Range2d(new Range(0, canvas.offsetWidth), new Range(0, canvas.offsetHeight));\r\n    }\r\n\r\n    Paint(windowRange: Range2d) {\r\n        for (let i = 0; i < PAINT_PER_TICK && !this.repainter.finished; i++) {\r\n            const x = this.repainter.X();\r\n            const y = this.repainter.Y();\r\n            const s = this.repainter.Scale();\r\n            const worldCoords = this.screenRange.ConvertTo({x, y}, windowRange);\r\n            this.ctx.fillStyle = this.CalcColor(worldCoords);\r\n            this.ctx.fillRect(x, y, s, s);\r\n            this.repainter.Advance();\r\n        }\r\n    }\r\n\r\n    CalcColor(coords: {x: number, y: number}): string {\r\n\r\n        const original = new Complex(coords.x, coords.y);\r\n        let rolling = new Complex(coords.x, coords.y);\r\n        let iter = 0;\r\n\r\n        while (iter < MAX_DEPTH && rolling.AbsSq() < this.func.MaxAbsSq()) {\r\n            rolling = this.func.Iterate(rolling, original);\r\n            iter++;\r\n        }\r\n\r\n        if (rolling.AbsSq() < this.func.MaxAbsSq()) {\r\n            return 'white';\r\n        }\r\n\r\n        const perc = iter / MAX_DEPTH;\r\n        return paintColor.ToColor(perc);\r\n    }\r\n\r\n    ResetPaint() {\r\n        this.repainter.Reset();\r\n    }\r\n}","import { Range } from './Range';\r\n\r\nexport class Range2d {\r\n    constructor(public xRange: Range, public yRange: Range) { }\r\n\r\n    public GetValue(xPercent: number, yPercent: number) {\r\n        return { x: this.xRange.GetValue(xPercent), y: this.yRange.GetValue(yPercent) };\r\n    }\r\n\r\n    public GetPercentage(xValue: number, yValue: number) {\r\n        return { x: this.xRange.GetPercentage(xValue), y: this.yRange.GetPercentage(yValue) };\r\n    }\r\n\r\n    public Shift(xAmt: number, yAmt: number) {\r\n        this.xRange.Shift(xAmt);\r\n        this.yRange.Shift(yAmt);\r\n    }\r\n    public ShiftByPercentage(xShift: number, yShift: number) {\r\n        this.xRange.ShiftByPercentage(xShift);\r\n        this.yRange.ShiftByPercentage(yShift);\r\n    }\r\n\r\n    public AspectScale(percent: number, xAnchor = 0.5, yAnchor = 0.5) {\r\n        return this.Scale(percent, xAnchor, percent, yAnchor);\r\n    }\r\n    public Scale(xPercent: number, xAnchor: number, yPercent: number, yAnchor: number) {\r\n        this.xRange.Scale(xPercent, xAnchor);\r\n        this.yRange.Scale(yPercent, yAnchor);\r\n    }\r\n\r\n    public ConvertTo(value: {x: number, y: number}, target: Range2d) {\r\n        const intermediate = this.GetPercentage(value.x, value.y);\r\n        return target.GetValue(intermediate.x, intermediate.y);\r\n    }\r\n}","import { Range } from './Range';\r\nexport class ColorRange {\r\n    public rRange: Range;\r\n    public gRange: Range;\r\n    public bRange: Range;\r\n    constructor(rMin: number, rMax: number, gMin: number, gMax: number, bMin: number, bMax: number) {\r\n        this.rRange = new Range(rMin, rMax);\r\n        this.gRange = new Range(gMin, gMax);\r\n        this.bRange = new Range(bMin, bMax);\r\n    }\r\n\r\n    public ToColor(percentage: number): string {\r\n        return 'rgb(' + Math.floor(this.rRange.GetValue(percentage)) + ','\r\n                      + Math.floor(this.gRange.GetValue(percentage)) + ','\r\n                      + Math.floor(this.bRange.GetValue(percentage)) + ')';\r\n    }\r\n}","export class Complex {\r\n    constructor(public real: number, public imaginary: number) { }\r\n\r\n    public AbsSq(): number {\r\n        return this.real * this.real + this.imaginary * this.imaginary;\r\n    }\r\n    public Abs(): number {\r\n        return Math.sqrt(this.AbsSq());\r\n    }\r\n\r\n    public AddWith(other: Complex) {\r\n        this.real += other.real;\r\n        this.imaginary += other.imaginary;\r\n    }\r\n\r\n    public MultiplyWith(other: Complex) {\r\n        const tmpReal = this.real * other.real - this.imaginary * other.imaginary;\r\n        this.imaginary = this.real * other.imaginary + other.real * this.imaginary;\r\n        this.real = tmpReal;\r\n    }\r\n\r\n    public Pow(power: number) {\r\n        const rs = this.AbsSq();\r\n        const theta = Math.atan2(this.imaginary, this.real);\r\n        this.real = Math.pow(rs, power / 2) * Math.cos(theta);\r\n        this.imaginary = Math.pow(rs, power / 2) * Math.sin(theta);\r\n    }\r\n}","export class ProgressiveRepaint {\r\n    private x: number;\r\n    private y: number;\r\n    private scale: number;\r\n    private maxScale: number;\r\n    public finished: boolean;\r\n\r\n    constructor(private canvasWidth: number, private canvasHeight: number) {\r\n        this.finished = false;\r\n        this.scale = this.maxScale = (1 << this.fastLog2(Math.min(canvasWidth, canvasHeight)));\r\n        this.x = this.y = 0;\r\n    }\r\n\r\n    private fastLog2(v: number) {\r\n        let shift = 0;\r\n        while (v > 0) {\r\n            shift++;\r\n            v >>= 1;\r\n        }\r\n        return shift;\r\n    }\r\n\r\n    X(): number {\r\n        return this.x * this.scale;\r\n    }\r\n    Y(): number {\r\n        return this.y * this.scale;\r\n    }\r\n    Scale(): number {\r\n        return this.scale;\r\n    }\r\n\r\n    // Returns bool done\r\n    Advance(): boolean {\r\n        this.x++;\r\n        if (this.x * this.scale >= this.canvasWidth) {\r\n            this.x = 0;\r\n            this.y++;\r\n            if (this.y * this.scale >= this.canvasHeight) {\r\n                this.y = 0;\r\n                if (this.scale === 1) {\r\n                    this.finished = true;\r\n                    return true;\r\n                }\r\n                else {\r\n                    this.scale /= 2;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    Reset() {\r\n        this.finished = false;\r\n        this.scale = this.maxScale;\r\n        this.x = this.y = 0;\r\n    }\r\n}","import { IIterativeFunction } from './IIterativeFunction';\r\nimport { Complex } from '../../common';\r\n\r\nexport class Mandelbrot implements IIterativeFunction {\r\n    Iterate(rolling: Complex, original: Complex): Complex {\r\n        rolling.MultiplyWith(rolling);\r\n        rolling.AddWith(original);\r\n        return rolling;\r\n    }\r\n\r\n    MaxAbsSq(): number {\r\n        return 2;\r\n    }\r\n}\r\n","import { IIterativeFunction } from './IIterativeFunction';\r\nimport { Complex } from '../../common';\r\n\r\nexport class Julia implements IIterativeFunction {\r\n\r\n    private radius: number;\r\n    constructor(private c: Complex) {\r\n        this.radius = (Math.sqrt(4 * c.Abs() + 1) + 1) / 2;\r\n    }\r\n\r\n    Iterate(rolling: Complex, original: Complex): Complex {\r\n        rolling.MultiplyWith(rolling);\r\n        rolling.AddWith(this.c);\r\n        return rolling;\r\n    }\r\n\r\n    MaxAbsSq(): number {\r\n        return this.radius;\r\n    }\r\n}","import { Range2d, Range } from '../common';\r\nimport { Renderer } from './Renderer';\r\n\r\nconst SCROLL_DIV = 3;\r\nconst SCROLL_POW = 1.1;\r\n\r\nconst MAX_ZOOM_WIDTH = 4;\r\nconst MIN_WINDOW = -2;\r\nconst MAX_WINDOW = 2;\r\n\r\nexport class ClickDragWrapper {\r\n    screenBounds: Range2d;\r\n    constructor(private control: HTMLElement, private paintWindow: Range2d, public renderer: Renderer, private onSelect: (x: number, y: number) => void) {\r\n        control.addEventListener('mousedown', this.handleMouseDown.bind(this));\r\n        control.addEventListener('mouseup', this.handleMouseUp.bind(this));\r\n        control.addEventListener('mouseleave', this.handleMouseLeave.bind(this));\r\n        control.addEventListener('mousemove', this.handleMouseMove.bind(this));\r\n        control.addEventListener('wheel', this.handleScroll.bind(this));\r\n        this.screenBounds = new Range2d(new Range(0, control.offsetWidth), new Range(0, control.offsetHeight));\r\n    }\r\n\r\n    reset() {\r\n        this.paintWindow = new Range2d(new Range(-1, 1), new Range(-1, 1));\r\n        this.renderer.ResetPaint();\r\n    }\r\n\r\n    grabX: number;\r\n    grabY: number;\r\n    isGrabbed: boolean;\r\n    private handleMouseDown(event: MouseEvent) {\r\n        if (event.button === 0) {\r\n            this.grabX = event.offsetX;\r\n            this.grabY = event.offsetY;\r\n            this.isGrabbed = true;\r\n            event.preventDefault();\r\n        }\r\n        else if (event.button === 1) {\r\n            const result = this.screenBounds.ConvertTo({ x: event.offsetX, y: event.offsetY }, this.paintWindow);\r\n            this.onSelect(result.x, result.y);\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    private handleMouseUp() {\r\n        this.isGrabbed = false;\r\n    }\r\n    private handleMouseLeave() {\r\n        this.isGrabbed = false;\r\n    }\r\n    private handleMouseMove(event: MouseEvent) {\r\n        if (event.buttons === 4) {\r\n            const result = this.screenBounds.ConvertTo({ x: event.offsetX, y: event.offsetY }, this.paintWindow);\r\n            this.onSelect(result.x, result.y);\r\n            event.preventDefault();\r\n        }\r\n        if (!this.isGrabbed) return;\r\n        const dx = event.offsetX - this.grabX;\r\n        const dy = event.offsetY - this.grabY;\r\n\r\n        const perc = this.screenBounds.GetPercentage(dx, dy);\r\n        this.paintWindow.ShiftByPercentage(-perc.x, -perc.y);\r\n        this.assertBounds();\r\n\r\n\r\n        this.renderer.ResetPaint();\r\n\r\n        this.grabX = event.offsetX;\r\n        this.grabY = event.offsetY;\r\n    }\r\n\r\n    private handleScroll(event: WheelEvent) {\r\n        const scalePercentage = event.deltaY / SCROLL_DIV;\r\n        const scalePerc = Math.pow(SCROLL_POW, scalePercentage);\r\n        const perc = this.screenBounds.GetPercentage(event.offsetX, event.offsetY);\r\n\r\n        this.paintWindow.AspectScale(scalePerc, perc.x, perc.y);\r\n        this.assertBounds();\r\n\r\n        this.renderer.ResetPaint();\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    private assertBounds() {\r\n        if (this.paintWindow.xRange.Length() > MAX_ZOOM_WIDTH || this.paintWindow.yRange.Length() > MAX_ZOOM_WIDTH) {\r\n            this.paintWindow.xRange.ScaleTo(MAX_ZOOM_WIDTH, 0.5);\r\n            this.paintWindow.yRange.ScaleTo(MAX_ZOOM_WIDTH, 0.5);\r\n        }\r\n        this.assertRangeBounds(this.paintWindow.xRange);\r\n        this.assertRangeBounds(this.paintWindow.yRange);\r\n    }\r\n\r\n    private assertRangeBounds(r: Range) {\r\n        if (r.min < MIN_WINDOW) r.Shift(MIN_WINDOW - r.min);\r\n        if (r.max > MAX_WINDOW) r.Shift(MAX_WINDOW - r.max);\r\n    }\r\n\r\n    public Tick() {\r\n        this.renderer.Paint(this.paintWindow);\r\n    }\r\n}","import * as React from 'react';\r\nimport Run from '../../../projects/tile-blend-test-1';\r\n\r\nexport function TileBlendTest1Component() {\r\n    React.useEffect(() => {\r\n        Run();\r\n    }, []);\r\n    return <div className='full_body center'>\r\n        <canvas id='canvas'></canvas>\r\n    </div>;\r\n}","import AssetLoader from '../common/assets/AssetLoader';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport { ResizeCanvas, NearestNeighborScaling } from '../common/CanvasHelpers';\r\nimport blendTilesUrl from '../common-assets/RockLavaAllBlends_crop.png';\r\nimport seletorsUrl from '../common-assets/Selectors16x16.png';\r\nimport { Terrain, TileType } from './Terrain';\r\nimport { Direction, ToPoint } from '../common/position/Direction';\r\nimport Point from '../common/position/Point';\r\n\r\nlet tiles: SpriteSheet;\r\nlet selectors: SpriteSheet;\r\nlet pvMousePos: Point | undefined;\r\nlet terrain: Terrain;\r\nlet context: CanvasRenderingContext2D;\r\n\r\nconst SCALE_FACTOR = 3;\r\n\r\n\r\nfunction Run() {\r\n    const assetLoader = new AssetLoader();\r\n    tiles = new SpriteSheet(8, 8, blendTilesUrl, assetLoader.registerAssetLoadCallback());\r\n    selectors = new SpriteSheet(16, 16, seletorsUrl, assetLoader.registerAssetLoadCallback());\r\n    pvMousePos = undefined;\r\n\r\n    assetLoader.onAllFinished(assetLoadDone);\r\n}\r\n\r\nfunction assetLoadDone() {\r\n    const canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n    terrain = new Terrain(20, 20);\r\n\r\n    ResizeCanvas(canvas, terrain.tilesWide * 16 * SCALE_FACTOR, terrain.tilesHigh * 16 * SCALE_FACTOR);\r\n    context = canvas.getContext('2d');\r\n    NearestNeighborScaling(context);\r\n\r\n    RenderTerrain(context, terrain, tiles);\r\n\r\n    canvas.addEventListener('mousemove', onMouseMove);\r\n    canvas.addEventListener('mouseleave', onMouseLeave);\r\n    canvas.addEventListener('mousedown', onMouseClick);\r\n}\r\n\r\nfunction RenderTerrain(ctx: CanvasRenderingContext2D, terr: Terrain, sprites: SpriteSheet) {\r\n    for (let x = 0; x < terr.tilesWide; x++) {\r\n        for (let y = 0; y < terr.tilesHigh; y++) {\r\n            RenderTerrainCell(ctx, terr, sprites, x, y);\r\n        }\r\n    }\r\n}\r\nfunction RenderTerrainCell(ctx: CanvasRenderingContext2D, terr: Terrain, sprites: SpriteSheet, x: number, y: number) {\r\n    for (let d = 0; d < 4; d++) {\r\n        const dir = Direction.UpRight + (d * 2);\r\n        const spriteSheetX = terr.getSubTileId(x, y, dir);\r\n        let spriteSheetY = d;\r\n        if (terr.getTile(x, y) === TileType.Lava) spriteSheetY += 4;\r\n\r\n        const rtx = x * 16 + (ToPoint(dir).x === 1 ? 8 : 0);\r\n        const rty = y * 16 + (ToPoint(dir).y === 1 ? 8 : 0);\r\n        sprites.render(ctx, rtx * SCALE_FACTOR, rty * SCALE_FACTOR, 8 * SCALE_FACTOR, 8 * SCALE_FACTOR,\r\n            spriteSheetX, spriteSheetY);\r\n    }\r\n}\r\n\r\nfunction onMouseMove(ev: MouseEvent) {\r\n    const mouseCoords = new Point(Math.floor(ev.offsetX / (16 * SCALE_FACTOR)), Math.floor(ev.offsetY / (16 * SCALE_FACTOR)));\r\n    if (pvMousePos !== undefined) {\r\n        if (!mouseCoords.Equals(pvMousePos)) {\r\n            RenderTerrainCell(context, terrain, tiles, pvMousePos.x, pvMousePos.y);\r\n            selectors.render(context, mouseCoords.x * 16 * SCALE_FACTOR, mouseCoords.y * 16 * SCALE_FACTOR, 16 * SCALE_FACTOR, 16 * SCALE_FACTOR,\r\n                1, 0);\r\n            pvMousePos = mouseCoords;\r\n        }\r\n    }\r\n    else {\r\n        selectors.render(context, mouseCoords.x * 16 * SCALE_FACTOR, mouseCoords.y * 16 * SCALE_FACTOR, 16 * SCALE_FACTOR, 16 * SCALE_FACTOR,\r\n            1, 0);\r\n        pvMousePos = mouseCoords;\r\n    }\r\n}\r\n\r\nfunction onMouseLeave(ev: MouseEvent) {\r\n    if (pvMousePos !== undefined) {\r\n        pvMousePos = undefined;\r\n    }\r\n}\r\n\r\nfunction onMouseClick(ev: MouseEvent) {\r\n    const mouseCoords = new Point(Math.floor(ev.offsetX / (16 * SCALE_FACTOR)), Math.floor(ev.offsetY / (16 * SCALE_FACTOR)));\r\n    const tile = terrain.getTile(mouseCoords.x, mouseCoords.y);\r\n    terrain.setTile(mouseCoords.x, mouseCoords.y, tile === TileType.Lava ? TileType.Rock : TileType.Lava);\r\n\r\n    for (let dx = -1; dx <= 1; dx ++) {\r\n        for (let dy = -1; dy <= 1; dy++) {\r\n            RenderTerrainCell(context, terrain, tiles, pvMousePos.x + dx, pvMousePos.y + dy);\r\n        }\r\n    }\r\n\r\n    selectors.render(context, mouseCoords.x * 16 * SCALE_FACTOR, mouseCoords.y * 16 * SCALE_FACTOR, 16 * SCALE_FACTOR, 16 * SCALE_FACTOR,\r\n        1, 0);\r\n}\r\n\r\nexport default Run;","export default __webpack_public_path__ + \"e6ca7ebcac9136ce5511288e898c8371.png\";","export default __webpack_public_path__ + \"f1cd5c392c5447559f3a20ac58e20646.png\";","import { Direction, cardinalDirections, diagonalDirections, ToPoint, allDirections } from '../common/position/Direction';\r\n\r\nexport enum TileType {\r\n    Rock,\r\n    Lava\r\n}\r\n\r\nexport class Terrain {\r\n    private tiles: TileType[];\r\n    private subTileIds: number[];\r\n\r\n    constructor(public tilesWide: number, public tilesHigh: number) {\r\n        this.tiles = new Array(tilesHigh * tilesWide);\r\n        for (let x = 0; x < tilesWide * tilesHigh; x++) {\r\n            this.tiles[x] = TileType.Rock;\r\n        }\r\n\r\n        this.subTileIds = new Array(tilesHigh * tilesWide * 4);\r\n        for (let x = 0; x < tilesWide * tilesHigh * 4; x++) {\r\n            this.subTileIds[x] = 0;\r\n        }\r\n\r\n        for (let x = 0; x < tilesWide; x++) {\r\n            for (let y = 0; y < tilesHigh; y++) {\r\n                this.updateTile(x, y);\r\n            }\r\n        }\r\n    }\r\n\r\n    private fixCoords(x: number, y: number) {\r\n        return x + y * this.tilesWide;\r\n    }\r\n\r\n    private fixSubCoords(x: number, y: number, d: Direction) {\r\n        return x * 4 + (y * this.tilesWide * 4) + ((d - Direction.UpRight) / 2);\r\n    }\r\n\r\n    public getTile(x: number, y: number): TileType {\r\n        if (x < 0 || y < 0 || x >= this.tilesWide || y >= this.tilesWide) return TileType.Lava;\r\n        const coords = this.fixCoords(x, y);\r\n        return this.tiles[this.fixCoords(x, y)];\r\n    }\r\n\r\n    public getSubTileId(x: number, y: number, d: Direction) {\r\n        if (x < 0 || y < 0 || x >= this.tilesWide || y >= this.tilesWide) return 0;\r\n        const coords = this.fixSubCoords(x, y, d);\r\n        return this.subTileIds[coords];\r\n    }\r\n\r\n    public setTile(x: number, y: number, t: TileType) {\r\n        if (x < 0 || y < 0 || x >= this.tilesWide || y >= this.tilesWide) return;\r\n        const coords = this.fixCoords(x, y);\r\n        if (this.tiles[coords] === t) return;\r\n\r\n        this.tiles[coords] = t;\r\n        this.updateSelfAndAdjacent(x, y);\r\n    }\r\n\r\n    private updateSelfAndAdjacent(tx: number, ty: number) {\r\n        for (let dx = -1; dx <= 1; dx++) {\r\n            for (let dy = -1; dy <= 1; dy++) {\r\n                this.updateTile(tx + dx, ty + dy);\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateTile(tx: number, ty: number): void {\r\n        if (tx < 0 || ty < 0 || tx >= this.tilesWide || ty >= this.tilesWide) return;\r\n        const tid = this.fixCoords(tx, ty);\r\n        const type = this.tiles[tid];\r\n\r\n        let adjacency = 0x00;\r\n        allDirections.forEach((dir, i) => {\r\n            const adjMask = 1 << i;\r\n            const pt = ToPoint(dir);\r\n            if (this.getTile(pt.x + tx, pt.y + ty) !== type) {\r\n                adjacency |= adjMask;\r\n            }\r\n        });\r\n\r\n        // adjacency now contains a bitmask of (adjacent=different) where\r\n        // b[0] == T diff, b[1] = TR diff, b[2] = R diff, etc...\r\n        // Therefore, bits [0..2] are the TopRight id,\r\n        // bits [2..4] are the BottomRight id,\r\n        // bits [4..6] are the BottomLeft id,\r\n        // bits [6, 7, 0] are the TopLeft id\r\n\r\n        this.subTileIds[this.fixSubCoords(tx, ty, Direction.UpRight)] = adjacency & 0b111;\r\n        this.subTileIds[this.fixSubCoords(tx, ty, Direction.DownRight)] = (adjacency >> 2) & 0b111;\r\n        this.subTileIds[this.fixSubCoords(tx, ty, Direction.DownLeft)] = (adjacency >> 4) & 0b111;\r\n        this.subTileIds[this.fixSubCoords(tx, ty, Direction.UpLeft)] = (adjacency >> 6) | ((adjacency & 1) << 2) & 0b111;\r\n    }\r\n}","import * as React from 'react';\r\nimport Run from '../../../projects/spell-test';\r\n\r\nexport function SpellTestComponent() {\r\n    React.useEffect(() => {\r\n        Run();\r\n    }, []);\r\n    return <div className='full_body center'>\r\n        <canvas id='canvas'></canvas>\r\n    </div>;\r\n}","import AssetLoader from '../common/assets/AssetLoader';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport arrowsUrl from '../common-assets/arrows.png';\r\nimport { ResizeCanvas, NearestNeighborScaling } from '../common/CanvasHelpers';\r\nimport { SpellGroup } from './spells/SpellGroup';\r\nimport { ERepeat, EArrow, Matches } from './EArrow';\r\nimport { SpellStep } from './spells/SpellStep';\r\n\r\nconst handledKeys = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', ' '];\r\n\r\nexport default function Run() {\r\n    const assetLoader = new AssetLoader();\r\n    const arrows = new SpriteSheet(16, 16, arrowsUrl, assetLoader.registerAssetLoadCallback());\r\n\r\n    assetLoader.onAllFinished(() => Start(arrows));\r\n}\r\n\r\nfunction Start(arrows: SpriteSheet) {\r\n\r\n    const canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n    ResizeCanvas(canvas, 500, 500);\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.scale(2, 2);\r\n    NearestNeighborScaling(ctx);\r\n\r\n    const spell = SpellGroup.Parse('ud(lr(lru)?)+as');\r\n    const steps = SpellStep.FirstSteps(spell);\r\n\r\n    PrintSpell(spell, arrows, ctx, steps, 0);\r\n\r\n    document.addEventListener('keydown', (k) => {\r\n        if (handledKeys.indexOf(k.key) !== -1) {\r\n            AdvanceAndPrint(steps, k.key, spell, arrows, ctx);\r\n            k.preventDefault();\r\n        }\r\n    });\r\n}\r\n\r\nfunction AdvanceAndPrint(currentSteps: SpellStep[], key: string, spell: SpellGroup, arrows: SpriteSheet, ctx: CanvasRenderingContext2D) {\r\n    if (key === ' ') {\r\n        currentSteps.splice(0, currentSteps.length, ...SpellStep.FirstSteps(spell));\r\n    }\r\n    else {\r\n        const pressedArrow = key === 'ArrowUp' ? EArrow.Up : key === 'ArrowDown' ? EArrow.Down : key === 'ArrowLeft' ? EArrow.Left : EArrow.Right;\r\n        const lastLength = currentSteps.length;\r\n        for (let i = currentSteps.length - 1; i >= 0; i--) {\r\n            const step = currentSteps[i];\r\n            if (Matches(pressedArrow, step.ArrowHere())) {\r\n                currentSteps.splice(currentSteps.length, 0, ...step.NextSteps());\r\n            }\r\n        }\r\n        currentSteps.splice(0, lastLength);\r\n    }\r\n    ctx.clearRect(0, 0, 500, 500);\r\n    PrintSpell(spell, arrows, ctx, currentSteps, 0);\r\n}\r\n\r\nfunction PrintSpell(spell: SpellGroup, arrows: SpriteSheet, ctx: CanvasRenderingContext2D, steps: SpellStep[], dx: number): number {\r\n    // Draw parens?\r\n    const drawParens = spell.parent !== undefined && spell.content.length > 1;\r\n    if (drawParens) {\r\n        arrows.renderCustom(ctx, dx, 0, 8, 16, 0, 4, 8, 16);\r\n        dx += 8;\r\n    }\r\n\r\n    // Reverse-sort by index\r\n    const selfSteps = steps.filter(s => s.spell === spell).sort((a, b) => b.index - a.index);\r\n\r\n    for (const [i, c] of spell.content.entries()) {\r\n        if (SpellGroup.isArrow(c)) {\r\n            arrows.render(ctx, dx, 0, 16, 16, (c as number) % 4, 2 + Math.floor((c as number) / 4));\r\n            if (selfSteps.length > 0 && selfSteps[selfSteps.length - 1].index === i) {\r\n                arrows.render(ctx, dx, 2, 16, 16, 2, 4);\r\n                selfSteps.pop();\r\n            }\r\n            dx += 16;\r\n        }\r\n        else {\r\n            dx = PrintSpell(c, arrows, ctx, steps, dx);\r\n        }\r\n    }\r\n\r\n    if (drawParens) {\r\n        arrows.renderCustom(ctx, dx, 0, 8, 16, 1, 4, 8, 16);\r\n        dx += 8;\r\n    }\r\n\r\n    if (spell.repeatType === ERepeat.Optional) {\r\n        ctx.drawImage(arrows.image, 16 + 8, 16 * 4, 8, 8, dx, 0, 8, 8);\r\n        dx += 8;\r\n    }\r\n    else if (spell.repeatType === ERepeat.Repeatable) {\r\n        ctx.drawImage(arrows.image, 16, 16 * 4, 8, 8, dx, 0, 8, 8);\r\n        dx += 8;\r\n    }\r\n\r\n    return dx;\r\n}","import { SpellGroup } from './SpellGroup';\r\nimport { EArrow, ERepeat } from '../EArrow';\r\n\r\nexport class SpellStep {\r\n    constructor(public spell: SpellGroup, public index: number) {\r\n\r\n    }\r\n\r\n    public static FirstSteps(group: SpellGroup): SpellStep[] {\r\n        return new SpellStep(group, -1).NextSteps();\r\n    }\r\n\r\n    public ArrowHere(): EArrow {\r\n        return this.spell.content[this.index] as EArrow;\r\n    }\r\n\r\n    public NextSteps(): SpellStep[] {\r\n        const nextIndex = this.index + 1;\r\n        if (nextIndex >= this.spell.content.length) {\r\n            // This is a step-out\r\n            if (this.spell.parent === undefined) return [];\r\n            // Step out and forward\r\n            const parentNextSteps = new SpellStep(this.spell.parent.parent, this.spell.parent.parentIndex).NextSteps();\r\n            if (this.spell.repeatType === ERepeat.Repeatable) {\r\n                const firsts = SpellStep.FirstSteps(this.spell);\r\n                parentNextSteps.splice(parentNextSteps.length, 0, ...firsts);\r\n            }\r\n            return parentNextSteps;\r\n        }\r\n        else {\r\n            // If the next spot is an arrow, return just it\r\n            if (SpellGroup.isArrow(this.spell.content[nextIndex])) {\r\n                return [ new SpellStep(this.spell, nextIndex) ];\r\n            }\r\n            else {\r\n                const group = this.spell.content[nextIndex] as SpellGroup;\r\n                const stepInto = SpellStep.FirstSteps(group);\r\n                if (group.repeatType === ERepeat.Optional) {\r\n                    // see if we can step-over\r\n                    const stepOver = new SpellStep(this.spell, this.index + 1).NextSteps();\r\n                    stepInto.splice(stepInto.length, 0, ...stepOver);\r\n                }\r\n                return stepInto;\r\n            }\r\n        }\r\n    }\r\n\r\n    public Equals(other: SpellStep) {\r\n        return this.spell === other.spell && this.index === other.index;\r\n    }\r\n}","import * as React from 'react';\r\nimport Run from '../../../projects/rpgt';\r\n\r\nexport function RpgTestComponent() {\r\n    React.useEffect(() => {\r\n        Run();\r\n    }, []);\r\n    return <div className='rpgt rpgt_body full_body center'>\r\n        <canvas id='mainCanvas'></canvas>\r\n        <canvas style={{display: 'none'}} id='world_prerender'></canvas>\r\n    </div>;\r\n}","import * as Const from './Constants';\r\nimport AssetLoader from '../common/assets/AssetLoader';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport arrowsUrl from '../common-assets/arrows.png';\r\nimport tilesUrl from '../common-assets/rpg1.png';\r\nimport wizardUrl from '../common-assets/wizard16.png';\r\nimport { NearestNeighborScaling, ResizeCanvas } from '../common/CanvasHelpers';\r\nimport NearestNeighborScalingHelper from '../common/NearestNeighborScalingHelper';\r\nimport World from './world/World';\r\nimport Cell from './world/Cell';\r\nimport Rect from '../common/position/Rectangle';\r\nimport KeyboardManager from '../common/input/KeyboardManager';\r\nimport Point from '../common/position/Point';\r\nimport { FileResource } from '../common/assets/FileResource';\r\n\r\nconst CAMERA_SLOWDOWN_FACTOR = 3;\r\n\r\nlet assets: {\r\n    tiles: SpriteSheet,\r\n    wizard: SpriteSheet,\r\n    arrows: SpriteSheet,\r\n    tilesets: FileResource<any>\r\n};\r\n\r\nlet ctx: CanvasRenderingContext2D;\r\n\r\nlet world: World;\r\n\r\nlet keys: KeyboardManager;\r\n\r\nexport default function Run() {\r\n    const assetLoader = new AssetLoader();\r\n    assets = {\r\n        tiles: new SpriteSheet(16, 16, tilesUrl, assetLoader.registerAssetLoadCallback()),\r\n        wizard: new SpriteSheet(16, 16, wizardUrl, assetLoader.registerAssetLoadCallback()),\r\n        arrows: new SpriteSheet(16, 16, arrowsUrl, assetLoader.registerAssetLoadCallback()),\r\n        tilesets: new FileResource('../dist/assets/rpgtest/tilesets.json', assetLoader.registerAssetLoadCallback()),\r\n    };\r\n    keys = new KeyboardManager(document.body);\r\n    assetLoader.onAllFinished(assetLoadDone);\r\n}\r\n\r\nfunction assetLoadDone() {\r\n    world = new World(Const.TILES_WIDE * 2, Const.TILES_HIGH * 2, () => {\r\n        if (Math.random() <= 0.15) {\r\n            return Cell.RockWall(assets.tiles);\r\n        }\r\n        else {\r\n            return Cell.GrassFloor(assets.tiles);\r\n        }\r\n    });\r\n    world.updatePrerender();\r\n    const canvas = document.getElementById('mainCanvas') as HTMLCanvasElement;\r\n    ctx = canvas.getContext('2d');\r\n    const scaleHelper = new NearestNeighborScalingHelper(canvas, ctx, Const.TILE_SIZE * Const.TILES_WIDE, Const.TILE_SIZE * Const.TILES_HIGH, true, () => { return; });\r\n    tick();\r\n}\r\n\r\nconst camPos = new Point(0, 0);\r\nconst playerPos = new Rect(0, 0, 14, 14);\r\nlet toggle = false;\r\nfunction tick() {\r\n    ctx.clearRect(0, 0, Const.TILES_WIDE * Const.TILE_SIZE, Const.TILES_HIGH * Const.TILE_SIZE);\r\n    NearestNeighborScaling(ctx);\r\n    ctx.save();\r\n    let cx = 0;\r\n    let cy = 0;\r\n    if (world.width > Const.TILES_WIDE) {\r\n        cx = Math.max(0, Math.min((world.width - Const.TILES_WIDE) * Const.TILE_SIZE, playerPos.x - (Const.TILE_SIZE * Const.TILES_WIDE / 2)));\r\n    }\r\n    if (world.height > Const.TILES_HIGH) {\r\n        cy = Math.max(0, Math.min((world.height - Const.TILES_HIGH) * Const.TILE_SIZE, playerPos.y - (Const.TILE_SIZE * Const.TILES_HIGH / 2)));\r\n    }\r\n\r\n    camPos.MultWith(CAMERA_SLOWDOWN_FACTOR, CAMERA_SLOWDOWN_FACTOR)\r\n          .AddWith(cx, cy)\r\n          .DivideWith(CAMERA_SLOWDOWN_FACTOR + 1, CAMERA_SLOWDOWN_FACTOR + 1);\r\n\r\n    ctx.translate(-camPos.x, -camPos.y);\r\n    ctx.drawImage(world.prerender, 0, 0);\r\n    keys.update();\r\n\r\n    ctx.fillStyle = 'blue';\r\n    ctx.fillRect(playerPos.x, playerPos.y, playerPos.w, playerPos.h);\r\n    const vel = new Point(0, 0);\r\n    if (keys.isKeyDown('a')) {\r\n        vel.x = -3;\r\n    }\r\n    if (keys.isKeyDown('d')) {\r\n        vel.x = 3;\r\n    }\r\n    if (keys.isKeyDown('w')) {\r\n        vel.y = -3;\r\n    }\r\n    if (keys.isKeyDown('s')) {\r\n        vel.y = 3;\r\n    }\r\n    ctx.fillStyle = 'yellow';\r\n    ctx.globalAlpha = 0.6;\r\n    world.tryMoveEntity(playerPos, vel, (tx, ty) => {\r\n        ctx.fillRect(tx * Const.TILE_SIZE, ty * Const.TILE_SIZE, Const.TILE_SIZE, Const.TILE_SIZE);\r\n    });\r\n    ctx.globalAlpha = 1;\r\n\r\n    toggle = !toggle;\r\n    if (toggle) {\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillRect(0, 0, 10, 10);\r\n    }\r\n    ctx.restore();\r\n    requestAnimationFrame(() => tick());\r\n}","export default __webpack_public_path__ + \"42ace1eb95edbc899165c10bb9cc20ab.png\";","export default __webpack_public_path__ + \"e5352b303b79e08de36a8c4248cdbb28.png\";","import Cell from './Cell';\r\nimport Rect from '../../common/position/Rectangle';\r\nimport Point from '../../common/position/Point';\r\nimport { Direction } from '../../common/position/Direction';\r\nimport { IterateRange } from '../../common/Iterate';\r\nimport * as Const from '../Constants';\r\nimport { createContext } from 'react';\r\nimport { ResizeCanvas } from '../../common/CanvasHelpers';\r\n\r\nexport default class World {\r\n    cells: Cell[][];\r\n\r\n    public prerender: HTMLCanvasElement;\r\n\r\n    constructor(public width: number, public height: number, generateCell: () => Cell) {\r\n        this.cells = [];\r\n        for (let x = 0; x < width; x++) {\r\n            const col = [];\r\n            for (let y = 0; y < height; y++) {\r\n                col.push(generateCell());\r\n            }\r\n            this.cells.push(col);\r\n        }\r\n\r\n        this.prerender = document.getElementById('world_prerender') as HTMLCanvasElement;\r\n    }\r\n\r\n    updatePrerender() {\r\n        ResizeCanvas(this.prerender, Const.TILE_SIZE * this.width, Const.TILE_SIZE * this.height);\r\n        const pctx = this.prerender.getContext('2d');\r\n        for (let x = 0; x < this.width; x++) {\r\n            for (let y = 0; y < this.height; y++) {\r\n                this.cells[x][y].paint(pctx, x * Const.TILE_SIZE, y * Const.TILE_SIZE);\r\n            }\r\n        }\r\n    }\r\n\r\n    tryMoveEntity(pos: Rect, vel: Point, onChecked?: (x: number, y: number) => void): void {\r\n        const xDirection = vel.x >= 0 ? Direction.Right : Direction.Left;\r\n        const yDirection = vel.y >= 0 ? Direction.Down : Direction.Up;\r\n        if (vel.x !== 0) {\r\n            const startXTile = Math.floor(pos.Edge(xDirection) / Const.TILE_SIZE);\r\n            const endXTile = Math.floor((pos.Edge(xDirection) + vel.x) / Const.TILE_SIZE);\r\n            const startYTile = Math.floor(pos.Edge(Direction.Up) / Const.TILE_SIZE);\r\n            const endYTile = Math.floor((pos.Edge(Direction.Down) - 1) / Const.TILE_SIZE);\r\n\r\n            let xColision: number | undefined;\r\n            IterateRange(startXTile, endXTile, (x, ctrl) => {\r\n                for (let y = startYTile; y <= endYTile; y++) {\r\n                    if (x < 0 || x >= this.width) {\r\n                        xColision = x;\r\n                        ctrl.break();\r\n                        return;\r\n                    }\r\n                    if (onChecked) onChecked(x, y);\r\n                    if (!this.cells[x][y].pathable) {\r\n                        ctrl.break();\r\n                        xColision = x;\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (xColision === undefined) {\r\n                pos.x += vel.x;\r\n            } else {\r\n                if (vel.x >= 0) pos.x = xColision * Const.TILE_SIZE - pos.w;\r\n                else pos.x = (xColision + 1) * Const.TILE_SIZE;\r\n            }\r\n        }\r\n        if (vel.y !== 0) {\r\n            const startYTile = Math.floor(pos.Edge(yDirection) / Const.TILE_SIZE);\r\n            const endYTile = Math.floor((pos.Edge(yDirection) + vel.y) / Const.TILE_SIZE);\r\n            const startXTile = Math.floor(pos.Edge(Direction.Left) / Const.TILE_SIZE);\r\n            const endXTile = Math.floor((pos.Edge(Direction.Right) - 1) / Const.TILE_SIZE);\r\n\r\n            let yColision: number | undefined;\r\n            IterateRange(startYTile, endYTile, (y, ctrl) => {\r\n                for (let x = startXTile; x <= endXTile; x++) {\r\n                    if (y < 0 || y >= this.height) {\r\n                        yColision = y;\r\n                        ctrl.break();\r\n                        return;\r\n                    }\r\n                    if (onChecked) onChecked(x, y);\r\n                    if (!this.cells[x][y].pathable) {\r\n                        ctrl.break();\r\n                        yColision = y;\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (yColision === undefined) {\r\n                pos.y += vel.y;\r\n            } else {\r\n                if (vel.y >= 0) pos.y = yColision * Const.TILE_SIZE - pos.h;\r\n                else pos.y = (yColision + 1) * Const.TILE_SIZE;\r\n            }\r\n        }\r\n    }\r\n}","\r\nexport interface ILoopControl {\r\n    break(): void;\r\n}\r\n\r\nexport function IterateRange(start: number, end: number, handle: (value: number, control: ILoopControl) => void): void {\r\n    let breakIteration = false;\r\n    const loopControl = {\r\n        break: () => {\r\n            breakIteration = true;\r\n        }\r\n    };\r\n\r\n    if (end === start) {\r\n        handle(start, loopControl);\r\n        return;\r\n    }\r\n\r\n    const direction = end > start ? 1 : -1;\r\n    const finalValue = end + direction;\r\n\r\n    for (let i = start; i !== finalValue && !breakIteration; i += direction) {\r\n        handle(i, loopControl);\r\n    }\r\n}","import { IGraphic } from '../IGraphic';\r\nimport * as Const from '../Constants';\r\nimport { SpriteSheet } from '../../common/assets/SpriteSheet';\r\nimport SheetGraphic from '../SheetGraphic';\r\n\r\nconst GRASS_TILES: [number, number][] =\r\n[\r\n    [10, 0],\r\n    [10, 0],\r\n    [10, 0],\r\n    [10, 0],\r\n    [10, 0],\r\n    [7, 1],\r\n    [7, 1],\r\n    [10, 1],\r\n    [10, 2],\r\n    [9, 2]\r\n];\r\n\r\nexport default class Cell {\r\n    constructor(public pathable: boolean, public graphic: IGraphic) {\r\n\r\n    }\r\n\r\n    paint(ctx: CanvasRenderingContext2D, tx: number, ty: number) {\r\n        this.graphic.paint(ctx, tx, ty, Const.TILE_SIZE, Const.TILE_SIZE);\r\n    }\r\n\r\n    static GrassFloor(sheet: SpriteSheet): Cell {\r\n        const grassCoords = GRASS_TILES[Math.floor(Math.random() * GRASS_TILES.length)];\r\n        return new Cell(true, new SheetGraphic(sheet, grassCoords[0], grassCoords[1]));\r\n    }\r\n\r\n    static RockWall(sheet: SpriteSheet): Cell {\r\n        return new Cell(false, new SheetGraphic(sheet, 7, 24));\r\n    }\r\n}","import { IGraphic } from './IGraphic';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\n\r\nexport default class SheetGraphic implements IGraphic {\r\n\r\n    width: number;\r\n    height: number;\r\n\r\n    constructor(public sheet: SpriteSheet, private tileX: number, private tileY: number) {\r\n        this.width = sheet.spriteWidth;\r\n        this.height = sheet.spriteHeight;\r\n    }\r\n\r\n    paint(ctx: CanvasRenderingContext2D, tx: number, ty: number, tw: number, th: number): void {\r\n        this.sheet.render(ctx, tx, ty, tw, th, this.tileX, this.tileY);\r\n    }\r\n\r\n}","import Point from './Point';\r\nimport { Direction, ECardinalDirection, EDiagonalDirection } from './Direction';\r\n\r\nexport default class Rect {\r\n    constructor(public x: number, public y: number, public w: number, public h: number) { }\r\n\r\n    Shift(x: number, y: number): Rect;\r\n    Shift(p: Point): Rect;\r\n    Shift(xp: number | Point, y?: number): Rect {\r\n        if (y === undefined) {\r\n            return new Rect(this.x + (xp as Point).x, this.y + (xp as Point).y, this.w, this.h);\r\n        }\r\n        return new Rect(this.x + (xp as number), this.y + y, this.w, this.h);\r\n    }\r\n\r\n    ShiftBy(x: number, y: number): void;\r\n    ShiftBy(p: Point): void;\r\n    ShiftBy(xp: number | Point, y?: number): void {\r\n        if (y === undefined) {\r\n            this.x += (xp as Point).x;\r\n            this.y += (xp as Point).y;\r\n        } else {\r\n            this.x += (xp as number);\r\n            this.y += y;\r\n        }\r\n    }\r\n\r\n    Edge(direction: ECardinalDirection): number {\r\n        switch (direction) {\r\n            case Direction.Up: return this.y;\r\n            case Direction.Down: return this.y + this.h;\r\n            case Direction.Left: return this.x;\r\n            case Direction.Right: return this.x + this.w;\r\n        }\r\n    }\r\n\r\n    Corner(direction: EDiagonalDirection): Point {\r\n        switch (direction) {\r\n            case Direction.UpRight: return new Point(this.x, this.y);\r\n            case Direction.DownRight: return new Point(this.x, this.y);\r\n            case Direction.DownLeft: return new Point(this.x, this.y);\r\n            case Direction.UpLeft: return new Point(this.x, this.y);\r\n        }\r\n    }\r\n\r\n    equals(r: Rect) {\r\n        return r.x === this.x && r.y === this.y && r.w === this.w && r.h === this.h;\r\n    }\r\n}","import KeyWatcher, { IKeyChange } from './KeyWatcher';\r\nimport KeyState from './KeyState';\r\n\r\nexport default class KeyboardManager {\r\n\r\n    watcher: KeyWatcher;\r\n    prvState: KeyState;\r\n    currentState: KeyState;\r\n\r\n    constructor(element: HTMLElement, logKeyNames?: boolean) {\r\n        this.watcher = new KeyWatcher(element, logKeyNames);\r\n        this.prvState = this.currentState = this.watcher.Update();\r\n    }\r\n\r\n    public update(): void {\r\n        this.prvState = this.currentState;\r\n        this.currentState = this.watcher.Update();\r\n    }\r\n\r\n    public isKeyDown(key: string): boolean {\r\n        return this.currentState.isKeyDown(key);\r\n    }\r\n\r\n    public isKeyUp(key: string): boolean {\r\n        return this.currentState.isKeyUp(key);\r\n    }\r\n\r\n    public isKeyPressed(key: string): boolean {\r\n        return this.currentState.isKeyDown(key) && this.prvState.isKeyUp(key);\r\n    }\r\n\r\n    public isKeyReleased(key: string): boolean {\r\n        return this.currentState.isKeyUp(key) && this.prvState.isKeyDown(key);\r\n    }\r\n\r\n    public changes(): IKeyChange[] {\r\n        return this.currentState.changes;\r\n    }\r\n}","import KeyState from './KeyState';\r\n\r\nexport interface IKeyChange {\r\n    key: string;\r\n    change: 'press'|'release';\r\n}\r\n\r\nexport default class KeyWatcher {\r\n    downKeys: string[];\r\n    changes: IKeyChange[];\r\n\r\n    constructor(public attachedElement: HTMLElement, private logKeyNames?: boolean) {\r\n        if  (this.logKeyNames === undefined) {\r\n            this.logKeyNames = false;\r\n        }\r\n        attachedElement.addEventListener('keydown', k => this.onKeyDown(k));\r\n        attachedElement.addEventListener('keyup', k => this.onKeyUp(k));\r\n\r\n        this.downKeys = [];\r\n        this.changes = [];\r\n    }\r\n\r\n    private onKeyDown(key: KeyboardEvent) {\r\n        if (this.logKeyNames) {\r\n            // tslint:disable-next-line: no-console\r\n            console.log(key.key);\r\n        }\r\n        const idx = this.downKeys.indexOf(key.key);\r\n        if (idx === -1) {\r\n            this.changes.push({ key: key.key, change: 'press' });\r\n            this.downKeys.push(key.key);\r\n        }\r\n    }\r\n\r\n    private onKeyUp(key: KeyboardEvent) {\r\n        this.changes.push({ key: key.key, change: 'release' });\r\n        const idx = this.downKeys.indexOf(key.key);\r\n        this.downKeys.splice(idx, 1);\r\n    }\r\n\r\n    public Update(): KeyState {\r\n        const storeKeys = this.downKeys;\r\n        const storeChanges = this.changes;\r\n\r\n        this.downKeys = storeKeys.slice();\r\n        this.changes = [];\r\n\r\n        return new KeyState(storeKeys, storeChanges);\r\n    }\r\n}","import { IKeyChange } from './KeyWatcher';\r\n\r\nexport default class KeyState {\r\n    constructor(public keys: string[], public changes: IKeyChange[]) {\r\n\r\n    }\r\n\r\n    public isKeyDown(key: string) {\r\n        return this.keys.indexOf(key) !== -1;\r\n    }\r\n\r\n    public isKeyUp(key: string) {\r\n        return this.keys.indexOf(key) === -1;\r\n    }\r\n}","import Axios from 'axios-observable';\r\n\r\nexport class FileResource<T> {\r\n    public body: T;\r\n    constructor(fileUrl: string, private onload: () => void) {\r\n        Axios.get(fileUrl).subscribe(data => {\r\n            this.body = data.data as T;\r\n            this.onload();\r\n        });\r\n    }\r\n}","import * as React from 'react';\r\nimport Run, { ForceResizeCheck } from '../../../projects/dndmech';\r\nimport useWindowSize from '../../../hooks/useWindowSize';\r\n\r\nexport function DndMechComponent() {\r\n\r\n    React.useEffect(() => {\r\n        Run();\r\n    }, []);\r\n\r\n    React.useEffect(ForceResizeCheck);\r\n\r\n    const { width, height } = useWindowSize();\r\n\r\n    return <div className='full_body' style={{ display: 'flex', height: height + 'px' }}>\r\n        <div style={{ flexGrow: 0 }}>MECH STATUS</div>\r\n        <div className='center' style={{ flexGrow: 1, height: '100%' }}>\r\n            <canvas id='canvas'></canvas>\r\n        </div>\r\n    </div>;\r\n}","import * as Const from './Constants';\r\nimport AssetLoader from '../common/assets/AssetLoader';\r\nimport { NearestNeighborScaling, ResizeCanvas } from '../common/CanvasHelpers';\r\nimport NearestNeighborScalingHelper from '../common/NearestNeighborScalingHelper';\r\nimport ImageLoader from '../common/assets/ImageLoader';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport baseImgUrl from './assets/MechIndicators.png';\r\nimport symbolUrl from './assets/MechSymbols.png';\r\nimport Symbol from './Symbol';\r\nimport { SYMBOL_LOC } from './Coords';\r\n\r\nlet ctx: CanvasRenderingContext2D;\r\nlet baseImg: ImageLoader;\r\nlet symbolSheet: SpriteSheet;\r\n\r\nconst symbols: Symbol[] = [];\r\n\r\nexport default function Run() {\r\n    const assetLoader = new AssetLoader();\r\n    baseImg = new ImageLoader(baseImgUrl, assetLoader.registerAssetLoadCallback());\r\n    symbolSheet = new SpriteSheet(6, 6, symbolUrl, assetLoader.registerAssetLoadCallback());\r\n    assetLoader.onAllFinished(assetLoadDone);\r\n\r\n    for (const symdef of SYMBOL_LOC) {\r\n        symbols.push(new Symbol(symdef.x, symdef.y, symdef.def));\r\n    }\r\n}\r\n\r\nlet scaleHelper: NearestNeighborScalingHelper;\r\nexport function ForceResizeCheck() {\r\n    if (scaleHelper !== undefined) {\r\n        scaleHelper.Rescale();\r\n    }\r\n}\r\n\r\nfunction assetLoadDone() {\r\n    const canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n    ctx = canvas.getContext('2d');\r\n    scaleHelper = new NearestNeighborScalingHelper(canvas, ctx, Const.FULL_W, Const.FULL_H, false, repaint);\r\n\r\n    canvas.addEventListener('mousedown', mouseEvent => {\r\n        const px = mouseEvent.offsetX / scaleHelper.scaleFactor;\r\n        const py = mouseEvent.offsetY / scaleHelper.scaleFactor;\r\n        for (const sym of symbols) {\r\n            if (px >= sym.x && px <= sym.x + 6 && py >= sym.y && py <= sym.y + 6) {\r\n                sym.Toggle();\r\n                repaint();\r\n                return;\r\n            }\r\n        }\r\n    });\r\n\r\n    repaint();\r\n}\r\n\r\nfunction repaint() {\r\n    ctx.clearRect(0, 0, Const.FULL_W, Const.FULL_H);\r\n    NearestNeighborScaling(ctx);\r\n    ctx.fillStyle = '#9eaec7';\r\n    ctx.fillRect(0, 0, Const.FULL_W, Const.FULL_H);\r\n    ctx.drawImage(baseImg.image, 0, 0);\r\n\r\n    for (const sym of symbols) {\r\n        sym.Draw(ctx, symbolSheet);\r\n    }\r\n}","export const FULL_W = 150;\r\nexport const FULL_H = 125;","export default class ImageLoader {\r\n    public image: HTMLImageElement;\r\n\r\n    constructor(imageUrl: string, onLoad: () => void) {\r\n        this.image = document.createElement('img');\r\n        this.image.src = '/dist/' + imageUrl;\r\n        this.image.addEventListener('load', onLoad);\r\n    }\r\n}","export default __webpack_public_path__ + \"a992a82de8a4d45e189cc9dde3c67903.png\";","export default __webpack_public_path__ + \"a8b1c8f36276b2667488aa9d218adda4.png\";","import { ISymbolDefinition } from './SymbolDefinitions';\r\nimport { ClickDragWrapper } from '../mandelbrot/ClickDragWrapper';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\n\r\nexport default class Symbol {\r\n    private currentXCoord: number;\r\n    constructor(public x: number, public y: number, public definition: ISymbolDefinition) {\r\n        this.currentXCoord = this.definition.SpriteStartXCoord;\r\n    }\r\n\r\n    Toggle() {\r\n        this.currentXCoord++;\r\n        if (this.currentXCoord > this.definition.SpriteEndXCoord) {\r\n            this.currentXCoord = this.definition.SpriteStartXCoord;\r\n        }\r\n    }\r\n\r\n    Draw(ctx: CanvasRenderingContext2D, sheet: SpriteSheet) {\r\n        sheet.render(ctx, this.x, this.y, 6, 6, this.currentXCoord, 0);\r\n    }\r\n}","import { ISymbolDefinition, fullHealth, armor, partHealth, critHealth } from './SymbolDefinitions';\r\n\r\nexport const SYMBOL_LOC: { x: number, y: number, def: ISymbolDefinition }[] = [\r\n    // HEAD\r\n    ...SymbolRow(37, 0, 2, 0, 7, armor),\r\n    ...SymbolBlock(44, 0, 3, [ { count: 3, def: fullHealth }, { count: 2, def: partHealth }, {count: 1, def: critHealth}]),\r\n\r\n    // BODY\r\n    ...SymbolRow(94, 14, 4, 7, 0, armor),\r\n    ...SymbolBlock(94, 21, 8, [ { count: 8, def: fullHealth }, { count: 4, def: partHealth }, {count: 4, def: critHealth}]),\r\n\r\n    // CORE\r\n    ...SymbolRow(8, 19, 3, 7, 0, fullHealth),\r\n\r\n    // L-ARM\r\n    ...SymbolRow(0, 36, 4, 7, 0, armor),\r\n    ...SymbolBlock(0, 43, 5, [ { count: 2, def: fullHealth }, { count: 2, def: partHealth }, {count: 1, def: critHealth}]),\r\n\r\n    // R-ARM\r\n    ...SymbolRow(101, 42, 4, 7, 0, armor),\r\n    ...SymbolBlock(101, 49, 5, [ { count: 2, def: fullHealth }, { count: 2, def: partHealth }, {count: 1, def: critHealth}]),\r\n\r\n    // L-HAND\r\n    ...SymbolRow(17, 66, 2, 7, 0, armor),\r\n    ...SymbolBlock(17, 73, 3, [ { count: 1, def: fullHealth }, { count: 1, def: partHealth }, {count: 1, def: critHealth}]),\r\n\r\n    // R-HAND\r\n    ...SymbolRow(93, 66, 2, 7, 0, armor),\r\n    ...SymbolBlock(93, 73, 3, [ { count: 1, def: fullHealth }, { count: 1, def: partHealth }, {count: 1, def: critHealth}]),\r\n\r\n    // L-LEG\r\n    ...SymbolRow(13, 91, 4, 7, 0, armor),\r\n    ...SymbolBlock(13, 98, 5, [ { count: 2, def: fullHealth }, { count: 2, def: partHealth }, {count: 1, def: critHealth}]),\r\n\r\n    // R-LEG\r\n    ...SymbolRow(85, 91, 4, 7, 0, armor),\r\n    ...SymbolBlock(85, 98, 5, [ { count: 2, def: fullHealth }, { count: 2, def: partHealth }, {count: 1, def: critHealth}]),\r\n];\r\n\r\nfunction SymbolRow(x: number, y: number, count: number, dx: number, dy: number, def: ISymbolDefinition) {\r\n    const results: { x: number, y: number, def: ISymbolDefinition }[] = [];\r\n    for (let i = 0; i < count; i++) {\r\n        results.push({x, y, def});\r\n        if (dx !== 0) x += dx;\r\n        if (dy !== 0) y += dy;\r\n    }\r\n    return results;\r\n}\r\n\r\nfunction SymbolBlock(sx: number, sy: number, width: number, types: { def: ISymbolDefinition, count: number }[]) {\r\n    let x = sx;\r\n    let xn = 0;\r\n    let y = sy;\r\n    const results: { x: number, y: number, def: ISymbolDefinition }[] = [];\r\n    while (types.length > 0) {\r\n        results.push({ x, y, def: types[0].def});\r\n        xn ++;\r\n        x += 7;\r\n        if (xn === width) {\r\n            // New row\r\n            x = sx;\r\n            y += 7;\r\n            xn = 0;\r\n        }\r\n\r\n        types[0].count--;\r\n        if (types[0].count === 0) types.splice(0, 1);\r\n    }\r\n    return results;\r\n}","export interface ISymbolDefinition {\r\n    SpriteStartXCoord: number;\r\n    SpriteEndXCoord: number;\r\n}\r\n\r\nexport const fullHealth: ISymbolDefinition = {\r\n    SpriteStartXCoord: 0,\r\n    SpriteEndXCoord: 1\r\n};\r\n\r\nexport const partHealth: ISymbolDefinition = {\r\n    SpriteStartXCoord: 2,\r\n    SpriteEndXCoord: 3\r\n};\r\n\r\nexport const critHealth: ISymbolDefinition = {\r\n    SpriteStartXCoord: 4,\r\n    SpriteEndXCoord: 5\r\n};\r\n\r\nexport const armor: ISymbolDefinition = {\r\n    SpriteStartXCoord: 6,\r\n    SpriteEndXCoord: 9\r\n};","import { useState, useEffect } from 'react';\r\n\r\n// Stolen from https://usehooks.com/useWindowSize/\r\nexport default function useWindowSize() {\r\n    const isClient = typeof window === 'object';\r\n    function getSize() {\r\n      return {\r\n        width: isClient ? window.innerWidth : undefined,\r\n        height: isClient ? window.innerHeight : undefined\r\n      };\r\n    }\r\n    const [windowSize, setWindowSize] = useState(getSize);\r\n    useEffect(() => {\r\n      if (!isClient) {\r\n        return;\r\n      }\r\n      function handleResize() {\r\n        setWindowSize(getSize());\r\n      }\r\n      window.addEventListener('resize', handleResize);\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    }, []); // Empty array ensures that effect is only run on mount and unmount\r\n    return windowSize;\r\n}","import * as React from 'react';\r\nimport Run, { ForceResizeCheck } from '../../../projects/dndmech';\r\nimport useWindowSize from '../../../hooks/useWindowSize';\r\nimport * as signalR from '@microsoft/signalr';\r\nimport useSignalR from '../../../hooks/useSignalr';\r\n\r\n// tslint:disable-next-line: no-empty-interface\r\ninterface ISignalRTestComponentProps {\r\n\r\n}\r\n// tslint:disable-next-line: no-empty-interface\r\ninterface ISignalRTestComponentState {\r\n    connection?: signalR.HubConnection;\r\n    sendMessage?: (channel: string, data: any) => void;\r\n    err?: any;\r\n\r\n    messages: string[];\r\n    inputText: string;\r\n}\r\n\r\nexport class SignalrTestComponent extends React.Component<ISignalRTestComponentProps, ISignalRTestComponentState> {\r\n\r\n    constructor(props: ISignalRTestComponentProps) {\r\n        super(props);\r\n\r\n        this.state = { messages: [], inputText: '' };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Bind signalr\r\n        const hubConnection = new signalR.HubConnectionBuilder()\r\n            .configureLogging(signalR.LogLevel.Trace)\r\n            .withUrl(window.prompt('Enter server URL:'))\r\n            .build();\r\n\r\n        this.setState({ connection: hubConnection });\r\n\r\n        hubConnection.start()\r\n            .then(() => {\r\n                this.setState({ sendMessage: (methodName: string, data: any) => {\r\n                    // Send message func\r\n                    this.state.connection.send(methodName, data)\r\n                        .catch(err => this.setState({ err }));\r\n                }});\r\n\r\n                // BIND LISTENERS\r\n                hubConnection.on('message', (msg) => {\r\n                    this.onMessageRecieved(msg);\r\n                });\r\n            })\r\n            .catch(err => this.setState({ err }));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // Dispose connection\r\n        if (this.state.connection !== undefined) this.state.connection.stop();\r\n    }\r\n\r\n    onMessageRecieved(msg: any) {\r\n        this.setState({\r\n            messages: [...this.state.messages, msg as string]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.connection === undefined) return <div>Waiting...</div>;\r\n        if (this.state.sendMessage === undefined) return <div>Connecting...</div>;\r\n        return <div>\r\n            <h1>Connected!</h1>\r\n            <div>Messages: </div>\r\n            {this.state.messages.map((msg, i) =>\r\n                    <div key={i}>{msg}</div>)}\r\n            <input type='text' value={this.state.inputText} onChange={ev => this.setState({ inputText: ev.target.value })}></input>\r\n            <button onClick={() => {\r\n                this.state.sendMessage('message', this.state.inputText);\r\n                this.setState({ inputText: '' });\r\n            }}>Send</button>\r\n        </div>;\r\n    }\r\n}","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","export function distinct<T>(items: T[]) {\r\n    const results = [];\r\n    for (const item of items) {\r\n        if (results.indexOf(item) === -1) {\r\n            results.push(item);\r\n        }\r\n    }\r\n    return results;\r\n}\r\n\r\nexport function groupBy<T>(items: T[], keySelector: (item: T) => string): { key: string, items: T[] }[] {\r\n    const results: { [key: string]: T[] } = {};\r\n    for (const item of items) {\r\n        const key = keySelector(item);\r\n        if (results[key] !== undefined) {\r\n            results[key].push(item);\r\n        } else {\r\n            results[key] = [ item ];\r\n        }\r\n    }\r\n    return Object.keys(results).map(key => ({ key, items: results[key] }));\r\n}","import * as React from 'react';\r\n\r\nexport interface IPageProps {\r\n    title: string;\r\n    component: React.ComponentType<{}>;\r\n}\r\n\r\nexport class Page extends React.Component<IPageProps, {}> {\r\n    componentDidMount() {\r\n        document.title = this.props.title;\r\n    }\r\n    render() {\r\n        // tslint:disable-next-line: variable-name\r\n        const PageComponent = this.props.component;\r\n\r\n        return (\r\n            <PageComponent />\r\n        );\r\n    }\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; }, 0);\n}","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!(<any>teardown)) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { noop } from './noop';\nimport { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse\n   * @deprecated use new Subject() instead\n  */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the *publish* operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { tap, publish, refCount } from 'rxjs/operators';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap((num) => console.log(`refCount ${num}`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap((num) => console.log(`publish ${num}`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the publish operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // )\n    // .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = (() => {\n  const connectableProto = <any>ConnectableObservable.prototype;\n  return {\n    operator: { value: null as null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null as null, writable: true },\n    _connection: { value: null as null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n  };\n})();\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // ).subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the keySelector function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Elsewhere, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the key field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the elementSelector function.\n *\n * ## Examples\n *\n * ### Group objects by id and return as array\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { mergeMap, groupBy, reduce } from 'rxjs/operators';\n *\n * of(\n *   {id: 1, name: 'JavaScript'},\n *   {id: 2, name: 'Parcel'},\n *   {id: 2, name: 'webpack'},\n *   {id: 1, name: 'TypeScript'},\n *   {id: 3, name: 'TSLint'}\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap((group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], []))),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'JavaScript'},\n * //   { id: 1, name: 'TypeScript'} ]\n * //\n * // [ { id: 2, name: 'Parcel'},\n * //   { id: 2, name: 'webpack'} ]\n * //\n * // [ { id: 3, name: 'TSLint'} ]\n * ```\n *\n * ### Pivot data on the id field\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { groupBy, map, mergeMap, reduce } from 'rxjs/operators';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * )\n *   .pipe(\n *     groupBy(p => p.id, p => p.name),\n *     mergeMap(group$ =>\n *       group$.pipe(reduce((acc, cur) => [...acc, cur], [`${group$.key}`]))\n *     ),\n *     map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n *  )\n *  .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T | R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map<K, Subject<T | R>>();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = (this.subjectSelector ? this.subjectSelector() : new Subject<R>()) as Subject<T | R>;\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T | any>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  /** @deprecated Do not construct this type. Internal use only */\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const { refCountSubscription, groupSubject } = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```ts\n * import { empty } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```ts\n * import { empty, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return An \"empty\" Observable: emits only the complete\n * notification.\n * @deprecated Deprecated in favor of using {@link EMPTY} constant, or {@link scheduled} (e.g. `scheduled([], scheduler)`)\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  subscriber.complete();\n};\n","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { deprecate } from 'util';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated NotificationKind is deprecated as const enums are not compatible with isolated modules. Use a string literal instead.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: 'N' | 'E' | 'C', public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let i = 0;\n    sub.add(scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n        return;\n      }\n      subscriber.next(input[i++]);\n      if (!subscriber.closed) {\n        sub.add(this.schedule());\n      }\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return scheduleArray(input, scheduler);\n  }\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { Observable } from '../Observable';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T>(a: T, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2>(a: T, b: T2, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: (T | SchedulerLike)[]): Observable<T>;\n\n// TODO(benlesh): Update the typings for this when we can switch to TS 3.x\nexport function of<T>(a: T): Observable<T>;\nexport function of<T, T2>(a: T, b: T2): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: T[]): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n    return scheduleArray(args as T[], scheduler);\n  } else {\n    return fromArray(args as T[]);\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * ![](throw.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then emit an error\n * ```ts\n * import { throwError, concat, of } from 'rxjs';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // 7\n * // Error: oops!\n * ```\n *\n * ---\n *\n * ### Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 2\n * ```ts\n * import { throwError, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 2\n *     ? throwError('Twos are bad')\n *     : of('a', 'b', 'c')\n *   ),\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // a\n * // b\n * // c\n * // a\n * // b\n * // c\n * // Twos are bad\n * ```\n *\n * @see {@link Observable}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throwError\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n * Ensure values in subscribe are called just before browser repaint.\n * ```ts\n * import { interval } from 'rxjs';\n * import { observeOn } from 'rxjs/operators';\n *\n * const intervals = interval(10);                // Intervals are scheduled\n *                                                // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler),          // ...but we will observe on animationFrame\n * )                                              // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  /** @nocollapse */\n  static dispatch(this: SchedulerAction<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: SchedulerLike,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    const destination = this.destination as Subscription;\n    destination.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Subject } from './Subject';\nimport { SchedulerLike } from './types';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * A variant of Subject that \"replays\" or emits old values to new subscribers.\n * It buffers a set number of values and will emit those values immediately to\n * any new subscribers in addition to emitting new values to existing subscribers.\n *\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: (ReplayEvent<T> | T)[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n  private _infiniteTimeWindow: boolean = false;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: SchedulerLike) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      this._infiniteTimeWindow = true;\n      this.next = this.nextInfiniteTimeWindow;\n    } else {\n      this.next = this.nextTimeWindow;\n    }\n  }\n\n  private nextInfiniteTimeWindow(value: T): void {\n    const _events = this._events;\n    _events.push(value);\n    // Since this method is invoked in every next() call than the buffer\n    // can overgrow the max size only by one item\n    if (_events.length > this._bufferSize) {\n      _events.shift();\n    }\n\n    super.next(value);\n  }\n\n  private nextTimeWindow(value: T): void {\n    this._events.push(new ReplayEvent(this._getNow(), value));\n    this._trimBufferThenGetEvents();\n\n    super.next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n    const _infiniteTimeWindow = this._infiniteTimeWindow;\n    const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    const len = _events.length;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.isStopped || this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    if (_infiniteTimeWindow) {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(<T>_events[i]);\n      }\n    } else {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next((<ReplayEvent<T>>_events[i]).value);\n      }\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = <ReplayEvent<T>[]>this._events;\n\n    const eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    RESOLVED.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @nodoc\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable<T>(obj: any): obj is Observable<T> {\n  return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","export interface ArgumentOutOfRangeError extends Error {\n}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  new(): ArgumentOutOfRangeError;\n}\n\nconst ArgumentOutOfRangeErrorImpl = (() => {\n  function ArgumentOutOfRangeErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n  }\n\n  ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ArgumentOutOfRangeErrorImpl;\n})();\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = ArgumentOutOfRangeErrorImpl as any;","export interface EmptyError extends Error {\n}\n\nexport interface EmptyErrorCtor {\n  new(): EmptyError;\n}\n\nconst EmptyErrorImpl = (() => {\n  function EmptyErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'no elements in sequence';\n    this.name = 'EmptyError';\n    return this;\n  }\n\n  EmptyErrorImpl.prototype = Object.create(Error.prototype);\n\n  return EmptyErrorImpl;\n})();\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = EmptyErrorImpl as any;","export interface TimeoutError extends Error {\n}\n\nexport interface TimeoutErrorCtor {\n  new(): TimeoutError;\n}\n\nconst TimeoutErrorImpl = (() => {\n  function TimeoutErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    return this;\n  }\n\n  TimeoutErrorImpl.prototype = Object.create(Error.prototype);\n\n  return TimeoutErrorImpl;\n})();\n\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link operators/timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = TimeoutErrorImpl as any;\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: R;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n\n// tslint:disable:max-line-length\n/** @deprecated resultSelector is no longer supported, use a mapping function. */\nexport function bindCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindCallback<R1, R2, R3, R4>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): () => Observable<any[]>;\nexport function bindCallback<R1, R2, R3>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindCallback<R1, R2>(callbackFunc: (callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindCallback<R1>(callbackFunc: (callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindCallback(callbackFunc: (callback: () => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<any[]>;\nexport function bindCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindCallback<A1>(callbackFunc: (arg1: A1, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<any[]>;\nexport function bindCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>;\n\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((result: R) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R>;\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((...results: R[]) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R[]>;\n\nexport function bindCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\n// tslint:enable:max-line-length\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback<T>(\n  callbackFunc: Function,\n  resultSelector?: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindCallback(callbackFunc, scheduler)(...args).pipe(\n        map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)),\n      );\n    }\n  }\n\n  return function (this: any, ...args: any[]): Observable<T> {\n    const context = this;\n    let subject: AsyncSubject<T>;\n    const params = {\n      context,\n      subject,\n      callbackFunc,\n      scheduler,\n    };\n    return new Observable<T>(subscriber => {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        const state: DispatchState<T> = {\n          args, subscriber, params,\n        };\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, state);\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  args: any[];\n  subscriber: Subscriber<T>;\n  params: ParamsContext<T>;\n}\n\ninterface ParamsContext<T> {\n  callbackFunc: Function;\n  scheduler: SchedulerLike;\n  context: any;\n  subject: AsyncSubject<T>;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const self = this;\n  const { args, subscriber, params } = state;\n  const { callbackFunc, context, scheduler } = params;\n  let { subject } = params;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n      this.add(scheduler.schedule<NextState<T>>(dispatchNext, 0, { value, subject }));\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface NextState<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(this: SchedulerAction<NextState<T>>, state: NextState<T>) {\n  const { value, subject } = state;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface ErrorState<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(this: SchedulerAction<ErrorState<T>>, state: ErrorState<T>) {\n  const { err, subject } = state;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function bindNodeCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindNodeCallback<R1, R2, R3, R4>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<R1, R2, R3>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<R1, R2>(callbackFunc: (callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindNodeCallback<R1>(callbackFunc: (callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindNodeCallback(callbackFunc: (callback: (err: any) => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindNodeCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindNodeCallback<A1>(callbackFunc: (arg1: A1, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindNodeCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>; /* tslint:enable:max-line-length */\n\nexport function bindNodeCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback<T>(\n  callbackFunc: Function,\n  resultSelector: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(\n        map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n      );\n    }\n  }\n\n  return function(this: any, ...args: any[]): Observable<T> {\n    const params: ParamsState<T> = {\n      subject: undefined,\n      args,\n      callbackFunc,\n      scheduler,\n      context: this,\n    };\n    return new Observable<T>(subscriber => {\n      const { context } = params;\n      let { subject } = params;\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            const err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, { params, subscriber, context });\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  subscriber: Subscriber<T>;\n  context: any;\n  params: ParamsState<T>;\n}\n\ninterface ParamsState<T> {\n  callbackFunc: Function;\n  args: any[];\n  scheduler: SchedulerLike;\n  subject: AsyncSubject<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const { params, subscriber, context } = state;\n  const { callbackFunc, args, scheduler } = params;\n  let subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const err = innerArgs.shift();\n      if (err) {\n        this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        this.add(scheduler.schedule<DispatchNextArg<T>>(dispatchNext, 0, { value, subject }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","/**\n * Tests to see if the object is an ES2015 (ES6) Promise\n * @see {@link https://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects}\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return !!value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>): (subscriber: Subscriber<T>) => Subscription | void => {\n  if (!!result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (!!result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = iterable[Symbol_iterator]();\n  do {\n    const item = iterator.next();\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue: undefined,\n  outerIndex: undefined,\n  innerSubscriber: InnerSubscriber<T, R>\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  innerSubscriber: Subscriber<R> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)\n): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  return subscribeTo(result)(innerSubscriber) as Subscription;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler  } from '../util/isScheduler';\nimport { isArray  } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Operator } from '../Operator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\n\nconst NONE = {};\n\n/* tslint:disable:max-line-length */\n\n// If called with a single array, it \"auto-spreads\" the array, with result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(sources: [O1], resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(sources: [O1, O2], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(sources: [O1, O2, O3], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5, O6], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(sources: O[], resultSelector: (...args: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// standard call, but with a result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// With a scheduler (deprecated)\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[], scheduler: SchedulerLike): Observable<ObservedValueOf<O>[]>;\n\n// Best case\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1]): Observable<[ObservedValueOf<O1>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[]): Observable<ObservedValueOf<O>[]>;\n\n// Standard calls\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>>(v1: O1, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: O[]): Observable<any[]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: Array<O | SchedulerLike>): Observable<any[]>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike>): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | SchedulerLike>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n * ## Examples\n * ### Combine two timer Observables\n * ```ts\n * import { combineLatest, timer } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * ### Combine an array of Observables\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { delay, starWith } from 'rxjs/operators';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000),   // emit 0 and then emit n after n seconds\n *     startWith(0),\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n *\n * ### Use project function to dynamically calculate the Body-Mass Index\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest(weight, height).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(\n  ...observables: (O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike)[]\n): Observable<R> {\n  let resultSelector: (...values: Array<any>) => R =  null;\n  let scheduler: SchedulerLike = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop() as SchedulerLike;\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop() as (...values: Array<any>) => R;\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0] as any;\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator<ObservedValueOf<O>, R>(resultSelector));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private resultSelector?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private resultSelector?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryResultSelector(values: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { ObservableInput, SchedulerLike, Observable } from 'rxjs';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see from\n * @see of\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => input.then(\n      value => {\n        sub.add(scheduler.schedule(() => {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(() => subscriber.complete()));\n        }));\n      },\n      err => {\n        sub.add(scheduler.schedule(() => subscriber.error(err)));\n      }\n    )));\n    return sub;\n  });\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let iterator: Iterator<T>;\n    sub.add(() => {\n      // Finalize generators\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(() => {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n        let value: T;\n        let done: boolean;\n        try {\n          const result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated use {@link scheduled} instead. */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  } else {\n    return scheduled(input, scheduler);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```ts\n * import { of, interval } from 'rxjs';\n * import { mergeMap, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: number) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = subscribeToResult<T, R>(this, ish, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map((ev) => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { take, map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(10))),\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<ObservableInput<T>, T> {\n  return mergeMap(identity, concurrent);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>>(v1: O1, scheduler: SchedulerLike): Observable<ObservedValueOf<O1>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\n\nexport function concat<O1 extends ObservableInput<any>>(v1: O1): Observable<ObservedValueOf<O1>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\nexport function concat<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O extends ObservableInput<any>>(...observables: (O | SchedulerLike)[]): Observable<ObservedValueOf<O>>;\nexport function concat<R>(...observables: ObservableInput<any>[]): Observable<R>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<R>(...observables: (ObservableInput<any> | SchedulerLike)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n * ### Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n * ```ts\n * import { concat, interval, range } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * ### Concatenate 3 Observables\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * ### Concatenate the same Observable to repeat it\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {SchedulerLike} [scheduler=null] An optional {@link SchedulerLike} to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<O extends ObservableInput<any>, R>(...observables: Array<O | SchedulerLike>): Observable<ObservedValueOf<O> | R> {\n  return concatAll<R>()(of(...observables));\n}\n","\nimport { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function concatAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.png)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, take, concatAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev => interval(1000).pipe(take(4))),\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return mergeAll<T>(1);\n}\n","import { Observable } from '../Observable';\nimport { SubscribableOrPromise, ObservedValueOf, ObservableInput } from '../types';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * ## Example\n * ### Subscribe to either an Observable of clicks or an Observable of interval, at random\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(function () {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer<R extends ObservableInput<any> | void>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>(subscriber => {\n    let input: R | void;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    const source = input ? from(input as ObservableInput<ObservedValueOf<R>>) : empty();\n    return source.subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservedValuesFromArray, ObservedValueOf, SubscribableOrPromise } from '../types';\nimport { isArray } from '../util/isArray';\nimport { map } from '../operators/map';\nimport { isObject } from '../util/isObject';\nimport { isObservable } from '../util/isObservable';\nimport { from } from './from';\n\n/* tslint:disable:max-line-length */\n\n// forkJoin(a$, b$, c$)\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(v1: SubscribableOrPromise<T>): Observable<[T]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n// forkJoin([a$, b$, c$]);\n// TODO(benlesh): Uncomment for TS 3.0\n// export function forkJoin(sources: []): Observable<never>;\nexport function forkJoin<A>(sources: [ObservableInput<A>]): Observable<[A]>;\nexport function forkJoin<A, B>(sources: [ObservableInput<A>, ObservableInput<B>]): Observable<[A, B]>;\nexport function forkJoin<A, B, C>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<[A, B, C]>;\nexport function forkJoin<A, B, C, D>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<[A, B, C, D]>;\nexport function forkJoin<A, B, C, D, E>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<[A, B, C, D, E]>;\nexport function forkJoin<A, B, C, D, E, F>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>, ObservableInput<F>]): Observable<[A, B, C, D, E, F]>;\nexport function forkJoin<A extends ObservableInput<any>[]>(sources: A): Observable<ObservedValuesFromArray<A>[]>;\n\n// forkJoin({})\nexport function forkJoin(sourcesObject: {}): Observable<never>;\nexport function forkJoin<T, K extends keyof T>(sourcesObject: T): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function forkJoin(...args: Array<ObservableInput<any>|Function>): Observable<any>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(...sources: ObservableInput<T>[]): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed observables to complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first observable,\n * second value is the last thing emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, resulting\n * objects will have the same keys as the dictionary passed, with their last values they've emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input observables, whenever any of\n * that observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input observable errors at some point, `forkJoin` will error as well and all other observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output observable is supposed to emit a result.\n *\n * ## Examples\n *\n * ### Use forkJoin with a dictionary of observable inputs\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000),\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * ### Use forkJoin with an array of observable inputs\n * ```ts\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000),\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(\n  ...sources: any[]\n): Observable<any> {\n  if (sources.length === 1) {\n    const first = sources[0];\n    if (isArray(first)) {\n      return forkJoinInternal(first, null);\n    }\n    // TODO(benlesh): isObservable check will not be necessary when deprecated path is removed.\n    if (isObject(first) && Object.getPrototypeOf(first) === Object.prototype) {\n      const keys = Object.keys(first);\n      return forkJoinInternal(keys.map(key => first[key]), keys);\n    }\n  }\n\n  // DEPRECATED PATHS BELOW HERE\n  if (typeof sources[sources.length - 1] === 'function') {\n    const resultSelector = sources.pop() as Function;\n    sources = (sources.length === 1 && isArray(sources[0])) ? sources[0] : sources;\n    return forkJoinInternal(sources, null).pipe(\n      map((args: any[]) => resultSelector(...args))\n    );\n  }\n\n  return forkJoinInternal(sources, null);\n}\n\nfunction forkJoinInternal(sources: ObservableInput<any>[], keys: string[] | null): Observable<any> {\n  return new Observable(subscriber => {\n    const len = sources.length;\n    if (len === 0) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(len);\n    let completed = 0;\n    let emitted = 0;\n    for (let i = 0; i < len; i++) {\n      const source = from(sources[i]);\n      let hasValue = false;\n      subscriber.add(source.subscribe({\n        next: value => {\n          if (!hasValue) {\n            hasValue = true;\n            emitted++;\n          }\n          values[i] = value;\n        },\n        error: err => subscriber.error(err),\n        complete: () => {\n          completed++;\n          if (completed === len || !hasValue) {\n            if (emitted === len) {\n              subscriber.next(keys ?\n                keys.reduce((result, key, i) => (result[key] = values[i], result), {}) :\n                values);\n            }\n            subscriber.complete();\n          }\n        }\n      }));\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\nconst toString: Function = (() => Object.prototype.toString)();\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener: (eventName: string, handler: NodeEventHandler) => void | {};\n  removeListener: (eventName: string, handler: NodeEventHandler) => void | {};\n}\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(type: string, listener: ((evt: E) => void) | null, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener?: ((evt: E) => void) | null, options?: EventListenerOptions | boolean): void;\n}\n\nexport type EventTargetLike<T> = HasEventTargetAddRemove<T> | NodeStyleEventEmitter | NodeCompatibleEventEmitter | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> = EventTargetLike<T> | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, resultSelector: (...args: any[]) => T): Observable<T>;\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions, resultSelector: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n * ### Emits clicks happening on the DOM document\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * ### Use addEventListener with capture option\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: ((...args: any[]) => T)\n): Observable<T> {\n\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(target, eventName, <EventListenerOptions | undefined>options).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T>(subscriber => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options as EventListenerOptions);\n  });\n}\n\nfunction setupSubscription<T>(sourceObj: FromEventTarget<T>, eventName: string,\n                              handler: (...args: any[]) => void, subscriber: Subscriber<T>,\n                              options?: EventListenerOptions) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n    unsubscribe = () => source.removeEventListener(eventName, handler, options);\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is HasEventTargetAddRemove<any> {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * then one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Example\n * ### Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * ## Example\n * ### Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * ## Example\n * ### Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs \"EVENT_TYPE\" \"EVENT_MESSAGE\" to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + \" --- \" + eventMessage // without that function only \"EVENT_TYPE\"\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"EVENT_TYPE --- EVENT_MESSAGE\"\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n * @static true\n * @name fromEventPattern\n * @owner Observable\n */\n\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any,\n                                    removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n                                    resultSelector?: (...args: any[]) => T): Observable<T | T[]> {\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T | T[]>(subscriber => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n\n    let retValue: any;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return () => removeHandler(handler, retValue) ;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { identity } from '../util/identity';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate(0, x => x < 10, x => x + 1, x => x);\n *\n * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n * const res = generate(1, x => x < 5, x => x * 2, x => x + 1, asap);\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n */\n  export function generate<T, S>(initialState: S,\n                                 condition: ConditionFunc<S>,\n                                 iterate: IterateFunc<S>,\n                                 resultSelector: ResultFunc<S, T>,\n                                 scheduler?: SchedulerLike): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * `generate` allows you to create stream of values generated with a loop very similar to\n * traditional for loop. First argument of `generate` is a beginning value. Second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * loop continues, if not, it stops. Third value is a function which takes previously defined\n * value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in regular for loop: first expression\n * initializes some state (for example numeric index), second tests if loop can make next\n * iteration (for example if index is lower than 10) and third states how defined value\n * will be modified on every step (index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First, condition function is ran. If it returned true, Observable\n * emits currently stored value (initial value at the first iteration) and then updates\n * that value with iterate function. If at some point condition returned false, Observable\n * completes at that moment.\n *\n * Optionally you can pass fourth parameter to `generate` - a result selector function which allows you\n * to immediately map value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * single object to the operator instead. That object has properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, so output Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is resultSelector\n * function or not). In case of single-parameter call, you can provide it as a\n * `scheduler` property on object passed to the operator. In both cases scheduler decides when\n * next iteration of the loop will happen and therefore when next value will be emitted\n * by the Observable. For example to ensure that each value is pushed to the observer\n * on separate task in event loop, you could use `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * @example <caption>Use with condition and iterate functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with condition, iterate and resultSelector functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with options object.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n * @example <caption>Use options object without condition function.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!') // This will never run.\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n *\n *\n * @see {@link from}\n * @see {@link index/Observable.create}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n */\nexport function generate<S>(initialState: S,\n                            condition: ConditionFunc<S>,\n                            iterate: IterateFunc<S>,\n                            scheduler?: SchedulerLike): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n *   resultSelector: x => x,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                               condition?: ConditionFunc<S>,\n                               iterate?: IterateFunc<S>,\n                               resultSelectorOrObservable?: (ResultFunc<S, T>) | SchedulerLike,\n                               scheduler?: SchedulerLike): Observable<T> {\n\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  if (arguments.length == 1) {\n    const options = initialStateOrOptions as GenerateOptions<T, S>;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity as ResultFunc<S, T>;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions as S;\n    resultSelector = identity as ResultFunc<S, T>;\n    scheduler = resultSelectorOrObservable as SchedulerLike;\n  } else {\n    initialState = initialStateOrOptions as S;\n    resultSelector = resultSelectorOrObservable as ResultFunc<S, T>;\n  }\n\n  return new Observable<T>(subscriber => {\n    let state = initialState;\n    if (scheduler) {\n      return scheduler.schedule<SchedulerState<T, S>>(dispatch, 0, {\n        subscriber,\n        iterate,\n        condition,\n        resultSelector,\n        state\n      });\n    }\n\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch<T, S>(this: SchedulerAction<SchedulerState<T, S>>, state: SchedulerState<T, S>) {\n  const { subscriber, condition } = state;\n  if (subscriber.closed) {\n    return undefined;\n  }\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n  if (condition) {\n    let conditionResult: boolean;\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n  let value: T;\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n  if (subscriber.closed) {\n    return undefined;\n  }\n  subscriber.next(value);\n  if (subscriber.closed) {\n    return undefined;\n  }\n  return this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\nimport { SubscribableOrPromise } from '../types';\n\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `iif` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * than controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `iif` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * ## Examples\n * ### Change at runtime which Observable will be subscribed\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second'),\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n * ```\n *\n * ### Control an access to an Observable\n * ```ts\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'), // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"The end\"\n * ```\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n*/\nexport function iif<T = never, F = never>(\n  condition: () => boolean,\n  trueResult: SubscribableOrPromise<T> = EMPTY,\n  falseResult: SubscribableOrPromise<F> = EMPTY\n): Observable<T|F> {\n  return defer(() => condition() ? trueResult : falseResult);\n}\n","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isNumeric } from '../util/isNumeric';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = async): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, concurrent: number, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n\nexport function merge<T>(v1: ObservableInput<T>): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | number)[]): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | number)[]): Observable<R>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```ts\n * import { merge, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n * ### Emit the number 7, then never emit anything else (not even complete)\n * ```ts\n * import { NEVER } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * function info() {\n *   console.log('Will not be called');\n * }\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe(x => console.log(x), info, info);\n *\n * ```\n *\n * @see {@link Observable}\n * @see {@link index/EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Deprecated in favor of using {@link NEVER} constant.\n */\nexport function never () {\n  return NEVER;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNext<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link index/EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n * Subscribe to the next Observable after map fails</caption>\n * ```ts\n * import { onErrorResumeNext, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done'),\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<T, R>(...sources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  const [ first, ...remainder ] = sources;\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext(...first);\n  }\n\n  return new Observable(subscriber => {\n    const subNext = () => subscriber.add(\n      onErrorResumeNext(...remainder).subscribe(subscriber)\n    );\n\n    return from(first).subscribe({\n      next(value) { subscriber.next(value); },\n      error: subNext,\n      complete: subNext,\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * <img src=\"./img/pairs.png\" width=\"100%\">\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj)\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('the end!')\n * );\n *\n * // Logs:\n * // [\"foo\", 42],\n * // [\"bar\", 56],\n * // [\"baz\", 78],\n * // \"the end!\"\n * ```\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs<T>(obj: Object, scheduler?: SchedulerLike): Observable<[string, T]> {\n  if (!scheduler) {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(\n        scheduler.schedule<{ keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }>\n          (dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n      return subscription;\n    });\n  }\n}\n\n/** @internal */\nexport function dispatch<T>(this: SchedulerAction<any>,\n                            state: { keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }) {\n  const { keys, index, subscriber, subscription, obj } = state;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { filter } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","import { not } from '../util/not';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition a set of numbers into odds and evens observables\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, (value, index) => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [\n    filter(predicate, thisArg)(new Observable<T>(subscribeTo(source))),\n    filter(not(predicate, thisArg) as any)(new Observable<T>(subscribeTo(source)))\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic, ObservableInput } from '../types';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n// tslint:disable:max-line-length\nexport function race<A>(arg: [ObservableInput<A>]): Observable<A>;\nexport function race<A, B>(arg: [ObservableInput<A>, ObservableInput<B>]): Observable<A | B>;\nexport function race<A, B, C>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<A | B | C>;\nexport function race<A, B, C, D>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<A | B | C | D | E>;\nexport function race<T>(arg: ObservableInput<T>[]): Observable<T>;\nexport function race(arg: ObservableInput<any>[]): Observable<{}>;\n\nexport function race<A>(a: ObservableInput<A>): Observable<A>;\nexport function race<A, B>(a: ObservableInput<A>, b: ObservableInput<B>): Observable<A | B>;\nexport function race<A, B, C>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>): Observable<A | B | C>;\nexport function race<A, B, C, D>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>, e: ObservableInput<E>): Observable<A | B | C | D | E>;\n// tslint:enable:max-line-length\n\nexport function race<T>(observables: ObservableInput<T>[]): Observable<T>;\nexport function race(observables: ObservableInput<any>[]): Observable<{}>;\nexport function race<T>(...observables: ObservableInput<T>[]): Observable<T>;\nexport function race(...observables: ObservableInput<any>[]): Observable<{}>;\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n *\n * ## Example\n * ### Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { race, interval } from 'rxjs';\n * import { mapTo } from 'rxjs/operators';\n *\n * const obs1 = interval(1000).pipe(mapTo('fast one'));\n * const obs2 = interval(3000).pipe(mapTo('medium one'));\n * const obs3 = interval(5000).pipe(mapTo('slow one'));\n *\n * race(obs3, obs1, obs2)\n * .subscribe(\n *   winner => console.log(winner)\n * );\n *\n * // result:\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(...observables: ObservableInput<any>[]): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = observables[0] as Observable<any>[];\n    } else {\n      return observables[0] as Observable<T>;\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable as any, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { SchedulerAction, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n * Emits the numbers 1 to 10</caption>\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 10);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link timer}\n * @see {@link index/interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start: number = 0,\n                      count?: number,\n                      scheduler?: SchedulerLike): Observable<number> {\n  return new Observable<number>(subscriber => {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n\n    let index = 0;\n    let current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(current++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\n\n/** @internal */\nexport function dispatch(this: SchedulerAction<any>, state: any) {\n  const { start, index, count, subscriber } = state;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n\n  this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `dueTime` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `dueTime`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time specified as a Date object or as an integer denoting\n * milliseconds to wait before emitting the first value of 0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `dueTime` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput } from '../types';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T>(resourceFactory: () => Unsubscribable | void,\n                         observableFactory: (resource: Unsubscribable | void) => ObservableInput<T> | void): Observable<T> {\n  return new Observable<T>(subscriber => {\n    let resource: Unsubscribable | void;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    let result: ObservableInput<T> | void;\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    const source = result ? from(result) : EMPTY;\n    const subscription = source.subscribe(subscriber);\n    return () => {\n      subscription.unsubscribe();\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { ObservableInput, PartialObserver, ObservedValueOf } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R): Observable<R>;\n\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\nexport function zip<O extends ObservableInput<any>>(array: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<R>(array: ObservableInput<any>[]): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<R>(array: ObservableInput<any>[], resultSelector: (...values: any[]) => R): Observable<R>;\n\nexport function zip<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>): Observable<R>;\nexport function zip<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n * Combine age and name from different sources\n * ```ts\n * import { zip, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * let age$ = of<number>(27, 25, 29);\n * let name$ = of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = of<boolean>(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev })),\n * )\n * .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip<O extends ObservableInput<any>, R>(\n  ...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>\n): Observable<ObservedValueOf<O>[]|R> {\n  const resultSelector = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  resultSelector: (...values: Array<any>) => R;\n\n  constructor(resultSelector?: (...values: Array<any>) => R) {\n    this.resultSelector = resultSelector;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private resultSelector: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              resultSelector?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    this.unsubscribe();\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        const destination = this.destination as Subscription;\n        destination.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryresultSelector(args: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification, NotificationKind } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config } from './internal/config';\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\n\r\n/** Defines the type of a Hub Message. */\r\nexport enum MessageType {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    Invocation = 1,\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    StreamItem = 2,\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    Completion = 3,\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    StreamInvocation = 4,\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    CancelInvocation = 5,\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    Ping = 6,\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    Close = 7,\r\n}\r\n\r\n/** Defines a dictionary of string keys and string values representing headers attached to a Hub message. */\r\nexport interface MessageHeaders {\r\n    /** Gets or sets the header with the specified key. */\r\n    [key: string]: string;\r\n}\r\n\r\n/** Union type of all known Hub messages. */\r\nexport type HubMessage =\r\n    InvocationMessage |\r\n    StreamInvocationMessage |\r\n    StreamItemMessage |\r\n    CompletionMessage |\r\n    CancelInvocationMessage |\r\n    PingMessage |\r\n    CloseMessage;\r\n\r\n/** Defines properties common to all Hub messages. */\r\nexport interface HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageType} value indicating the type of this message. */\r\n    readonly type: MessageType;\r\n}\r\n\r\n/** Defines properties common to all Hub messages relating to a specific invocation. */\r\nexport interface HubInvocationMessage extends HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageHeaders} dictionary containing headers attached to the message. */\r\n    readonly headers?: MessageHeaders;\r\n    /** The ID of the invocation relating to this message.\r\n     *\r\n     * This is expected to be present for {@link @microsoft/signalr.StreamInvocationMessage} and {@link @microsoft/signalr.CompletionMessage}. It may\r\n     * be 'undefined' for an {@link @microsoft/signalr.InvocationMessage} if the sender does not expect a response.\r\n     */\r\n    readonly invocationId?: string;\r\n}\r\n\r\n/** A hub message representing a non-streaming invocation. */\r\nexport interface InvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Invocation;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds: string[];\r\n}\r\n\r\n/** A hub message representing a streaming invocation. */\r\nexport interface StreamInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamInvocation;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds: string[];\r\n}\r\n\r\n/** A hub message representing a single item produced as part of a result stream. */\r\nexport interface StreamItemMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamItem;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n\r\n    /** The item produced by the server. */\r\n    readonly item?: any;\r\n}\r\n\r\n/** A hub message representing the result of an invocation. */\r\nexport interface CompletionMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Completion;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The error produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly error?: string;\r\n    /** The result produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly result?: any;\r\n}\r\n\r\n/** A hub message indicating that the sender is still active. */\r\nexport interface PingMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Ping;\r\n}\r\n\r\n/** A hub message indicating that the sender is closing the connection.\r\n *\r\n * If {@link @microsoft/signalr.CloseMessage.error} is defined, the sender is closing the connection due to an error.\r\n */\r\nexport interface CloseMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Close;\r\n    /** The error that triggered the close, if any.\r\n     *\r\n     * If this property is undefined, the connection was closed normally and without error.\r\n     */\r\n    readonly error?: string;\r\n\r\n    /** If true, clients with automatic reconnects enabled should attempt to reconnect after receiving the CloseMessage. Otherwise, they should not. */\r\n    readonly allowReconnect?: boolean;\r\n}\r\n\r\n/** A hub message sent to request that a streaming invocation be canceled. */\r\nexport interface CancelInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.CancelInvocation;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n}\r\n\r\n/** A protocol abstraction for communicating with SignalR Hubs.  */\r\nexport interface IHubProtocol {\r\n    /** The name of the protocol. This is used by SignalR to resolve the protocol between the client and server. */\r\n    readonly name: string;\r\n    /** The version of the protocol. */\r\n    readonly version: number;\r\n    /** The {@link @microsoft/signalr.TransferFormat} of the protocol. */\r\n    readonly transferFormat: TransferFormat;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the `input` parameter must be a string, otherwise it must be an ArrayBuffer.\r\n     *\r\n     * @param {string | ArrayBuffer | Buffer} input A string, ArrayBuffer, or Buffer containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input: string | ArrayBuffer | Buffer, logger: ILogger): HubMessage[];\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string or ArrayBuffer and returns it.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the result of this method will be a string, otherwise it will be an ArrayBuffer.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string | ArrayBuffer} A string or ArrayBuffer containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message: HubMessage): string | ArrayBuffer;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\nexport class XhrHttpClient extends HttpClient {\r\n    private readonly logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this.logger = logger;\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n\r\n            xhr.open(request.method!, request.url!, true);\r\n            xhr.withCredentials = true;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                        xhr.setRequestHeader(header, headers[header]);\r\n                    });\r\n            }\r\n\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                } else {\r\n                    reject(new HttpError(xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n\r\n            xhr.onerror = () => {\r\n                this.logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n\r\n            xhr.ontimeout = () => {\r\n                this.logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger } from \"./ILogger\";\r\nimport { NodeHttpClient } from \"./NodeHttpClient\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    private readonly httpClient: HttpClient;\r\n\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n\r\n        if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this.httpClient = new XhrHttpClient(logger);\r\n        } else {\r\n            this.httpClient = new NodeHttpClient(logger);\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return this.httpClient.send(request);\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this.httpClient.getCookieString(url);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HandshakeProtocol, HandshakeRequestMessage, HandshakeResponseMessage } from \"./HandshakeProtocol\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { CancelInvocationMessage, CompletionMessage, IHubProtocol, InvocationMessage, MessageType, StreamInvocationMessage, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { IStreamResult } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg } from \"./Utils\";\r\n\r\nconst DEFAULT_TIMEOUT_IN_MS: number = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS: number = 15 * 1000;\r\n\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport enum HubConnectionState {\r\n    /** The hub connection is disconnected. */\r\n    Disconnected = \"Disconnected\",\r\n    /** The hub connection is connecting. */\r\n    Connecting = \"Connecting\",\r\n    /** The hub connection is connected. */\r\n    Connected = \"Connected\",\r\n    /** The hub connection is disconnecting. */\r\n    Disconnecting = \"Disconnecting\",\r\n    /** The hub connection is reconnecting. */\r\n    Reconnecting = \"Reconnecting\",\r\n}\r\n\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    private readonly cachedPingMessage: string | ArrayBuffer;\r\n    private readonly connection: IConnection;\r\n    private readonly logger: ILogger;\r\n    private readonly reconnectPolicy?: IRetryPolicy;\r\n    private protocol: IHubProtocol;\r\n    private handshakeProtocol: HandshakeProtocol;\r\n    private callbacks: { [invocationId: string]: (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => void };\r\n    private methods: { [name: string]: Array<(...args: any[]) => void> };\r\n    private invocationId: number;\r\n\r\n    private closedCallbacks: Array<(error?: Error) => void>;\r\n    private reconnectingCallbacks: Array<(error?: Error) => void>;\r\n    private reconnectedCallbacks: Array<(connectionId?: string) => void>;\r\n\r\n    private receivedHandshakeResponse: boolean;\r\n    private handshakeResolver!: (value?: PromiseLike<{}>) => void;\r\n    private handshakeRejecter!: (reason?: any) => void;\r\n    private stopDuringStartError?: Error;\r\n\r\n    private connectionState: HubConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private connectionStarted: boolean;\r\n    private startPromise?: Promise<void>;\r\n    private stopPromise?: Promise<void>;\r\n\r\n    // The type of these a) doesn't matter and b) varies when building in browser and node contexts\r\n    // Since we're building the WebPack bundle directly from the TypeScript, this matters (previously\r\n    // we built the bundle from the compiled JavaScript).\r\n    private reconnectDelayHandle?: any;\r\n    private timeoutHandle?: any;\r\n    private pingServerHandle?: any;\r\n\r\n    /** The server timeout in milliseconds.\r\n     *\r\n     * If this timeout elapses without receiving any messages from the server, the connection will be terminated with an error.\r\n     * The default timeout value is 30,000 milliseconds (30 seconds).\r\n     */\r\n    public serverTimeoutInMilliseconds: number;\r\n\r\n    /** Default interval at which to ping the server.\r\n     *\r\n     * The default value is 15,000 milliseconds (15 seconds).\r\n     * Allows the server to detect hard disconnects (like when a client unplugs their computer).\r\n     */\r\n    public keepAliveIntervalInMilliseconds: number;\r\n\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    public static create(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy): HubConnection {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy);\r\n    }\r\n\r\n    private constructor(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy) {\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n\r\n        this.logger = logger;\r\n        this.protocol = protocol;\r\n        this.connection = connection;\r\n        this.reconnectPolicy = reconnectPolicy;\r\n        this.handshakeProtocol = new HandshakeProtocol();\r\n\r\n        this.connection.onreceive = (data: any) => this.processIncomingData(data);\r\n        this.connection.onclose = (error?: Error) => this.connectionClosed(error);\r\n\r\n        this.callbacks = {};\r\n        this.methods = {};\r\n        this.closedCallbacks = [];\r\n        this.reconnectingCallbacks = [];\r\n        this.reconnectedCallbacks = [];\r\n        this.invocationId = 0;\r\n        this.receivedHandshakeResponse = false;\r\n        this.connectionState = HubConnectionState.Disconnected;\r\n        this.connectionStarted = false;\r\n\r\n        this.cachedPingMessage = this.protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state(): HubConnectionState {\r\n        return this.connectionState;\r\n    }\r\n\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId(): string | null {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl(): string {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url: string) {\r\n        if (this.connectionState !== HubConnectionState.Disconnected && this.connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n\r\n        this.connection.baseUrl = url;\r\n    }\r\n\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    public start(): Promise<void> {\r\n        this.startPromise = this.startWithStateTransitions();\r\n        return this.startPromise;\r\n    }\r\n\r\n    private async startWithStateTransitions(): Promise<void> {\r\n        if (this.connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Connecting;\r\n        this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n\r\n        try {\r\n            await this.startInternal();\r\n\r\n            this.connectionState = HubConnectionState.Connected;\r\n            this.connectionStarted = true;\r\n            this.logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        } catch (e) {\r\n            this.connectionState = HubConnectionState.Disconnected;\r\n            this.logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async startInternal() {\r\n        this.stopDuringStartError = undefined;\r\n        this.receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this.handshakeResolver = resolve;\r\n            this.handshakeRejecter = reject;\r\n        });\r\n\r\n        await this.connection.start(this.protocol.transferFormat);\r\n\r\n        try {\r\n            const handshakeRequest: HandshakeRequestMessage = {\r\n                protocol: this.protocol.name,\r\n                version: this.protocol.version,\r\n            };\r\n\r\n            this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n\r\n            await this.sendMessage(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n\r\n            this.logger.log(LogLevel.Information, `Using HubProtocol '${this.protocol.name}'.`);\r\n\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this.cleanupTimeout();\r\n            this.resetTimeoutPeriod();\r\n            this.resetKeepAliveInterval();\r\n\r\n            await handshakePromise;\r\n\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this.stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                throw this.stopDuringStartError;\r\n            }\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n\r\n            this.cleanupTimeout();\r\n            this.cleanupPingTimer();\r\n\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    public async stop(): Promise<void> {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this.startPromise;\r\n\r\n        this.stopPromise = this.stopInternal();\r\n        await this.stopPromise;\r\n\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n\r\n    private stopInternal(error?: Error): Promise<void> {\r\n        if (this.connectionState === HubConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this.stopPromise!;\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Disconnecting;\r\n\r\n        this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n\r\n        if (this.reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this.logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n\r\n            clearTimeout(this.reconnectDelayHandle);\r\n            this.reconnectDelayHandle = undefined;\r\n\r\n            this.completeClose();\r\n            return Promise.resolve();\r\n        }\r\n\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n        this.stopDuringStartError = error || new Error(\"The connection was stopped before the hub handshake could complete.\");\r\n\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    public stream<T = any>(methodName: string, ...args: any[]): IStreamResult<T> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const invocationDescriptor = this.createStreamInvocation(methodName, args, streamIds);\r\n\r\n        let promiseQueue: Promise<void>;\r\n        const subject = new Subject<T>();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation: CancelInvocationMessage = this.createCancelInvocation(invocationDescriptor.invocationId);\r\n\r\n            delete this.callbacks[invocationDescriptor.invocationId];\r\n\r\n            return promiseQueue.then(() => {\r\n                return this.sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n\r\n        this.callbacks[invocationDescriptor.invocationId] = (invocationEvent: CompletionMessage | StreamItemMessage | null, error?: Error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            } else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    } else {\r\n                        subject.complete();\r\n                    }\r\n                } else {\r\n                    subject.next((invocationEvent.item) as T);\r\n                }\r\n            }\r\n        };\r\n\r\n        promiseQueue = this.sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n                subject.error(e);\r\n                delete this.callbacks[invocationDescriptor.invocationId];\r\n            });\r\n\r\n        this.launchStreams(streams, promiseQueue);\r\n\r\n        return subject;\r\n    }\r\n\r\n    private sendMessage(message: any) {\r\n        this.resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    private sendWithProtocol(message: any) {\r\n        return this.sendMessage(this.protocol.writeMessage(message));\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    public send(methodName: string, ...args: any[]): Promise<void> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const sendPromise = this.sendWithProtocol(this.createInvocation(methodName, args, true, streamIds));\r\n\r\n        this.launchStreams(streams, sendPromise);\r\n\r\n        return sendPromise;\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    public invoke<T = any>(methodName: string, ...args: any[]): Promise<T> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const invocationDescriptor = this.createInvocation(methodName, args, false, streamIds);\r\n\r\n        const p = new Promise<any>((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this.callbacks[invocationDescriptor.invocationId!] = (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                } else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        } else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    } else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n\r\n            const promiseQueue = this.sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                    reject(e);\r\n                    // invocationId will always have a value for a non-blocking invocation\r\n                    delete this.callbacks[invocationDescriptor.invocationId!];\r\n                });\r\n\r\n            this.launchStreams(streams, promiseQueue);\r\n        });\r\n\r\n        return p;\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    public on(methodName: string, newMethod: (...args: any[]) => void) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        if (!this.methods[methodName]) {\r\n            this.methods[methodName] = [];\r\n        }\r\n\r\n        // Preventing adding the same handler multiple times.\r\n        if (this.methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n\r\n        this.methods[methodName].push(newMethod);\r\n    }\r\n\r\n    /** Removes all handlers for the specified hub method.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     */\r\n    public off(methodName: string): void;\r\n\r\n    /** Removes the specified handler for the specified hub method.\r\n     *\r\n     * You must pass the exact same Function instance as was previously passed to {@link @microsoft/signalr.HubConnection.on}. Passing a different instance (even if the function\r\n     * body is the same) will not remove the handler.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     * @param {Function} method The handler to remove. This must be the same Function instance as the one passed to {@link @microsoft/signalr.HubConnection.on}.\r\n     */\r\n    public off(methodName: string, method: (...args: any[]) => void): void;\r\n    public off(methodName: string, method?: (...args: any[]) => void): void {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this.methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this.methods[methodName];\r\n                }\r\n            }\r\n        } else {\r\n            delete this.methods[methodName];\r\n        }\r\n\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    public onclose(callback: (error?: Error) => void) {\r\n        if (callback) {\r\n            this.closedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    public onreconnecting(callback: (error?: Error) => void) {\r\n        if (callback) {\r\n            this.reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    public onreconnected(callback: (connectionId?: string) => void) {\r\n        if (callback) {\r\n            this.reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    private processIncomingData(data: any) {\r\n        this.cleanupTimeout();\r\n\r\n        if (!this.receivedHandshakeResponse) {\r\n            data = this.processHandshakeResponse(data);\r\n            this.receivedHandshakeResponse = true;\r\n        }\r\n\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this.protocol.parseMessages(data, this.logger);\r\n\r\n            for (const message of messages) {\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this.invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion:\r\n                        const callback = this.callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this.callbacks[message.invocationId];\r\n                            }\r\n                            callback(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close:\r\n                        this.logger.log(LogLevel.Information, \"Close message received from server.\");\r\n\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n\r\n                            // tslint:disable-next-line:no-floating-promises\r\n                            this.connection.stop(error);\r\n                        } else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this.stopPromise = this.stopInternal(error);\r\n                        }\r\n\r\n                        break;\r\n                    default:\r\n                        this.logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.resetTimeoutPeriod();\r\n    }\r\n\r\n    private processHandshakeResponse(data: any): any {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let remainingData: any;\r\n\r\n        try {\r\n            [remainingData, responseMessage] = this.handshakeProtocol.parseHandshakeResponse(data);\r\n        } catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        } else {\r\n            this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n\r\n        this.handshakeResolver();\r\n        return remainingData;\r\n    }\r\n\r\n    private resetKeepAliveInterval() {\r\n        this.cleanupPingTimer();\r\n        this.pingServerHandle = setTimeout(async () => {\r\n            if (this.connectionState === HubConnectionState.Connected) {\r\n                try {\r\n                    await this.sendMessage(this.cachedPingMessage);\r\n                } catch {\r\n                    // We don't care about the error. It should be seen elsewhere in the client.\r\n                    // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                    this.cleanupPingTimer();\r\n                }\r\n            }\r\n        }, this.keepAliveIntervalInMilliseconds);\r\n    }\r\n\r\n    private resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this.timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n        }\r\n    }\r\n\r\n    private serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // tslint:disable-next-line:no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n\r\n    private invokeClientMethod(invocationMessage: InvocationMessage) {\r\n        const methods = this.methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            try {\r\n                methods.forEach((m) => m.apply(this, invocationMessage.arguments));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `A callback for the method ${invocationMessage.target.toLowerCase()} threw error '${e}'.`);\r\n            }\r\n\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                const message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this.logger.log(LogLevel.Error, message);\r\n\r\n                // We don't want to wait on the stop itself.\r\n                this.stopPromise = this.stopInternal(new Error(message));\r\n            }\r\n        } else {\r\n            this.logger.log(LogLevel.Warning, `No client method with the name '${invocationMessage.target}' found.`);\r\n        }\r\n    }\r\n\r\n    private connectionClosed(error?: Error) {\r\n        this.logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this.connectionState}.`);\r\n\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this.stopDuringStartError = this.stopDuringStartError || error || new Error(\"The underlying connection was closed before the hub handshake could complete.\");\r\n\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this.handshakeResolver) {\r\n            this.handshakeResolver();\r\n        }\r\n\r\n        this.cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.completeClose(error);\r\n        } else if (this.connectionState === HubConnectionState.Connected && this.reconnectPolicy) {\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.reconnect(error);\r\n        } else if (this.connectionState === HubConnectionState.Connected) {\r\n            this.completeClose(error);\r\n        }\r\n\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n\r\n    private completeClose(error?: Error) {\r\n        if (this.connectionStarted) {\r\n            this.connectionState = HubConnectionState.Disconnected;\r\n            this.connectionStarted = false;\r\n\r\n            try {\r\n                this.closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private async reconnect(error?: Error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n\r\n        let nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n\r\n        if (nextRetryDelay === null) {\r\n            this.logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this.completeClose(error);\r\n            return;\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Reconnecting;\r\n\r\n        if (error) {\r\n            this.logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        } else {\r\n            this.logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n\r\n        if (this.onreconnecting) {\r\n            try {\r\n                this.reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        while (nextRetryDelay !== null) {\r\n            this.logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n\r\n            await new Promise((resolve) => {\r\n                this.reconnectDelayHandle = setTimeout(resolve, nextRetryDelay!);\r\n            });\r\n            this.reconnectDelayHandle = undefined;\r\n\r\n            if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n\r\n            try {\r\n                await this.startInternal();\r\n\r\n                this.connectionState = HubConnectionState.Connected;\r\n                this.logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n\r\n                if (this.onreconnected) {\r\n                    try {\r\n                        this.reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    } catch (e) {\r\n                        this.logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n\r\n                return;\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n\r\n                if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                    this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect attempt. Done reconnecting.\");\r\n                    return;\r\n                }\r\n\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n\r\n        this.logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n\r\n        this.completeClose();\r\n    }\r\n\r\n    private getNextRetryDelay(previousRetryCount: number, elapsedMilliseconds: number, retryReason: Error) {\r\n        try {\r\n            return this.reconnectPolicy!.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private cancelCallbacksWithError(error: Error) {\r\n        const callbacks = this.callbacks;\r\n        this.callbacks = {};\r\n\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n                const callback = callbacks[key];\r\n                callback(null, error);\r\n            });\r\n    }\r\n\r\n    private cleanupPingTimer(): void {\r\n        if (this.pingServerHandle) {\r\n            clearTimeout(this.pingServerHandle);\r\n        }\r\n    }\r\n\r\n    private cleanupTimeout(): void {\r\n        if (this.timeoutHandle) {\r\n            clearTimeout(this.timeoutHandle);\r\n        }\r\n    }\r\n\r\n    private createInvocation(methodName: string, args: any[], nonblocking: boolean, streamIds: string[]): InvocationMessage {\r\n        if (nonblocking) {\r\n            return {\r\n                arguments: args,\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        } else {\r\n            const invocationId = this.invocationId;\r\n            this.invocationId++;\r\n\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n    }\r\n\r\n    private launchStreams(streams: Array<IStreamResult<any>>, promiseQueue: Promise<void>): void {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // tslint:disable-next-line:forin\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message: string;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    } else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    } else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    private replaceStreamingParams(args: any[]): [Array<IStreamResult<any>>, string[]] {\r\n        const streams: Array<IStreamResult<any>> = [];\r\n        const streamIds: string[] = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this.isObservable(argument)) {\r\n                const streamId = this.invocationId;\r\n                this.invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        return [streams, streamIds];\r\n    }\r\n\r\n    private isObservable(arg: any): arg is IStreamResult<any> {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n\r\n    private createStreamInvocation(methodName: string, args: any[], streamIds: string[]): StreamInvocationMessage {\r\n        const invocationId = this.invocationId;\r\n        this.invocationId++;\r\n\r\n        return {\r\n            arguments: args,\r\n            invocationId: invocationId.toString(),\r\n            streamIds,\r\n            target: methodName,\r\n            type: MessageType.StreamInvocation,\r\n        };\r\n    }\r\n\r\n    private createCancelInvocation(id: string): CancelInvocationMessage {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n\r\n    private createStreamItemMessage(id: string, item: any): StreamItemMessage {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n\r\n    private createCompletionMessage(id: string, error?: any, result?: any): CompletionMessage {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { IStreamResult, IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { SubjectSubscription } from \"./Utils\";\r\n\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject<T> implements IStreamResult<T> {\r\n    /** @internal */\r\n    public observers: Array<IStreamSubscriber<T>>;\r\n\r\n    /** @internal */\r\n    public cancelCallback?: () => Promise<void>;\r\n\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n\r\n    public next(item: T): void {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n\r\n    public error(err: any): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n\r\n    public subscribe(observer: IStreamSubscriber<T>): ISubscription<T> {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport enum HttpTransportType {\r\n    /** Specifies no transport preference. */\r\n    None = 0,\r\n    /** Specifies the WebSockets transport. */\r\n    WebSockets = 1,\r\n    /** Specifies the Server-Sent Events transport. */\r\n    ServerSentEvents = 2,\r\n    /** Specifies the Long Polling transport. */\r\n    LongPolling = 4,\r\n}\r\n\r\n/** Specifies the transfer format for a connection. */\r\nexport enum TransferFormat {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    Text = 1,\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    Binary = 2,\r\n}\r\n\r\n/** An abstraction over the behavior of transports. This is designed to support the framework and not intended for use by applications. */\r\nexport interface ITransport {\r\n    connect(url: string, transferFormat: TransferFormat): Promise<void>;\r\n    send(data: any): Promise<void>;\r\n    stop(): Promise<void>;\r\n    onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    onclose: ((error?: Error) => void) | null;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\n\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n\r\n/** @private */\r\nexport class DefaultReconnectPolicy implements IRetryPolicy {\r\n    private readonly retryDelays: Array<number | null>;\r\n\r\n    constructor(retryDelays?: number[]) {\r\n        this.retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n\r\n    public nextRetryDelayInMilliseconds(retryContext: RetryContext): number | null {\r\n        return this.retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController implements AbortSignal {\r\n    private isAborted: boolean = false;\r\n    public onabort: (() => void) | null = null;\r\n\r\n    public abort() {\r\n        if (!this.isAborted) {\r\n            this.isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n\r\n    get signal(): AbortSignal {\r\n        return this;\r\n    }\r\n\r\n    get aborted(): boolean {\r\n        return this.isAborted;\r\n    }\r\n}\r\n\r\n/** Represents a signal that can be monitored to determine if a request has been aborted. */\r\nexport interface AbortSignal {\r\n    /** Indicates if the request has been aborted. */\r\n    aborted: boolean;\r\n    /** Set this to a handler that will be invoked when the request is aborted. */\r\n    onabort: (() => void) | null;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\n\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport implements ITransport {\r\n    private readonly httpClient: HttpClient;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logger: ILogger;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly pollAbort: AbortController;\r\n\r\n    private url?: string;\r\n    private running: boolean;\r\n    private receiving?: Promise<void>;\r\n    private closeError?: Error;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    public get pollAborted() {\r\n        return this.pollAbort.aborted;\r\n    }\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger, logMessageContent: boolean) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.pollAbort = new AbortController();\r\n        this.logMessageContent = logMessageContent;\r\n\r\n        this.running = false;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.url = url;\r\n\r\n        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n\r\n        const pollOptions: HttpRequest = {\r\n            abortSignal: this.pollAbort.signal,\r\n            headers: {},\r\n            timeout: 100000,\r\n        };\r\n\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n\r\n        const token = await this.getAccessToken();\r\n        this.updateHeaderToken(pollOptions, token);\r\n\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this.logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this.httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this.logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this.running = false;\r\n        } else {\r\n            this.running = true;\r\n        }\r\n\r\n        this.receiving = this.poll(this.url, pollOptions);\r\n    }\r\n\r\n    private async getAccessToken(): Promise<string | null> {\r\n        if (this.accessTokenFactory) {\r\n            return await this.accessTokenFactory();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private updateHeaderToken(request: HttpRequest, token: string | null) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (token) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            request.headers[\"Authorization\"] = `Bearer ${token}`;\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-string-literal\r\n        if (request.headers[\"Authorization\"]) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            delete request.headers[\"Authorization\"];\r\n        }\r\n    }\r\n\r\n    private async poll(url: string, pollOptions: HttpRequest): Promise<void> {\r\n        try {\r\n            while (this.running) {\r\n                // We have to get the access token on each poll, in case it changes\r\n                const token = await this.getAccessToken();\r\n                this.updateHeaderToken(pollOptions, token);\r\n\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this.logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this.httpClient.get(pollUrl, pollOptions);\r\n\r\n                    if (response.statusCode === 204) {\r\n                        this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n\r\n                        this.running = false;\r\n                    } else if (response.statusCode !== 200) {\r\n                        this.logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n                        // Unexpected status code\r\n                        this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this.running = false;\r\n                    } else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this.logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        } else {\r\n                            // This is another way timeout manifest.\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    if (!this.running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this.logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    } else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        } else {\r\n                            // Close the connection with the error as the result.\r\n                            this.closeError = e;\r\n                            this.running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } finally {\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this.raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this.running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this.logger, \"LongPolling\", this.httpClient, this.url!, this.accessTokenFactory, data, this.logMessageContent);\r\n    }\r\n\r\n    public async stop(): Promise<void> {\r\n        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this.running = false;\r\n        this.pollAbort.abort();\r\n\r\n        try {\r\n            await this.receiving;\r\n\r\n            // Send DELETE to clean up long polling on the server\r\n            this.logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this.url}.`);\r\n\r\n            const deleteOptions: HttpRequest = {\r\n                headers: {},\r\n            };\r\n            const token = await this.getAccessToken();\r\n            this.updateHeaderToken(deleteOptions, token);\r\n            await this.httpClient.delete(this.url!, deleteOptions);\r\n\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n        } finally {\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this.raiseOnClose();\r\n        }\r\n    }\r\n\r\n    private raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this.closeError) {\r\n                logMessage += \" Error: \" + this.closeError;\r\n            }\r\n            this.logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this.closeError);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { EventSourceConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, Platform, sendMessage } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class ServerSentEventsTransport implements ITransport {\r\n    private readonly httpClient: HttpClient;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logger: ILogger;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly eventSourceConstructor: EventSourceConstructor;\r\n    private eventSource?: EventSource;\r\n    private url?: string;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, eventSourceConstructor: EventSourceConstructor) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.logMessageContent = logMessageContent;\r\n        this.eventSourceConstructor = eventSourceConstructor;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n\r\n        // set url before accessTokenFactory because this.url is only for send and we set the auth header instead of the query string for send\r\n        this.url = url;\r\n\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n\r\n            let eventSource: EventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this.eventSourceConstructor(url, { withCredentials: true });\r\n            } else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this.httpClient.getCookieString(url);\r\n                eventSource = new this.eventSourceConstructor(url, { withCredentials: true, headers: { Cookie: cookies } } as EventSourceInit);\r\n            }\r\n\r\n            try {\r\n                eventSource.onmessage = (e: MessageEvent) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this.logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        } catch (error) {\r\n                            this.close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                eventSource.onerror = (e: MessageEvent) => {\r\n                    const error = new Error(e.data || \"Error occurred\");\r\n                    if (opened) {\r\n                        this.close(error);\r\n                    } else {\r\n                        reject(error);\r\n                    }\r\n                };\r\n\r\n                eventSource.onopen = () => {\r\n                    this.logger.log(LogLevel.Information, `SSE connected to ${this.url}`);\r\n                    this.eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            } catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this.eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this.logger, \"SSE\", this.httpClient, this.url!, this.accessTokenFactory, data, this.logMessageContent);\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this.close();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private close(e?: Error) {\r\n        if (this.eventSource) {\r\n            this.eventSource.close();\r\n            this.eventSource = undefined;\r\n\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { WebSocketConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, Platform } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class WebSocketTransport implements ITransport {\r\n    private readonly logger: ILogger;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly webSocketConstructor: WebSocketConstructor;\r\n    private readonly httpClient: HttpClient;\r\n    private webSocket?: WebSocket;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, webSocketConstructor: WebSocketConstructor) {\r\n        this.logger = logger;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logMessageContent = logMessageContent;\r\n        this.webSocketConstructor = webSocketConstructor;\r\n        this.httpClient = httpClient;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket: WebSocket | undefined;\r\n            const cookies = this.httpClient.getCookieString(url);\r\n            let opened = false;\r\n\r\n            if (Platform.isNode && cookies) {\r\n                // Only pass cookies when in non-browser environments\r\n                webSocket = new this.webSocketConstructor(url, undefined, {\r\n                    headers: {\r\n                        Cookie: `${cookies}`,\r\n                    },\r\n                });\r\n            }\r\n\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this.webSocketConstructor(url);\r\n            }\r\n\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n\r\n            // tslint:disable-next-line:variable-name\r\n            webSocket.onopen = (_event: Event) => {\r\n                this.logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this.webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n\r\n            webSocket.onerror = (event: Event) => {\r\n                let error: any = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                } else {\r\n                    error = new Error(\"There was an error with the transport.\");\r\n                }\r\n\r\n                reject(error);\r\n            };\r\n\r\n            webSocket.onmessage = (message: MessageEvent) => {\r\n                this.logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this.logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    this.onreceive(message.data);\r\n                }\r\n            };\r\n\r\n            webSocket.onclose = (event: CloseEvent) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this.close(event);\r\n                } else {\r\n                    let error: any = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    } else {\r\n                        error = new Error(\"There was an error with the transport.\");\r\n                    }\r\n\r\n                    reject(error);\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    public send(data: any): Promise<void> {\r\n        if (this.webSocket && this.webSocket.readyState === this.webSocketConstructor.OPEN) {\r\n            this.logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this.logMessageContent)}.`);\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        if (this.webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this.close(undefined);\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private close(event?: CloseEvent): void {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this.webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this.webSocket.onclose = () => {};\r\n            this.webSocket.onmessage = () => {};\r\n            this.webSocket.onerror = () => {};\r\n            this.webSocket.close();\r\n            this.webSocket = undefined;\r\n        }\r\n\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (event && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason}).`));\r\n            } else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, ITransport, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\n\r\n/** @private */\r\nconst enum ConnectionState {\r\n    Connecting = \"Connecting \",\r\n    Connected = \"Connected\",\r\n    Disconnected = \"Disconnected\",\r\n    Disconnecting = \"Disconnecting\",\r\n}\r\n\r\n/** @private */\r\nexport interface INegotiateResponse {\r\n    connectionId?: string;\r\n    connectionToken?: string;\r\n    negotiateVersion?: number;\r\n    availableTransports?: IAvailableTransport[];\r\n    url?: string;\r\n    accessToken?: string;\r\n    error?: string;\r\n}\r\n\r\n/** @private */\r\nexport interface IAvailableTransport {\r\n    transport: keyof typeof HttpTransportType;\r\n    transferFormats: Array<keyof typeof TransferFormat>;\r\n}\r\n\r\nconst MAX_REDIRECTS = 100;\r\n\r\nlet WebSocketModule: any = null;\r\nlet EventSourceModule: any = null;\r\nif (Platform.isNode && typeof require !== \"undefined\") {\r\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n    // @ts-ignore: TS doesn't know about these names\r\n    const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n    WebSocketModule = requireFunc(\"ws\");\r\n    EventSourceModule = requireFunc(\"eventsource\");\r\n}\r\n\r\n/** @private */\r\nexport class HttpConnection implements IConnection {\r\n    private connectionState: ConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private connectionStarted: boolean;\r\n    private readonly httpClient: HttpClient;\r\n    private readonly logger: ILogger;\r\n    private readonly options: IHttpConnectionOptions;\r\n    private transport?: ITransport;\r\n    private startInternalPromise?: Promise<void>;\r\n    private stopPromise?: Promise<void>;\r\n    private stopPromiseResolver!: (value?: PromiseLike<void>) => void;\r\n    private stopError?: Error;\r\n    private accessTokenFactory?: () => string | Promise<string>;\r\n    private sendQueue?: TransportSendQueue;\r\n\r\n    public readonly features: any = {};\r\n    public baseUrl: string;\r\n    public connectionId?: string;\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((e?: Error) => void) | null;\r\n\r\n    private readonly negotiateVersion: number = 1;\r\n\r\n    constructor(url: string, options: IHttpConnectionOptions = {}) {\r\n        Arg.isRequired(url, \"url\");\r\n\r\n        this.logger = createLogger(options.logger);\r\n        this.baseUrl = this.resolveUrl(url);\r\n\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent || false;\r\n\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        } else if (Platform.isNode && !options.WebSocket) {\r\n            if (WebSocketModule) {\r\n                options.WebSocket = WebSocketModule;\r\n            }\r\n        }\r\n\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        } else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof EventSourceModule !== \"undefined\") {\r\n                options.EventSource = EventSourceModule;\r\n            }\r\n        }\r\n\r\n        this.httpClient = options.httpClient || new DefaultHttpClient(this.logger);\r\n        this.connectionState = ConnectionState.Disconnected;\r\n        this.connectionStarted = false;\r\n        this.options = options;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public start(): Promise<void>;\r\n    public start(transferFormat: TransferFormat): Promise<void>;\r\n    public async start(transferFormat?: TransferFormat): Promise<void> {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n\r\n        if (this.connectionState !== ConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this.connectionState = ConnectionState.Connecting;\r\n\r\n        this.startInternalPromise = this.startInternal(transferFormat);\r\n        await this.startInternalPromise;\r\n\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this.connectionState as any === ConnectionState.Disconnecting) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this.stopPromise;\r\n\r\n            return Promise.reject(new Error(message));\r\n        } else if (this.connectionState as any !== ConnectionState.Connected) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this.logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new Error(message));\r\n        }\r\n\r\n        this.connectionStarted = true;\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        if (this.connectionState !== ConnectionState.Connected) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n\r\n        if (!this.sendQueue) {\r\n            this.sendQueue = new TransportSendQueue(this.transport!);\r\n        }\r\n\r\n        // Transport will not be null if state is connected\r\n        return this.sendQueue.send(data);\r\n    }\r\n\r\n    public async stop(error?: Error): Promise<void> {\r\n        if (this.connectionState === ConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Disconnecting) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this.stopPromise;\r\n        }\r\n\r\n        this.connectionState = ConnectionState.Disconnecting;\r\n\r\n        this.stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this.stopPromiseResolver = resolve;\r\n        });\r\n\r\n        // stopInternal should never throw so just observe it.\r\n        await this.stopInternal(error);\r\n        await this.stopPromise;\r\n    }\r\n\r\n    private async stopInternal(error?: Error): Promise<void> {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this.stopError = error;\r\n\r\n        try {\r\n            await this.startInternalPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this.stopConnection();\r\n            }\r\n\r\n            this.transport = undefined;\r\n        } else {\r\n            this.logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n            this.stopConnection();\r\n        }\r\n    }\r\n\r\n    private async startInternal(transferFormat: TransferFormat): Promise<void> {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this.accessTokenFactory = this.options.accessTokenFactory;\r\n\r\n        try {\r\n            if (this.options.skipNegotiation) {\r\n                if (this.options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this.constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this.startTransport(url, transferFormat);\r\n                } else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            } else {\r\n                let negotiateResponse: INegotiateResponse | null = null;\r\n                let redirects = 0;\r\n\r\n                do {\r\n                    negotiateResponse = await this.getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this.connectionState === ConnectionState.Disconnecting || this.connectionState === ConnectionState.Disconnected) {\r\n                        throw new Error(\"The connection was stopped during negotiation.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n\r\n                    if ((negotiateResponse as any).ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this.accessTokenFactory = () => accessToken;\r\n                    }\r\n\r\n                    redirects++;\r\n                }\r\n                while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n\r\n                await this.createTransport(url, this.options.transport, negotiateResponse, transferFormat);\r\n            }\r\n\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n\r\n            if (this.connectionState === ConnectionState.Connecting) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this.logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this.connectionState = ConnectionState.Connected;\r\n            }\r\n\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this.connectionState = ConnectionState.Disconnected;\r\n            this.transport = undefined;\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async getNegotiationResponse(url: string): Promise<INegotiateResponse> {\r\n        let headers;\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                headers = {\r\n                    [\"Authorization\"]: `Bearer ${token}`,\r\n                };\r\n            }\r\n        }\r\n\r\n        const negotiateUrl = this.resolveNegotiateUrl(url);\r\n        this.logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this.httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers,\r\n            });\r\n\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate ${response.statusCode}`));\r\n            }\r\n\r\n            const negotiateResponse = JSON.parse(response.content as string) as INegotiateResponse;\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            return negotiateResponse;\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \" + e);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private createConnectUrl(url: string, connectionToken: string | null | undefined) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n\r\n    private async createTransport(url: string, requestedTransport: HttpTransportType | ITransport | undefined, negotiateResponse: INegotiateResponse, requestedTransferFormat: TransferFormat): Promise<void> {\r\n        let connectUrl = this.createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this.isITransport(requestedTransport)) {\r\n            this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this.startTransport(connectUrl, requestedTransferFormat);\r\n\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n\r\n        const transportExceptions: any[] = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate: INegotiateResponse | undefined = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this.resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed: ${transportOrError}`);\r\n            } else if (this.isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this.getNegotiationResponse(url);\r\n                    } catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this.createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this.startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                } catch (ex) {\r\n                    this.logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(`${endpoint.transport} failed: ${ex}`);\r\n\r\n                    if (this.connectionState !== ConnectionState.Connecting) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this.logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new Error(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new Error(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n\r\n    private constructTransport(transport: HttpTransportType): ITransport {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this.options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.WebSocket);\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this.options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.EventSource);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n\r\n    private startTransport(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        this.transport!.onreceive = this.onreceive;\r\n        this.transport!.onclose = (e) => this.stopConnection(e);\r\n        return this.transport!.connect(url, transferFormat);\r\n    }\r\n\r\n    private resolveTransportOrError(endpoint: IAvailableTransport, requestedTransport: HttpTransportType | undefined, requestedTransferFormat: TransferFormat): ITransport | Error {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this.logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        } else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this.options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this.options.EventSource)) {\r\n                        this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new Error(`'${HttpTransportType[transport]}' is not supported in your environment.`);\r\n                    } else {\r\n                        this.logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            return this.constructTransport(transport);\r\n                        } catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            } else {\r\n                this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new Error(`'${HttpTransportType[transport]}' is disabled by the client.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private isITransport(transport: any): transport is ITransport {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n\r\n    private stopConnection(error?: Error): void {\r\n        this.logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this.connectionState}.`);\r\n\r\n        this.transport = undefined;\r\n\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this.stopError || error;\r\n        this.stopError = undefined;\r\n\r\n        if (this.connectionState === ConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Connecting) {\r\n            this.logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection hasn't yet left the in the connecting state.`);\r\n            return;\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Disconnecting) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this.stopPromiseResolver();\r\n        }\r\n\r\n        if (error) {\r\n            this.logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        } else {\r\n            this.logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n\r\n        if (this.sendQueue) {\r\n            this.sendQueue.stop().catch((e) => {\r\n                this.logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this.sendQueue = undefined;\r\n        }\r\n\r\n        this.connectionId = undefined;\r\n        this.connectionState = ConnectionState.Disconnected;\r\n\r\n        if (this.connectionStarted) {\r\n            this.connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private resolveUrl(url: string): string {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n\r\n        if (!Platform.isBrowser || !window.document) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n\r\n        this.logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n\r\n    private resolveNegotiateUrl(url: string): string {\r\n        const index = url.indexOf(\"?\");\r\n        let negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n\r\n        if (negotiateUrl.indexOf(\"negotiateVersion\") === -1) {\r\n            negotiateUrl += index === -1 ? \"?\" : \"&\";\r\n            negotiateUrl += \"negotiateVersion=\" + this.negotiateVersion;\r\n        }\r\n        return negotiateUrl;\r\n    }\r\n}\r\n\r\nfunction transportMatches(requestedTransport: HttpTransportType | undefined, actualTransport: HttpTransportType) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    private buffer: any[] = [];\r\n    private sendBufferedData: PromiseSource;\r\n    private executing: boolean = true;\r\n    private transportResult?: PromiseSource;\r\n    private sendLoopPromise: Promise<void>;\r\n\r\n    constructor(private readonly transport: ITransport) {\r\n        this.sendBufferedData = new PromiseSource();\r\n        this.transportResult = new PromiseSource();\r\n\r\n        this.sendLoopPromise = this.sendLoop();\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        this.bufferData(data);\r\n        if (!this.transportResult) {\r\n            this.transportResult = new PromiseSource();\r\n        }\r\n        return this.transportResult.promise;\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this.executing = false;\r\n        this.sendBufferedData.resolve();\r\n        return this.sendLoopPromise;\r\n    }\r\n\r\n    private bufferData(data: string | ArrayBuffer): void {\r\n        if (this.buffer.length && typeof(this.buffer[0]) !== typeof(data)) {\r\n            throw new Error(`Expected data to be of type ${typeof(this.buffer)} but was of type ${typeof(data)}`);\r\n        }\r\n\r\n        this.buffer.push(data);\r\n        this.sendBufferedData.resolve();\r\n    }\r\n\r\n    private async sendLoop(): Promise<void> {\r\n        while (true) {\r\n            await this.sendBufferedData.promise;\r\n\r\n            if (!this.executing) {\r\n                if (this.transportResult) {\r\n                    this.transportResult.reject(\"Connection stopped.\");\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            this.sendBufferedData = new PromiseSource();\r\n\r\n            const transportResult = this.transportResult!;\r\n            this.transportResult = undefined;\r\n\r\n            const data = typeof(this.buffer[0]) === \"string\" ?\r\n                this.buffer.join(\"\") :\r\n                TransportSendQueue.concatBuffers(this.buffer);\r\n\r\n            this.buffer.length = 0;\r\n\r\n            try {\r\n                await this.transport.send(data);\r\n                transportResult.resolve();\r\n            } catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static concatBuffers(arrayBuffers: ArrayBuffer[]): ArrayBuffer {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass PromiseSource {\r\n    private resolver?: () => void;\r\n    private rejecter!: (reason?: any) => void;\r\n    public promise: Promise<void>;\r\n\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this.resolver, this.rejecter] = [resolve, reject]);\r\n    }\r\n\r\n    public resolve(): void {\r\n        this.resolver!();\r\n    }\r\n\r\n    public reject(reason?: any): void {\r\n        this.rejecter!(reason);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { CompletionMessage, HubMessage, IHubProtocol, InvocationMessage, MessageType, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\n\r\nconst JSON_HUB_PROTOCOL_NAME: string = \"json\";\r\n\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol implements IHubProtocol {\r\n\r\n    /** @inheritDoc */\r\n    public readonly name: string = JSON_HUB_PROTOCOL_NAME;\r\n    /** @inheritDoc */\r\n    public readonly version: number = 1;\r\n\r\n    /** @inheritDoc */\r\n    public readonly transferFormat: TransferFormat = TransferFormat.Text;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    public parseMessages(input: string, logger: ILogger): HubMessage[] {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n\r\n        if (!input) {\r\n            return [];\r\n        }\r\n\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message) as HubMessage;\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this.isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this.isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this.isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n\r\n        return hubMessages;\r\n    }\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    public writeMessage(message: HubMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n\r\n    private isInvocationMessage(message: InvocationMessage): void {\r\n        this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n\r\n        if (message.invocationId !== undefined) {\r\n            this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n\r\n    private isStreamItemMessage(message: StreamItemMessage): void {\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n\r\n    private isCompletionMessage(message: CompletionMessage): void {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        if (!message.result && message.error) {\r\n            this.assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n\r\n    private assertNotEmptyString(value: any, errorMessage: string): void {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { IHubProtocol } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { HttpTransportType } from \"./ITransport\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n\r\n// tslint:disable:object-literal-sort-keys\r\nconst LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\n\r\nfunction parseLogLevel(name: string): LogLevel {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    } else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    /** @internal */\r\n    public protocol?: IHubProtocol;\r\n    /** @internal */\r\n    public httpConnectionOptions?: IHttpConnectionOptions;\r\n    /** @internal */\r\n    public url?: string;\r\n    /** @internal */\r\n    public logger?: ILogger;\r\n\r\n    /** If defined, this indicates the client should automatically attempt to reconnect if the connection is lost. */\r\n    /** @internal */\r\n    public reconnectPolicy?: IRetryPolicy;\r\n\r\n    /** Configures console logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel} logLevel The minimum level of messages to log. Anything at this level, or a more severe level, will be logged.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logLevel: LogLevel): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {ILogger} logger An object implementing the {@link @microsoft/signalr.ILogger} interface, which will be used to write all log messages.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logger: ILogger): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {string} logLevel A string representing a LogLevel setting a minimum level of messages to log.\r\n     *    See {@link https://docs.microsoft.com/en-us/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     */\r\n    public configureLogging(logLevel: string): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel | string | ILogger} logging A {@link @microsoft/signalr.LogLevel}, a string representing a LogLevel, or an object implementing the {@link @microsoft/signalr.ILogger} interface.\r\n     *    See {@link https://docs.microsoft.com/en-us/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder;\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder {\r\n        Arg.isRequired(logging, \"logging\");\r\n\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        } else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        } else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * The transport will be selected automatically based on what the server and client support.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified HTTP-based transport to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {HttpTransportType} transportType The specific transport to use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, transportType: HttpTransportType): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {IHttpConnectionOptions} options An options object used to configure the connection.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, options: IHttpConnectionOptions): HubConnectionBuilder;\r\n    public withUrl(url: string, transportTypeOrOptions?: IHttpConnectionOptions | HttpTransportType): HubConnectionBuilder {\r\n        Arg.isRequired(url, \"url\");\r\n\r\n        this.url = url;\r\n\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        } else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    public withHubProtocol(protocol: IHubProtocol): HubConnectionBuilder {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     * By default, the client will wait 0, 2, 10 and 30 seconds respectively before trying up to 4 reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {number[]} retryDelays An array containing the delays in milliseconds before trying each reconnect attempt.\r\n     * The length of the array represents how many failed reconnect attempts it takes before the client will stop attempting to reconnect.\r\n     */\r\n    public withAutomaticReconnect(retryDelays: number[]): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {IRetryPolicy} reconnectPolicy An {@link @microsoft/signalR.IRetryPolicy} that controls the timing and number of reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(reconnectPolicy: IRetryPolicy): HubConnectionBuilder;\r\n    public withAutomaticReconnect(retryDelaysOrReconnectPolicy?: number[] | IRetryPolicy): HubConnectionBuilder {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        } else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        } else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    public build(): HubConnection {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n\r\n        return HubConnection.create(\r\n            connection,\r\n            this.logger || NullLogger.instance,\r\n            this.protocol || new JsonHubProtocol(),\r\n            this.reconnectPolicy);\r\n    }\r\n}\r\n\r\nfunction isLogger(logger: any): logger is ILogger {\r\n    return logger.log !== undefined;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION: string = \"0.0.0-DEV_BUILD\";\r\n\r\n// Everything that users need to access must be exported here. Including interfaces.\r\nexport { AbortSignal } from \"./AbortController\";\r\nexport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nexport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nexport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nexport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nexport { HubConnection, HubConnectionState } from \"./HubConnection\";\r\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\r\nexport { MessageType, MessageHeaders, HubMessage, HubMessageBase, HubInvocationMessage, InvocationMessage, StreamInvocationMessage, StreamItemMessage, CompletionMessage,\r\n    PingMessage, CloseMessage, CancelInvocationMessage, IHubProtocol } from \"./IHubProtocol\";\r\nexport { ILogger, LogLevel } from \"./ILogger\";\r\nexport { HttpTransportType, TransferFormat, ITransport } from \"./ITransport\";\r\nexport { IStreamSubscriber, IStreamResult, ISubscription } from \"./Stream\";\r\nexport { NullLogger } from \"./Loggers\";\r\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nexport { Subject } from \"./Subject\";\r\nexport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\n"],"sourceRoot":""}