{"version":3,"sources":["webpack:///./src/projects/common-assets/rpg1.png","webpack:///./src/projects/common-assets/wizard16.png","webpack:///./src/projects/common/Iterate.ts","webpack:///./src/projects/rpgt/world/World.ts","webpack:///./src/projects/rpgt/Constants.ts","webpack:///./src/projects/rpgt/SheetGraphic.ts","webpack:///./src/projects/rpgt/world/Cell.ts","webpack:///./src/projects/common/position/Rectangle.ts","webpack:///./src/projects/common/assets/FileResource.ts","webpack:///./src/projects/rpgt/index.ts","webpack:///./src/projects/common/position/Point.ts","webpack:///./src/projects/common/position/Direction.ts","webpack:///./src/projects/common/input/KeyState.ts","webpack:///./src/projects/common/input/KeyWatcher.ts","webpack:///./src/projects/common/input/KeyboardManager.ts","webpack:///./src/projects/common-assets/arrows.png"],"names":["IterateRange","start","end","handle","breakIteration","loopControl","break","direction","finalValue","i","width","height","generateCell","this","cells","x","col","y","push","prerender","document","getElementById","pctx","getContext","paint","pos","vel","onChecked","xDirection","Direction","Right","Left","yDirection","Down","Up","startXTile","Math","floor","Edge","endXTile","startYTile","endYTile","xColision","ctrl","pathable","undefined","w","yColision","h","SheetGraphic","sheet","tileX","tileY","spriteWidth","spriteHeight","ctx","tx","ty","tw","th","render","GRASS_TILES","graphic","grassCoords","random","length","xp","UpRight","DownRight","DownLeft","UpLeft","Point","r","fileUrl","onload","get","subscribe","data","body","assets","world","keys","Run","assetLoader","AssetLoader","tiles","SpriteSheet","registerAssetLoadCallback","wizard","arrows","tilesets","KeyboardManager","onAllFinished","assetLoadDone","RockWall","GrassFloor","updatePrerender","canvas","NearestNeighborScalingHelper","tick","clearRect","save","cx","cy","max","min","playerPos","camPos","MultWith","AddWith","DivideWith","CAMERA_SLOWDOWN_FACTOR","translate","drawImage","update","fillStyle","fillRect","isKeyDown","globalAlpha","tryMoveEntity","toggle","restore","requestAnimationFrame","angle","distance","cos","sin","Dot","sqrt","LengthSq","p1","p2","other","len","Length","Multiply","atan2","nx","ny","splitArgs","splitArgsOrSingle","src","a","b","sy","p","pts","t","add","Bezier","slice","theta","fromAngle","directionValues","allDirections","ToPoint","KeyState","changes","key","indexOf","attachedElement","logKeyNames","addEventListener","k","onKeyDown","onKeyUp","downKeys","console","log","change","idx","splice","storeKeys","storeChanges","element","watcher","prvState","currentState","Update","isKeyUp"],"mappings":"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","file":"rpgTest.bundle.js","sourcesContent":["export default __webpack_public_path__ + \"42ace1eb95edbc899165c10bb9cc20ab.png\";","export default __webpack_public_path__ + \"e5352b303b79e08de36a8c4248cdbb28.png\";","\r\nexport interface ILoopControl {\r\n    break(): void;\r\n}\r\n\r\nexport function IterateRange(start: number, end: number, handle: (value: number, control: ILoopControl) => void): void {\r\n    let breakIteration = false;\r\n    const loopControl = {\r\n        break: () => {\r\n            breakIteration = true;\r\n        }\r\n    };\r\n\r\n    if (end === start) {\r\n        handle(start, loopControl);\r\n        return;\r\n    }\r\n\r\n    const direction = end > start ? 1 : -1;\r\n    const finalValue = end + direction;\r\n\r\n    for (let i = start; i !== finalValue && !breakIteration; i += direction) {\r\n        handle(i, loopControl);\r\n    }\r\n}","import Cell from './Cell';\r\nimport Rect from '../../common/position/Rectangle';\r\nimport Point from '../../common/position/Point';\r\nimport { Direction } from '../../common/position/Direction';\r\nimport { IterateRange } from '../../common/Iterate';\r\nimport * as Const from '../Constants';\r\nimport { createContext } from 'react';\r\nimport { ResizeCanvas } from '../../common/CanvasHelpers';\r\n\r\nexport default class World {\r\n    cells: Cell[][];\r\n\r\n    public prerender: HTMLCanvasElement;\r\n\r\n    constructor(public width: number, public height: number, generateCell: () => Cell) {\r\n        this.cells = [];\r\n        for (let x = 0; x < width; x++) {\r\n            const col = [];\r\n            for (let y = 0; y < height; y++) {\r\n                col.push(generateCell());\r\n            }\r\n            this.cells.push(col);\r\n        }\r\n\r\n        this.prerender = document.getElementById('world_prerender') as HTMLCanvasElement;\r\n    }\r\n\r\n    updatePrerender() {\r\n        ResizeCanvas(this.prerender, Const.TILE_SIZE * this.width, Const.TILE_SIZE * this.height);\r\n        const pctx = this.prerender.getContext('2d');\r\n        for (let x = 0; x < this.width; x++) {\r\n            for (let y = 0; y < this.height; y++) {\r\n                this.cells[x][y].paint(pctx, x * Const.TILE_SIZE, y * Const.TILE_SIZE);\r\n            }\r\n        }\r\n    }\r\n\r\n    tryMoveEntity(pos: Rect, vel: Point, onChecked?: (x: number, y: number) => void): void {\r\n        const xDirection = vel.x >= 0 ? Direction.Right : Direction.Left;\r\n        const yDirection = vel.y >= 0 ? Direction.Down : Direction.Up;\r\n        if (vel.x !== 0) {\r\n            const startXTile = Math.floor(pos.Edge(xDirection) / Const.TILE_SIZE);\r\n            const endXTile = Math.floor((pos.Edge(xDirection) + vel.x) / Const.TILE_SIZE);\r\n            const startYTile = Math.floor(pos.Edge(Direction.Up) / Const.TILE_SIZE);\r\n            const endYTile = Math.floor((pos.Edge(Direction.Down) - 1) / Const.TILE_SIZE);\r\n\r\n            let xColision: number | undefined;\r\n            IterateRange(startXTile, endXTile, (x, ctrl) => {\r\n                for (let y = startYTile; y <= endYTile; y++) {\r\n                    if (x < 0 || x >= this.width) {\r\n                        xColision = x;\r\n                        ctrl.break();\r\n                        return;\r\n                    }\r\n                    if (onChecked) onChecked(x, y);\r\n                    if (!this.cells[x][y].pathable) {\r\n                        ctrl.break();\r\n                        xColision = x;\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (xColision === undefined) {\r\n                pos.x += vel.x;\r\n            } else {\r\n                if (vel.x >= 0) pos.x = xColision * Const.TILE_SIZE - pos.w;\r\n                else pos.x = (xColision + 1) * Const.TILE_SIZE;\r\n            }\r\n        }\r\n        if (vel.y !== 0) {\r\n            const startYTile = Math.floor(pos.Edge(yDirection) / Const.TILE_SIZE);\r\n            const endYTile = Math.floor((pos.Edge(yDirection) + vel.y) / Const.TILE_SIZE);\r\n            const startXTile = Math.floor(pos.Edge(Direction.Left) / Const.TILE_SIZE);\r\n            const endXTile = Math.floor((pos.Edge(Direction.Right) - 1) / Const.TILE_SIZE);\r\n\r\n            let yColision: number | undefined;\r\n            IterateRange(startYTile, endYTile, (y, ctrl) => {\r\n                for (let x = startXTile; x <= endXTile; x++) {\r\n                    if (y < 0 || y >= this.height) {\r\n                        yColision = y;\r\n                        ctrl.break();\r\n                        return;\r\n                    }\r\n                    if (onChecked) onChecked(x, y);\r\n                    if (!this.cells[x][y].pathable) {\r\n                        ctrl.break();\r\n                        yColision = y;\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (yColision === undefined) {\r\n                pos.y += vel.y;\r\n            } else {\r\n                if (vel.y >= 0) pos.y = yColision * Const.TILE_SIZE - pos.h;\r\n                else pos.y = (yColision + 1) * Const.TILE_SIZE;\r\n            }\r\n        }\r\n    }\r\n}","export const TILES_WIDE = 28;\r\nexport const TILES_HIGH = 28;\r\nexport const TILE_SIZE = 16;","import { IGraphic } from './IGraphic';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\n\r\nexport default class SheetGraphic implements IGraphic {\r\n\r\n    width: number;\r\n    height: number;\r\n\r\n    constructor(public sheet: SpriteSheet, private tileX: number, private tileY: number) {\r\n        this.width = sheet.spriteWidth;\r\n        this.height = sheet.spriteHeight;\r\n    }\r\n\r\n    paint(ctx: CanvasRenderingContext2D, tx: number, ty: number, tw: number, th: number): void {\r\n        this.sheet.render(ctx, tx, ty, tw, th, this.tileX, this.tileY);\r\n    }\r\n\r\n}","import { IGraphic } from '../IGraphic';\r\nimport * as Const from '../Constants';\r\nimport { SpriteSheet } from '../../common/assets/SpriteSheet';\r\nimport SheetGraphic from '../SheetGraphic';\r\n\r\nconst GRASS_TILES: [number, number][] =\r\n[\r\n    [10, 0],\r\n    [10, 0],\r\n    [10, 0],\r\n    [10, 0],\r\n    [10, 0],\r\n    [7, 1],\r\n    [7, 1],\r\n    [10, 1],\r\n    [10, 2],\r\n    [9, 2]\r\n];\r\n\r\nexport default class Cell {\r\n    constructor(public pathable: boolean, public graphic: IGraphic) {\r\n\r\n    }\r\n\r\n    paint(ctx: CanvasRenderingContext2D, tx: number, ty: number) {\r\n        this.graphic.paint(ctx, tx, ty, Const.TILE_SIZE, Const.TILE_SIZE);\r\n    }\r\n\r\n    static GrassFloor(sheet: SpriteSheet): Cell {\r\n        const grassCoords = GRASS_TILES[Math.floor(Math.random() * GRASS_TILES.length)];\r\n        return new Cell(true, new SheetGraphic(sheet, grassCoords[0], grassCoords[1]));\r\n    }\r\n\r\n    static RockWall(sheet: SpriteSheet): Cell {\r\n        return new Cell(false, new SheetGraphic(sheet, 7, 24));\r\n    }\r\n}","import Point from './Point';\r\nimport { Direction, ECardinalDirection, EDiagonalDirection } from './Direction';\r\n\r\nexport default class Rect {\r\n    constructor(public x: number, public y: number, public w: number, public h: number) { }\r\n\r\n    Shift(x: number, y: number): Rect;\r\n    Shift(p: Point): Rect;\r\n    Shift(xp: number | Point, y?: number): Rect {\r\n        if (y === undefined) {\r\n            return new Rect(this.x + (xp as Point).x, this.y + (xp as Point).y, this.w, this.h);\r\n        }\r\n        return new Rect(this.x + (xp as number), this.y + y, this.w, this.h);\r\n    }\r\n\r\n    ShiftBy(x: number, y: number): void;\r\n    ShiftBy(p: Point): void;\r\n    ShiftBy(xp: number | Point, y?: number): void {\r\n        if (y === undefined) {\r\n            this.x += (xp as Point).x;\r\n            this.y += (xp as Point).y;\r\n        } else {\r\n            this.x += (xp as number);\r\n            this.y += y;\r\n        }\r\n    }\r\n\r\n    Edge(direction: ECardinalDirection): number {\r\n        switch (direction) {\r\n            case Direction.Up: return this.y;\r\n            case Direction.Down: return this.y + this.h;\r\n            case Direction.Left: return this.x;\r\n            case Direction.Right: return this.x + this.w;\r\n        }\r\n    }\r\n\r\n    Corner(direction: EDiagonalDirection): Point {\r\n        switch (direction) {\r\n            case Direction.UpRight: return new Point(this.x, this.y);\r\n            case Direction.DownRight: return new Point(this.x, this.y);\r\n            case Direction.DownLeft: return new Point(this.x, this.y);\r\n            case Direction.UpLeft: return new Point(this.x, this.y);\r\n        }\r\n    }\r\n\r\n    equals(r: Rect) {\r\n        return r.x === this.x && r.y === this.y && r.w === this.w && r.h === this.h;\r\n    }\r\n}","import Axios from 'axios-observable';\r\n\r\nexport class FileResource<T> {\r\n    public body: T;\r\n    constructor(fileUrl: string, private onload: () => void) {\r\n        Axios.get(fileUrl).subscribe(data => {\r\n            this.body = data.data as T;\r\n            this.onload();\r\n        });\r\n    }\r\n}","import * as Const from './Constants';\r\nimport AssetLoader from '../common/assets/AssetLoader';\r\nimport { SpriteSheet } from '../common/assets/SpriteSheet';\r\nimport arrowsUrl from '../common-assets/arrows.png';\r\nimport tilesUrl from '../common-assets/rpg1.png';\r\nimport wizardUrl from '../common-assets/wizard16.png';\r\nimport { NearestNeighborScaling, ResizeCanvas } from '../common/CanvasHelpers';\r\nimport NearestNeighborScalingHelper from '../common/NearestNeighborScalingHelper';\r\nimport World from './world/World';\r\nimport Cell from './world/Cell';\r\nimport Rect from '../common/position/Rectangle';\r\nimport KeyboardManager from '../common/input/KeyboardManager';\r\nimport Point from '../common/position/Point';\r\nimport { FileResource } from '../common/assets/FileResource';\r\n\r\nconst CAMERA_SLOWDOWN_FACTOR = 3;\r\n\r\nlet assets: {\r\n    tiles: SpriteSheet,\r\n    wizard: SpriteSheet,\r\n    arrows: SpriteSheet,\r\n    tilesets: FileResource<any>\r\n};\r\n\r\nlet ctx: CanvasRenderingContext2D;\r\n\r\nlet world: World;\r\n\r\nlet keys: KeyboardManager;\r\n\r\nexport default function Run() {\r\n    const assetLoader = new AssetLoader();\r\n    assets = {\r\n        tiles: new SpriteSheet(16, 16, tilesUrl, assetLoader.registerAssetLoadCallback()),\r\n        wizard: new SpriteSheet(16, 16, wizardUrl, assetLoader.registerAssetLoadCallback()),\r\n        arrows: new SpriteSheet(16, 16, arrowsUrl, assetLoader.registerAssetLoadCallback()),\r\n        tilesets: new FileResource('../dist/assets/rpgtest/tilesets.json', assetLoader.registerAssetLoadCallback()),\r\n    };\r\n    keys = new KeyboardManager(document.body);\r\n    assetLoader.onAllFinished(assetLoadDone);\r\n}\r\n\r\nfunction assetLoadDone() {\r\n    world = new World(Const.TILES_WIDE * 2, Const.TILES_HIGH * 2, () => {\r\n        if (Math.random() <= 0.15) {\r\n            return Cell.RockWall(assets.tiles);\r\n        }\r\n        else {\r\n            return Cell.GrassFloor(assets.tiles);\r\n        }\r\n    });\r\n    world.updatePrerender();\r\n    const canvas = document.getElementById('mainCanvas') as HTMLCanvasElement;\r\n    ctx = canvas.getContext('2d');\r\n    const scaleHelper = new NearestNeighborScalingHelper(canvas, ctx, Const.TILE_SIZE * Const.TILES_WIDE, Const.TILE_SIZE * Const.TILES_HIGH, true, () => { return; });\r\n    tick();\r\n}\r\n\r\nconst camPos = new Point(0, 0);\r\nconst playerPos = new Rect(0, 0, 14, 14);\r\nlet toggle = false;\r\nfunction tick() {\r\n    ctx.clearRect(0, 0, Const.TILES_WIDE * Const.TILE_SIZE, Const.TILES_HIGH * Const.TILE_SIZE);\r\n    NearestNeighborScaling(ctx);\r\n    ctx.save();\r\n    let cx = 0;\r\n    let cy = 0;\r\n    if (world.width > Const.TILES_WIDE) {\r\n        cx = Math.max(0, Math.min((world.width - Const.TILES_WIDE) * Const.TILE_SIZE, playerPos.x - (Const.TILE_SIZE * Const.TILES_WIDE / 2)));\r\n    }\r\n    if (world.height > Const.TILES_HIGH) {\r\n        cy = Math.max(0, Math.min((world.height - Const.TILES_HIGH) * Const.TILE_SIZE, playerPos.y - (Const.TILE_SIZE * Const.TILES_HIGH / 2)));\r\n    }\r\n\r\n    camPos.MultWith(CAMERA_SLOWDOWN_FACTOR, CAMERA_SLOWDOWN_FACTOR)\r\n          .AddWith(cx, cy)\r\n          .DivideWith(CAMERA_SLOWDOWN_FACTOR + 1, CAMERA_SLOWDOWN_FACTOR + 1);\r\n\r\n    ctx.translate(-camPos.x, -camPos.y);\r\n    ctx.drawImage(world.prerender, 0, 0);\r\n    keys.update();\r\n\r\n    ctx.fillStyle = 'blue';\r\n    ctx.fillRect(playerPos.x, playerPos.y, playerPos.w, playerPos.h);\r\n    const vel = new Point(0, 0);\r\n    if (keys.isKeyDown('a')) {\r\n        vel.x = -3;\r\n    }\r\n    if (keys.isKeyDown('d')) {\r\n        vel.x = 3;\r\n    }\r\n    if (keys.isKeyDown('w')) {\r\n        vel.y = -3;\r\n    }\r\n    if (keys.isKeyDown('s')) {\r\n        vel.y = 3;\r\n    }\r\n    ctx.fillStyle = 'yellow';\r\n    ctx.globalAlpha = 0.6;\r\n    world.tryMoveEntity(playerPos, vel, (tx, ty) => {\r\n        ctx.fillRect(tx * Const.TILE_SIZE, ty * Const.TILE_SIZE, Const.TILE_SIZE, Const.TILE_SIZE);\r\n    });\r\n    ctx.globalAlpha = 1;\r\n\r\n    toggle = !toggle;\r\n    if (toggle) {\r\n        ctx.fillStyle = 'white';\r\n        ctx.fillRect(0, 0, 10, 10);\r\n    }\r\n    ctx.restore();\r\n    requestAnimationFrame(() => tick());\r\n}","export default class Point {\r\n\r\n    static zero(): Point  {\r\n        return new Point(0,0);\r\n    }\r\n\r\n    constructor(public x: number, public y: number) {\r\n\r\n    }\r\n\r\n    public static fromAngle(angle: number, distance?: number) : Point {\r\n        return new Point(Math.cos(angle) * (distance ?? 1), Math.sin(angle) * (distance ?? 1));\r\n    }\r\n\r\n    public LengthSq(): number {\r\n        return Point.Dot(this, this);\r\n    }\r\n\r\n    public Length(): number {\r\n        return Math.sqrt(this.LengthSq());\r\n    }\r\n\r\n    public Clone(): Point {\r\n        return new Point(this.x, this.y);\r\n    }\r\n\r\n    public Negate(): Point {\r\n        return new Point(-this.x, -this.y);\r\n    }\r\n\r\n    public NegateInPlace(): this {\r\n        this.x = -this.x;\r\n        this.y = -this.y;\r\n        return this;\r\n    }\r\n\r\n    public static Dot(p1: Point, p2: Point): number {\r\n        return p1.x * p2.x + p1.y * p2.y;\r\n    }\r\n\r\n    public DotWith(other: Point): number {\r\n        return Point.Dot(this, other);\r\n    }\r\n\r\n    public normalize(): Point {\r\n        let len = this.Length();\r\n        return Point.Multiply(this, 1 / len);\r\n    }\r\n\r\n    public Direction(): number {\r\n        return Math.atan2(this.y, this.x);\r\n    }\r\n\r\n    public AddWith(x: number, y: number): this;\r\n    public AddWith(other: Point): this;\r\n    public AddWith(other: number|Point, y?: number): this {\r\n        const {x: nx, y: ny} = splitArgs(other, y);\r\n        this.x += nx;\r\n        this.y += ny;\r\n        return this;\r\n    }\r\n\r\n    public MultWith(s: number): this;\r\n    public MultWith(x: number, y: number): this;\r\n    public MultWith(other: Point): this;\r\n    public MultWith(other: number|Point, y?: number): this {\r\n        const {x: nx, y: ny} = splitArgsOrSingle(other, y);\r\n        this.x *= nx;\r\n        this.y *= ny;\r\n        return this;\r\n    }\r\n\r\n    public SubtractWith(x: number, y: number): this;\r\n    public SubtractWith(other: Point): this;\r\n    public SubtractWith(other: number|Point, y?: number): this {\r\n        const {x: nx, y: ny} = splitArgs(other, y);\r\n        this.x -= nx;\r\n        this.y -= ny;\r\n        return this;\r\n    }\r\n\r\n    public DivideWith(x: number, y: number): this;\r\n    public DivideWith(other: Point): this;\r\n    public DivideWith(other: number|Point, y?: number): this {\r\n        const {x: nx, y: ny} = splitArgs(other, y);\r\n        this.x /= nx;\r\n        this.y /= ny;\r\n        return this;\r\n    }\r\n\r\n    public Equals(other: Point): boolean {\r\n        return this.x === other.x && this.y === other.y;\r\n    }\r\n\r\n    \r\n    static add(src: Point, x: number, y: number): Point;\r\n    static add(src: Point, other: Point): Point;\r\n    static add(src: Point, other: number|Point, y?: number): Point {\r\n        const {x: nx, y: ny} = splitArgs(other, y);\r\n        return new Point(src.x + nx, src.y + ny);\r\n    }\r\n\r\n    static subtract(src: Point, x: number, y: number): Point;\r\n    static subtract(src: Point, other: Point): Point;\r\n    static subtract(src: Point, other: number|Point, y?: number): Point {\r\n        const {x: nx, y: ny} = splitArgs(other, y);\r\n        return new Point(src.x - nx, src.y - ny);\r\n    }\r\n\r\n    static Multiply(a: Point, s: number, sy?: number): Point;\r\n    static Multiply(a: Point, b: Point): Point;\r\n    static Multiply(a: Point, b: Point|number, sy ?: number): Point {\r\n        if (sy !== undefined) {\r\n            return new Point(a.x * (b as number), a.y * sy);\r\n        }\r\n        else if ((b as any).x !== undefined) {\r\n            return new Point(a.x * (b as Point).x, a.y * (b as Point).y);\r\n        } else {\r\n            return new Point(a.x * (b as number), a.y * (b as number));\r\n        }\r\n    }\r\n\r\n    static interpolate(a: Point, b: Point, p: number): Point {\r\n        return new Point(a.x + (b.x - a.x) * p, a.y + (b.y - a.y) * p);\r\n    }\r\n\r\n    static componentMin(a: Point, b: Point): Point {\r\n        if(a.x <= b.x && a.y <= b.y) return a;\r\n        if(b.x <= a.x && b.y <= a.y) return b;\r\n        return new Point(Math.min(a.x, b.x), Math.min(a.y, b.y));\r\n    }\r\n    \r\n    static componentMax(a: Point, b: Point): Point {\r\n        if(a.x >= b.x && a.y >= b.y) return a;\r\n        if(b.x >= a.x && b.y >= a.y) return b;\r\n        return new Point(Math.max(a.x, b.x), Math.max(a.y, b.y));\r\n    }\r\n\r\n    static Bezier(pts: Point[], t: number): Point {\r\n        if(pts.length === 1) return pts[0];\r\n        else if(pts.length === 2) return Point.add(Point.Multiply(pts[1], t), Point.Multiply(pts[0], 1-t));\r\n        return Point.add(\r\n            Point.Multiply(Point.Bezier(pts.slice(1), t), t),\r\n            Point.Multiply(Point.Bezier(pts.slice(0, pts.length - 1), t), 1-t));\r\n    }\r\n\r\n    rotate(theta: number): Point {\r\n        const angle = Math.atan2(this.y, this.x);\r\n        const len = this.Length();\r\n        return Point.fromAngle(angle + theta, len);\r\n    }\r\n}\r\n\r\nfunction splitArgs(x: Point|number, y ?: number): {x: number, y: number} {\r\n    if(y === undefined) return { x: (<Point>x).x, y: (<Point>x).y };\r\n    return {x: <number>x, y};\r\n}\r\n\r\nfunction splitArgsOrSingle(x: Point|number, y ?: number): {x: number, y: number} {\r\n    if(y === undefined)\r\n    {\r\n        if((x as Point).x !== undefined) {\r\n            return { x: (<Point>x).x, y: (<Point>x).y };\r\n        }\r\n        return { x: x as number, y: x as number };\r\n    } \r\n    return {x: <number>x, y};\r\n}","import Point from './Point';\r\n\r\nexport enum Direction {\r\n    Up = 0,\r\n    UpRight,\r\n    Right,\r\n    DownRight,\r\n    Down,\r\n    DownLeft,\r\n    Left,\r\n    UpLeft,\r\n}\r\n\r\nexport type ECardinalDirection = Direction.Up | Direction.Right | Direction.Down | Direction.Left;\r\nexport type EDiagonalDirection = Direction.UpRight | Direction.DownRight | Direction.DownLeft | Direction.UpLeft;\r\n\r\nexport const directionValues: Point[] = [\r\n    new Point(0, -1),\r\n    new Point(1, -1),\r\n    new Point(1, 0),\r\n    new Point(1, 1),\r\n    new Point(0, 1),\r\n    new Point(-1, 1),\r\n    new Point(-1, 0),\r\n    new Point(-1, -1),\r\n];\r\n\r\nexport const allDirections: Direction[] = [\r\n    Direction.Up,\r\n    Direction.UpRight,\r\n    Direction.Right,\r\n    Direction.DownRight,\r\n    Direction.Down,\r\n    Direction.DownLeft,\r\n    Direction.Left,\r\n    Direction.UpLeft,\r\n];\r\nexport const cardinalDirections: ECardinalDirection[] = [\r\n    Direction.Up,\r\n    Direction.Right,\r\n    Direction.Down,\r\n    Direction.Left\r\n];\r\nexport const diagonalDirections: EDiagonalDirection[] = [\r\n    Direction.UpRight,\r\n    Direction.DownRight,\r\n    Direction.DownLeft,\r\n    Direction.UpLeft,\r\n];\r\n\r\nexport function ToPoint(direction: Direction): Point {\r\n    return directionValues[direction];\r\n}","import { IKeyChange } from './KeyWatcher';\r\n\r\nexport default class KeyState {\r\n    constructor(public keys: string[], public changes: IKeyChange[]) {\r\n\r\n    }\r\n\r\n    public isKeyDown(key: string) {\r\n        return this.keys.indexOf(key) !== -1;\r\n    }\r\n\r\n    public isKeyUp(key: string) {\r\n        return this.keys.indexOf(key) === -1;\r\n    }\r\n}","import KeyState from './KeyState';\r\n\r\nexport interface IKeyChange {\r\n    key: string;\r\n    change: 'press'|'release';\r\n}\r\n\r\nexport default class KeyWatcher {\r\n    downKeys: string[];\r\n    changes: IKeyChange[];\r\n\r\n    constructor(public attachedElement: HTMLElement, private logKeyNames?: boolean) {\r\n        if  (this.logKeyNames === undefined) {\r\n            this.logKeyNames = false;\r\n        }\r\n        attachedElement.addEventListener('keydown', k => this.onKeyDown(k));\r\n        attachedElement.addEventListener('keyup', k => this.onKeyUp(k));\r\n\r\n        this.downKeys = [];\r\n        this.changes = [];\r\n    }\r\n\r\n    private onKeyDown(key: KeyboardEvent) {\r\n        if (this.logKeyNames) {\r\n            // tslint:disable-next-line: no-console\r\n            console.log(key.key);\r\n        }\r\n        const idx = this.downKeys.indexOf(key.key);\r\n        if (idx === -1) {\r\n            this.changes.push({ key: key.key, change: 'press' });\r\n            this.downKeys.push(key.key);\r\n        }\r\n    }\r\n\r\n    private onKeyUp(key: KeyboardEvent) {\r\n        this.changes.push({ key: key.key, change: 'release' });\r\n        const idx = this.downKeys.indexOf(key.key);\r\n        this.downKeys.splice(idx, 1);\r\n    }\r\n\r\n    public Update(): KeyState {\r\n        const storeKeys = this.downKeys;\r\n        const storeChanges = this.changes;\r\n\r\n        this.downKeys = storeKeys.slice();\r\n        this.changes = [];\r\n\r\n        return new KeyState(storeKeys, storeChanges);\r\n    }\r\n}","import KeyWatcher, { IKeyChange } from './KeyWatcher';\r\nimport KeyState from './KeyState';\r\n\r\nexport default class KeyboardManager {\r\n\r\n    watcher: KeyWatcher;\r\n    prvState: KeyState;\r\n    currentState: KeyState;\r\n\r\n    constructor(element: HTMLElement, logKeyNames?: boolean) {\r\n        this.watcher = new KeyWatcher(element, logKeyNames);\r\n        this.prvState = this.currentState = this.watcher.Update();\r\n    }\r\n\r\n    public update(): void {\r\n        this.prvState = this.currentState;\r\n        this.currentState = this.watcher.Update();\r\n    }\r\n\r\n    public isKeyDown(key: string): boolean {\r\n        return this.currentState.isKeyDown(key);\r\n    }\r\n\r\n    public isKeyUp(key: string): boolean {\r\n        return this.currentState.isKeyUp(key);\r\n    }\r\n\r\n    public isKeyPressed(key: string): boolean {\r\n        return this.currentState.isKeyDown(key) && this.prvState.isKeyUp(key);\r\n    }\r\n\r\n    public isKeyReleased(key: string): boolean {\r\n        return this.currentState.isKeyUp(key) && this.prvState.isKeyDown(key);\r\n    }\r\n\r\n    public changes(): IKeyChange[] {\r\n        return this.currentState.changes;\r\n    }\r\n}","export default __webpack_public_path__ + \"bbb298f00b41bbd627d27aa0529a20ba.png\";"],"sourceRoot":""}