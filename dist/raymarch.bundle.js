"use strict";(self.webpackChunktrading_game=self.webpackChunktrading_game||[]).push([[795],{7774:(t,e,n)=>{n.d(e,{Z:()=>i});var s=n(2294);class i{constructor(t=!0){this.components=t?[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]]:[[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,1]]}transform(t){let e=this.multRow(this.components[0],t),n=this.multRow(this.components[1],t),i=this.multRow(this.components[2],t),r=this.multRow(this.components[3],t);return new s.Z(e/r,n/r,i/r)}mult(t){const e=new i;for(let n=0;n<4;n++)for(let s=0;s<4;s++){e.components[n][s]=0;for(let i=0;i<4;i++)e.components[n][s]+=this.components[n][i]*t.components[i][s]}return e}multRow(t,e){return t[0]*e.x+t[1]*e.y+t[2]*e.z+t[3]}colMajor(){let t=new Array(16),e=0;for(let n=0;n<4;n++)for(let s=0;s<4;s++)t[e++]=this.components[n][s];return t}rowMajor(){let t=new Array(16),e=0;for(let n=0;n<4;n++)for(let s=0;s<4;s++)t[e++]=this.components[s][n];return t}static translate(t){let e=new i;return e.components[0][3]=t.x,e.components[1][3]=t.y,e.components[2][3]=t.z,e}}},2294:(t,e,n)=>{n.d(e,{Z:()=>s});class s{constructor(t,e,n){this.x=t,this.y=e,this.z=n}static zero(){return new s(0,0,0)}lengthSq(){return this.dot(this)}length(){return Math.sqrt(this.lengthSq())}clone(){return new s(this.x,this.y,this.z)}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}normalize(){let t=this.length();return this.div(t)}mult(t,e,n){let{x:r,y:o,z:a}=i(t,e,n,!0);return new s(r*this.x,o*this.y,a*this.z)}div(t,e,n){let{x:r,y:o,z:a}=i(t,e,n,!0);return new s(this.x/r,this.y/o,this.z/a)}add(t,e,n){let{x:r,y:o,z:a}=i(t,e,n);return new s(this.x+r,this.y+o,this.z+a)}sub(t,e,n){let{x:r,y:o,z:a}=i(t,e,n);return new s(this.x-r,this.y-o,this.z-a)}}function i(t,e,n,s=!1){return void 0===e?s&&void 0===t.x?{x:t,y:t,z:t}:t:{x:t,y:e,z:n}}},7550:(t,e,n)=>{n.d(e,{Z:()=>r});var s=n(2751),i=n(7774);class r{constructor(t,e,n,s){this.real=t,this.i=e,this.j=n,this.k=s}inverse(){const t=r.Dot(this,this);return new r(this.real/t,-this.i/t,-this.j/t,-this.k/t)}static Dot(t,e){return t.real*e.real+t.i*e.i+t.j*e.j+t.k*e.k}static axisRotation(t,e){const n=Math.cos(e/2),s=Math.sin(e/2),i=t.length();return new r(n,s*t.x/i,s*t.y/i,s*t.z/i)}static multiply(t,e){return new r(t.real*e.real-t.i*e.i-t.j*e.j-t.k*e.k,t.real*e.i+t.i*e.real+t.j*e.k-t.k*e.j,t.real*e.j-t.i*e.k+t.j*e.real+t.k*e.i,t.real*e.k+t.i*e.j-t.j*e.i+t.k*e.real)}applyTransform(t){if(void 0!==t.real)return r.multiply(this,r.multiply(t,this.inverse()));{const e=new r(0,t.x,t.y,t.z),n=r.multiply(this,r.multiply(e,this.inverse()));return new s.Z(n.i,n.j,n.k)}}toMatrix(){const t=new i.Z;return t.components[0][0]=1-2*this.j*this.j-2*this.k*this.k,t.components[0][1]=2*this.i*this.j-2*this.k*this.real,t.components[0][2]=2*this.i*this.k+2*this.j*this.real,t.components[1][0]=2*this.i*this.j+2*this.k*this.real,t.components[1][1]=1-2*this.i*this.i-2*this.k*this.k,t.components[1][2]=2*this.j*this.k-2*this.i*this.real,t.components[2][0]=2*this.i*this.k-2*this.j*this.real,t.components[2][1]=2*this.j*this.k+2*this.i*this.real,t.components[2][2]=1-2*this.i*this.i-2*this.j*this.j,t}}},2751:(t,e,n)=>{n.d(e,{Z:()=>s});class s{constructor(t,e,n){this.x=t,this.y=e,this.z=n}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}length(){return Math.sqrt(this.lengthSq())}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}normalize(){return this.multiply(1/this.lengthSq())}negate(){return new s(-this.x,-this.y,-this.z)}multiply(t,e,n){i(t)||(e=null!=e?e:t,n=null!=n?n:t);var[r,o,a]=s.getxyz(t,e,n);return new s(this.x*r,this.y*o,this.z*a)}add(t,e,n){var[i,r,o]=s.getxyz(t,e,n);return new s(this.x+i,this.y+r,this.z+o)}subtract(t,e,n){var[i,r,o]=s.getxyz(t,e,n);return new s(this.x-i,this.y-r,this.z-o)}static getxyz(t,e,n){return i(t)?[t.x,t.y,t.z]:[t,e,n]}}function i(t){return void 0!==t.x}},6718:(t,e,n)=>{n.d(e,{Z:()=>r});class s{constructor(t,e){this.keys=t,this.changes=e}isKeyDown(t){return-1!==this.keys.indexOf(t)}isKeyUp(t){return-1===this.keys.indexOf(t)}}class i{constructor(t,e){this.attachedElement=t,this.logKeyNames=e,void 0===this.logKeyNames&&(this.logKeyNames=!1),t.addEventListener("keydown",(t=>this.onKeyDown(t))),t.addEventListener("keyup",(t=>this.onKeyUp(t))),this.downKeys=[],this.changes=[]}onKeyDown(t){this.logKeyNames&&console.log(t.key),-1===this.downKeys.indexOf(t.key)&&(this.changes.push({key:t.key,change:"press"}),this.downKeys.push(t.key))}onKeyUp(t){this.changes.push({key:t.key,change:"release"});const e=this.downKeys.indexOf(t.key);this.downKeys.splice(e,1)}Update(){const t=this.downKeys,e=this.changes;return this.downKeys=t.slice(),this.changes=[],new s(t,e)}}class r{constructor(t,e){this.watcher=new i(t,e),this.prvState=this.currentState=this.watcher.Update()}update(){this.prvState=this.currentState,this.currentState=this.watcher.Update()}isKeyDown(t){return this.currentState.isKeyDown(t)}isKeyUp(t){return this.currentState.isKeyUp(t)}isKeyPressed(t){return this.currentState.isKeyDown(t)&&this.prvState.isKeyUp(t)}isKeyReleased(t){return this.currentState.isKeyUp(t)&&this.prvState.isKeyDown(t)}changes(){return this.currentState.changes}}},9741:(t,e,n)=>{n.r(e),n.d(e,{default:()=>A});var s=n(7363),i=n(5901);function r(t,e,n){return new a("sin",void 0===e?-1:e,void 0===n?1:n,t)}function o(t,e,n){return new a("cos",void 0===e?-1:e,void 0===n?1:n,t)}class a{constructor(t,e,n,s){this.timeFunc=t,this.min=e,this.max=n,this.rate=s}}function l(t){if(void 0===t.timeFunc){const e=t.toString();return-1===e.indexOf(".")?e+".0":e}{const e=(t.max-t.min)/2,n=(t.max+t.min)/2,s=`(t/60.0 * ${l(t.rate)})`;switch(t.timeFunc){case"sin":return`sin(${s} * PI * 2.0) * ${l(e)} + ${l(n)}`;case"cos":return`cos(${s} * PI * 2.0) * ${l(e)} + ${l(n)}`}}}function c(t,e,n){return"vec3("+l(t)+","+l(e)+","+l(n)+")"}var h=n(6718),u=n(7550),m=n(2751);const p=new class{constructor(t){this.primitive=t,this.nextTempVar=0,this.glsl="float dist(vec3 p) {\r\n"}getTempVarName(){return"t"+this.nextTempVar++}elongate(t,e,n){return this.glsl+=`p = p - clamp(p, -${c(t,e,n)}, ${c(t,e,n)} );\r\n`,this}repeat(t,e,n){const s=c(t,e,n);return this.glsl+=`p = mod(p+0.5*${s},${s})-0.5*${s};\r\n`,this}symX(){return this.glsl+="p.x = abs(p.x);\r\n",this}symY(){return this.glsl+="p.y = abs(p.y);\r\n",this}symZ(){return this.glsl+="p.z = abs(p.z);\r\n",this}symAxis(t,e,n){const s=(i=e,r=n,"normalize(vec3("+l(t)+","+l(i)+","+l(r)+"))");var i,r;return this.glsl+=`p -= 2.0 * min(0.00, dot(p, ${s})) * ${s};\r\n`,this}rXt(t){const e=this.getTempVarName(),n="PI * t/30.0 * "+l(t);return this.glsl+=`mat3 ${e} = mat3(\n            1.0, 0.0, 0.0,\n            0.0, cos(${n}), sin(${n}),\n            0.0, -sin(${n}), cos(${n})\n        );\n        p = ${e} * p;\r\n`,this}rYt(t){const e=this.getTempVarName(),n="PI * t/30.0 * "+l(t);return this.glsl+=`mat3 ${e} = mat3(\n            cos(${n}), 0.0, -sin(${n}),\n            0.0, 1.0, 0.0,\n            sin(${n}), 0.0, cos(${n})\n        );\n        p = ${e} * p;\r\n`,this}rZt(t){const e=this.getTempVarName(),n="PI * t/30.0 * "+l(t);return this.glsl+=`mat3 ${e} = mat3(\n            cos(${n}), sin(${n}), 0.0,\n            -sin(${n}), cos(${n}), 0.0,\n            0.0, 0.0, 1.0\n        );\n        p = ${e} * p;\r\n`,this}rX(t){const e=this.getTempVarName(),n=l(t);return this.glsl+=`mat3 ${e} = mat3(\n            1.0, 0.0, 0.0,\n            0.0, cos(${n}), sin(${n}),\n            0.0, -sin(${n}), cos(${n})\n        );\n        p = ${e} * p;\r\n`,this}rY(t){const e=this.getTempVarName(),n=l(t);return this.glsl+=`mat3 ${e} = mat3(\n            cos(${n}), 0.0, -sin(${n}),\n            0.0, 1.0, 0.0,\n            sin(${n}), 0.0, cos(${n})\n        );\n        p = ${e} * p;\r\n`,this}rZ(t){const e=this.getTempVarName(),n=l(t);return this.glsl+=`mat3 ${e} = mat3(\n            cos(${n}), sin(${n}), 0.0,\n            -sin(${n}), cos(${n}), 0.0,\n            0.0, 0.0, 1.0\n        );\n        p = ${e} * p;\r\n`,this}translate(t,e,n){return this.glsl+=`p = p-vec3(${l(t)},${l(e)},${l(n)});\r\n`,this}customGlsl(t){return this.glsl+=t,this}emitGlsl(){return this.glsl+=this.primitive.emitGlsl(),this.glsl+="}",this.glsl}}(new class{constructor(t,e,n,s){this.scale=t,this.c=e,this.maxIterations=n,this.bailoutRange=s}emitGlsl(){return`\nconst float bailout = ${l(this.bailoutRange)};\nconst vec3 C = ${c(this.c.x,this.c.y,this.c.z)};\nconst float scale = ${l(this.scale)};\nconst int MI = ${this.maxIterations};\nfloat r = dot(p, p);\nint numi = 0;\nfor(int i = 0; i < MI; i++){\n    numi = i;\n    if(r >= bailout) break;\n\n    // Rotate 1\n    \n    p = abs(p);\n    if(p.x - p.y < 0.0){ float x1=p.y; p.y=p.x; p.x=x1;}\n    if(p.x - p.z < 0.0){ float x1=p.z; p.z=p.x; p.x=x1;}\n    if(p.y - p.z < 0.0){ float y1=p.z; p.z=p.y; p.y=y1;}\n\n    // Rotate 2\n\n    p.xy = scale * p.xy - C.xy * (scale-1.0);\n    p.z=scale*p.z;\n    if(p.z>0.5*C.z*(scale-1.0)) p.z-=C.z*(scale-1.0);\n    \n    r = dot(p, p);\n}\nreturn (length(p)-2.0)*pow(scale,-float(numi));\r\n`}}(3,new m.Z(1,1,1),100,100)).symAxis(r(.03),o(.03),o(1,-.01,.01)).symAxis(-.8,.2,0).symAxis(.4,.6,0).symAxis(-.4,.6,0).rXt(.03).rYt(.003).rZt(-9e-4).translate(r(.1,-.4,.4),o(.2,-.2,.2),0).emitGlsl();console.log("DISTF: "),console.log(p);const d=`\nprecision mediump float;\n#define PI 3.1415926538\n\nuniform vec2 WindowSize;\nuniform vec3 cam_pos;\nuniform vec4 cam_orient;\nuniform float t;\n\nconst int MaximumRaySteps = 50;\nconst float MinimumDistance = 0.001;\nconst float MaxFogDist = 20.0;\n\nconst float nscale = 0.001;\nconst vec3 xdir = vec3(1.0, 0.0, 0.0);\nconst vec3 ydir = vec3(0.0, 1.0, 0.0);\nconst vec3 zdir = vec3(0.0, 0.0, 1.0);\nconst vec3 lightdir = normalize(vec3(1.0, 0.0, -1.0));\nconst vec3 lightsrc = lightdir * 10.0;\nconst vec3 amblight = vec3(0.1, 0.1, 0.1);\nconst vec3 normlight = vec3(1, .95, .9);\nconst float ambocc = 0.2;\nconst float shadowLightness = .3;\n\nconst float scale = 3.0;\nconst vec3 C = vec3(1, 1, 1);\nconst int MI = 100;\nconst float bailout = 10.0;\n\nvec4 qInverse(vec4 q) {\n    float denom = dot(q, q);\n    return vec4(-q.x / denom, -q.y / denom, -q.z / denom, q.w / denom);\n}\n\nvec4 qMult(vec4 a, vec4 b) {\n    vec4 res = vec4(0.0, 0.0, 0.0, 0.0);\n    res.x = a.w * b.x + a.x * b.w + a.y * b.z - a.z * b.y;\n    res.y = a.w * b.y - a.x * b.z + a.y * b.w + a.z * b.x;\n    res.z = a.w * b.z + a.x * b.y - a.y * b.x + a.z * b.w;\n    res.w = a.w * b.w - a.x * b.x - a.y * b.y - a.z * b.z;\n    return res;\n}\n\nvec4 qTransform(vec4 f, vec4 pt) {\n    return qMult(f, qMult(pt, qInverse(f)));\n}\n\n${p}\n\nvec3 trace(vec3 from, vec3 direction) {\n\tfloat totalDistance = 0.0;\n    int nsteps;\n    bool hit = false;\n\tfor (int steps = 0; steps < MaximumRaySteps; steps++) {\n        nsteps = steps;\n\t\tvec3 p = from + totalDistance * direction;\n\t\tfloat distance = dist(p);\n\t\ttotalDistance += distance;\n        if (distance < MinimumDistance) \n        {\n            hit = true;\n            break;\n        }\n    }\n\treturn vec3(totalDistance, 1.0-float(nsteps)/float(MaximumRaySteps), hit ? 1.0 : 0.0);\n}\n\nfloat derel(float f) {\n    return f + 1.0 / 2.0;\n}\n\nvoid main() {\n\n    float losx = (gl_FragCoord.x / WindowSize.x) * 2.0 - 1.0;\n    float losy = (gl_FragCoord.y / WindowSize.y) * 2.0 - 1.0;\n    vec3 losFwd = normalize(vec3(losx, losy, 1));\n    vec3 dir = qTransform(cam_orient, vec4(losFwd.x, losFwd.y, losFwd.z, 0)).xyz;\n\n    vec3 colis = trace(cam_pos, dir);\n\n    if(colis.z == 0.0)\n    {\n        gl_FragColor = vec4(0, 0, 0, 1.0);\n    }\n    else\n    {\n        vec3 pos = cam_pos + colis.x * dir;\n        vec3 dlight = 1.0 - amblight;\n        vec3 n = normalize(vec3(\n            dist(pos+xdir*nscale)-dist(pos-xdir*nscale),\n            dist(pos+ydir*nscale)-dist(pos-ydir*nscale),\n            dist(pos+zdir*nscale)-dist(pos-zdir*nscale)\n        ));\n\n        vec3 lightCastSrc = pos + n * MinimumDistance * 2.0;\n        vec3 lcolis = trace(lightCastSrc, normalize(lightsrc - lightCastSrc));\n\n        float shadow = 1.0 - lcolis.z;\n        shadow = min(shadow + shadowLightness, 1.0);\n\n        float normalLightAmt = clamp(dot(n, lightdir), 0.0, 1.0);\n                        \n        float fog = 1.0 - min(1.0, colis.x / MaxFogDist);\n        float cplx = colis.y;\n\n        vec3 color = (amblight + (1.0 - amblight) * normlight * normalLightAmt * (1.0 - ambocc + ambocc * colis.y)) * fog * shadow;\n        gl_FragColor = vec4(color.x, color.y, color.z, 1.0);\n    }\n}\n`,g={x:0,y:0,z:-2};let f,y=0,x=new u.Z(1,0,0,0);const w=[["w",new m.Z(0,0,1)],["a",new m.Z(-1,0,0)],["s",new m.Z(0,0,-1)],["d",new m.Z(1,0,0)],["q",new m.Z(0,1,0)],["z",new m.Z(0,-1,0)]],v=-Math.PI/120,z=[["ArrowUp",new m.Z(1,0,0)],["ArrowDown",new m.Z(-1,0,0)],["ArrowLeft",new m.Z(0,1,0)],["ArrowRight",new m.Z(0,-1,0)]];function b(){const t=document.getElementById("canvas");(0,i.f5)(t,800,600);const e=t.getContext("webgl");if(null===e)return void alert("Unable to initialize WebGL. Your browser may not support it.");e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT);const n=function(t,e,n){const s=k(t,t.VERTEX_SHADER,"\nattribute vec4 aVertexPosition;\nvoid main() {\n  gl_Position = aVertexPosition;\n}\n"),i=k(t,t.FRAGMENT_SHADER,n),r=t.createProgram();if(t.attachShader(r,s),t.attachShader(r,i),t.linkProgram(r),t.getProgramParameter(r,t.LINK_STATUS))return r;alert("Unable to initialize the shader program: "+t.getProgramInfoLog(r))}(e,0,d),s=function(t){const e=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,e);return t.bufferData(t.ARRAY_BUFFER,new Float32Array([-1,1,1,1,-1,-1,1,-1]),t.STATIC_DRAW),{position:e}}(e);S(e,n,s,t),f=new h.Z(document.body,!1),$(e,n,s,t)}function $(t,e,n,s){f.update();let i=!1;for(const[t,e]of w)if(f.isKeyDown(t)){const t=f.isKeyDown("Shift")?.05:.005,n=x.applyTransform(e);g.x+=n.x*t,g.y+=n.y*t,g.z+=n.z*t,i=!0}for(const[t,e]of z)f.isKeyDown(t)&&(x=u.Z.multiply(x,u.Z.axisRotation(e,v)));S(t,e,n,s),requestAnimationFrame((()=>$(t,e,n,s)))}function S(t,e,n,s){t.clearColor(0,0,0,1),t.clearDepth(1),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT);{const s=2,i=t.FLOAT,r=!1,o=0,a=0;t.bindBuffer(t.ARRAY_BUFFER,n.position),t.vertexAttribPointer(t.getAttribLocation(e,"aVertexPosition"),s,i,r,o,a),t.enableVertexAttribArray(t.getAttribLocation(e,"aVertexPosition"))}t.useProgram(e),t.uniform2fv(t.getUniformLocation(e,"WindowSize"),[s.width,s.height]),t.uniform3fv(t.getUniformLocation(e,"cam_pos"),[g.x,g.y,g.z]),t.uniform4fv(t.getUniformLocation(e,"cam_orient"),[x.i,x.j,x.k,x.real]),t.uniform1f(t.getUniformLocation(e,"t"),y),y+=1;{const e=0,n=4;t.drawArrays(t.TRIANGLE_STRIP,e,n)}}function k(t,e,n){const s=t.createShader(e);return t.shaderSource(s,n),t.compileShader(s),t.getShaderParameter(s,t.COMPILE_STATUS)?s:(alert("An error occurred compiling the shaders: "+t.getShaderInfoLog(s)),void t.deleteShader(s))}function A(){return s.useEffect((()=>b())),s.createElement("div",{className:"conway conway_body full_body"},s.createElement("canvas",{id:"canvas"}))}},711:(t,e,n)=>{n.r(e),n.d(e,{default:()=>z});var s=n(7363),i=n(127),r=n(3486),o=n(7604),a=n(5907);function l(t){var e;return null!==(e=t.top)&&void 0!==e?e:t.edges.map((t=>2===t?"any":[t]))}function c(t){var e;return null!==(e=t.bottom)&&void 0!==e?e:t.edges.map((t=>0===t?"any":[t]))}function h(t,e){for(let n=0;n<t.length;n++)if("any"!==t[n]&&"any"!==e[n]){if(0===t[n].length||0===e[n].length)return!1;if(!u(t[n],e[n]))return!1}return!0}function u(t,e){for(let n=0;n<t.length;n++)if(-1!==e.indexOf(t[n]))return!0;return!1}const m=[{tile:[0,0],edges:[2,2,2,2]},{tile:[1,0],edges:[1,0,1,0]},{tile:[2,0],edges:[0,1,0,1]},{tile:[7,0],edges:[1,1,1,1]},{tile:[0,1],edges:[1,1,0,1]},{tile:[1,1],edges:[1,1,1,0]},{tile:[2,1],edges:[0,1,1,1]},{tile:[3,1],edges:[1,0,1,1]},{tile:[4,1],edges:[1,1,0,0]},{tile:[5,1],edges:[0,1,1,0]},{tile:[6,1],edges:[0,0,1,1]},{tile:[7,1],edges:[1,0,0,1]},{tile:[0,2],edges:[1,0,2,0]},{tile:[1,2],edges:[0,1,0,2]},{tile:[2,2],edges:[2,0,1,0]},{tile:[3,2],edges:[0,2,0,1]},{tile:[4,2],edges:[1,0,1,0],bottom:[[1,2],[1,2],[1,2],[1,2]]},{tile:[5,2],edges:[0,1,0,1],bottom:[[1,2],[1,2],[1,2],[1,2]]},{tile:[5,3],edges:[0,0,0,0]}],p=[{x:1,y:0,z:0},{x:0,y:1,z:0},{x:-1,y:0,z:0},{x:0,y:-1,z:0},{x:0,y:0,z:1},{x:0,y:0,z:-1}],d=n.p+"c169d19bb90720608b4e6ba8299edfb4.png";function g(t,e,n,s){if(y(n))return null;let i=[];f(e).forEach((e=>{t[e].neighbors[s].forEach((t=>{-1===i.indexOf(t)&&i.push(t)}))}));let r=f(n),o=!1;for(var a=r.length-1;a>=0;a--)-1===i.indexOf(r[a])&&(r.splice(a,1),o=!0);return o?1===r.length?r[0]:0===r.length?i[0]:r:null}function f(t){return y(t)?[t]:t}function y(t){return"number"==typeof t}let x;function w(){const t=new i.Z;x=new r.V(32,32,d,t.registerAssetLoadCallback()),t.onAllFinished((()=>function(){console.log(m);const t=function(t){const e=[];return t.forEach((n=>{let s={id:e.length,neighbors:[[],[],[],[],[],[]]};for(let e=0;e<t.length;e++){let i=t[e];for(let t=0;t<4;t++)i.edges[(t+2)%4]===n.edges[t]&&s.neighbors[t].push(e);h(l(i),c(n))&&s.neighbors[4].push(e),h(l(n),c(i))&&s.neighbors[5].push(e)}for(var i=0;i<s.neighbors.length;i++)s.neighbors[i].sort(((t,e)=>t-e));e.push(s)})),e}(m);console.log(t);const e=document.getElementById("canvas"),n=e.getContext("2d");let s=function(t,e,n,s){let i=[];for(let e=0;e<t.length;e++)i.push(e);let r=[];for(let t=0;t<e;t++){let t=[];for(let e=0;e<n;e++){let e=[];for(let t=0;t<s;t++)e.push([...i]);t.push(e)}r.push(t)}return r}(t,26,26,1);new o.Z(e,n,800,800,!0,void 0),v(m,t,x,s,n)}()))}function v(t,e,n,s,i){!function(t,e,n,s){let i=[400,800];for(let r=0;r<n[0][0].length;r++)for(let o=n.length-1;o>=0;o--)for(let l=n[o].length-1;l>=0;l--){if(!y(n[o][l][r]))continue;let c=t[n[o][l][r]],h=16*(o-l),u=8*-(o+l)-16*r;e.getSprite(c.tile[0],c.tile[1],32,32).draw(s,new a.Z(h+i[0],u+i[1],32,32),0)}}(t,n,s,i),function(t,e){let n=1/0,s=[];for(let t=0;t<e.length;t++)for(let i=0;i<e[t].length;i++)for(let r=0;r<e[t][i].length;r++)if(!y(e[t][i][r])){let o=e[t][i][r].length;o<n?(n=o,s=[{x:t,y:i,z:r}]):o===n&&s.push({x:t,y:i,z:r})}if(!isFinite(n))return!0;let i=Math.floor(Math.random()*s.length),{x:r,y:o,z:a}=s[i],l=f(e[r][o][a]),c=l[Math.floor(Math.random()*l.length)];return e[r][o][a]=c,function(t,e,n,s,i){let r=[{x:n,y:s,z:i}];for(;r.length>0;){let{x:n,y:s,z:i}=r.pop(),o=e[n][s][i];for(let a=0;a<6;a++){let l=p[a];if(n+l.x<0||s+l.y<0||i+l.z<0||n+l.x>=e.length||s+l.y>=e[n].length||i+l.z>=e[n][s].length)continue;let c=g(t,o,e[n+l.x][s+l.y][i+l.z],a);null!==c&&(e[n+l.x][s+l.y][i+l.z]=c,r.push({x:n+l.x,y:s+l.y,z:i+l.z}))}}}(t,e,r,o,a),!1}(e,s)||requestAnimationFrame((()=>v(t,e,n,s,i)))}function z(){return s.useEffect((()=>w())),s.createElement("div",{style:{top:0,bottom:0,left:0,right:0,position:"absolute"}},s.createElement("canvas",{id:"canvas",style:{top:0,bottom:0,left:0,right:0,position:"absolute"}}))}}}]);
//# sourceMappingURL=raymarch.bundle.js.map