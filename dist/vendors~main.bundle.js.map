{"version":3,"sources":["webpack:///../../src/ILogger.ts","webpack:///../../src/Utils.ts","webpack:///../../src/Errors.ts","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///../../src/HttpClient.ts","webpack:///../../src/Loggers.ts","webpack:///../../src/TextMessageFormat.ts","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/axios-observable/dist/index.js","webpack:///./node_modules/react-dropdown/dist/index.js","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/resolve-pathname/esm/resolve-pathname.js","webpack:///./node_modules/value-equal/esm/value-equal.js","webpack:///./node_modules/tiny-invariant/dist/tiny-invariant.esm.js","webpack:///./node_modules/history/esm/history.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///../modules/HistoryContext.js","webpack:///../modules/createNameContext.js","webpack:///../modules/RouterContext.js","webpack:///../modules/Router.js","webpack:///../modules/MemoryRouter.js","webpack:///../modules/Lifecycle.js","webpack:///../modules/Prompt.js","webpack:///../modules/generatePath.js","webpack:///../modules/Redirect.js","webpack:///../modules/matchPath.js","webpack:///../modules/Route.js","webpack:///../modules/StaticRouter.js","webpack:///../modules/Switch.js","webpack:///../modules/withRouter.js","webpack:///../modules/hooks.js","webpack:///../modules/BrowserRouter.js","webpack:///../modules/HashRouter.js","webpack:///../modules/utils/locationUtils.js","webpack:///../modules/Link.js","webpack:///../modules/NavLink.js","webpack:///./node_modules/mini-create-react-context/dist/esm/index.js","webpack:///./node_modules/path-to-regexp/index.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/react-is/index.js","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/core/mergeConfig.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack:///../../src/NodeHttpClient.ts","webpack:///../../src/HandshakeProtocol.ts","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./node_modules/path-to-regexp/node_modules/isarray/index.js","webpack:///./node_modules/react-is/cjs/react-is.production.min.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/core/buildFullPath.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/axios-observable/dist/create-observable.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/rxjs/src/internal/util/isFunction.ts","webpack:///./node_modules/rxjs/src/internal/config.ts","webpack:///./node_modules/rxjs/src/internal/util/hostReportError.ts","webpack:///./node_modules/rxjs/src/internal/Observer.ts","webpack:///./node_modules/rxjs/src/internal/util/isObject.ts","webpack:///./node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","webpack:///./node_modules/rxjs/src/internal/Subscription.ts","webpack:///./node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/Subscriber.ts","webpack:///./node_modules/rxjs/src/internal/util/canReportError.ts","webpack:///./node_modules/rxjs/src/internal/util/identity.ts","webpack:///./node_modules/rxjs/src/internal/util/pipe.ts","webpack:///./node_modules/rxjs/src/internal/Observable.ts","webpack:///./node_modules/rxjs/src/internal/util/toSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","webpack:///./node_modules/rxjs/src/internal/SubjectSubscription.ts","webpack:///./node_modules/rxjs/src/internal/Subject.ts","webpack:///./node_modules/rxjs/src/internal/operators/refCount.ts","webpack:///./node_modules/rxjs/src/internal/observable/ConnectableObservable.ts","webpack:///./node_modules/rxjs/src/internal/operators/groupBy.ts","webpack:///./node_modules/rxjs/src/internal/BehaviorSubject.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/Action.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/QueueAction.ts","webpack:///./node_modules/rxjs/src/internal/Scheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts","webpack:///./node_modules/rxjs/src/internal/observable/empty.ts","webpack:///./node_modules/rxjs/src/internal/util/isScheduler.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToArray.ts","webpack:///./node_modules/rxjs/src/internal/Notification.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","webpack:///./node_modules/rxjs/src/internal/observable/fromArray.ts","webpack:///./node_modules/rxjs/src/internal/observable/of.ts","webpack:///./node_modules/rxjs/src/internal/observable/throwError.ts","webpack:///./node_modules/rxjs/src/internal/operators/observeOn.ts","webpack:///./node_modules/rxjs/src/internal/ReplaySubject.ts","webpack:///./node_modules/rxjs/src/internal/AsyncSubject.ts","webpack:///./node_modules/rxjs/src/internal/util/Immediate.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsapAction.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","webpack:///./node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts","webpack:///./node_modules/rxjs/src/internal/util/isObservable.ts","webpack:///./node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","webpack:///./node_modules/rxjs/src/internal/util/EmptyError.ts","webpack:///./node_modules/rxjs/src/internal/util/TimeoutError.ts","webpack:///./node_modules/rxjs/src/internal/operators/map.ts","webpack:///./node_modules/rxjs/src/internal/observable/bindCallback.ts","webpack:///./node_modules/rxjs/src/internal/observable/bindNodeCallback.ts","webpack:///./node_modules/rxjs/src/internal/OuterSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/InnerSubscriber.ts","webpack:///./node_modules/rxjs/src/internal/symbol/iterator.ts","webpack:///./node_modules/rxjs/src/internal/util/isPromise.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeTo.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToObservable.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToPromise.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToIterable.ts","webpack:///./node_modules/rxjs/src/internal/util/subscribeToResult.ts","webpack:///./node_modules/rxjs/src/internal/observable/combineLatest.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduled.ts","webpack:///./node_modules/rxjs/src/internal/util/isInteropObservable.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","webpack:///./node_modules/rxjs/src/internal/util/isIterable.ts","webpack:///./node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","webpack:///./node_modules/rxjs/src/internal/observable/from.ts","webpack:///./node_modules/rxjs/src/internal/operators/mergeMap.ts","webpack:///./node_modules/rxjs/src/internal/operators/mergeAll.ts","webpack:///./node_modules/rxjs/src/internal/observable/concat.ts","webpack:///./node_modules/rxjs/src/internal/operators/concatAll.ts","webpack:///./node_modules/rxjs/src/internal/observable/defer.ts","webpack:///./node_modules/rxjs/src/internal/observable/forkJoin.ts","webpack:///./node_modules/rxjs/src/internal/observable/fromEvent.ts","webpack:///./node_modules/rxjs/src/internal/observable/fromEventPattern.ts","webpack:///./node_modules/rxjs/src/internal/observable/generate.ts","webpack:///./node_modules/rxjs/src/internal/observable/iif.ts","webpack:///./node_modules/rxjs/src/internal/util/isNumeric.ts","webpack:///./node_modules/rxjs/src/internal/observable/interval.ts","webpack:///./node_modules/rxjs/src/internal/observable/merge.ts","webpack:///./node_modules/rxjs/src/internal/observable/never.ts","webpack:///./node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts","webpack:///./node_modules/rxjs/src/internal/observable/pairs.ts","webpack:///./node_modules/rxjs/src/internal/util/not.ts","webpack:///./node_modules/rxjs/src/internal/operators/filter.ts","webpack:///./node_modules/rxjs/src/internal/observable/partition.ts","webpack:///./node_modules/rxjs/src/internal/observable/race.ts","webpack:///./node_modules/rxjs/src/internal/observable/range.ts","webpack:///./node_modules/rxjs/src/internal/observable/timer.ts","webpack:///./node_modules/rxjs/src/internal/observable/using.ts","webpack:///./node_modules/rxjs/src/internal/observable/zip.ts","webpack:///./node_modules/rxjs/src/index.ts","webpack:///../../src/IHubProtocol.ts","webpack:///../../src/XhrHttpClient.ts","webpack:///../../src/DefaultHttpClient.ts","webpack:///../../src/HubConnection.ts","webpack:///../../src/Subject.ts","webpack:///../../src/ITransport.ts","webpack:///../../src/DefaultReconnectPolicy.ts","webpack:///../../src/AbortController.ts","webpack:///../../src/LongPollingTransport.ts","webpack:///../../src/ServerSentEventsTransport.ts","webpack:///../../src/WebSocketTransport.ts","webpack:///../../src/HttpConnection.ts","webpack:///../../src/JsonHubProtocol.ts","webpack:///../../src/HubConnectionBuilder.ts","webpack:///../../src/index.ts"],"names":["LogLevel","__webpack_require__","d","__webpack_exports__","Arg","Platform","getDataDetail","isArrayBuffer","sendMessage","createLogger","SubjectSubscription","ConsoleLogger","_ILogger__WEBPACK_IMPORTED_MODULE_0__","_Loggers__WEBPACK_IMPORTED_MODULE_1__","isRequired","val","name","Error","isIn","values","Object","defineProperty","window","self","this","isBrowser","isWebWorker","data","includeContent","detail","byteLength","view","Uint8Array","str","forEach","num","toString","substr","length","formatArrayBuffer","ArrayBuffer","constructor","logger","transportName","httpClient","url","accessTokenFactory","content","logMessageContent","token","_b","sent","_a","headers","log","Trace","responseType","post","response","statusCode","undefined","Information","instance","subject","observer","prototype","dispose","index","observers","indexOf","splice","cancelCallback","catch","_","minimumLogLevel","outputConsole","console","logLevel","message","Critical","error","Date","toISOString","Warning","warn","info","HttpError","TimeoutError","AbortError","_super","errorMessage","_this","trueProto","call","__proto__","__extends","bind","isArray","isUndefined","isObject","isFunction","obj","fn","i","l","key","hasOwnProperty","module","exports","isBuffer","isFormData","FormData","isArrayBufferView","isView","buffer","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","document","merge","result","assignValue","arguments","deepMerge","extend","a","b","thisArg","trim","replace","_inheritsLoose","subClass","superClass","create","HttpResponse","HttpClient","statusText","get","options","send","__assign","method","delete","getCookieString","NullLogger","_logLevel","_message","TextMessageFormat","write","output","RecordSeparator","parse","input","messages","split","pop","RecordSeparatorCode","String","fromCharCode","value","axios_1","create_observable_1","Axios","axiosInstance","defaults","enumerable","configurable","interceptors","request","config","createObservable","default","put","patch","head","_react","__esModule","_typeof","cache","_getRequireWildcardCache","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","desc","set","_interopRequireWildcard","_reactDom","_interopRequireDefault","_classnames","WeakMap","Symbol","iterator","_defineProperty","writable","_defineProperties","target","props","descriptor","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","_assertThisInitialized","ReferenceError","_setPrototypeOf","p","DEFAULT_PLACEHOLDER_STRING","Dropdown","_Component","Constructor","TypeError","_classCallCheck","state","selected","parseValue","label","placeholder","isOpen","mounted","handleDocumentClick","fireChangeEvent","protoProps","staticProps","_inherits","Component","newProps","setState","addEventListener","removeEventListener","event","onFocus","type","button","stopPropagation","preventDefault","disabled","option","match","items","filter","item","newState","onChange","_classes","isSelected","classes","concat","baseClassName","className","optionClass","createElement","onMouseDown","setValue","onClick","role","aria-selected","_this2","_this$props","ops","map","groupTitle","_options","renderOption","tabIndex","findDOMNode","contains","_classNames","_classNames2","_classNames3","_classNames4","_classNames5","_this$props2","controlClassName","placeholderClassName","menuClassName","arrowClassName","arrowClosed","arrowOpen","disabledClass","placeHolderValue","dropdownClass","controlClass","placeholderClass","isValueSelected","menuClass","arrowClass","menu","aria-expanded","buildMenu","handleMouseDown","onTouchEnd","aria-haspopup","defaultProps","_default","_extends","assign","source","apply","isAbsolute","pathname","charAt","spliceOne","list","k","n","resolve_pathname","to","from","hasTrailingSlash","toParts","fromParts","isToAbs","isFromAbs","mustEndAbs","last","up","part","unshift","join","value_equal_valueOf","valueOf","value_equal","valueEqual","Array","every","aValue","bValue","keys","isProduction","prefix","tiny_invariant_esm","condition","addLeadingSlash","path","stripLeadingSlash","stripBasename","toLowerCase","hasBasename","stripTrailingSlash","slice","createPath","location","search","hash","createLocation","currentLocation","hashIndex","searchIndex","parsePath","decodeURI","e","URIError","createTransitionManager","prompt","listeners","setPrompt","nextPrompt","confirmTransitionTo","action","getUserConfirmation","callback","appendListener","isActive","listener","push","notifyListeners","_len","args","_key","canUseDOM","getConfirmation","confirm","PopStateEvent","HashChangeEvent","getHistoryState","history","createBrowserHistory","ua","globalHistory","canUseHistory","userAgent","needsHashChangeListener","_props","_props$forceRefresh","forceRefresh","_props$getUserConfirm","_props$keyLength","keyLength","basename","getDOMLocation","historyState","_ref","_window$location","createKey","Math","random","transitionManager","nextState","handlePopState","isExtraneousPopstateEvent","handlePop","handleHashChange","forceNextPop","ok","fromLocation","toLocation","toIndex","allKeys","fromIndex","delta","go","revertPop","initialLocation","createHref","listenerCount","checkDOMListeners","isBlocked","href","pushState","prevIndex","nextKeys","replaceState","goBack","goForward","block","unblock","listen","unlisten","HashChangeEvent$1","HashPathCoders","hashbang","encodePath","decodePath","noslash","slash","stripHash","getHashPath","substring","replaceHashPath","createHashHistory","_props$hashType","hashType","_HashPathCoders$hashT","ignorePath","encodedPath","prevLocation","allPaths","lastIndexOf","baseTag","querySelector","getAttribute","pushHashPath","nextPaths","clamp","lowerBound","upperBound","min","max","_objectWithoutPropertiesLoose","excluded","sourceKeys","historyContext","context","createContext","displayName","createNamedContext","Router","_isMounted","_pendingLocation","staticContext","computeRootMatch","params","isExact","componentDidMount","componentWillUnmount","render","external_React_default","RouterContext","Provider","HistoryContext","children","React","MemoryRouter","_props$initialEntries","initialEntries","_props$initialIndex","initialIndex","entries","entry","nextIndex","nextEntries","canGo","createHistory","react_router_Router","Lifecycle","onMount","componentDidUpdate","prevProps","onUpdate","onUnmount","Prompt","when","_ref$when","Consumer","invariant","react_router_Lifecycle","release","cacheLimit","cacheCount","generatePath","generator","pathToRegexp","compile","compilePath","pretty","Redirect","computedMatch","_ref$push","matchPath","exact","_options$exact","strict","_options$strict","sensitive","_options$sensitive","reduce","matched","cacheKey","end","pathCache","regexp","_compilePath","exec","memo","Route","component","base","createURL","staticHandler","methodName","noop","StaticRouter","handlePush","navigateTo","handleReplace","handleListen","handleBlock","_this$props$basename","_this$props$context","addBasename","_this$props2$basename","_this$props2$context","_this$props2$location","rest","Switch","element","Children","child","isValidElement","cloneElement","withRouter","C","wrappedComponentRef","remainingProps","ref","WrappedComponent","hoistStatics","useContext","useHistory","useLocation","Context","useParams","useRouteMatch","BrowserRouter","HashRouter","resolveToLocation","normalizeToLocation","forwardRefShim","forwardRef","LinkAnchor","forwardedRef","innerRef","navigate","ex","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","Link","_ref2","_ref2$component","NavLink","ariaCurrent","_ref$ariaCurrent","activeClassName","_ref$activeClassName","activeStyle","classNameProp","isActiveProp","locationProp","styleProp","style","escapedPath","classnames","joinClassnames","global","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","MAX_SIGNED_31_BIT_INT","commonjsGlobal","globalThis","defaultValue","calculateChangedBits","_Provider$childContex","_Consumer$contextType","contextProp","handlers","emitter","on","handler","off","h","newValue","changedBits","_proto","getChildContext","componentWillReceiveProps","nextProps","oldValue","x","y","childContextTypes","object","_Component2","getValue","observedBits","_proto2","contextTypes","isarray","tokensToFunction","tokensToRegExp","PATH_REGEXP","RegExp","res","tokens","defaultDelimiter","delimiter","m","escaped","offset","next","capture","group","modifier","asterisk","partial","repeat","optional","pattern","escapeGroup","escapeString","encodeURIComponentPretty","encodeURI","c","charCodeAt","toUpperCase","matches","flags","opts","encode","encodeURIComponent","segment","JSON","stringify","j","test","attachKeys","re","route","endsWithDelimiter","groups","regexpToRegexp","parts","arrayToRegexp","stringToRegexp","g","Function","utils","paramsSerializer","serializedParams","v","hashmarkIndex","__CANCEL__","process","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","adapter","XMLHttpRequest","transformRequest","transformResponse","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","common","Accept","settle","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","Promise","resolve","reject","requestData","requestHeaders","auth","username","password","Authorization","btoa","fullPath","baseURL","open","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseText","onabort","onerror","ontimeout","timeoutErrorMessage","cookies","xsrfValue","withCredentials","read","setRequestHeader","onDownloadProgress","onUploadProgress","upload","cancelToken","promise","then","cancel","abort","enhanceError","code","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","prop","axiosKeys","otherKeys","Cancel","base64","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","array","byteOffset","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","fromString","len","checked","copy","fromObject","assertSize","size","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","arr","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","found","hexWrite","Number","remaining","strLen","parsed","parseInt","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","fromByteArray","utf8Slice","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","fill","allocUnsafeSlow","_isBuffer","compare","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","src","dst","reactIs","REACT_STATICS","contextType","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","$$typeof","TYPE_STATICS","getStatics","isMemo","ForwardRef","Memo","getOwnPropertyNames","getOwnPropertySymbols","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","NodeHttpClient","requestModule","_Errors__WEBPACK_IMPORTED_MODULE_0__","_HttpClient__WEBPACK_IMPORTED_MODULE_1__","_ILogger__WEBPACK_IMPORTED_MODULE_2__","_Utils__WEBPACK_IMPORTED_MODULE_3__","requireFunc","require","cookieJar","jar","httpRequest","abortSignal","aborted","requestBody","currentRequest","body","X-Requested-With","statusMessage","HandshakeProtocol","_TextMessageFormat__WEBPACK_IMPORTED_MODULE_0__","_Utils__WEBPACK_IMPORTED_MODULE_1__","writeHandshakeRequest","handshakeRequest","parseHandshakeResponse","messageData","remainingData","binaryData","separatorIndex","responseLength","textData","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","err","getShim","ReactPropTypes","bool","func","number","symbol","any","arrayOf","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","checkPropTypes","PropTypes","for","f","q","r","t","u","typeOf","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isValidElementType","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","mergeConfig","createInstance","defaultConfig","axios","instanceConfig","CancelToken","isCancel","all","promises","spread","InterceptorManager","dispatchRequest","chain","interceptor","fulfilled","rejected","shift","getUri","use","eject","id","transformData","throwIfCancellationRequested","throwIfRequested","reason","fns","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","nextTick","title","browser","env","argv","version","versions","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","binding","cwd","chdir","umask","normalizedName","isAxiosError","description","fileName","lineNumber","columnNumber","stack","isAbsoluteURL","combineURLs","requestedURL","relativeURL","ignoreDuplicateOf","line","originURL","msie","urlParsingNode","resolveURL","setAttribute","protocol","host","hostname","port","requestURL","expires","domain","secure","cookie","toGMTString","decodeURIComponent","remove","now","executor","resolvePromise","s","rxjs_1","promiseFactory","_i","cancelSource","hasCancelToken","observable","Observable","subscriber","complete","_subscribe","subscribe","args2","subscription","_unsubscribe","unsubscribe","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","isOldIE","Boolean","atob","getTarget","styleTarget","HTMLIFrameElement","contentDocument","stylesInDom","getIndexByIdentifier","identifier","modulesToDom","idCountMap","identifiers","count","css","media","sourceMap","references","updater","addStyle","insertStyleElement","attributes","nonce","nc","insert","appendChild","textStore","replaceText","replacement","applyToSingletonTag","styleSheet","cssText","cssNode","createTextNode","childNodes","removeChild","insertBefore","singleton","singletonCounter","update","styleIndex","removeAttribute","unescape","firstChild","parentNode","removeStyleElement","lastIdentifiers","newList","newLastIdentifiers","_index","useSourceMap","cssMapping","sourceMapping","sourceURLs","sources","sourceRoot","cssWithMappingToString","modules","mediaQuery","dedupe","alreadyImportedModules","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","classNames","argType","inner","extendStatics","__","_enable_super_gross_mode_that_will_cause_bad_things","hostReportError","empty","closed","useDeprecatedSynchronousErrorHandling","UnsubscriptionErrorImpl","errors","Subscription_Subscription","Subscription","_parentOrParents","_subscriptions","UnsubscriptionError","flattenUnsubscriptionErrors","add","teardown","EMPTY","subscriptions","subscriptionIndex","errs","rxSubscriber","Subscriber_Subscriber","Subscriber","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","destination","Subscriber_SafeSubscriber","_next","_error","_complete","_unsubscribeAndRecycle","SafeSubscriber","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","parent","canReportError","closed_1","identity","pipeFromArray","prev","Observable_Observable","_isScalar","lift","operator","sink","nextOrObserver","toSubscriber","_trySubscribe","promiseCtor","getPromiseCtor","observable_observable","operations","toPromise","ObjectUnsubscribedErrorImpl","SubjectSubscription_SubjectSubscription","subscriberIndex","Subject_SubjectSubscriber","SubjectSubscriber","Subject_Subject","Subject","hasError","Subject_AnonymousSubject","ObjectUnsubscribedError","thrownError","asObservable","AnonymousSubject","RefCountOperator","connectable","_refCount","refCounter","refCount_RefCountSubscriber","connection","connect","RefCountSubscriber","refCount","sharedConnection","_connection","ConnectableObservable_ConnectableObservable","ConnectableObservable","subjectFactory","getSubject","_subject","_isComplete","ConnectableObservable_ConnectableSubscriber","ConnectableSubscriber","groupBy_GroupedObservable","GroupedObservable","groupSubject","refCountSubscription","groupBy_InnerRefCountSubscription","InnerRefCountSubscription","attemptedToUnsubscribe","BehaviorSubject_BehaviorSubject","BehaviorSubject","_value","AsyncAction_AsyncAction","AsyncAction","scheduler","work","schedule","delay","recycleAsyncId","pending","requestAsyncId","setInterval","flush","clearInterval","execute","_execute","errored","errorValue","actions","Action","QueueAction_QueueAction","QueueAction","Scheduler","SchedulerAction","AsyncScheduler_AsyncScheduler","AsyncScheduler","delegate","active","scheduled","QueueScheduler","empty_empty","emptyScheduled","isScheduler","NotificationKind","subscribeToArray","scheduleArray","fromArray","of","throwError","dispatch","Notification_Notification","Notification","kind","hasValue","observe","do","accept","toObservable","createNext","undefinedValueNotification","createComplete","completeNotification","ObserveOnSubscriber","notification","scheduleMessage","ObserveOnMessage","ReplaySubject_ReplaySubject","ReplaySubject","bufferSize","windowTime","POSITIVE_INFINITY","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextTimeWindow","nextInfiniteTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","observeOn_ObserveOnSubscriber","spliceCount","eventsCount","time","AsyncSubject_AsyncSubject","AsyncSubject","hasNext","hasCompleted","nextHandle","RESOLVED","activeHandles","findAndClearHandle","handle","Immediate","cb","AsapAction_AsapAction","AsapAction","AsapScheduler","AnimationFrameAction_AnimationFrameAction","AnimationFrameAction","requestAnimationFrame","cancelAnimationFrame","AnimationFrameScheduler","VirtualTimeScheduler_VirtualTimeScheduler","VirtualTimeScheduler","maxFrames","VirtualTimeScheduler_VirtualAction","frame","frameTimeFactor","VirtualAction","sort","sortActions","isObservable","ArgumentOutOfRangeErrorImpl","EmptyErrorImpl","TimeoutErrorImpl","project","MapOperator","map_MapSubscriber","MapSubscriber","bindCallback","callbackFunc","resultSelector","bindCallback_dispatch","innerArgs","dispatchNext","bindNodeCallback","bindNodeCallback_dispatch","bindNodeCallback_dispatchError","bindNodeCallback_dispatchNext","OuterSubscriber_OuterSubscriber","OuterSubscriber","notifyNext","outerValue","innerValue","outerIndex","innerIndex","innerSub","notifyError","notifyComplete","InnerSubscriber_InnerSubscriber","InnerSubscriber","getSymbolIterator","iterator_iterator","isPromise","subscribeTo","obs","isArrayLike","iterable","done","return","subscribeToResult","outerSubscriber","innerSubscriber","NONE","combineLatest","observables","CombineLatestOperator","combineLatest_CombineLatestSubscriber","CombineLatestSubscriber","toRespond","unused","oldVal","_tryResultSelector","isInteropObservable","scheduleObservable","schedulePromise","isIterable","scheduleIterable","MergeMapOperator","concurrent","mergeMap_MergeMapSubscriber","MergeMapSubscriber","_tryNext","_innerSub","ish","innerSubscription","mergeAll","mergeMap","ii","concatAll","defer","observableFactory","forkJoin","first_1","forkJoinInternal","resultSelector_1","completed","_loop_1","emitted","fromEvent","eventName","setupSubscription","sourceObj","isEventTarget","source_1","isJQueryStyleEventEmitter","source_2","isNodeStyleEventEmitter","source_3","fromEventPattern","addHandler","removeHandler","retValue","generate","initialStateOrOptions","iterate","resultSelectorOrObservable","initialState","generate_dispatch","conditionResult","needIterate","iif","trueResult","falseResult","isNumeric","parseFloat","interval","period","async_async","interval_dispatch","counter","NEVER","never","onErrorResumeNext","first","remainder","subNext","pairs","pairs_dispatch","not","pred","notPred","predicate","FilterOperator","filter_FilterSubscriber","FilterSubscriber","partition","race","RaceOperator","race_RaceSubscriber","RaceSubscriber","hasFirst","range","range_dispatch","current","timer","dueTime","periodOrScheduler","due","timer_dispatch","using","resourceFactory","resource","zip","ZipOperator","zip_ZipSubscriber","ZipSubscriber","iterators","zip_StaticArrayIterator","StaticIterator","zip_ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","_tryresultSelector","nextResult","StaticArrayIterator","ZipBufferIterator","isComplete","asap","animationFrame","ArgumentOutOfRangeError","EmptyError","MessageType","XhrHttpClient_XhrHttpClient","XhrHttpClient","Errors","xhr","header","onload","ILogger","DefaultHttpClient_DefaultHttpClient","DefaultHttpClient","DefaultHttpClient_extends","HubConnectionState","Utils","DEFAULT_TIMEOUT_IN_MS","DEFAULT_PING_INTERVAL_IN_MS","HttpTransportType","TransferFormat","HubConnection_HubConnection","HubConnection","reconnectPolicy","serverTimeoutInMilliseconds","keepAliveIntervalInMilliseconds","handshakeProtocol","onreceive","processIncomingData","onclose","connectionClosed","callbacks","methods","closedCallbacks","reconnectingCallbacks","reconnectedCallbacks","invocationId","receivedHandshakeResponse","connectionState","Disconnected","connectionStarted","cachedPingMessage","writeMessage","Ping","connectionId","baseUrl","Reconnecting","startPromise","startWithStateTransitions","Connecting","Debug","startInternal","Connected","e_1","stopDuringStartError","handshakePromise","handshakeResolver","handshakeRejecter","transferFormat","cleanupTimeout","resetTimeoutPeriod","resetKeepAliveInterval","e_2","cleanupPingTimer","stop","stopPromise","stopInternal","Disconnecting","reconnectDelayHandle","completeClose","stream","promiseQueue","replaceStreamingParams","streams","streamIds","invocationDescriptor","createStreamInvocation","cancelInvocation","createCancelInvocation","sendWithProtocol","invocationEvent","Completion","launchStreams","sendPromise","createInvocation","invoke","newMethod","removeIdx","onreconnecting","onreconnected","processHandshakeResponse","messages_1","parseMessages","Invocation","invokeClientMethod","StreamItem","Close","allowReconnect","responseMessage","pingServerHandle","__awaiter","features","inherentKeepAlive","timeoutHandle","serverTimeout","invocationMessage","cancelCallbacksWithError","reconnect","reconnectStartTime","previousReconnectAttempts","retryError","nextRetryDelay","getNextRetryDelay","e_4","previousRetryCount","elapsedMilliseconds","retryReason","nextRetryDelayInMilliseconds","nonblocking","streamId","createCompletionMessage","createStreamItemMessage","argument","StreamInvocation","CancelInvocation","DEFAULT_RETRY_DELAYS_IN_MILLISECONDS","DefaultReconnectPolicy","retryDelays","retryContext","AbortController","isAborted","LongPollingTransport_LongPollingTransport","LongPollingTransport","pollAbort","running","Binary","pollOptions","signal","getAccessToken","updateHeaderToken","pollUrl","closeError","receiving","poll","pollAborted","raiseOnClose","deleteOptions","logMessage","ServerSentEventsTransport_ServerSentEventsTransport","ServerSentEventsTransport","eventSourceConstructor","opened","Text","eventSource","Cookie","onmessage","close","onopen","WebSocketTransport_WebSocketTransport","WebSocketTransport","webSocketConstructor","webSocket","isNode","binaryType","_event","ErrorEvent","OPEN","wasClean","WebSocketModule","EventSourceModule","HttpConnection_HttpConnection","HttpConnection","negotiateVersion","resolveUrl","WebSocket","EventSource","startInternalPromise","sendQueue","TransportSendQueue","transport","stopPromiseResolver","stopError","stopConnection","skipNegotiation","WebSockets","constructTransport","startTransport","negotiateResponse","redirects","this_1","getNegotiationResponse","ProtocolVersion","accessToken","accessToken_1","createTransport","e_3","negotiateUrl","resolveNegotiateUrl","connectionToken","createConnectUrl","requestedTransport","requestedTransferFormat","connectUrl","isITransport","transportExceptions","transports","availableTransports","negotiate","transports_1","endpoint","transportOrError","resolveTransportOrError","ex_1","ex_2","ServerSentEvents","LongPolling","actualTransport","transportMatches","transferFormats","aTag","executing","sendBufferedData","PromiseSource","transportResult","sendLoopPromise","sendLoop","bufferData","concatBuffers","error_1","arrayBuffers","totalLength","arrayBuffers_1","resolver","rejecter","JSON_HUB_PROTOCOL_NAME","JsonHubProtocol_JsonHubProtocol","JsonHubProtocol","Loggers","hubMessages","parsedMessage","isInvocationMessage","isStreamItemMessage","isCompletionMessage","assertNotEmptyString","LogLevelNameMapping","trace","debug","information","warning","critical","none","None","HubConnectionBuilder_HubConnectionBuilder","HubConnectionBuilder","configureLogging","logging","mapping","parseLogLevel","withUrl","transportTypeOrOptions","httpConnectionOptions","withHubProtocol","withAutomaticReconnect","retryDelaysOrReconnectPolicy","build","VERSION"],"mappings":"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","file":"vendors~main.bundle.js","sourcesContent":["// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport enum LogLevel {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    Trace = 0,\r\n    /** Log level for low severity diagnostic messages. */\r\n    Debug = 1,\r\n    /** Log level for informational diagnostic messages. */\r\n    Information = 2,\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    Warning = 3,\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    Error = 4,\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    Critical = 5,\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    None = 6,\r\n}\r\n\r\n/** An abstraction that provides a sink for diagnostic messages. */\r\nexport interface ILogger {\r\n    /** Called by the framework to emit a diagnostic message.\r\n     *\r\n     * @param {LogLevel} logLevel The severity level of the message.\r\n     * @param {string} message The message.\r\n     */\r\n    log(logLevel: LogLevel, message: string): void;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\n\r\n/** @private */\r\nexport class Arg {\r\n    public static isRequired(val: any, name: string): void {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n\r\n    public static isIn(val: any, values: any, name: string): void {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class Platform {\r\n\r\n    public static get isBrowser(): boolean {\r\n        return typeof window === \"object\";\r\n    }\r\n\r\n    public static get isWebWorker(): boolean {\r\n        return typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n\r\n    public static get isNode(): boolean {\r\n        return !this.isBrowser && !this.isWebWorker;\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getDataDetail(data: any, includeContent: boolean): string {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    } else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n\r\n/** @private */\r\nexport function formatArrayBuffer(data: ArrayBuffer): string {\r\n    const view = new Uint8Array(data);\r\n\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n\r\n/** @private */\r\nexport async function sendMessage(logger: ILogger, transportName: string, httpClient: HttpClient, url: string, accessTokenFactory: (() => string | Promise<string>) | undefined, content: string | ArrayBuffer, logMessageContent: boolean): Promise<void> {\r\n    let headers;\r\n    if (accessTokenFactory) {\r\n        const token = await accessTokenFactory();\r\n        if (token) {\r\n            headers = {\r\n                [\"Authorization\"]: `Bearer ${token}`,\r\n            };\r\n        }\r\n    }\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, logMessageContent)}.`);\r\n\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers,\r\n        responseType,\r\n    });\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n\r\n/** @private */\r\nexport function createLogger(logger?: ILogger | LogLevel) {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n\r\n    if ((logger as ILogger).log) {\r\n        return logger as ILogger;\r\n    }\r\n\r\n    return new ConsoleLogger(logger as LogLevel);\r\n}\r\n\r\n/** @private */\r\nexport class SubjectSubscription<T> implements ISubscription<T> {\r\n    private subject: Subject<T>;\r\n    private observer: IStreamSubscriber<T>;\r\n\r\n    constructor(subject: Subject<T>, observer: IStreamSubscriber<T>) {\r\n        this.subject = subject;\r\n        this.observer = observer;\r\n    }\r\n\r\n    public dispose(): void {\r\n        const index: number = this.subject.observers.indexOf(this.observer);\r\n        if (index > -1) {\r\n            this.subject.observers.splice(index, 1);\r\n        }\r\n\r\n        if (this.subject.observers.length === 0 && this.subject.cancelCallback) {\r\n            this.subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class ConsoleLogger implements ILogger {\r\n    private readonly minimumLogLevel: LogLevel;\r\n\r\n    // Public for testing purposes.\r\n    public outputConsole: {\r\n        error(message: any): void,\r\n        warn(message: any): void,\r\n        info(message: any): void,\r\n        log(message: any): void,\r\n    };\r\n\r\n    constructor(minimumLogLevel: LogLevel) {\r\n        this.minimumLogLevel = minimumLogLevel;\r\n        this.outputConsole = console;\r\n    }\r\n\r\n    public log(logLevel: LogLevel, message: string): void {\r\n        if (logLevel >= this.minimumLogLevel) {\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.outputConsole.error(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.outputConsole.warn(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.outputConsole.info(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.outputConsole.log(`[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** The HTTP status code represented by this error. */\r\n    public statusCode: number;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage: string, statusCode: number) {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n        this.statusCode = statusCode;\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // tslint:disable-next-line:variable-name\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortSignal } from \"./AbortController\";\r\n\r\n/** Represents an HTTP request. */\r\nexport interface HttpRequest {\r\n    /** The HTTP method to use for the request. */\r\n    method?: string;\r\n\r\n    /** The URL for the request. */\r\n    url?: string;\r\n\r\n    /** The body content for the request. May be a string or an ArrayBuffer (for binary data). */\r\n    content?: string | ArrayBuffer;\r\n\r\n    /** An object describing headers to apply to the request. */\r\n    headers?: { [key: string]: string };\r\n\r\n    /** The XMLHttpRequestResponseType to apply to the request. */\r\n    responseType?: XMLHttpRequestResponseType;\r\n\r\n    /** An AbortSignal that can be monitored for cancellation. */\r\n    abortSignal?: AbortSignal;\r\n\r\n    /** The time to wait for the request to complete before throwing a TimeoutError. Measured in milliseconds. */\r\n    timeout?: number;\r\n}\r\n\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     */\r\n    constructor(statusCode: number);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code and message.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and string content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: ArrayBuffer);\r\n    constructor(\r\n        public readonly statusCode: number,\r\n        public readonly statusText?: string,\r\n        public readonly content?: string | ArrayBuffer) {\r\n    }\r\n}\r\n\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport abstract class HttpClient {\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public get(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public post(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public delete(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP request to the specified URL, returning a {@link Promise} that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {HttpRequest} request An {@link @microsoft/signalr.HttpRequest} describing the request to send.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an HttpResponse describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public abstract send(request: HttpRequest): Promise<HttpResponse>;\r\n\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    public getCookieString(url: string): string {\r\n        return \"\";\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger implements ILogger {\r\n    /** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\n    public static instance: ILogger = new NullLogger();\r\n\r\n    private constructor() {}\r\n\r\n    /** @inheritDoc */\r\n    // tslint:disable-next-line\r\n    public log(_logLevel: LogLevel, _message: string): void {\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    public static RecordSeparatorCode = 0x1e;\r\n    public static RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n\r\n    public static write(output: string): string {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n\r\n    public static parse(input: string): string[] {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar axios_1 = require(\"axios\");\nvar create_observable_1 = require(\"./create-observable\");\nvar Axios = /** @class */ (function () {\n    function Axios(axiosInstance) {\n        this.axiosInstance = axiosInstance;\n    }\n    Object.defineProperty(Axios.prototype, \"defaults\", {\n        get: function () {\n            return this.axiosInstance.defaults;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Axios.prototype, \"interceptors\", {\n        get: function () {\n            return this.axiosInstance.interceptors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Axios.request = function (config) {\n        return create_observable_1.createObservable(axios_1.default.request, config);\n    };\n    Axios.get = function (url, config) {\n        return create_observable_1.createObservable(axios_1.default.get, url, config);\n    };\n    Axios.post = function (url, data, config) {\n        return create_observable_1.createObservable(axios_1.default.post, url, data, config);\n    };\n    Axios.put = function (url, data, config) {\n        return create_observable_1.createObservable(axios_1.default.put, url, data, config);\n    };\n    Axios.patch = function (url, data, config) {\n        return create_observable_1.createObservable(axios_1.default.patch, url, data, config);\n    };\n    Axios.delete = function (url, config) {\n        return create_observable_1.createObservable(axios_1.default.delete, url, config);\n    };\n    Axios.head = function (url, config) {\n        return create_observable_1.createObservable(axios_1.default.head, url, config);\n    };\n    Axios.create = function (config) {\n        return new Axios(axios_1.default.create(config));\n    };\n    Axios.prototype.request = function (config) {\n        return create_observable_1.createObservable(this.axiosInstance.request, config);\n    };\n    Axios.prototype.get = function (url, config) {\n        return create_observable_1.createObservable(this.axiosInstance.get, url, config);\n    };\n    Axios.prototype.head = function (url, config) {\n        return create_observable_1.createObservable(this.axiosInstance.head, url, config);\n    };\n    Axios.prototype.post = function (url, data, config) {\n        return create_observable_1.createObservable(this.axiosInstance.post, url, data, config);\n    };\n    Axios.prototype.put = function (url, data, config) {\n        return create_observable_1.createObservable(this.axiosInstance.put, url, data, config);\n    };\n    Axios.prototype.patch = function (url, data, config) {\n        return create_observable_1.createObservable(this.axiosInstance.patch, url, data, config);\n    };\n    Axios.prototype.delete = function (url, config) {\n        return create_observable_1.createObservable(this.axiosInstance.delete, url, config);\n    };\n    Axios.defaults = axios_1.default.defaults;\n    Axios.interceptors = axios_1.default.interceptors;\n    return Axios;\n}());\nexports.Axios = Axios;\nexports.default = Axios;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar DEFAULT_PLACEHOLDER_STRING = 'Select...';\n\nvar Dropdown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dropdown, _Component);\n\n  function Dropdown(props) {\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dropdown).call(this, props));\n    _this.state = {\n      selected: _this.parseValue(props.value, props.options) || {\n        label: typeof props.placeholder === 'undefined' ? DEFAULT_PLACEHOLDER_STRING : props.placeholder,\n        value: ''\n      },\n      isOpen: false\n    };\n    _this.mounted = true;\n    _this.handleDocumentClick = _this.handleDocumentClick.bind(_assertThisInitialized(_this));\n    _this.fireChangeEvent = _this.fireChangeEvent.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps.value) {\n        var selected = this.parseValue(newProps.value, newProps.options);\n\n        if (selected !== this.state.selected) {\n          this.setState({\n            selected: selected\n          });\n        }\n      } else {\n        this.setState({\n          selected: {\n            label: typeof newProps.placeholder === 'undefined' ? DEFAULT_PLACEHOLDER_STRING : newProps.placeholder,\n            value: ''\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('click', this.handleDocumentClick, false);\n      document.addEventListener('touchend', this.handleDocumentClick, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n      document.removeEventListener('click', this.handleDocumentClick, false);\n      document.removeEventListener('touchend', this.handleDocumentClick, false);\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(event) {\n      if (this.props.onFocus && typeof this.props.onFocus === 'function') {\n        this.props.onFocus(this.state.isOpen);\n      }\n\n      if (event.type === 'mousedown' && event.button !== 0) return;\n      event.stopPropagation();\n      event.preventDefault();\n\n      if (!this.props.disabled) {\n        this.setState({\n          isOpen: !this.state.isOpen\n        });\n      }\n    }\n  }, {\n    key: \"parseValue\",\n    value: function parseValue(value, options) {\n      var option;\n\n      if (typeof value === 'string') {\n        for (var i = 0, num = options.length; i < num; i++) {\n          if (options[i].type === 'group') {\n            var match = options[i].items.filter(function (item) {\n              return item.value === value;\n            });\n\n            if (match.length) {\n              option = match[0];\n            }\n          } else if (typeof options[i].value !== 'undefined' && options[i].value === value) {\n            option = options[i];\n          }\n        }\n      }\n\n      return option || value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value, label) {\n      var newState = {\n        selected: {\n          value: value,\n          label: label\n        },\n        isOpen: false\n      };\n      this.fireChangeEvent(newState);\n      this.setState(newState);\n    }\n  }, {\n    key: \"fireChangeEvent\",\n    value: function fireChangeEvent(newState) {\n      if (newState.selected !== this.state.selected && this.props.onChange) {\n        this.props.onChange(newState.selected);\n      }\n    }\n  }, {\n    key: \"renderOption\",\n    value: function renderOption(option) {\n      var _classes;\n\n      var value = option.value;\n\n      if (typeof value === 'undefined') {\n        value = option.label || option;\n      }\n\n      var label = option.label || option.value || option;\n      var isSelected = value === this.state.selected.value || value === this.state.selected;\n      var classes = (_classes = {}, _defineProperty(_classes, \"\".concat(this.props.baseClassName, \"-option\"), true), _defineProperty(_classes, option.className, !!option.className), _defineProperty(_classes, 'is-selected', isSelected), _classes);\n      var optionClass = (0, _classnames[\"default\"])(classes);\n      return _react[\"default\"].createElement(\"div\", {\n        key: value,\n        className: optionClass,\n        onMouseDown: this.setValue.bind(this, value, label),\n        onClick: this.setValue.bind(this, value, label),\n        role: \"option\",\n        \"aria-selected\": isSelected ? 'true' : 'false'\n      }, label);\n    }\n  }, {\n    key: \"buildMenu\",\n    value: function buildMenu() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          options = _this$props.options,\n          baseClassName = _this$props.baseClassName;\n      var ops = options.map(function (option) {\n        if (option.type === 'group') {\n          var groupTitle = _react[\"default\"].createElement(\"div\", {\n            className: \"\".concat(baseClassName, \"-title\")\n          }, option.name);\n\n          var _options = option.items.map(function (item) {\n            return _this2.renderOption(item);\n          });\n\n          return _react[\"default\"].createElement(\"div\", {\n            className: \"\".concat(baseClassName, \"-group\"),\n            key: option.name,\n            role: \"listbox\",\n            tabIndex: \"-1\"\n          }, groupTitle, _options);\n        } else {\n          return _this2.renderOption(option);\n        }\n      });\n      return ops.length ? ops : _react[\"default\"].createElement(\"div\", {\n        className: \"\".concat(baseClassName, \"-noresults\")\n      }, \"No options found\");\n    }\n  }, {\n    key: \"handleDocumentClick\",\n    value: function handleDocumentClick(event) {\n      if (this.mounted) {\n        if (!_reactDom[\"default\"].findDOMNode(this).contains(event.target)) {\n          if (this.state.isOpen) {\n            this.setState({\n              isOpen: false\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"isValueSelected\",\n    value: function isValueSelected() {\n      return typeof this.state.selected === 'string' || this.state.selected.value !== '';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames, _classNames2, _classNames3, _classNames4, _classNames5;\n\n      var _this$props2 = this.props,\n          baseClassName = _this$props2.baseClassName,\n          controlClassName = _this$props2.controlClassName,\n          placeholderClassName = _this$props2.placeholderClassName,\n          menuClassName = _this$props2.menuClassName,\n          arrowClassName = _this$props2.arrowClassName,\n          arrowClosed = _this$props2.arrowClosed,\n          arrowOpen = _this$props2.arrowOpen,\n          className = _this$props2.className;\n      var disabledClass = this.props.disabled ? 'Dropdown-disabled' : '';\n      var placeHolderValue = typeof this.state.selected === 'string' ? this.state.selected : this.state.selected.label;\n      var dropdownClass = (0, _classnames[\"default\"])((_classNames = {}, _defineProperty(_classNames, \"\".concat(baseClassName, \"-root\"), true), _defineProperty(_classNames, className, !!className), _defineProperty(_classNames, 'is-open', this.state.isOpen), _classNames));\n      var controlClass = (0, _classnames[\"default\"])((_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(baseClassName, \"-control\"), true), _defineProperty(_classNames2, controlClassName, !!controlClassName), _defineProperty(_classNames2, disabledClass, !!disabledClass), _classNames2));\n      var placeholderClass = (0, _classnames[\"default\"])((_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(baseClassName, \"-placeholder\"), true), _defineProperty(_classNames3, placeholderClassName, !!placeholderClassName), _defineProperty(_classNames3, 'is-selected', this.isValueSelected()), _classNames3));\n      var menuClass = (0, _classnames[\"default\"])((_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(baseClassName, \"-menu\"), true), _defineProperty(_classNames4, menuClassName, !!menuClassName), _classNames4));\n      var arrowClass = (0, _classnames[\"default\"])((_classNames5 = {}, _defineProperty(_classNames5, \"\".concat(baseClassName, \"-arrow\"), true), _defineProperty(_classNames5, arrowClassName, !!arrowClassName), _classNames5));\n\n      var value = _react[\"default\"].createElement(\"div\", {\n        className: placeholderClass\n      }, placeHolderValue);\n\n      var menu = this.state.isOpen ? _react[\"default\"].createElement(\"div\", {\n        className: menuClass,\n        \"aria-expanded\": \"true\"\n      }, this.buildMenu()) : null;\n      return _react[\"default\"].createElement(\"div\", {\n        className: dropdownClass\n      }, _react[\"default\"].createElement(\"div\", {\n        className: controlClass,\n        onMouseDown: this.handleMouseDown.bind(this),\n        onTouchEnd: this.handleMouseDown.bind(this),\n        \"aria-haspopup\": \"listbox\"\n      }, value, _react[\"default\"].createElement(\"div\", {\n        className: \"\".concat(baseClassName, \"-arrow-wrapper\")\n      }, arrowOpen && arrowClosed ? this.state.isOpen ? arrowOpen : arrowClosed : _react[\"default\"].createElement(\"span\", {\n        className: arrowClass\n      }))), menu);\n    }\n  }]);\n\n  return Dropdown;\n}(_react.Component);\n\nDropdown.defaultProps = {\n  baseClassName: 'Dropdown'\n};\nvar _default = Dropdown;\nexports[\"default\"] = _default;\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","function isAbsolute(pathname) {\n  return pathname.charAt(0) === '/';\n}\n\n// About 1.5x faster than the two-arg version of Array#splice()\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1) {\n    list[i] = list[k];\n  }\n\n  list.pop();\n}\n\n// This implementation is based heavily on node's url.parse\nfunction resolvePathname(to, from) {\n  if (from === undefined) from = '';\n\n  var toParts = (to && to.split('/')) || [];\n  var fromParts = (from && from.split('/')) || [];\n\n  var isToAbs = to && isAbsolute(to);\n  var isFromAbs = from && isAbsolute(from);\n  var mustEndAbs = isToAbs || isFromAbs;\n\n  if (to && isAbsolute(to)) {\n    // to is absolute\n    fromParts = toParts;\n  } else if (toParts.length) {\n    // to is relative, drop the filename\n    fromParts.pop();\n    fromParts = fromParts.concat(toParts);\n  }\n\n  if (!fromParts.length) return '/';\n\n  var hasTrailingSlash;\n  if (fromParts.length) {\n    var last = fromParts[fromParts.length - 1];\n    hasTrailingSlash = last === '.' || last === '..' || last === '';\n  } else {\n    hasTrailingSlash = false;\n  }\n\n  var up = 0;\n  for (var i = fromParts.length; i >= 0; i--) {\n    var part = fromParts[i];\n\n    if (part === '.') {\n      spliceOne(fromParts, i);\n    } else if (part === '..') {\n      spliceOne(fromParts, i);\n      up++;\n    } else if (up) {\n      spliceOne(fromParts, i);\n      up--;\n    }\n  }\n\n  if (!mustEndAbs) for (; up--; up) fromParts.unshift('..');\n\n  if (\n    mustEndAbs &&\n    fromParts[0] !== '' &&\n    (!fromParts[0] || !isAbsolute(fromParts[0]))\n  )\n    fromParts.unshift('');\n\n  var result = fromParts.join('/');\n\n  if (hasTrailingSlash && result.substr(-1) !== '/') result += '/';\n\n  return result;\n}\n\nexport default resolvePathname;\n","function valueOf(obj) {\n  return obj.valueOf ? obj.valueOf() : Object.prototype.valueOf.call(obj);\n}\n\nfunction valueEqual(a, b) {\n  // Test for strict equality first.\n  if (a === b) return true;\n\n  // Otherwise, if either of them == null they are not equal.\n  if (a == null || b == null) return false;\n\n  if (Array.isArray(a)) {\n    return (\n      Array.isArray(b) &&\n      a.length === b.length &&\n      a.every(function(item, index) {\n        return valueEqual(item, b[index]);\n      })\n    );\n  }\n\n  if (typeof a === 'object' || typeof b === 'object') {\n    var aValue = valueOf(a);\n    var bValue = valueOf(b);\n\n    if (aValue !== a || bValue !== b) return valueEqual(aValue, bValue);\n\n    return Object.keys(Object.assign({}, a, b)).every(function(key) {\n      return valueEqual(a[key], b[key]);\n    });\n  }\n\n  return false;\n}\n\nexport default valueEqual;\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    throw new Error(prefix + \": \" + (message || ''));\n}\n\nexport default invariant;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport resolvePathname from 'resolve-pathname';\nimport valueEqual from 'value-equal';\nimport warning from 'tiny-warning';\nimport invariant from 'tiny-invariant';\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path : '/' + path;\n}\nfunction stripLeadingSlash(path) {\n  return path.charAt(0) === '/' ? path.substr(1) : path;\n}\nfunction hasBasename(path, prefix) {\n  return path.toLowerCase().indexOf(prefix.toLowerCase()) === 0 && '/?#'.indexOf(path.charAt(prefix.length)) !== -1;\n}\nfunction stripBasename(path, prefix) {\n  return hasBasename(path, prefix) ? path.substr(prefix.length) : path;\n}\nfunction stripTrailingSlash(path) {\n  return path.charAt(path.length - 1) === '/' ? path.slice(0, -1) : path;\n}\nfunction parsePath(path) {\n  var pathname = path || '/';\n  var search = '';\n  var hash = '';\n  var hashIndex = pathname.indexOf('#');\n\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex);\n    pathname = pathname.substr(0, hashIndex);\n  }\n\n  var searchIndex = pathname.indexOf('?');\n\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex);\n    pathname = pathname.substr(0, searchIndex);\n  }\n\n  return {\n    pathname: pathname,\n    search: search === '?' ? '' : search,\n    hash: hash === '#' ? '' : hash\n  };\n}\nfunction createPath(location) {\n  var pathname = location.pathname,\n      search = location.search,\n      hash = location.hash;\n  var path = pathname || '/';\n  if (search && search !== '?') path += search.charAt(0) === '?' ? search : \"?\" + search;\n  if (hash && hash !== '#') path += hash.charAt(0) === '#' ? hash : \"#\" + hash;\n  return path;\n}\n\nfunction createLocation(path, state, key, currentLocation) {\n  var location;\n\n  if (typeof path === 'string') {\n    // Two-arg form: push(path, state)\n    location = parsePath(path);\n    location.state = state;\n  } else {\n    // One-arg form: push(location)\n    location = _extends({}, path);\n    if (location.pathname === undefined) location.pathname = '';\n\n    if (location.search) {\n      if (location.search.charAt(0) !== '?') location.search = '?' + location.search;\n    } else {\n      location.search = '';\n    }\n\n    if (location.hash) {\n      if (location.hash.charAt(0) !== '#') location.hash = '#' + location.hash;\n    } else {\n      location.hash = '';\n    }\n\n    if (state !== undefined && location.state === undefined) location.state = state;\n  }\n\n  try {\n    location.pathname = decodeURI(location.pathname);\n  } catch (e) {\n    if (e instanceof URIError) {\n      throw new URIError('Pathname \"' + location.pathname + '\" could not be decoded. ' + 'This is likely caused by an invalid percent-encoding.');\n    } else {\n      throw e;\n    }\n  }\n\n  if (key) location.key = key;\n\n  if (currentLocation) {\n    // Resolve incomplete/relative pathname relative to current location.\n    if (!location.pathname) {\n      location.pathname = currentLocation.pathname;\n    } else if (location.pathname.charAt(0) !== '/') {\n      location.pathname = resolvePathname(location.pathname, currentLocation.pathname);\n    }\n  } else {\n    // When there is no prior location and pathname is empty, set it to /\n    if (!location.pathname) {\n      location.pathname = '/';\n    }\n  }\n\n  return location;\n}\nfunction locationsAreEqual(a, b) {\n  return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash && a.key === b.key && valueEqual(a.state, b.state);\n}\n\nfunction createTransitionManager() {\n  var prompt = null;\n\n  function setPrompt(nextPrompt) {\n    process.env.NODE_ENV !== \"production\" ? warning(prompt == null, 'A history supports only one prompt at a time') : void 0;\n    prompt = nextPrompt;\n    return function () {\n      if (prompt === nextPrompt) prompt = null;\n    };\n  }\n\n  function confirmTransitionTo(location, action, getUserConfirmation, callback) {\n    // TODO: If another transition starts while we're still confirming\n    // the previous one, we may end up in a weird state. Figure out the\n    // best way to handle this.\n    if (prompt != null) {\n      var result = typeof prompt === 'function' ? prompt(location, action) : prompt;\n\n      if (typeof result === 'string') {\n        if (typeof getUserConfirmation === 'function') {\n          getUserConfirmation(result, callback);\n        } else {\n          process.env.NODE_ENV !== \"production\" ? warning(false, 'A history needs a getUserConfirmation function in order to use a prompt message') : void 0;\n          callback(true);\n        }\n      } else {\n        // Return false from a transition hook to cancel the transition.\n        callback(result !== false);\n      }\n    } else {\n      callback(true);\n    }\n  }\n\n  var listeners = [];\n\n  function appendListener(fn) {\n    var isActive = true;\n\n    function listener() {\n      if (isActive) fn.apply(void 0, arguments);\n    }\n\n    listeners.push(listener);\n    return function () {\n      isActive = false;\n      listeners = listeners.filter(function (item) {\n        return item !== listener;\n      });\n    };\n  }\n\n  function notifyListeners() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    listeners.forEach(function (listener) {\n      return listener.apply(void 0, args);\n    });\n  }\n\n  return {\n    setPrompt: setPrompt,\n    confirmTransitionTo: confirmTransitionTo,\n    appendListener: appendListener,\n    notifyListeners: notifyListeners\n  };\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction getConfirmation(message, callback) {\n  callback(window.confirm(message)); // eslint-disable-line no-alert\n}\n/**\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\n *\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\n */\n\nfunction supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n}\n/**\n * Returns true if browser fires popstate on hash change.\n * IE10 and IE11 do not.\n */\n\nfunction supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n}\n/**\n * Returns false if using go(n) with hash history causes a full page reload.\n */\n\nfunction supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n}\n/**\n * Returns true if a given popstate event is an extraneous WebKit event.\n * Accounts for the fact that Chrome on iOS fires real popstate events\n * containing undefined state when pressing the back button.\n */\n\nfunction isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n}\n\nvar PopStateEvent = 'popstate';\nvar HashChangeEvent = 'hashchange';\n\nfunction getHistoryState() {\n  try {\n    return window.history.state || {};\n  } catch (e) {\n    // IE 11 sometimes throws when accessing window.history.state\n    // See https://github.com/ReactTraining/history/pull/289\n    return {};\n  }\n}\n/**\n * Creates a history object that uses the HTML5 history API including\n * pushState, replaceState, and the popstate event.\n */\n\n\nfunction createBrowserHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Browser history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canUseHistory = supportsHistory();\n  var needsHashChangeListener = !supportsPopStateOnHashChange();\n  var _props = props,\n      _props$forceRefresh = _props.forceRefresh,\n      forceRefresh = _props$forceRefresh === void 0 ? false : _props$forceRefresh,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n\n  function getDOMLocation(historyState) {\n    var _ref = historyState || {},\n        key = _ref.key,\n        state = _ref.state;\n\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var path = pathname + search + hash;\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path, state, key);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function handlePopState(event) {\n    // Ignore extraneous popstate events in WebKit.\n    if (isExtraneousPopstateEvent(event)) return;\n    handlePop(getDOMLocation(event.state));\n  }\n\n  function handleHashChange() {\n    handlePop(getDOMLocation(getHistoryState()));\n  }\n\n  var forceNextPop = false;\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of keys we've seen in sessionStorage.\n    // Instead, we just default to 0 for keys we don't know.\n\n    var toIndex = allKeys.indexOf(toLocation.key);\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allKeys.indexOf(fromLocation.key);\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  }\n\n  var initialLocation = getDOMLocation(getHistoryState());\n  var allKeys = [initialLocation.key]; // Public interface\n\n  function createHref(location) {\n    return basename + createPath(location);\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.pushState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.href = href;\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          var nextKeys = allKeys.slice(0, prevIndex + 1);\n          nextKeys.push(location.key);\n          allKeys = nextKeys;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot push state in browsers that do not support HTML5 history') : void 0;\n        window.location.href = href;\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var href = createHref(location);\n      var key = location.key,\n          state = location.state;\n\n      if (canUseHistory) {\n        globalHistory.replaceState({\n          key: key,\n          state: state\n        }, null, href);\n\n        if (forceRefresh) {\n          window.location.replace(href);\n        } else {\n          var prevIndex = allKeys.indexOf(history.location.key);\n          if (prevIndex !== -1) allKeys[prevIndex] = location.key;\n          setState({\n            action: action,\n            location: location\n          });\n        }\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Browser history cannot replace state in browsers that do not support HTML5 history') : void 0;\n        window.location.replace(href);\n      }\n    });\n  }\n\n  function go(n) {\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.addEventListener(HashChangeEvent, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(PopStateEvent, handlePopState);\n      if (needsHashChangeListener) window.removeEventListener(HashChangeEvent, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nvar HashChangeEvent$1 = 'hashchange';\nvar HashPathCoders = {\n  hashbang: {\n    encodePath: function encodePath(path) {\n      return path.charAt(0) === '!' ? path : '!/' + stripLeadingSlash(path);\n    },\n    decodePath: function decodePath(path) {\n      return path.charAt(0) === '!' ? path.substr(1) : path;\n    }\n  },\n  noslash: {\n    encodePath: stripLeadingSlash,\n    decodePath: addLeadingSlash\n  },\n  slash: {\n    encodePath: addLeadingSlash,\n    decodePath: addLeadingSlash\n  }\n};\n\nfunction stripHash(url) {\n  var hashIndex = url.indexOf('#');\n  return hashIndex === -1 ? url : url.slice(0, hashIndex);\n}\n\nfunction getHashPath() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n}\n\nfunction pushHashPath(path) {\n  window.location.hash = path;\n}\n\nfunction replaceHashPath(path) {\n  window.location.replace(stripHash(window.location.href) + '#' + path);\n}\n\nfunction createHashHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  !canUseDOM ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'Hash history needs a DOM') : invariant(false) : void 0;\n  var globalHistory = window.history;\n  var canGoWithoutReload = supportsGoWithoutReloadUsingHash();\n  var _props = props,\n      _props$getUserConfirm = _props.getUserConfirmation,\n      getUserConfirmation = _props$getUserConfirm === void 0 ? getConfirmation : _props$getUserConfirm,\n      _props$hashType = _props.hashType,\n      hashType = _props$hashType === void 0 ? 'slash' : _props$hashType;\n  var basename = props.basename ? stripTrailingSlash(addLeadingSlash(props.basename)) : '';\n  var _HashPathCoders$hashT = HashPathCoders[hashType],\n      encodePath = _HashPathCoders$hashT.encodePath,\n      decodePath = _HashPathCoders$hashT.decodePath;\n\n  function getDOMLocation() {\n    var path = decodePath(getHashPath());\n    process.env.NODE_ENV !== \"production\" ? warning(!basename || hasBasename(path, basename), 'You are attempting to use a basename on a page whose URL path does not begin ' + 'with the basename. Expected path \"' + path + '\" to begin with \"' + basename + '\".') : void 0;\n    if (basename) path = stripBasename(path, basename);\n    return createLocation(path);\n  }\n\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = globalHistory.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  var forceNextPop = false;\n  var ignorePath = null;\n\n  function locationsAreEqual$$1(a, b) {\n    return a.pathname === b.pathname && a.search === b.search && a.hash === b.hash;\n  }\n\n  function handleHashChange() {\n    var path = getHashPath();\n    var encodedPath = encodePath(path);\n\n    if (path !== encodedPath) {\n      // Ensure we always have a properly-encoded hash.\n      replaceHashPath(encodedPath);\n    } else {\n      var location = getDOMLocation();\n      var prevLocation = history.location;\n      if (!forceNextPop && locationsAreEqual$$1(prevLocation, location)) return; // A hashchange doesn't always == location change.\n\n      if (ignorePath === createPath(location)) return; // Ignore this change; we already setState in push/replace.\n\n      ignorePath = null;\n      handlePop(location);\n    }\n  }\n\n  function handlePop(location) {\n    if (forceNextPop) {\n      forceNextPop = false;\n      setState();\n    } else {\n      var action = 'POP';\n      transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n        if (ok) {\n          setState({\n            action: action,\n            location: location\n          });\n        } else {\n          revertPop(location);\n        }\n      });\n    }\n  }\n\n  function revertPop(fromLocation) {\n    var toLocation = history.location; // TODO: We could probably make this more reliable by\n    // keeping a list of paths we've seen in sessionStorage.\n    // Instead, we just default to 0 for paths we don't know.\n\n    var toIndex = allPaths.lastIndexOf(createPath(toLocation));\n    if (toIndex === -1) toIndex = 0;\n    var fromIndex = allPaths.lastIndexOf(createPath(fromLocation));\n    if (fromIndex === -1) fromIndex = 0;\n    var delta = toIndex - fromIndex;\n\n    if (delta) {\n      forceNextPop = true;\n      go(delta);\n    }\n  } // Ensure the hash is encoded properly before doing anything else.\n\n\n  var path = getHashPath();\n  var encodedPath = encodePath(path);\n  if (path !== encodedPath) replaceHashPath(encodedPath);\n  var initialLocation = getDOMLocation();\n  var allPaths = [createPath(initialLocation)]; // Public interface\n\n  function createHref(location) {\n    var baseTag = document.querySelector('base');\n    var href = '';\n\n    if (baseTag && baseTag.getAttribute('href')) {\n      href = stripHash(window.location.href);\n    }\n\n    return href + '#' + encodePath(basename + createPath(location));\n  }\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot push state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a PUSH, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        pushHashPath(encodedPath);\n        var prevIndex = allPaths.lastIndexOf(createPath(history.location));\n        var nextPaths = allPaths.slice(0, prevIndex + 1);\n        nextPaths.push(path);\n        allPaths = nextPaths;\n        setState({\n          action: action,\n          location: location\n        });\n      } else {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'Hash history cannot PUSH the same path; a new entry will not be added to the history stack') : void 0;\n        setState();\n      }\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(state === undefined, 'Hash history cannot replace state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, undefined, undefined, history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var path = createPath(location);\n      var encodedPath = encodePath(basename + path);\n      var hashChanged = getHashPath() !== encodedPath;\n\n      if (hashChanged) {\n        // We cannot tell if a hashchange was caused by a REPLACE, so we'd\n        // rather setState here and ignore the hashchange. The caveat here\n        // is that other hash histories in the page will consider it a POP.\n        ignorePath = path;\n        replaceHashPath(encodedPath);\n      }\n\n      var prevIndex = allPaths.indexOf(createPath(history.location));\n      if (prevIndex !== -1) allPaths[prevIndex] = path;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    process.env.NODE_ENV !== \"production\" ? warning(canGoWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : void 0;\n    globalHistory.go(n);\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  var listenerCount = 0;\n\n  function checkDOMListeners(delta) {\n    listenerCount += delta;\n\n    if (listenerCount === 1 && delta === 1) {\n      window.addEventListener(HashChangeEvent$1, handleHashChange);\n    } else if (listenerCount === 0) {\n      window.removeEventListener(HashChangeEvent$1, handleHashChange);\n    }\n  }\n\n  var isBlocked = false;\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    var unblock = transitionManager.setPrompt(prompt);\n\n    if (!isBlocked) {\n      checkDOMListeners(1);\n      isBlocked = true;\n    }\n\n    return function () {\n      if (isBlocked) {\n        isBlocked = false;\n        checkDOMListeners(-1);\n      }\n\n      return unblock();\n    };\n  }\n\n  function listen(listener) {\n    var unlisten = transitionManager.appendListener(listener);\n    checkDOMListeners(1);\n    return function () {\n      checkDOMListeners(-1);\n      unlisten();\n    };\n  }\n\n  var history = {\n    length: globalHistory.length,\n    action: 'POP',\n    location: initialLocation,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n/**\n * Creates a history object that stores locations in memory.\n */\n\n\nfunction createMemoryHistory(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      getUserConfirmation = _props.getUserConfirmation,\n      _props$initialEntries = _props.initialEntries,\n      initialEntries = _props$initialEntries === void 0 ? ['/'] : _props$initialEntries,\n      _props$initialIndex = _props.initialIndex,\n      initialIndex = _props$initialIndex === void 0 ? 0 : _props$initialIndex,\n      _props$keyLength = _props.keyLength,\n      keyLength = _props$keyLength === void 0 ? 6 : _props$keyLength;\n  var transitionManager = createTransitionManager();\n\n  function setState(nextState) {\n    _extends(history, nextState);\n\n    history.length = history.entries.length;\n    transitionManager.notifyListeners(history.location, history.action);\n  }\n\n  function createKey() {\n    return Math.random().toString(36).substr(2, keyLength);\n  }\n\n  var index = clamp(initialIndex, 0, initialEntries.length - 1);\n  var entries = initialEntries.map(function (entry) {\n    return typeof entry === 'string' ? createLocation(entry, undefined, createKey()) : createLocation(entry, undefined, entry.key || createKey());\n  }); // Public interface\n\n  var createHref = createPath;\n\n  function push(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to push when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'PUSH';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      var prevIndex = history.index;\n      var nextIndex = prevIndex + 1;\n      var nextEntries = history.entries.slice(0);\n\n      if (nextEntries.length > nextIndex) {\n        nextEntries.splice(nextIndex, nextEntries.length - nextIndex, location);\n      } else {\n        nextEntries.push(location);\n      }\n\n      setState({\n        action: action,\n        location: location,\n        index: nextIndex,\n        entries: nextEntries\n      });\n    });\n  }\n\n  function replace(path, state) {\n    process.env.NODE_ENV !== \"production\" ? warning(!(typeof path === 'object' && path.state !== undefined && state !== undefined), 'You should avoid providing a 2nd state argument to replace when the 1st ' + 'argument is a location-like object that already has state; it is ignored') : void 0;\n    var action = 'REPLACE';\n    var location = createLocation(path, state, createKey(), history.location);\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (!ok) return;\n      history.entries[history.index] = location;\n      setState({\n        action: action,\n        location: location\n      });\n    });\n  }\n\n  function go(n) {\n    var nextIndex = clamp(history.index + n, 0, history.entries.length - 1);\n    var action = 'POP';\n    var location = history.entries[nextIndex];\n    transitionManager.confirmTransitionTo(location, action, getUserConfirmation, function (ok) {\n      if (ok) {\n        setState({\n          action: action,\n          location: location,\n          index: nextIndex\n        });\n      } else {\n        // Mimic the behavior of DOM histories by\n        // causing a render after a cancelled POP.\n        setState();\n      }\n    });\n  }\n\n  function goBack() {\n    go(-1);\n  }\n\n  function goForward() {\n    go(1);\n  }\n\n  function canGo(n) {\n    var nextIndex = history.index + n;\n    return nextIndex >= 0 && nextIndex < history.entries.length;\n  }\n\n  function block(prompt) {\n    if (prompt === void 0) {\n      prompt = false;\n    }\n\n    return transitionManager.setPrompt(prompt);\n  }\n\n  function listen(listener) {\n    return transitionManager.appendListener(listener);\n  }\n\n  var history = {\n    length: entries.length,\n    action: 'POP',\n    location: entries[index],\n    index: index,\n    entries: entries,\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    goBack: goBack,\n    goForward: goForward,\n    canGo: canGo,\n    block: block,\n    listen: listen\n  };\n  return history;\n}\n\nexport { createBrowserHistory, createHashHistory, createMemoryHistory, createLocation, locationsAreEqual, parsePath, createPath };\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import createNamedContext from \"./createNameContext\";\n\nconst historyContext = /*#__PURE__*/ createNamedContext(\"Router-History\");\nexport default historyContext;\n","// TODO: Replace with React.createContext once we can assume React 16+\nimport createContext from \"mini-create-react-context\";\n\nconst createNamedContext = name => {\n  const context = createContext();\n  context.displayName = name;\n\n  return context;\n};\n\nexport default createNamedContext;\n","// TODO: Replace with React.createContext once we can assume React 16+\nimport createContext from \"mini-create-react-context\";\n\nconst createNamedContext = name => {\n  const context = createContext();\n  context.displayName = name;\n\n  return context;\n};\n\nconst context = /*#__PURE__*/ createNamedContext(\"Router\");\nexport default context;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\nimport HistoryContext from \"./HistoryContext.js\";\nimport RouterContext from \"./RouterContext.js\";\n\n/**\n * The public API for putting history on context.\n */\nclass Router extends React.Component {\n  static computeRootMatch(pathname) {\n    return { path: \"/\", url: \"/\", params: {}, isExact: pathname === \"/\" };\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      location: props.history.location\n    };\n\n    // This is a bit of a hack. We have to start listening for location\n    // changes here in the constructor in case there are any <Redirect>s\n    // on the initial render. If there are, they will replace/push when\n    // they mount and since cDM fires in children before parents, we may\n    // get a new location before the <Router> is mounted.\n    this._isMounted = false;\n    this._pendingLocation = null;\n\n    if (!props.staticContext) {\n      this.unlisten = props.history.listen(location => {\n        if (this._isMounted) {\n          this.setState({ location });\n        } else {\n          this._pendingLocation = location;\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._pendingLocation) {\n      this.setState({ location: this._pendingLocation });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.unlisten) this.unlisten();\n  }\n\n  render() {\n    return (\n      <RouterContext.Provider\n        value={{\n          history: this.props.history,\n          location: this.state.location,\n          match: Router.computeRootMatch(this.state.location.pathname),\n          staticContext: this.props.staticContext\n        }}\n      >\n        <HistoryContext.Provider\n          children={this.props.children || null}\n          value={this.props.history}\n        />\n      </RouterContext.Provider>\n    );\n  }\n}\n\nif (__DEV__) {\n  Router.propTypes = {\n    children: PropTypes.node,\n    history: PropTypes.object.isRequired,\n    staticContext: PropTypes.object\n  };\n\n  Router.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      prevProps.history === this.props.history,\n      \"You cannot change <Router history>\"\n    );\n  };\n}\n\nexport default Router;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createMemoryHistory as createHistory } from \"history\";\nimport warning from \"tiny-warning\";\n\nimport Router from \"./Router.js\";\n\n/**\n * The public API for a <Router> that stores location in memory.\n */\nclass MemoryRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  MemoryRouter.propTypes = {\n    initialEntries: PropTypes.array,\n    initialIndex: PropTypes.number,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number,\n    children: PropTypes.node\n  };\n\n  MemoryRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<MemoryRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { MemoryRouter as Router }`.\"\n    );\n  };\n}\n\nexport default MemoryRouter;\n","import React from \"react\";\n\nclass Lifecycle extends React.Component {\n  componentDidMount() {\n    if (this.props.onMount) this.props.onMount.call(this, this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.onUpdate) this.props.onUpdate.call(this, this, prevProps);\n  }\n\n  componentWillUnmount() {\n    if (this.props.onUnmount) this.props.onUnmount.call(this, this);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Lifecycle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\n\nimport Lifecycle from \"./Lifecycle.js\";\nimport RouterContext from \"./RouterContext.js\";\n\n/**\n * The public API for prompting the user before navigating away from a screen.\n */\nfunction Prompt({ message, when = true }) {\n  return (\n    <RouterContext.Consumer>\n      {context => {\n        invariant(context, \"You should not use <Prompt> outside a <Router>\");\n\n        if (!when || context.staticContext) return null;\n\n        const method = context.history.block;\n\n        return (\n          <Lifecycle\n            onMount={self => {\n              self.release = method(message);\n            }}\n            onUpdate={(self, prevProps) => {\n              if (prevProps.message !== message) {\n                self.release();\n                self.release = method(message);\n              }\n            }}\n            onUnmount={self => {\n              self.release();\n            }}\n            message={message}\n          />\n        );\n      }}\n    </RouterContext.Consumer>\n  );\n}\n\nif (__DEV__) {\n  const messageType = PropTypes.oneOfType([PropTypes.func, PropTypes.string]);\n\n  Prompt.propTypes = {\n    when: PropTypes.bool,\n    message: messageType.isRequired\n  };\n}\n\nexport default Prompt;\n","import pathToRegexp from \"path-to-regexp\";\n\nconst cache = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;\n\nfunction compilePath(path) {\n  if (cache[path]) return cache[path];\n\n  const generator = pathToRegexp.compile(path);\n\n  if (cacheCount < cacheLimit) {\n    cache[path] = generator;\n    cacheCount++;\n  }\n\n  return generator;\n}\n\n/**\n * Public API for generating a URL pathname from a path and parameters.\n */\nfunction generatePath(path = \"/\", params = {}) {\n  return path === \"/\" ? path : compilePath(path)(params, { pretty: true });\n}\n\nexport default generatePath;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createLocation, locationsAreEqual } from \"history\";\nimport invariant from \"tiny-invariant\";\n\nimport Lifecycle from \"./Lifecycle.js\";\nimport RouterContext from \"./RouterContext.js\";\nimport generatePath from \"./generatePath.js\";\n\n/**\n * The public API for navigating programmatically with a component.\n */\nfunction Redirect({ computedMatch, to, push = false }) {\n  return (\n    <RouterContext.Consumer>\n      {context => {\n        invariant(context, \"You should not use <Redirect> outside a <Router>\");\n\n        const { history, staticContext } = context;\n\n        const method = push ? history.push : history.replace;\n        const location = createLocation(\n          computedMatch\n            ? typeof to === \"string\"\n              ? generatePath(to, computedMatch.params)\n              : {\n                  ...to,\n                  pathname: generatePath(to.pathname, computedMatch.params)\n                }\n            : to\n        );\n\n        // When rendering in a static context,\n        // set the new location immediately.\n        if (staticContext) {\n          method(location);\n          return null;\n        }\n\n        return (\n          <Lifecycle\n            onMount={() => {\n              method(location);\n            }}\n            onUpdate={(self, prevProps) => {\n              const prevLocation = createLocation(prevProps.to);\n              if (\n                !locationsAreEqual(prevLocation, {\n                  ...location,\n                  key: prevLocation.key\n                })\n              ) {\n                method(location);\n              }\n            }}\n            to={to}\n          />\n        );\n      }}\n    </RouterContext.Consumer>\n  );\n}\n\nif (__DEV__) {\n  Redirect.propTypes = {\n    push: PropTypes.bool,\n    from: PropTypes.string,\n    to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired\n  };\n}\n\nexport default Redirect;\n","import pathToRegexp from \"path-to-regexp\";\n\nconst cache = {};\nconst cacheLimit = 10000;\nlet cacheCount = 0;\n\nfunction compilePath(path, options) {\n  const cacheKey = `${options.end}${options.strict}${options.sensitive}`;\n  const pathCache = cache[cacheKey] || (cache[cacheKey] = {});\n\n  if (pathCache[path]) return pathCache[path];\n\n  const keys = [];\n  const regexp = pathToRegexp(path, keys, options);\n  const result = { regexp, keys };\n\n  if (cacheCount < cacheLimit) {\n    pathCache[path] = result;\n    cacheCount++;\n  }\n\n  return result;\n}\n\n/**\n * Public API for matching a URL pathname to a path.\n */\nfunction matchPath(pathname, options = {}) {\n  if (typeof options === \"string\" || Array.isArray(options)) {\n    options = { path: options };\n  }\n\n  const { path, exact = false, strict = false, sensitive = false } = options;\n\n  const paths = [].concat(path);\n\n  return paths.reduce((matched, path) => {\n    if (!path && path !== \"\") return null;\n    if (matched) return matched;\n\n    const { regexp, keys } = compilePath(path, {\n      end: exact,\n      strict,\n      sensitive\n    });\n    const match = regexp.exec(pathname);\n\n    if (!match) return null;\n\n    const [url, ...values] = match;\n    const isExact = pathname === url;\n\n    if (exact && !isExact) return null;\n\n    return {\n      path, // the path used to match\n      url: path === \"/\" && url === \"\" ? \"/\" : url, // the matched portion of the URL\n      isExact, // whether or not we matched exactly\n      params: keys.reduce((memo, key, index) => {\n        memo[key.name] = values[index];\n        return memo;\n      }, {})\n    };\n  }, null);\n}\n\nexport default matchPath;\n","import React from \"react\";\nimport { isValidElementType } from \"react-is\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport RouterContext from \"./RouterContext.js\";\nimport matchPath from \"./matchPath.js\";\n\nfunction isEmptyChildren(children) {\n  return React.Children.count(children) === 0;\n}\n\nfunction evalChildrenDev(children, props, path) {\n  const value = children(props);\n\n  warning(\n    value !== undefined,\n    \"You returned `undefined` from the `children` function of \" +\n      `<Route${path ? ` path=\"${path}\"` : \"\"}>, but you ` +\n      \"should have returned a React element or `null`\"\n  );\n\n  return value || null;\n}\n\n/**\n * The public API for matching a single path and rendering.\n */\nclass Route extends React.Component {\n  render() {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Route> outside a <Router>\");\n\n          const location = this.props.location || context.location;\n          const match = this.props.computedMatch\n            ? this.props.computedMatch // <Switch> already computed the match for us\n            : this.props.path\n            ? matchPath(location.pathname, this.props)\n            : context.match;\n\n          const props = { ...context, location, match };\n\n          let { children, component, render } = this.props;\n\n          // Preact uses an empty array as children by\n          // default, so use null if that's the case.\n          if (Array.isArray(children) && children.length === 0) {\n            children = null;\n          }\n\n          return (\n            <RouterContext.Provider value={props}>\n              {props.match\n                ? children\n                  ? typeof children === \"function\"\n                    ? __DEV__\n                      ? evalChildrenDev(children, props, this.props.path)\n                      : children(props)\n                    : children\n                  : component\n                  ? React.createElement(component, props)\n                  : render\n                  ? render(props)\n                  : null\n                : typeof children === \"function\"\n                ? __DEV__\n                  ? evalChildrenDev(children, props, this.props.path)\n                  : children(props)\n                : null}\n            </RouterContext.Provider>\n          );\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n}\n\nif (__DEV__) {\n  Route.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.func, PropTypes.node]),\n    component: (props, propName) => {\n      if (props[propName] && !isValidElementType(props[propName])) {\n        return new Error(\n          `Invalid prop 'component' supplied to 'Route': the prop is not a valid React component`\n        );\n      }\n    },\n    exact: PropTypes.bool,\n    location: PropTypes.object,\n    path: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.arrayOf(PropTypes.string)\n    ]),\n    render: PropTypes.func,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool\n  };\n\n  Route.prototype.componentDidMount = function() {\n    warning(\n      !(\n        this.props.children &&\n        !isEmptyChildren(this.props.children) &&\n        this.props.component\n      ),\n      \"You should not use <Route component> and <Route children> in the same route; <Route component> will be ignored\"\n    );\n\n    warning(\n      !(\n        this.props.children &&\n        !isEmptyChildren(this.props.children) &&\n        this.props.render\n      ),\n      \"You should not use <Route render> and <Route children> in the same route; <Route render> will be ignored\"\n    );\n\n    warning(\n      !(this.props.component && this.props.render),\n      \"You should not use <Route component> and <Route render> in the same route; <Route render> will be ignored\"\n    );\n  };\n\n  Route.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      !(this.props.location && !prevProps.location),\n      '<Route> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.'\n    );\n\n    warning(\n      !(!this.props.location && prevProps.location),\n      '<Route> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.'\n    );\n  };\n}\n\nexport default Route;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createLocation, createPath } from \"history\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport Router from \"./Router.js\";\n\nfunction addLeadingSlash(path) {\n  return path.charAt(0) === \"/\" ? path : \"/\" + path;\n}\n\nfunction addBasename(basename, location) {\n  if (!basename) return location;\n\n  return {\n    ...location,\n    pathname: addLeadingSlash(basename) + location.pathname\n  };\n}\n\nfunction stripBasename(basename, location) {\n  if (!basename) return location;\n\n  const base = addLeadingSlash(basename);\n\n  if (location.pathname.indexOf(base) !== 0) return location;\n\n  return {\n    ...location,\n    pathname: location.pathname.substr(base.length)\n  };\n}\n\nfunction createURL(location) {\n  return typeof location === \"string\" ? location : createPath(location);\n}\n\nfunction staticHandler(methodName) {\n  return () => {\n    invariant(false, \"You cannot %s with <StaticRouter>\", methodName);\n  };\n}\n\nfunction noop() {}\n\n/**\n * The public top-level API for a \"static\" <Router>, so-called because it\n * can't actually change the current location. Instead, it just records\n * location changes in a context object. Useful mainly in testing and\n * server-rendering scenarios.\n */\nclass StaticRouter extends React.Component {\n  navigateTo(location, action) {\n    const { basename = \"\", context = {} } = this.props;\n    context.action = action;\n    context.location = addBasename(basename, createLocation(location));\n    context.url = createURL(context.location);\n  }\n\n  handlePush = location => this.navigateTo(location, \"PUSH\");\n  handleReplace = location => this.navigateTo(location, \"REPLACE\");\n  handleListen = () => noop;\n  handleBlock = () => noop;\n\n  render() {\n    const { basename = \"\", context = {}, location = \"/\", ...rest } = this.props;\n\n    const history = {\n      createHref: path => addLeadingSlash(basename + createURL(path)),\n      action: \"POP\",\n      location: stripBasename(basename, createLocation(location)),\n      push: this.handlePush,\n      replace: this.handleReplace,\n      go: staticHandler(\"go\"),\n      goBack: staticHandler(\"goBack\"),\n      goForward: staticHandler(\"goForward\"),\n      listen: this.handleListen,\n      block: this.handleBlock\n    };\n\n    return <Router {...rest} history={history} staticContext={context} />;\n  }\n}\n\nif (__DEV__) {\n  StaticRouter.propTypes = {\n    basename: PropTypes.string,\n    context: PropTypes.object,\n    location: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n  };\n\n  StaticRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<StaticRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { StaticRouter as Router }`.\"\n    );\n  };\n}\n\nexport default StaticRouter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport warning from \"tiny-warning\";\n\nimport RouterContext from \"./RouterContext.js\";\nimport matchPath from \"./matchPath.js\";\n\n/**\n * The public API for rendering the first <Route> that matches.\n */\nclass Switch extends React.Component {\n  render() {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Switch> outside a <Router>\");\n\n          const location = this.props.location || context.location;\n\n          let element, match;\n\n          // We use React.Children.forEach instead of React.Children.toArray().find()\n          // here because toArray adds keys to all child elements and we do not want\n          // to trigger an unmount/remount for two <Route>s that render the same\n          // component at different URLs.\n          React.Children.forEach(this.props.children, child => {\n            if (match == null && React.isValidElement(child)) {\n              element = child;\n\n              const path = child.props.path || child.props.from;\n\n              match = path\n                ? matchPath(location.pathname, { ...child.props, path })\n                : context.match;\n            }\n          });\n\n          return match\n            ? React.cloneElement(element, { location, computedMatch: match })\n            : null;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n}\n\nif (__DEV__) {\n  Switch.propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object\n  };\n\n  Switch.prototype.componentDidUpdate = function(prevProps) {\n    warning(\n      !(this.props.location && !prevProps.location),\n      '<Switch> elements should not change from uncontrolled to controlled (or vice versa). You initially used no \"location\" prop and then provided one on a subsequent render.'\n    );\n\n    warning(\n      !(!this.props.location && prevProps.location),\n      '<Switch> elements should not change from controlled to uncontrolled (or vice versa). You provided a \"location\" prop initially but omitted it on a subsequent render.'\n    );\n  };\n}\n\nexport default Switch;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistStatics from \"hoist-non-react-statics\";\nimport invariant from \"tiny-invariant\";\n\nimport RouterContext from \"./RouterContext.js\";\n\n/**\n * A public higher-order component to access the imperative API\n */\nfunction withRouter(Component) {\n  const displayName = `withRouter(${Component.displayName || Component.name})`;\n  const C = props => {\n    const { wrappedComponentRef, ...remainingProps } = props;\n\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(\n            context,\n            `You should not use <${displayName} /> outside a <Router>`\n          );\n          return (\n            <Component\n              {...remainingProps}\n              {...context}\n              ref={wrappedComponentRef}\n            />\n          );\n        }}\n      </RouterContext.Consumer>\n    );\n  };\n\n  C.displayName = displayName;\n  C.WrappedComponent = Component;\n\n  if (__DEV__) {\n    C.propTypes = {\n      wrappedComponentRef: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.object\n      ])\n    };\n  }\n\n  return hoistStatics(C, Component);\n}\n\nexport default withRouter;\n","import React from \"react\";\nimport invariant from \"tiny-invariant\";\n\nimport Context from \"./RouterContext.js\";\nimport HistoryContext from \"./HistoryContext.js\";\nimport matchPath from \"./matchPath.js\";\n\nconst useContext = React.useContext;\n\nexport function useHistory() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useHistory()\"\n    );\n  }\n\n  return useContext(HistoryContext);\n}\n\nexport function useLocation() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useLocation()\"\n    );\n  }\n\n  return useContext(Context).location;\n}\n\nexport function useParams() {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useParams()\"\n    );\n  }\n\n  const match = useContext(Context).match;\n  return match ? match.params : {};\n}\n\nexport function useRouteMatch(path) {\n  if (__DEV__) {\n    invariant(\n      typeof useContext === \"function\",\n      \"You must use React >= 16.8 in order to use useRouteMatch()\"\n    );\n  }\n\n  const location = useLocation();\n  const match = useContext(Context).match;\n\n  return path ? matchPath(location.pathname, path) : match;\n}\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const method = replace ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\",\n      activeStyle,\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          const className = isActive\n            ? joinClassnames(classNameProp, activeClassName)\n            : classNameProp;\n          const style = isActive ? { ...styleProp, ...activeStyle } : styleProp;\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.string,\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.object\n  };\n}\n\nexport default NavLink;\n","import React, { Component } from 'react';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\n\nvar MAX_SIGNED_31_BIT_INT = 1073741823;\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n\nfunction getUniqueId() {\n  var key = '__global_unique_id__';\n  return commonjsGlobal[key] = (commonjsGlobal[key] || 0) + 1;\n}\n\nfunction objectIs(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nfunction createEventEmitter(value) {\n  var handlers = [];\n  return {\n    on: function on(handler) {\n      handlers.push(handler);\n    },\n    off: function off(handler) {\n      handlers = handlers.filter(function (h) {\n        return h !== handler;\n      });\n    },\n    get: function get() {\n      return value;\n    },\n    set: function set(newValue, changedBits) {\n      value = newValue;\n      handlers.forEach(function (handler) {\n        return handler(value, changedBits);\n      });\n    }\n  };\n}\n\nfunction onlyChild(children) {\n  return Array.isArray(children) ? children[0] : children;\n}\n\nfunction createReactContext(defaultValue, calculateChangedBits) {\n  var _Provider$childContex, _Consumer$contextType;\n\n  var contextProp = '__create-react-context-' + getUniqueId() + '__';\n\n  var Provider = /*#__PURE__*/function (_Component) {\n    _inheritsLoose(Provider, _Component);\n\n    function Provider() {\n      var _this;\n\n      _this = _Component.apply(this, arguments) || this;\n      _this.emitter = createEventEmitter(_this.props.value);\n      return _this;\n    }\n\n    var _proto = Provider.prototype;\n\n    _proto.getChildContext = function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _ref[contextProp] = this.emitter, _ref;\n    };\n\n    _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      if (this.props.value !== nextProps.value) {\n        var oldValue = this.props.value;\n        var newValue = nextProps.value;\n        var changedBits;\n\n        if (objectIs(oldValue, newValue)) {\n          changedBits = 0;\n        } else {\n          changedBits = typeof calculateChangedBits === 'function' ? calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;\n\n          if (process.env.NODE_ENV !== 'production') {\n            warning((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: ' + changedBits);\n          }\n\n          changedBits |= 0;\n\n          if (changedBits !== 0) {\n            this.emitter.set(nextProps.value, changedBits);\n          }\n        }\n      }\n    };\n\n    _proto.render = function render() {\n      return this.props.children;\n    };\n\n    return Provider;\n  }(Component);\n\n  Provider.childContextTypes = (_Provider$childContex = {}, _Provider$childContex[contextProp] = PropTypes.object.isRequired, _Provider$childContex);\n\n  var Consumer = /*#__PURE__*/function (_Component2) {\n    _inheritsLoose(Consumer, _Component2);\n\n    function Consumer() {\n      var _this2;\n\n      _this2 = _Component2.apply(this, arguments) || this;\n      _this2.state = {\n        value: _this2.getValue()\n      };\n\n      _this2.onUpdate = function (newValue, changedBits) {\n        var observedBits = _this2.observedBits | 0;\n\n        if ((observedBits & changedBits) !== 0) {\n          _this2.setState({\n            value: _this2.getValue()\n          });\n        }\n      };\n\n      return _this2;\n    }\n\n    var _proto2 = Consumer.prototype;\n\n    _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n      var observedBits = nextProps.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentDidMount = function componentDidMount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].on(this.onUpdate);\n      }\n\n      var observedBits = this.props.observedBits;\n      this.observedBits = observedBits === undefined || observedBits === null ? MAX_SIGNED_31_BIT_INT : observedBits;\n    };\n\n    _proto2.componentWillUnmount = function componentWillUnmount() {\n      if (this.context[contextProp]) {\n        this.context[contextProp].off(this.onUpdate);\n      }\n    };\n\n    _proto2.getValue = function getValue() {\n      if (this.context[contextProp]) {\n        return this.context[contextProp].get();\n      } else {\n        return defaultValue;\n      }\n    };\n\n    _proto2.render = function render() {\n      return onlyChild(this.props.children)(this.state.value);\n    };\n\n    return Consumer;\n  }(Component);\n\n  Consumer.contextTypes = (_Consumer$contextType = {}, _Consumer$contextType[contextProp] = PropTypes.object, _Consumer$contextType);\n  return {\n    Provider: Provider,\n    Consumer: Consumer\n  };\n}\n\nvar index = React.createContext || createReactContext;\n\nexport default index;\n","var isarray = require('isarray')\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","module.exports = require('./lib/axios');","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\n    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath'\n  ];\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys);\n\n  var otherKeys = Object\n    .keys(config2)\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// @ts-ignore: This will be removed from built files and is here to make the types available during dev work\r\nimport * as Request from \"@types/request\";\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\nlet requestModule: Request.RequestAPI<Request.Request, Request.CoreOptions, Request.RequiredUriUrl>;\r\nif (typeof XMLHttpRequest === \"undefined\") {\r\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n    // @ts-ignore: TS doesn't know about these names\r\n    const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n    requestModule = requireFunc(\"request\");\r\n}\r\n\r\n/** @private */\r\nexport class NodeHttpClient extends HttpClient {\r\n    private readonly logger: ILogger;\r\n    private readonly request: typeof requestModule;\r\n    private readonly cookieJar: Request.CookieJar;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        if (typeof requestModule === \"undefined\") {\r\n            throw new Error(\"The 'request' module could not be loaded.\");\r\n        }\r\n\r\n        this.logger = logger;\r\n        this.cookieJar = requestModule.jar();\r\n        this.request = requestModule.defaults({ jar: this.cookieJar });\r\n    }\r\n\r\n    public send(httpRequest: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (httpRequest.abortSignal) {\r\n            if (httpRequest.abortSignal.aborted) {\r\n                return Promise.reject(new AbortError());\r\n            }\r\n        }\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n\r\n            let requestBody: Buffer | string;\r\n            if (isArrayBuffer(httpRequest.content)) {\r\n                requestBody = Buffer.from(httpRequest.content);\r\n            } else {\r\n                requestBody = httpRequest.content || \"\";\r\n            }\r\n\r\n            const currentRequest = this.request(httpRequest.url!, {\r\n                body: requestBody,\r\n                // If binary is expected 'null' should be used, otherwise for text 'utf8'\r\n                encoding: httpRequest.responseType === \"arraybuffer\" ? null : \"utf8\",\r\n                headers: {\r\n                    // Tell auth middleware to 401 instead of redirecting\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...httpRequest.headers,\r\n                },\r\n                method: httpRequest.method,\r\n                timeout: httpRequest.timeout,\r\n            },\r\n            (error, response, body) => {\r\n                if (httpRequest.abortSignal) {\r\n                    httpRequest.abortSignal.onabort = null;\r\n                }\r\n\r\n                if (error) {\r\n                    if (error.code === \"ETIMEDOUT\") {\r\n                        this.logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                        reject(new TimeoutError());\r\n                    }\r\n                    this.logger.log(LogLevel.Warning, `Error from HTTP request. ${error}`);\r\n                    reject(error);\r\n                    return;\r\n                }\r\n\r\n                if (response.statusCode >= 200 && response.statusCode < 300) {\r\n                    resolve(new HttpResponse(response.statusCode, response.statusMessage || \"\", body));\r\n                } else {\r\n                    reject(new HttpError(response.statusMessage || \"\", response.statusCode || 0));\r\n                }\r\n            });\r\n\r\n            if (httpRequest.abortSignal) {\r\n                httpRequest.abortSignal.onabort = () => {\r\n                    currentRequest.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this.cookieJar.getCookieString(url);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\n/** @private */\r\nexport interface HandshakeRequestMessage {\r\n    readonly protocol: string;\r\n    readonly version: number;\r\n}\r\n\r\n/** @private */\r\nexport interface HandshakeResponseMessage {\r\n    readonly error: string;\r\n    readonly minorVersion: number;\r\n}\r\n\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    public writeHandshakeRequest(handshakeRequest: HandshakeRequestMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n\r\n    public parseHandshakeResponse(data: any): [any, HandshakeResponseMessage] {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let messageData: string;\r\n        let remainingData: any;\r\n\r\n        if (isArrayBuffer(data) || (typeof Buffer !== \"undefined\" && data instanceof Buffer)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, binaryData.slice(0, responseLength));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        } else {\r\n            const textData: string = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        responseMessage = response;\r\n\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","/** @license React v16.8.4\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';Object.defineProperty(exports,\"__esModule\",{value:!0});\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?Symbol.for(\"react.memo\"):\n60115,r=b?Symbol.for(\"react.lazy\"):60116;function t(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case h:return a;default:return u}}case r:case q:case d:return u}}}function v(a){return t(a)===m}exports.typeOf=t;exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;\nexports.Fragment=e;exports.Lazy=r;exports.Memo=q;exports.Portal=d;exports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||\"object\"===typeof a&&null!==a&&(a.$$typeof===r||a.$$typeof===q||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n)};exports.isAsyncMode=function(a){return v(a)||t(a)===l};exports.isConcurrentMode=v;exports.isContextConsumer=function(a){return t(a)===k};\nexports.isContextProvider=function(a){return t(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return t(a)===n};exports.isFragment=function(a){return t(a)===e};exports.isLazy=function(a){return t(a)===r};exports.isMemo=function(a){return t(a)===q};exports.isPortal=function(a){return t(a)===d};exports.isProfiler=function(a){return t(a)===g};exports.isStrictMode=function(a){return t(a)===f};\nexports.isSuspense=function(a){return t(a)===p};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nvar axios_1 = require(\"axios\");\nfunction createObservable(promiseFactory) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var config = args[args.length - 1];\n    config = config ? __assign({}, config) : {};\n    args[args.length - 1] = config;\n    var cancelSource;\n    var hasCancelToken = !!config.cancelToken;\n    if (hasCancelToken) {\n        console.warn(\"No need to use cancel token, just unsubscribe the subscription would cancel the http request automatically\");\n    }\n    var observable = new rxjs_1.Observable(function (subscriber) {\n        if (!hasCancelToken) {\n            cancelSource = axios_1.default.CancelToken.source();\n            config.cancelToken = cancelSource.token;\n        }\n        promiseFactory.apply(void 0, args).then(function (response) {\n            subscriber.next(response);\n            subscriber.complete();\n        })\n            .catch(function (error) { return subscriber.error(error); });\n    });\n    var _subscribe = observable.subscribe.bind(observable);\n    observable.subscribe = function () {\n        var args2 = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args2[_i] = arguments[_i];\n        }\n        var subscription = _subscribe.apply(void 0, args2);\n        var _unsubscribe = subscription.unsubscribe.bind(subscription);\n        subscription.unsubscribe = function () {\n            if (cancelSource) {\n                cancelSource.cancel();\n            }\n            _unsubscribe();\n        };\n        return subscription;\n    };\n    return observable;\n}\nexports.createObservable = createObservable;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; }, 0);\n}","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!(<any>teardown)) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { noop } from './noop';\nimport { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse\n   * @deprecated use new Subject() instead\n  */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the *publish* operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { tap, publish, refCount } from 'rxjs/operators';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap((num) => console.log(`refCount ${num}`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap((num) => console.log(`publish ${num}`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the publish operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // )\n    // .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = (() => {\n  const connectableProto = <any>ConnectableObservable.prototype;\n  return {\n    operator: { value: null as null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null as null, writable: true },\n    _connection: { value: null as null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n  };\n})();\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // ).subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the keySelector function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Elsewhere, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the key field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the elementSelector function.\n *\n * ## Examples\n *\n * ### Group objects by id and return as array\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { mergeMap, groupBy, reduce } from 'rxjs/operators';\n *\n * of(\n *   {id: 1, name: 'JavaScript'},\n *   {id: 2, name: 'Parcel'},\n *   {id: 2, name: 'webpack'},\n *   {id: 1, name: 'TypeScript'},\n *   {id: 3, name: 'TSLint'}\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap((group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], []))),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'JavaScript'},\n * //   { id: 1, name: 'TypeScript'} ]\n * //\n * // [ { id: 2, name: 'Parcel'},\n * //   { id: 2, name: 'webpack'} ]\n * //\n * // [ { id: 3, name: 'TSLint'} ]\n * ```\n *\n * ### Pivot data on the id field\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { groupBy, map, mergeMap, reduce } from 'rxjs/operators';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * )\n *   .pipe(\n *     groupBy(p => p.id, p => p.name),\n *     mergeMap(group$ =>\n *       group$.pipe(reduce((acc, cur) => [...acc, cur], [`${group$.key}`]))\n *     ),\n *     map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n *  )\n *  .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T | R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map<K, Subject<T | R>>();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = (this.subjectSelector ? this.subjectSelector() : new Subject<R>()) as Subject<T | R>;\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T | any>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  /** @deprecated Do not construct this type. Internal use only */\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const { refCountSubscription, groupSubject } = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```ts\n * import { empty } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```ts\n * import { empty, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return An \"empty\" Observable: emits only the complete\n * notification.\n * @deprecated Deprecated in favor of using {@link EMPTY} constant, or {@link scheduled} (e.g. `scheduled([], scheduler)`)\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  subscriber.complete();\n};\n","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { deprecate } from 'util';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated NotificationKind is deprecated as const enums are not compatible with isolated modules. Use a string literal instead.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: 'N' | 'E' | 'C', public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let i = 0;\n    sub.add(scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n        return;\n      }\n      subscriber.next(input[i++]);\n      if (!subscriber.closed) {\n        sub.add(this.schedule());\n      }\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return scheduleArray(input, scheduler);\n  }\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { Observable } from '../Observable';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T>(a: T, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2>(a: T, b: T2, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: (T | SchedulerLike)[]): Observable<T>;\n\n// TODO(benlesh): Update the typings for this when we can switch to TS 3.x\nexport function of<T>(a: T): Observable<T>;\nexport function of<T, T2>(a: T, b: T2): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: T[]): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n    return scheduleArray(args as T[], scheduler);\n  } else {\n    return fromArray(args as T[]);\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * ![](throw.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then emit an error\n * ```ts\n * import { throwError, concat, of } from 'rxjs';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // 7\n * // Error: oops!\n * ```\n *\n * ---\n *\n * ### Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 2\n * ```ts\n * import { throwError, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 2\n *     ? throwError('Twos are bad')\n *     : of('a', 'b', 'c')\n *   ),\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // a\n * // b\n * // c\n * // a\n * // b\n * // c\n * // Twos are bad\n * ```\n *\n * @see {@link Observable}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throwError\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n * Ensure values in subscribe are called just before browser repaint.\n * ```ts\n * import { interval } from 'rxjs';\n * import { observeOn } from 'rxjs/operators';\n *\n * const intervals = interval(10);                // Intervals are scheduled\n *                                                // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler),          // ...but we will observe on animationFrame\n * )                                              // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  /** @nocollapse */\n  static dispatch(this: SchedulerAction<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: SchedulerLike,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    const destination = this.destination as Subscription;\n    destination.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Subject } from './Subject';\nimport { SchedulerLike } from './types';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * A variant of Subject that \"replays\" or emits old values to new subscribers.\n * It buffers a set number of values and will emit those values immediately to\n * any new subscribers in addition to emitting new values to existing subscribers.\n *\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: (ReplayEvent<T> | T)[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n  private _infiniteTimeWindow: boolean = false;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: SchedulerLike) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      this._infiniteTimeWindow = true;\n      this.next = this.nextInfiniteTimeWindow;\n    } else {\n      this.next = this.nextTimeWindow;\n    }\n  }\n\n  private nextInfiniteTimeWindow(value: T): void {\n    const _events = this._events;\n    _events.push(value);\n    // Since this method is invoked in every next() call than the buffer\n    // can overgrow the max size only by one item\n    if (_events.length > this._bufferSize) {\n      _events.shift();\n    }\n\n    super.next(value);\n  }\n\n  private nextTimeWindow(value: T): void {\n    this._events.push(new ReplayEvent(this._getNow(), value));\n    this._trimBufferThenGetEvents();\n\n    super.next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n    const _infiniteTimeWindow = this._infiniteTimeWindow;\n    const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    const len = _events.length;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.isStopped || this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    if (_infiniteTimeWindow) {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(<T>_events[i]);\n      }\n    } else {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next((<ReplayEvent<T>>_events[i]).value);\n      }\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = <ReplayEvent<T>[]>this._events;\n\n    const eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    RESOLVED.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @nodoc\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable<T>(obj: any): obj is Observable<T> {\n  return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","export interface ArgumentOutOfRangeError extends Error {\n}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  new(): ArgumentOutOfRangeError;\n}\n\nconst ArgumentOutOfRangeErrorImpl = (() => {\n  function ArgumentOutOfRangeErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n  }\n\n  ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ArgumentOutOfRangeErrorImpl;\n})();\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = ArgumentOutOfRangeErrorImpl as any;","export interface EmptyError extends Error {\n}\n\nexport interface EmptyErrorCtor {\n  new(): EmptyError;\n}\n\nconst EmptyErrorImpl = (() => {\n  function EmptyErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'no elements in sequence';\n    this.name = 'EmptyError';\n    return this;\n  }\n\n  EmptyErrorImpl.prototype = Object.create(Error.prototype);\n\n  return EmptyErrorImpl;\n})();\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = EmptyErrorImpl as any;","export interface TimeoutError extends Error {\n}\n\nexport interface TimeoutErrorCtor {\n  new(): TimeoutError;\n}\n\nconst TimeoutErrorImpl = (() => {\n  function TimeoutErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    return this;\n  }\n\n  TimeoutErrorImpl.prototype = Object.create(Error.prototype);\n\n  return TimeoutErrorImpl;\n})();\n\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link operators/timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = TimeoutErrorImpl as any;\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: R;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n\n// tslint:disable:max-line-length\n/** @deprecated resultSelector is no longer supported, use a mapping function. */\nexport function bindCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindCallback<R1, R2, R3, R4>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): () => Observable<any[]>;\nexport function bindCallback<R1, R2, R3>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindCallback<R1, R2>(callbackFunc: (callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindCallback<R1>(callbackFunc: (callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindCallback(callbackFunc: (callback: () => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<any[]>;\nexport function bindCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindCallback<A1>(callbackFunc: (arg1: A1, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<any[]>;\nexport function bindCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>;\n\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((result: R) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R>;\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((...results: R[]) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R[]>;\n\nexport function bindCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\n// tslint:enable:max-line-length\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback<T>(\n  callbackFunc: Function,\n  resultSelector?: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindCallback(callbackFunc, scheduler)(...args).pipe(\n        map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)),\n      );\n    }\n  }\n\n  return function (this: any, ...args: any[]): Observable<T> {\n    const context = this;\n    let subject: AsyncSubject<T>;\n    const params = {\n      context,\n      subject,\n      callbackFunc,\n      scheduler,\n    };\n    return new Observable<T>(subscriber => {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        const state: DispatchState<T> = {\n          args, subscriber, params,\n        };\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, state);\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  args: any[];\n  subscriber: Subscriber<T>;\n  params: ParamsContext<T>;\n}\n\ninterface ParamsContext<T> {\n  callbackFunc: Function;\n  scheduler: SchedulerLike;\n  context: any;\n  subject: AsyncSubject<T>;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const self = this;\n  const { args, subscriber, params } = state;\n  const { callbackFunc, context, scheduler } = params;\n  let { subject } = params;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n      this.add(scheduler.schedule<NextState<T>>(dispatchNext, 0, { value, subject }));\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface NextState<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(this: SchedulerAction<NextState<T>>, state: NextState<T>) {\n  const { value, subject } = state;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface ErrorState<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(this: SchedulerAction<ErrorState<T>>, state: ErrorState<T>) {\n  const { err, subject } = state;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function bindNodeCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindNodeCallback<R1, R2, R3, R4>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<R1, R2, R3>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<R1, R2>(callbackFunc: (callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindNodeCallback<R1>(callbackFunc: (callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindNodeCallback(callbackFunc: (callback: (err: any) => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindNodeCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindNodeCallback<A1>(callbackFunc: (arg1: A1, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindNodeCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>; /* tslint:enable:max-line-length */\n\nexport function bindNodeCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback<T>(\n  callbackFunc: Function,\n  resultSelector: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(\n        map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n      );\n    }\n  }\n\n  return function(this: any, ...args: any[]): Observable<T> {\n    const params: ParamsState<T> = {\n      subject: undefined,\n      args,\n      callbackFunc,\n      scheduler,\n      context: this,\n    };\n    return new Observable<T>(subscriber => {\n      const { context } = params;\n      let { subject } = params;\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            const err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, { params, subscriber, context });\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  subscriber: Subscriber<T>;\n  context: any;\n  params: ParamsState<T>;\n}\n\ninterface ParamsState<T> {\n  callbackFunc: Function;\n  args: any[];\n  scheduler: SchedulerLike;\n  subject: AsyncSubject<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const { params, subscriber, context } = state;\n  const { callbackFunc, args, scheduler } = params;\n  let subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const err = innerArgs.shift();\n      if (err) {\n        this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        this.add(scheduler.schedule<DispatchNextArg<T>>(dispatchNext, 0, { value, subject }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","/**\n * Tests to see if the object is an ES2015 (ES6) Promise\n * @see {@link https://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects}\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return !!value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","import { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>): (subscriber: Subscriber<T>) => Subscription | void => {\n  if (!!result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (!!result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = iterable[Symbol_iterator]();\n  do {\n    const item = iterator.next();\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue: undefined,\n  outerIndex: undefined,\n  innerSubscriber: InnerSubscriber<T, R>\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  innerSubscriber: Subscriber<R> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)\n): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  return subscribeTo(result)(innerSubscriber) as Subscription;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler  } from '../util/isScheduler';\nimport { isArray  } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Operator } from '../Operator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\n\nconst NONE = {};\n\n/* tslint:disable:max-line-length */\n\n// If called with a single array, it \"auto-spreads\" the array, with result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(sources: [O1], resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(sources: [O1, O2], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(sources: [O1, O2, O3], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5, O6], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(sources: O[], resultSelector: (...args: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// standard call, but with a result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// With a scheduler (deprecated)\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[], scheduler: SchedulerLike): Observable<ObservedValueOf<O>[]>;\n\n// Best case\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1]): Observable<[ObservedValueOf<O1>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[]): Observable<ObservedValueOf<O>[]>;\n\n// Standard calls\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>>(v1: O1, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: O[]): Observable<any[]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: Array<O | SchedulerLike>): Observable<any[]>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike>): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | SchedulerLike>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n * ## Examples\n * ### Combine two timer Observables\n * ```ts\n * import { combineLatest, timer } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * ### Combine an array of Observables\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { delay, starWith } from 'rxjs/operators';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000),   // emit 0 and then emit n after n seconds\n *     startWith(0),\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n *\n * ### Use project function to dynamically calculate the Body-Mass Index\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest(weight, height).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(\n  ...observables: (O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike)[]\n): Observable<R> {\n  let resultSelector: (...values: Array<any>) => R =  null;\n  let scheduler: SchedulerLike = null;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop() as SchedulerLike;\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop() as (...values: Array<any>) => R;\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0] as any;\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator<ObservedValueOf<O>, R>(resultSelector));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private resultSelector?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond: number;\n\n  constructor(destination: Subscriber<R>, private resultSelector?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, observable, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next(values.slice());\n      }\n    }\n  }\n\n  private _tryResultSelector(values: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, values);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { ObservableInput, SchedulerLike, Observable } from 'rxjs';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see from\n * @see of\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => input.then(\n      value => {\n        sub.add(scheduler.schedule(() => {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(() => subscriber.complete()));\n        }));\n      },\n      err => {\n        sub.add(scheduler.schedule(() => subscriber.error(err)));\n      }\n    )));\n    return sub;\n  });\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let iterator: Iterator<T>;\n    sub.add(() => {\n      // Finalize generators\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(() => {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n        let value: T;\n        let done: boolean;\n        try {\n          const result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated use {@link scheduled} instead. */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  } else {\n    return scheduled(input, scheduler);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```ts\n * import { of, interval } from 'rxjs';\n * import { mergeMap, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: number) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result, value, index);\n  }\n\n  private _innerSub(ish: ObservableInput<R>, value: T, index: number): void {\n    const innerSubscriber = new InnerSubscriber(this, value, index);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = subscribeToResult<T, R>(this, ish, undefined, undefined, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyComplete(innerSub: Subscription): void {\n    const buffer = this.buffer;\n    this.remove(innerSub);\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete();\n    }\n  }\n}\n","\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map((ev) => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { take, map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(10))),\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<ObservableInput<T>, T> {\n  return mergeMap(identity, concurrent);\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>>(v1: O1, scheduler: SchedulerLike): Observable<ObservedValueOf<O1>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\n\nexport function concat<O1 extends ObservableInput<any>>(v1: O1): Observable<ObservedValueOf<O1>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\nexport function concat<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O extends ObservableInput<any>>(...observables: (O | SchedulerLike)[]): Observable<ObservedValueOf<O>>;\nexport function concat<R>(...observables: ObservableInput<any>[]): Observable<R>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<R>(...observables: (ObservableInput<any> | SchedulerLike)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n * ### Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n * ```ts\n * import { concat, interval, range } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * ### Concatenate 3 Observables\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * ### Concatenate the same Observable to repeat it\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {SchedulerLike} [scheduler=null] An optional {@link SchedulerLike} to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<O extends ObservableInput<any>, R>(...observables: Array<O | SchedulerLike>): Observable<ObservedValueOf<O> | R> {\n  return concatAll<R>()(of(...observables));\n}\n","\nimport { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function concatAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.png)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, take, concatAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev => interval(1000).pipe(take(4))),\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return mergeAll<T>(1);\n}\n","import { Observable } from '../Observable';\nimport { SubscribableOrPromise, ObservedValueOf, ObservableInput } from '../types';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * ## Example\n * ### Subscribe to either an Observable of clicks or an Observable of interval, at random\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(function () {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer<R extends ObservableInput<any> | void>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>(subscriber => {\n    let input: R | void;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    const source = input ? from(input as ObservableInput<ObservedValueOf<R>>) : empty();\n    return source.subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservedValuesFromArray, ObservedValueOf, SubscribableOrPromise } from '../types';\nimport { isArray } from '../util/isArray';\nimport { map } from '../operators/map';\nimport { isObject } from '../util/isObject';\nimport { isObservable } from '../util/isObservable';\nimport { from } from './from';\n\n/* tslint:disable:max-line-length */\n\n// forkJoin(a$, b$, c$)\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(v1: SubscribableOrPromise<T>): Observable<[T]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n// forkJoin([a$, b$, c$]);\n// TODO(benlesh): Uncomment for TS 3.0\n// export function forkJoin(sources: []): Observable<never>;\nexport function forkJoin<A>(sources: [ObservableInput<A>]): Observable<[A]>;\nexport function forkJoin<A, B>(sources: [ObservableInput<A>, ObservableInput<B>]): Observable<[A, B]>;\nexport function forkJoin<A, B, C>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<[A, B, C]>;\nexport function forkJoin<A, B, C, D>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<[A, B, C, D]>;\nexport function forkJoin<A, B, C, D, E>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<[A, B, C, D, E]>;\nexport function forkJoin<A, B, C, D, E, F>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>, ObservableInput<F>]): Observable<[A, B, C, D, E, F]>;\nexport function forkJoin<A extends ObservableInput<any>[]>(sources: A): Observable<ObservedValuesFromArray<A>[]>;\n\n// forkJoin({})\nexport function forkJoin(sourcesObject: {}): Observable<never>;\nexport function forkJoin<T, K extends keyof T>(sourcesObject: T): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function forkJoin(...args: Array<ObservableInput<any>|Function>): Observable<any>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(...sources: ObservableInput<T>[]): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed observables to complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first observable,\n * second value is the last thing emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, resulting\n * objects will have the same keys as the dictionary passed, with their last values they've emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input observables, whenever any of\n * that observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input observable errors at some point, `forkJoin` will error as well and all other observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output observable is supposed to emit a result.\n *\n * ## Examples\n *\n * ### Use forkJoin with a dictionary of observable inputs\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000),\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * ### Use forkJoin with an array of observable inputs\n * ```ts\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000),\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(\n  ...sources: any[]\n): Observable<any> {\n  if (sources.length === 1) {\n    const first = sources[0];\n    if (isArray(first)) {\n      return forkJoinInternal(first, null);\n    }\n    // TODO(benlesh): isObservable check will not be necessary when deprecated path is removed.\n    if (isObject(first) && Object.getPrototypeOf(first) === Object.prototype) {\n      const keys = Object.keys(first);\n      return forkJoinInternal(keys.map(key => first[key]), keys);\n    }\n  }\n\n  // DEPRECATED PATHS BELOW HERE\n  if (typeof sources[sources.length - 1] === 'function') {\n    const resultSelector = sources.pop() as Function;\n    sources = (sources.length === 1 && isArray(sources[0])) ? sources[0] : sources;\n    return forkJoinInternal(sources, null).pipe(\n      map((args: any[]) => resultSelector(...args))\n    );\n  }\n\n  return forkJoinInternal(sources, null);\n}\n\nfunction forkJoinInternal(sources: ObservableInput<any>[], keys: string[] | null): Observable<any> {\n  return new Observable(subscriber => {\n    const len = sources.length;\n    if (len === 0) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(len);\n    let completed = 0;\n    let emitted = 0;\n    for (let i = 0; i < len; i++) {\n      const source = from(sources[i]);\n      let hasValue = false;\n      subscriber.add(source.subscribe({\n        next: value => {\n          if (!hasValue) {\n            hasValue = true;\n            emitted++;\n          }\n          values[i] = value;\n        },\n        error: err => subscriber.error(err),\n        complete: () => {\n          completed++;\n          if (completed === len || !hasValue) {\n            if (emitted === len) {\n              subscriber.next(keys ?\n                keys.reduce((result, key, i) => (result[key] = values[i], result), {}) :\n                values);\n            }\n            subscriber.complete();\n          }\n        }\n      }));\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\nconst toString: Function = (() => Object.prototype.toString)();\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener: (eventName: string, handler: NodeEventHandler) => void | {};\n  removeListener: (eventName: string, handler: NodeEventHandler) => void | {};\n}\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(type: string, listener: ((evt: E) => void) | null, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener?: ((evt: E) => void) | null, options?: EventListenerOptions | boolean): void;\n}\n\nexport type EventTargetLike<T> = HasEventTargetAddRemove<T> | NodeStyleEventEmitter | NodeCompatibleEventEmitter | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> = EventTargetLike<T> | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, resultSelector: (...args: any[]) => T): Observable<T>;\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions, resultSelector: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n * ### Emits clicks happening on the DOM document\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * ### Use addEventListener with capture option\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: ((...args: any[]) => T)\n): Observable<T> {\n\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(target, eventName, <EventListenerOptions | undefined>options).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T>(subscriber => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options as EventListenerOptions);\n  });\n}\n\nfunction setupSubscription<T>(sourceObj: FromEventTarget<T>, eventName: string,\n                              handler: (...args: any[]) => void, subscriber: Subscriber<T>,\n                              options?: EventListenerOptions) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n    unsubscribe = () => source.removeEventListener(eventName, handler, options);\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is HasEventTargetAddRemove<any> {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * then one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Example\n * ### Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * ## Example\n * ### Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * ## Example\n * ### Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs \"EVENT_TYPE\" \"EVENT_MESSAGE\" to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + \" --- \" + eventMessage // without that function only \"EVENT_TYPE\"\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"EVENT_TYPE --- EVENT_MESSAGE\"\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n * @static true\n * @name fromEventPattern\n * @owner Observable\n */\n\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any,\n                                    removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n                                    resultSelector?: (...args: any[]) => T): Observable<T | T[]> {\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T | T[]>(subscriber => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n\n    let retValue: any;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return () => removeHandler(handler, retValue) ;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { identity } from '../util/identity';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate(0, x => x < 10, x => x + 1, x => x);\n *\n * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n * const res = generate(1, x => x < 5, x => x * 2, x => x + 1, asap);\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n */\n  export function generate<T, S>(initialState: S,\n                                 condition: ConditionFunc<S>,\n                                 iterate: IterateFunc<S>,\n                                 resultSelector: ResultFunc<S, T>,\n                                 scheduler?: SchedulerLike): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * `generate` allows you to create stream of values generated with a loop very similar to\n * traditional for loop. First argument of `generate` is a beginning value. Second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * loop continues, if not, it stops. Third value is a function which takes previously defined\n * value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in regular for loop: first expression\n * initializes some state (for example numeric index), second tests if loop can make next\n * iteration (for example if index is lower than 10) and third states how defined value\n * will be modified on every step (index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First, condition function is ran. If it returned true, Observable\n * emits currently stored value (initial value at the first iteration) and then updates\n * that value with iterate function. If at some point condition returned false, Observable\n * completes at that moment.\n *\n * Optionally you can pass fourth parameter to `generate` - a result selector function which allows you\n * to immediately map value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * single object to the operator instead. That object has properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, so output Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is resultSelector\n * function or not). In case of single-parameter call, you can provide it as a\n * `scheduler` property on object passed to the operator. In both cases scheduler decides when\n * next iteration of the loop will happen and therefore when next value will be emitted\n * by the Observable. For example to ensure that each value is pushed to the observer\n * on separate task in event loop, you could use `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * @example <caption>Use with condition and iterate functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with condition, iterate and resultSelector functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with options object.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n * @example <caption>Use options object without condition function.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!') // This will never run.\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n *\n *\n * @see {@link from}\n * @see {@link index/Observable.create}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n */\nexport function generate<S>(initialState: S,\n                            condition: ConditionFunc<S>,\n                            iterate: IterateFunc<S>,\n                            scheduler?: SchedulerLike): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n *   resultSelector: x => x,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                               condition?: ConditionFunc<S>,\n                               iterate?: IterateFunc<S>,\n                               resultSelectorOrObservable?: (ResultFunc<S, T>) | SchedulerLike,\n                               scheduler?: SchedulerLike): Observable<T> {\n\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  if (arguments.length == 1) {\n    const options = initialStateOrOptions as GenerateOptions<T, S>;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity as ResultFunc<S, T>;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions as S;\n    resultSelector = identity as ResultFunc<S, T>;\n    scheduler = resultSelectorOrObservable as SchedulerLike;\n  } else {\n    initialState = initialStateOrOptions as S;\n    resultSelector = resultSelectorOrObservable as ResultFunc<S, T>;\n  }\n\n  return new Observable<T>(subscriber => {\n    let state = initialState;\n    if (scheduler) {\n      return scheduler.schedule<SchedulerState<T, S>>(dispatch, 0, {\n        subscriber,\n        iterate,\n        condition,\n        resultSelector,\n        state\n      });\n    }\n\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch<T, S>(this: SchedulerAction<SchedulerState<T, S>>, state: SchedulerState<T, S>) {\n  const { subscriber, condition } = state;\n  if (subscriber.closed) {\n    return undefined;\n  }\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n  if (condition) {\n    let conditionResult: boolean;\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n  let value: T;\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n  if (subscriber.closed) {\n    return undefined;\n  }\n  subscriber.next(value);\n  if (subscriber.closed) {\n    return undefined;\n  }\n  return this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\nimport { SubscribableOrPromise } from '../types';\n\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `iif` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * than controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `iif` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * ## Examples\n * ### Change at runtime which Observable will be subscribed\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second'),\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n * ```\n *\n * ### Control an access to an Observable\n * ```ts\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'), // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"The end\"\n * ```\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n*/\nexport function iif<T = never, F = never>(\n  condition: () => boolean,\n  trueResult: SubscribableOrPromise<T> = EMPTY,\n  falseResult: SubscribableOrPromise<F> = EMPTY\n): Observable<T|F> {\n  return defer(() => condition() ? trueResult : falseResult);\n}\n","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isNumeric } from '../util/isNumeric';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = async): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, concurrent: number, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n\nexport function merge<T>(v1: ObservableInput<T>): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | number)[]): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | number)[]): Observable<R>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```ts\n * import { merge, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n * ### Emit the number 7, then never emit anything else (not even complete)\n * ```ts\n * import { NEVER } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * function info() {\n *   console.log('Will not be called');\n * }\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe(x => console.log(x), info, info);\n *\n * ```\n *\n * @see {@link Observable}\n * @see {@link index/EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Deprecated in favor of using {@link NEVER} constant.\n */\nexport function never () {\n  return NEVER;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNext<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link index/EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n * Subscribe to the next Observable after map fails</caption>\n * ```ts\n * import { onErrorResumeNext, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done'),\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<T, R>(...sources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  const [ first, ...remainder ] = sources;\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext(...first);\n  }\n\n  return new Observable(subscriber => {\n    const subNext = () => subscriber.add(\n      onErrorResumeNext(...remainder).subscribe(subscriber)\n    );\n\n    return from(first).subscribe({\n      next(value) { subscriber.next(value); },\n      error: subNext,\n      complete: subNext,\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * <img src=\"./img/pairs.png\" width=\"100%\">\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj)\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('the end!')\n * );\n *\n * // Logs:\n * // [\"foo\", 42],\n * // [\"bar\", 56],\n * // [\"baz\", 78],\n * // \"the end!\"\n * ```\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs<T>(obj: Object, scheduler?: SchedulerLike): Observable<[string, T]> {\n  if (!scheduler) {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(\n        scheduler.schedule<{ keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }>\n          (dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n      return subscription;\n    });\n  }\n}\n\n/** @internal */\nexport function dispatch<T>(this: SchedulerAction<any>,\n                            state: { keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }) {\n  const { keys, index, subscriber, subscription, obj } = state;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { filter } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","import { not } from '../util/not';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition a set of numbers into odds and evens observables\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, (value, index) => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [\n    filter(predicate, thisArg)(new Observable<T>(subscribeTo(source))),\n    filter(not(predicate, thisArg) as any)(new Observable<T>(subscribeTo(source)))\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic, ObservableInput } from '../types';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n// tslint:disable:max-line-length\nexport function race<A>(arg: [ObservableInput<A>]): Observable<A>;\nexport function race<A, B>(arg: [ObservableInput<A>, ObservableInput<B>]): Observable<A | B>;\nexport function race<A, B, C>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<A | B | C>;\nexport function race<A, B, C, D>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<A | B | C | D | E>;\nexport function race<T>(arg: ObservableInput<T>[]): Observable<T>;\nexport function race(arg: ObservableInput<any>[]): Observable<{}>;\n\nexport function race<A>(a: ObservableInput<A>): Observable<A>;\nexport function race<A, B>(a: ObservableInput<A>, b: ObservableInput<B>): Observable<A | B>;\nexport function race<A, B, C>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>): Observable<A | B | C>;\nexport function race<A, B, C, D>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>, e: ObservableInput<E>): Observable<A | B | C | D | E>;\n// tslint:enable:max-line-length\n\nexport function race<T>(observables: ObservableInput<T>[]): Observable<T>;\nexport function race(observables: ObservableInput<any>[]): Observable<{}>;\nexport function race<T>(...observables: ObservableInput<T>[]): Observable<T>;\nexport function race(...observables: ObservableInput<any>[]): Observable<{}>;\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n *\n * ## Example\n * ### Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { race, interval } from 'rxjs';\n * import { mapTo } from 'rxjs/operators';\n *\n * const obs1 = interval(1000).pipe(mapTo('fast one'));\n * const obs2 = interval(3000).pipe(mapTo('medium one'));\n * const obs3 = interval(5000).pipe(mapTo('slow one'));\n *\n * race(obs3, obs1, obs2)\n * .subscribe(\n *   winner => console.log(winner)\n * );\n *\n * // result:\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(...observables: ObservableInput<any>[]): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = observables[0] as Observable<any>[];\n    } else {\n      return observables[0] as Observable<T>;\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        let observable = observables[i];\n        let subscription = subscribeToResult(this, observable, observable as any, i);\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null;\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: T,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, T>): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null;\n    }\n\n    this.destination.next(innerValue);\n  }\n}\n","import { SchedulerAction, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n * Emits the numbers 1 to 10</caption>\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 10);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link timer}\n * @see {@link index/interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start: number = 0,\n                      count?: number,\n                      scheduler?: SchedulerLike): Observable<number> {\n  return new Observable<number>(subscriber => {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n\n    let index = 0;\n    let current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(current++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\n\n/** @internal */\nexport function dispatch(this: SchedulerAction<any>, state: any) {\n  const { start, index, count, subscriber } = state;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n\n  this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `dueTime` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `dueTime`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time specified as a Date object or as an integer denoting\n * milliseconds to wait before emitting the first value of 0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `dueTime` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput } from '../types';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T>(resourceFactory: () => Unsubscribable | void,\n                         observableFactory: (resource: Unsubscribable | void) => ObservableInput<T> | void): Observable<T> {\n  return new Observable<T>(subscriber => {\n    let resource: Unsubscribable | void;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    let result: ObservableInput<T> | void;\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    const source = result ? from(result) : EMPTY;\n    const subscription = source.subscribe(subscriber);\n    return () => {\n      subscription.unsubscribe();\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { ObservableInput, PartialObserver, ObservedValueOf } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R): Observable<R>;\n\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\nexport function zip<O extends ObservableInput<any>>(array: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<R>(array: ObservableInput<any>[]): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<R>(array: ObservableInput<any>[], resultSelector: (...values: any[]) => R): Observable<R>;\n\nexport function zip<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>): Observable<R>;\nexport function zip<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n * Combine age and name from different sources\n * ```ts\n * import { zip, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * let age$ = of<number>(27, 25, 29);\n * let name$ = of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = of<boolean>(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev })),\n * )\n * .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip<O extends ObservableInput<any>, R>(\n  ...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>\n): Observable<ObservedValueOf<O>[]|R> {\n  const resultSelector = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  resultSelector: (...values: Array<any>) => R;\n\n  constructor(resultSelector?: (...values: Array<any>) => R) {\n    this.resultSelector = resultSelector;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private values: any;\n  private resultSelector: (...values: Array<any>) => R;\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              resultSelector?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n    this.values = values;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    this.unsubscribe();\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        const destination = this.destination as Subscription;\n        destination.add(iterator.subscribe(iterator, i));\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  }\n\n  protected _tryresultSelector(args: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted() {\n    const nextResult = this.nextResult;\n    return nextResult && nextResult.done;\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends OuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift(), done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  notifyNext(outerValue: T, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe(value: any, index: number) {\n    return subscribeToResult<any, any>(this, this.observable, this, index);\n  }\n}\n","/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification, NotificationKind } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config } from './internal/config';\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { ILogger } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\n\r\n/** Defines the type of a Hub Message. */\r\nexport enum MessageType {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    Invocation = 1,\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    StreamItem = 2,\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    Completion = 3,\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    StreamInvocation = 4,\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    CancelInvocation = 5,\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    Ping = 6,\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    Close = 7,\r\n}\r\n\r\n/** Defines a dictionary of string keys and string values representing headers attached to a Hub message. */\r\nexport interface MessageHeaders {\r\n    /** Gets or sets the header with the specified key. */\r\n    [key: string]: string;\r\n}\r\n\r\n/** Union type of all known Hub messages. */\r\nexport type HubMessage =\r\n    InvocationMessage |\r\n    StreamInvocationMessage |\r\n    StreamItemMessage |\r\n    CompletionMessage |\r\n    CancelInvocationMessage |\r\n    PingMessage |\r\n    CloseMessage;\r\n\r\n/** Defines properties common to all Hub messages. */\r\nexport interface HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageType} value indicating the type of this message. */\r\n    readonly type: MessageType;\r\n}\r\n\r\n/** Defines properties common to all Hub messages relating to a specific invocation. */\r\nexport interface HubInvocationMessage extends HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageHeaders} dictionary containing headers attached to the message. */\r\n    readonly headers?: MessageHeaders;\r\n    /** The ID of the invocation relating to this message.\r\n     *\r\n     * This is expected to be present for {@link @microsoft/signalr.StreamInvocationMessage} and {@link @microsoft/signalr.CompletionMessage}. It may\r\n     * be 'undefined' for an {@link @microsoft/signalr.InvocationMessage} if the sender does not expect a response.\r\n     */\r\n    readonly invocationId?: string;\r\n}\r\n\r\n/** A hub message representing a non-streaming invocation. */\r\nexport interface InvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Invocation;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds: string[];\r\n}\r\n\r\n/** A hub message representing a streaming invocation. */\r\nexport interface StreamInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamInvocation;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds: string[];\r\n}\r\n\r\n/** A hub message representing a single item produced as part of a result stream. */\r\nexport interface StreamItemMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamItem;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n\r\n    /** The item produced by the server. */\r\n    readonly item?: any;\r\n}\r\n\r\n/** A hub message representing the result of an invocation. */\r\nexport interface CompletionMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Completion;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The error produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly error?: string;\r\n    /** The result produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly result?: any;\r\n}\r\n\r\n/** A hub message indicating that the sender is still active. */\r\nexport interface PingMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Ping;\r\n}\r\n\r\n/** A hub message indicating that the sender is closing the connection.\r\n *\r\n * If {@link @microsoft/signalr.CloseMessage.error} is defined, the sender is closing the connection due to an error.\r\n */\r\nexport interface CloseMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Close;\r\n    /** The error that triggered the close, if any.\r\n     *\r\n     * If this property is undefined, the connection was closed normally and without error.\r\n     */\r\n    readonly error?: string;\r\n\r\n    /** If true, clients with automatic reconnects enabled should attempt to reconnect after receiving the CloseMessage. Otherwise, they should not. */\r\n    readonly allowReconnect?: boolean;\r\n}\r\n\r\n/** A hub message sent to request that a streaming invocation be canceled. */\r\nexport interface CancelInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.CancelInvocation;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n}\r\n\r\n/** A protocol abstraction for communicating with SignalR Hubs.  */\r\nexport interface IHubProtocol {\r\n    /** The name of the protocol. This is used by SignalR to resolve the protocol between the client and server. */\r\n    readonly name: string;\r\n    /** The version of the protocol. */\r\n    readonly version: number;\r\n    /** The {@link @microsoft/signalr.TransferFormat} of the protocol. */\r\n    readonly transferFormat: TransferFormat;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the `input` parameter must be a string, otherwise it must be an ArrayBuffer.\r\n     *\r\n     * @param {string | ArrayBuffer | Buffer} input A string, ArrayBuffer, or Buffer containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input: string | ArrayBuffer | Buffer, logger: ILogger): HubMessage[];\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string or ArrayBuffer and returns it.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the result of this method will be a string, otherwise it will be an ArrayBuffer.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string | ArrayBuffer} A string or ArrayBuffer containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message: HubMessage): string | ArrayBuffer;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\nexport class XhrHttpClient extends HttpClient {\r\n    private readonly logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this.logger = logger;\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n\r\n            xhr.open(request.method!, request.url!, true);\r\n            xhr.withCredentials = true;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                        xhr.setRequestHeader(header, headers[header]);\r\n                    });\r\n            }\r\n\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                } else {\r\n                    reject(new HttpError(xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n\r\n            xhr.onerror = () => {\r\n                this.logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n\r\n            xhr.ontimeout = () => {\r\n                this.logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n\r\n            xhr.send(request.content || \"\");\r\n        });\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger } from \"./ILogger\";\r\nimport { NodeHttpClient } from \"./NodeHttpClient\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    private readonly httpClient: HttpClient;\r\n\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n\r\n        if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this.httpClient = new XhrHttpClient(logger);\r\n        } else {\r\n            this.httpClient = new NodeHttpClient(logger);\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return this.httpClient.send(request);\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this.httpClient.getCookieString(url);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HandshakeProtocol, HandshakeRequestMessage, HandshakeResponseMessage } from \"./HandshakeProtocol\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { CancelInvocationMessage, CompletionMessage, IHubProtocol, InvocationMessage, MessageType, StreamInvocationMessage, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { IStreamResult } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg } from \"./Utils\";\r\n\r\nconst DEFAULT_TIMEOUT_IN_MS: number = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS: number = 15 * 1000;\r\n\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport enum HubConnectionState {\r\n    /** The hub connection is disconnected. */\r\n    Disconnected = \"Disconnected\",\r\n    /** The hub connection is connecting. */\r\n    Connecting = \"Connecting\",\r\n    /** The hub connection is connected. */\r\n    Connected = \"Connected\",\r\n    /** The hub connection is disconnecting. */\r\n    Disconnecting = \"Disconnecting\",\r\n    /** The hub connection is reconnecting. */\r\n    Reconnecting = \"Reconnecting\",\r\n}\r\n\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    private readonly cachedPingMessage: string | ArrayBuffer;\r\n    private readonly connection: IConnection;\r\n    private readonly logger: ILogger;\r\n    private readonly reconnectPolicy?: IRetryPolicy;\r\n    private protocol: IHubProtocol;\r\n    private handshakeProtocol: HandshakeProtocol;\r\n    private callbacks: { [invocationId: string]: (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => void };\r\n    private methods: { [name: string]: Array<(...args: any[]) => void> };\r\n    private invocationId: number;\r\n\r\n    private closedCallbacks: Array<(error?: Error) => void>;\r\n    private reconnectingCallbacks: Array<(error?: Error) => void>;\r\n    private reconnectedCallbacks: Array<(connectionId?: string) => void>;\r\n\r\n    private receivedHandshakeResponse: boolean;\r\n    private handshakeResolver!: (value?: PromiseLike<{}>) => void;\r\n    private handshakeRejecter!: (reason?: any) => void;\r\n    private stopDuringStartError?: Error;\r\n\r\n    private connectionState: HubConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private connectionStarted: boolean;\r\n    private startPromise?: Promise<void>;\r\n    private stopPromise?: Promise<void>;\r\n\r\n    // The type of these a) doesn't matter and b) varies when building in browser and node contexts\r\n    // Since we're building the WebPack bundle directly from the TypeScript, this matters (previously\r\n    // we built the bundle from the compiled JavaScript).\r\n    private reconnectDelayHandle?: any;\r\n    private timeoutHandle?: any;\r\n    private pingServerHandle?: any;\r\n\r\n    /** The server timeout in milliseconds.\r\n     *\r\n     * If this timeout elapses without receiving any messages from the server, the connection will be terminated with an error.\r\n     * The default timeout value is 30,000 milliseconds (30 seconds).\r\n     */\r\n    public serverTimeoutInMilliseconds: number;\r\n\r\n    /** Default interval at which to ping the server.\r\n     *\r\n     * The default value is 15,000 milliseconds (15 seconds).\r\n     * Allows the server to detect hard disconnects (like when a client unplugs their computer).\r\n     */\r\n    public keepAliveIntervalInMilliseconds: number;\r\n\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    public static create(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy): HubConnection {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy);\r\n    }\r\n\r\n    private constructor(connection: IConnection, logger: ILogger, protocol: IHubProtocol, reconnectPolicy?: IRetryPolicy) {\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.serverTimeoutInMilliseconds = DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = DEFAULT_PING_INTERVAL_IN_MS;\r\n\r\n        this.logger = logger;\r\n        this.protocol = protocol;\r\n        this.connection = connection;\r\n        this.reconnectPolicy = reconnectPolicy;\r\n        this.handshakeProtocol = new HandshakeProtocol();\r\n\r\n        this.connection.onreceive = (data: any) => this.processIncomingData(data);\r\n        this.connection.onclose = (error?: Error) => this.connectionClosed(error);\r\n\r\n        this.callbacks = {};\r\n        this.methods = {};\r\n        this.closedCallbacks = [];\r\n        this.reconnectingCallbacks = [];\r\n        this.reconnectedCallbacks = [];\r\n        this.invocationId = 0;\r\n        this.receivedHandshakeResponse = false;\r\n        this.connectionState = HubConnectionState.Disconnected;\r\n        this.connectionStarted = false;\r\n\r\n        this.cachedPingMessage = this.protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state(): HubConnectionState {\r\n        return this.connectionState;\r\n    }\r\n\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId(): string | null {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl(): string {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url: string) {\r\n        if (this.connectionState !== HubConnectionState.Disconnected && this.connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n\r\n        this.connection.baseUrl = url;\r\n    }\r\n\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    public start(): Promise<void> {\r\n        this.startPromise = this.startWithStateTransitions();\r\n        return this.startPromise;\r\n    }\r\n\r\n    private async startWithStateTransitions(): Promise<void> {\r\n        if (this.connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Connecting;\r\n        this.logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n\r\n        try {\r\n            await this.startInternal();\r\n\r\n            this.connectionState = HubConnectionState.Connected;\r\n            this.connectionStarted = true;\r\n            this.logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        } catch (e) {\r\n            this.connectionState = HubConnectionState.Disconnected;\r\n            this.logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async startInternal() {\r\n        this.stopDuringStartError = undefined;\r\n        this.receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this.handshakeResolver = resolve;\r\n            this.handshakeRejecter = reject;\r\n        });\r\n\r\n        await this.connection.start(this.protocol.transferFormat);\r\n\r\n        try {\r\n            const handshakeRequest: HandshakeRequestMessage = {\r\n                protocol: this.protocol.name,\r\n                version: this.protocol.version,\r\n            };\r\n\r\n            this.logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n\r\n            await this.sendMessage(this.handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n\r\n            this.logger.log(LogLevel.Information, `Using HubProtocol '${this.protocol.name}'.`);\r\n\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this.cleanupTimeout();\r\n            this.resetTimeoutPeriod();\r\n            this.resetKeepAliveInterval();\r\n\r\n            await handshakePromise;\r\n\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this.stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                throw this.stopDuringStartError;\r\n            }\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n\r\n            this.cleanupTimeout();\r\n            this.cleanupPingTimer();\r\n\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    public async stop(): Promise<void> {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this.startPromise;\r\n\r\n        this.stopPromise = this.stopInternal();\r\n        await this.stopPromise;\r\n\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n\r\n    private stopInternal(error?: Error): Promise<void> {\r\n        if (this.connectionState === HubConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this.stopPromise!;\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Disconnecting;\r\n\r\n        this.logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n\r\n        if (this.reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this.logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n\r\n            clearTimeout(this.reconnectDelayHandle);\r\n            this.reconnectDelayHandle = undefined;\r\n\r\n            this.completeClose();\r\n            return Promise.resolve();\r\n        }\r\n\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n        this.stopDuringStartError = error || new Error(\"The connection was stopped before the hub handshake could complete.\");\r\n\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    public stream<T = any>(methodName: string, ...args: any[]): IStreamResult<T> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const invocationDescriptor = this.createStreamInvocation(methodName, args, streamIds);\r\n\r\n        let promiseQueue: Promise<void>;\r\n        const subject = new Subject<T>();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation: CancelInvocationMessage = this.createCancelInvocation(invocationDescriptor.invocationId);\r\n\r\n            delete this.callbacks[invocationDescriptor.invocationId];\r\n\r\n            return promiseQueue.then(() => {\r\n                return this.sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n\r\n        this.callbacks[invocationDescriptor.invocationId] = (invocationEvent: CompletionMessage | StreamItemMessage | null, error?: Error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            } else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    } else {\r\n                        subject.complete();\r\n                    }\r\n                } else {\r\n                    subject.next((invocationEvent.item) as T);\r\n                }\r\n            }\r\n        };\r\n\r\n        promiseQueue = this.sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n                subject.error(e);\r\n                delete this.callbacks[invocationDescriptor.invocationId];\r\n            });\r\n\r\n        this.launchStreams(streams, promiseQueue);\r\n\r\n        return subject;\r\n    }\r\n\r\n    private sendMessage(message: any) {\r\n        this.resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    private sendWithProtocol(message: any) {\r\n        return this.sendMessage(this.protocol.writeMessage(message));\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    public send(methodName: string, ...args: any[]): Promise<void> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const sendPromise = this.sendWithProtocol(this.createInvocation(methodName, args, true, streamIds));\r\n\r\n        this.launchStreams(streams, sendPromise);\r\n\r\n        return sendPromise;\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    public invoke<T = any>(methodName: string, ...args: any[]): Promise<T> {\r\n        const [streams, streamIds] = this.replaceStreamingParams(args);\r\n        const invocationDescriptor = this.createInvocation(methodName, args, false, streamIds);\r\n\r\n        const p = new Promise<any>((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this.callbacks[invocationDescriptor.invocationId!] = (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                } else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        } else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    } else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n\r\n            const promiseQueue = this.sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                    reject(e);\r\n                    // invocationId will always have a value for a non-blocking invocation\r\n                    delete this.callbacks[invocationDescriptor.invocationId!];\r\n                });\r\n\r\n            this.launchStreams(streams, promiseQueue);\r\n        });\r\n\r\n        return p;\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    public on(methodName: string, newMethod: (...args: any[]) => void) {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        if (!this.methods[methodName]) {\r\n            this.methods[methodName] = [];\r\n        }\r\n\r\n        // Preventing adding the same handler multiple times.\r\n        if (this.methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n\r\n        this.methods[methodName].push(newMethod);\r\n    }\r\n\r\n    /** Removes all handlers for the specified hub method.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     */\r\n    public off(methodName: string): void;\r\n\r\n    /** Removes the specified handler for the specified hub method.\r\n     *\r\n     * You must pass the exact same Function instance as was previously passed to {@link @microsoft/signalr.HubConnection.on}. Passing a different instance (even if the function\r\n     * body is the same) will not remove the handler.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     * @param {Function} method The handler to remove. This must be the same Function instance as the one passed to {@link @microsoft/signalr.HubConnection.on}.\r\n     */\r\n    public off(methodName: string, method: (...args: any[]) => void): void;\r\n    public off(methodName: string, method?: (...args: any[]) => void): void {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this.methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this.methods[methodName];\r\n                }\r\n            }\r\n        } else {\r\n            delete this.methods[methodName];\r\n        }\r\n\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    public onclose(callback: (error?: Error) => void) {\r\n        if (callback) {\r\n            this.closedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    public onreconnecting(callback: (error?: Error) => void) {\r\n        if (callback) {\r\n            this.reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    public onreconnected(callback: (connectionId?: string) => void) {\r\n        if (callback) {\r\n            this.reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    private processIncomingData(data: any) {\r\n        this.cleanupTimeout();\r\n\r\n        if (!this.receivedHandshakeResponse) {\r\n            data = this.processHandshakeResponse(data);\r\n            this.receivedHandshakeResponse = true;\r\n        }\r\n\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this.protocol.parseMessages(data, this.logger);\r\n\r\n            for (const message of messages) {\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this.invokeClientMethod(message);\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion:\r\n                        const callback = this.callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this.callbacks[message.invocationId];\r\n                            }\r\n                            callback(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close:\r\n                        this.logger.log(LogLevel.Information, \"Close message received from server.\");\r\n\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n\r\n                            // tslint:disable-next-line:no-floating-promises\r\n                            this.connection.stop(error);\r\n                        } else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this.stopPromise = this.stopInternal(error);\r\n                        }\r\n\r\n                        break;\r\n                    default:\r\n                        this.logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.resetTimeoutPeriod();\r\n    }\r\n\r\n    private processHandshakeResponse(data: any): any {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let remainingData: any;\r\n\r\n        try {\r\n            [remainingData, responseMessage] = this.handshakeProtocol.parseHandshakeResponse(data);\r\n        } catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this.handshakeRejecter(error);\r\n            throw error;\r\n        } else {\r\n            this.logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n\r\n        this.handshakeResolver();\r\n        return remainingData;\r\n    }\r\n\r\n    private resetKeepAliveInterval() {\r\n        this.cleanupPingTimer();\r\n        this.pingServerHandle = setTimeout(async () => {\r\n            if (this.connectionState === HubConnectionState.Connected) {\r\n                try {\r\n                    await this.sendMessage(this.cachedPingMessage);\r\n                } catch {\r\n                    // We don't care about the error. It should be seen elsewhere in the client.\r\n                    // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                    this.cleanupPingTimer();\r\n                }\r\n            }\r\n        }, this.keepAliveIntervalInMilliseconds);\r\n    }\r\n\r\n    private resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this.timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n        }\r\n    }\r\n\r\n    private serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // tslint:disable-next-line:no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n\r\n    private invokeClientMethod(invocationMessage: InvocationMessage) {\r\n        const methods = this.methods[invocationMessage.target.toLowerCase()];\r\n        if (methods) {\r\n            try {\r\n                methods.forEach((m) => m.apply(this, invocationMessage.arguments));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `A callback for the method ${invocationMessage.target.toLowerCase()} threw error '${e}'.`);\r\n            }\r\n\r\n            if (invocationMessage.invocationId) {\r\n                // This is not supported in v1. So we return an error to avoid blocking the server waiting for the response.\r\n                const message = \"Server requested a response, which is not supported in this version of the client.\";\r\n                this.logger.log(LogLevel.Error, message);\r\n\r\n                // We don't want to wait on the stop itself.\r\n                this.stopPromise = this.stopInternal(new Error(message));\r\n            }\r\n        } else {\r\n            this.logger.log(LogLevel.Warning, `No client method with the name '${invocationMessage.target}' found.`);\r\n        }\r\n    }\r\n\r\n    private connectionClosed(error?: Error) {\r\n        this.logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this.connectionState}.`);\r\n\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this.stopDuringStartError = this.stopDuringStartError || error || new Error(\"The underlying connection was closed before the hub handshake could complete.\");\r\n\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this.handshakeResolver) {\r\n            this.handshakeResolver();\r\n        }\r\n\r\n        this.cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n\r\n        this.cleanupTimeout();\r\n        this.cleanupPingTimer();\r\n\r\n        if (this.connectionState === HubConnectionState.Disconnecting) {\r\n            this.completeClose(error);\r\n        } else if (this.connectionState === HubConnectionState.Connected && this.reconnectPolicy) {\r\n            // tslint:disable-next-line:no-floating-promises\r\n            this.reconnect(error);\r\n        } else if (this.connectionState === HubConnectionState.Connected) {\r\n            this.completeClose(error);\r\n        }\r\n\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n\r\n    private completeClose(error?: Error) {\r\n        if (this.connectionStarted) {\r\n            this.connectionState = HubConnectionState.Disconnected;\r\n            this.connectionStarted = false;\r\n\r\n            try {\r\n                this.closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private async reconnect(error?: Error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n\r\n        let nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n\r\n        if (nextRetryDelay === null) {\r\n            this.logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this.completeClose(error);\r\n            return;\r\n        }\r\n\r\n        this.connectionState = HubConnectionState.Reconnecting;\r\n\r\n        if (error) {\r\n            this.logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        } else {\r\n            this.logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n\r\n        if (this.onreconnecting) {\r\n            try {\r\n                this.reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        while (nextRetryDelay !== null) {\r\n            this.logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n\r\n            await new Promise((resolve) => {\r\n                this.reconnectDelayHandle = setTimeout(resolve, nextRetryDelay!);\r\n            });\r\n            this.reconnectDelayHandle = undefined;\r\n\r\n            if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n\r\n            try {\r\n                await this.startInternal();\r\n\r\n                this.connectionState = HubConnectionState.Connected;\r\n                this.logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n\r\n                if (this.onreconnected) {\r\n                    try {\r\n                        this.reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    } catch (e) {\r\n                        this.logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n\r\n                return;\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n\r\n                if (this.connectionState !== HubConnectionState.Reconnecting) {\r\n                    this.logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect attempt. Done reconnecting.\");\r\n                    return;\r\n                }\r\n\r\n                retryError = e instanceof Error ? e : new Error(e.toString());\r\n                nextRetryDelay = this.getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n\r\n        this.logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n\r\n        this.completeClose();\r\n    }\r\n\r\n    private getNextRetryDelay(previousRetryCount: number, elapsedMilliseconds: number, retryReason: Error) {\r\n        try {\r\n            return this.reconnectPolicy!.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private cancelCallbacksWithError(error: Error) {\r\n        const callbacks = this.callbacks;\r\n        this.callbacks = {};\r\n\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n                const callback = callbacks[key];\r\n                callback(null, error);\r\n            });\r\n    }\r\n\r\n    private cleanupPingTimer(): void {\r\n        if (this.pingServerHandle) {\r\n            clearTimeout(this.pingServerHandle);\r\n        }\r\n    }\r\n\r\n    private cleanupTimeout(): void {\r\n        if (this.timeoutHandle) {\r\n            clearTimeout(this.timeoutHandle);\r\n        }\r\n    }\r\n\r\n    private createInvocation(methodName: string, args: any[], nonblocking: boolean, streamIds: string[]): InvocationMessage {\r\n        if (nonblocking) {\r\n            return {\r\n                arguments: args,\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        } else {\r\n            const invocationId = this.invocationId;\r\n            this.invocationId++;\r\n\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.Invocation,\r\n            };\r\n        }\r\n    }\r\n\r\n    private launchStreams(streams: Array<IStreamResult<any>>, promiseQueue: Promise<void>): void {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // tslint:disable-next-line:forin\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message: string;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    } else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    } else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this.sendWithProtocol(this.createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    private replaceStreamingParams(args: any[]): [Array<IStreamResult<any>>, string[]] {\r\n        const streams: Array<IStreamResult<any>> = [];\r\n        const streamIds: string[] = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this.isObservable(argument)) {\r\n                const streamId = this.invocationId;\r\n                this.invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        return [streams, streamIds];\r\n    }\r\n\r\n    private isObservable(arg: any): arg is IStreamResult<any> {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n\r\n    private createStreamInvocation(methodName: string, args: any[], streamIds: string[]): StreamInvocationMessage {\r\n        const invocationId = this.invocationId;\r\n        this.invocationId++;\r\n\r\n        return {\r\n            arguments: args,\r\n            invocationId: invocationId.toString(),\r\n            streamIds,\r\n            target: methodName,\r\n            type: MessageType.StreamInvocation,\r\n        };\r\n    }\r\n\r\n    private createCancelInvocation(id: string): CancelInvocationMessage {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n\r\n    private createStreamItemMessage(id: string, item: any): StreamItemMessage {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n\r\n    private createCompletionMessage(id: string, error?: any, result?: any): CompletionMessage {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { IStreamResult, IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { SubjectSubscription } from \"./Utils\";\r\n\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject<T> implements IStreamResult<T> {\r\n    /** @internal */\r\n    public observers: Array<IStreamSubscriber<T>>;\r\n\r\n    /** @internal */\r\n    public cancelCallback?: () => Promise<void>;\r\n\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n\r\n    public next(item: T): void {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n\r\n    public error(err: any): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n\r\n    public subscribe(observer: IStreamSubscriber<T>): ISubscription<T> {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport enum HttpTransportType {\r\n    /** Specifies no transport preference. */\r\n    None = 0,\r\n    /** Specifies the WebSockets transport. */\r\n    WebSockets = 1,\r\n    /** Specifies the Server-Sent Events transport. */\r\n    ServerSentEvents = 2,\r\n    /** Specifies the Long Polling transport. */\r\n    LongPolling = 4,\r\n}\r\n\r\n/** Specifies the transfer format for a connection. */\r\nexport enum TransferFormat {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    Text = 1,\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    Binary = 2,\r\n}\r\n\r\n/** An abstraction over the behavior of transports. This is designed to support the framework and not intended for use by applications. */\r\nexport interface ITransport {\r\n    connect(url: string, transferFormat: TransferFormat): Promise<void>;\r\n    send(data: any): Promise<void>;\r\n    stop(): Promise<void>;\r\n    onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    onclose: ((error?: Error) => void) | null;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\n\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n\r\n/** @private */\r\nexport class DefaultReconnectPolicy implements IRetryPolicy {\r\n    private readonly retryDelays: Array<number | null>;\r\n\r\n    constructor(retryDelays?: number[]) {\r\n        this.retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n\r\n    public nextRetryDelayInMilliseconds(retryContext: RetryContext): number | null {\r\n        return this.retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController implements AbortSignal {\r\n    private isAborted: boolean = false;\r\n    public onabort: (() => void) | null = null;\r\n\r\n    public abort() {\r\n        if (!this.isAborted) {\r\n            this.isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n\r\n    get signal(): AbortSignal {\r\n        return this;\r\n    }\r\n\r\n    get aborted(): boolean {\r\n        return this.isAborted;\r\n    }\r\n}\r\n\r\n/** Represents a signal that can be monitored to determine if a request has been aborted. */\r\nexport interface AbortSignal {\r\n    /** Indicates if the request has been aborted. */\r\n    aborted: boolean;\r\n    /** Set this to a handler that will be invoked when the request is aborted. */\r\n    onabort: (() => void) | null;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, sendMessage } from \"./Utils\";\r\n\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport implements ITransport {\r\n    private readonly httpClient: HttpClient;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logger: ILogger;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly pollAbort: AbortController;\r\n\r\n    private url?: string;\r\n    private running: boolean;\r\n    private receiving?: Promise<void>;\r\n    private closeError?: Error;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    public get pollAborted() {\r\n        return this.pollAbort.aborted;\r\n    }\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger, logMessageContent: boolean) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.pollAbort = new AbortController();\r\n        this.logMessageContent = logMessageContent;\r\n\r\n        this.running = false;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.url = url;\r\n\r\n        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n\r\n        const pollOptions: HttpRequest = {\r\n            abortSignal: this.pollAbort.signal,\r\n            headers: {},\r\n            timeout: 100000,\r\n        };\r\n\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n\r\n        const token = await this.getAccessToken();\r\n        this.updateHeaderToken(pollOptions, token);\r\n\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this.logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this.httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this.logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this.running = false;\r\n        } else {\r\n            this.running = true;\r\n        }\r\n\r\n        this.receiving = this.poll(this.url, pollOptions);\r\n    }\r\n\r\n    private async getAccessToken(): Promise<string | null> {\r\n        if (this.accessTokenFactory) {\r\n            return await this.accessTokenFactory();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private updateHeaderToken(request: HttpRequest, token: string | null) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (token) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            request.headers[\"Authorization\"] = `Bearer ${token}`;\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-string-literal\r\n        if (request.headers[\"Authorization\"]) {\r\n            // tslint:disable-next-line:no-string-literal\r\n            delete request.headers[\"Authorization\"];\r\n        }\r\n    }\r\n\r\n    private async poll(url: string, pollOptions: HttpRequest): Promise<void> {\r\n        try {\r\n            while (this.running) {\r\n                // We have to get the access token on each poll, in case it changes\r\n                const token = await this.getAccessToken();\r\n                this.updateHeaderToken(pollOptions, token);\r\n\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this.logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this.httpClient.get(pollUrl, pollOptions);\r\n\r\n                    if (response.statusCode === 204) {\r\n                        this.logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n\r\n                        this.running = false;\r\n                    } else if (response.statusCode !== 200) {\r\n                        this.logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n                        // Unexpected status code\r\n                        this.closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this.running = false;\r\n                    } else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this.logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this.logMessageContent)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        } else {\r\n                            // This is another way timeout manifest.\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    if (!this.running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this.logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${e.message}`);\r\n                    } else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        } else {\r\n                            // Close the connection with the error as the result.\r\n                            this.closeError = e;\r\n                            this.running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } finally {\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this.raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this.running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this.logger, \"LongPolling\", this.httpClient, this.url!, this.accessTokenFactory, data, this.logMessageContent);\r\n    }\r\n\r\n    public async stop(): Promise<void> {\r\n        this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this.running = false;\r\n        this.pollAbort.abort();\r\n\r\n        try {\r\n            await this.receiving;\r\n\r\n            // Send DELETE to clean up long polling on the server\r\n            this.logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this.url}.`);\r\n\r\n            const deleteOptions: HttpRequest = {\r\n                headers: {},\r\n            };\r\n            const token = await this.getAccessToken();\r\n            this.updateHeaderToken(deleteOptions, token);\r\n            await this.httpClient.delete(this.url!, deleteOptions);\r\n\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request sent.\");\r\n        } finally {\r\n            this.logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this.raiseOnClose();\r\n        }\r\n    }\r\n\r\n    private raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this.closeError) {\r\n                logMessage += \" Error: \" + this.closeError;\r\n            }\r\n            this.logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this.closeError);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { EventSourceConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, Platform, sendMessage } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class ServerSentEventsTransport implements ITransport {\r\n    private readonly httpClient: HttpClient;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logger: ILogger;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly eventSourceConstructor: EventSourceConstructor;\r\n    private eventSource?: EventSource;\r\n    private url?: string;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, eventSourceConstructor: EventSourceConstructor) {\r\n        this.httpClient = httpClient;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logger = logger;\r\n        this.logMessageContent = logMessageContent;\r\n        this.eventSourceConstructor = eventSourceConstructor;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n\r\n        // set url before accessTokenFactory because this.url is only for send and we set the auth header instead of the query string for send\r\n        this.url = url;\r\n\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n\r\n            let eventSource: EventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this.eventSourceConstructor(url, { withCredentials: true });\r\n            } else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this.httpClient.getCookieString(url);\r\n                eventSource = new this.eventSourceConstructor(url, { withCredentials: true, headers: { Cookie: cookies } } as EventSourceInit);\r\n            }\r\n\r\n            try {\r\n                eventSource.onmessage = (e: MessageEvent) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this.logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this.logMessageContent)}.`);\r\n                            this.onreceive(e.data);\r\n                        } catch (error) {\r\n                            this.close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                eventSource.onerror = (e: MessageEvent) => {\r\n                    const error = new Error(e.data || \"Error occurred\");\r\n                    if (opened) {\r\n                        this.close(error);\r\n                    } else {\r\n                        reject(error);\r\n                    }\r\n                };\r\n\r\n                eventSource.onopen = () => {\r\n                    this.logger.log(LogLevel.Information, `SSE connected to ${this.url}`);\r\n                    this.eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            } catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this.eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this.logger, \"SSE\", this.httpClient, this.url!, this.accessTokenFactory, data, this.logMessageContent);\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this.close();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private close(e?: Error) {\r\n        if (this.eventSource) {\r\n            this.eventSource.close();\r\n            this.eventSource = undefined;\r\n\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { WebSocketConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, Platform } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class WebSocketTransport implements ITransport {\r\n    private readonly logger: ILogger;\r\n    private readonly accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly logMessageContent: boolean;\r\n    private readonly webSocketConstructor: WebSocketConstructor;\r\n    private readonly httpClient: HttpClient;\r\n    private webSocket?: WebSocket;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, webSocketConstructor: WebSocketConstructor) {\r\n        this.logger = logger;\r\n        this.accessTokenFactory = accessTokenFactory;\r\n        this.logMessageContent = logMessageContent;\r\n        this.webSocketConstructor = webSocketConstructor;\r\n        this.httpClient = httpClient;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n            }\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket: WebSocket | undefined;\r\n            const cookies = this.httpClient.getCookieString(url);\r\n            let opened = false;\r\n\r\n            if (Platform.isNode && cookies) {\r\n                // Only pass cookies when in non-browser environments\r\n                webSocket = new this.webSocketConstructor(url, undefined, {\r\n                    headers: {\r\n                        Cookie: `${cookies}`,\r\n                    },\r\n                });\r\n            }\r\n\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this.webSocketConstructor(url);\r\n            }\r\n\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n\r\n            // tslint:disable-next-line:variable-name\r\n            webSocket.onopen = (_event: Event) => {\r\n                this.logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this.webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n\r\n            webSocket.onerror = (event: Event) => {\r\n                let error: any = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                } else {\r\n                    error = new Error(\"There was an error with the transport.\");\r\n                }\r\n\r\n                reject(error);\r\n            };\r\n\r\n            webSocket.onmessage = (message: MessageEvent) => {\r\n                this.logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this.logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    this.onreceive(message.data);\r\n                }\r\n            };\r\n\r\n            webSocket.onclose = (event: CloseEvent) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this.close(event);\r\n                } else {\r\n                    let error: any = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    } else {\r\n                        error = new Error(\"There was an error with the transport.\");\r\n                    }\r\n\r\n                    reject(error);\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    public send(data: any): Promise<void> {\r\n        if (this.webSocket && this.webSocket.readyState === this.webSocketConstructor.OPEN) {\r\n            this.logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this.logMessageContent)}.`);\r\n            this.webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        if (this.webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this.close(undefined);\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private close(event?: CloseEvent): void {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this.webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this.webSocket.onclose = () => {};\r\n            this.webSocket.onmessage = () => {};\r\n            this.webSocket.onerror = () => {};\r\n            this.webSocket.close();\r\n            this.webSocket = undefined;\r\n        }\r\n\r\n        this.logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n        if (this.onclose) {\r\n            if (event && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason}).`));\r\n            } else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, ITransport, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\n\r\n/** @private */\r\nconst enum ConnectionState {\r\n    Connecting = \"Connecting \",\r\n    Connected = \"Connected\",\r\n    Disconnected = \"Disconnected\",\r\n    Disconnecting = \"Disconnecting\",\r\n}\r\n\r\n/** @private */\r\nexport interface INegotiateResponse {\r\n    connectionId?: string;\r\n    connectionToken?: string;\r\n    negotiateVersion?: number;\r\n    availableTransports?: IAvailableTransport[];\r\n    url?: string;\r\n    accessToken?: string;\r\n    error?: string;\r\n}\r\n\r\n/** @private */\r\nexport interface IAvailableTransport {\r\n    transport: keyof typeof HttpTransportType;\r\n    transferFormats: Array<keyof typeof TransferFormat>;\r\n}\r\n\r\nconst MAX_REDIRECTS = 100;\r\n\r\nlet WebSocketModule: any = null;\r\nlet EventSourceModule: any = null;\r\nif (Platform.isNode && typeof require !== \"undefined\") {\r\n    // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n    // @ts-ignore: TS doesn't know about these names\r\n    const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n    WebSocketModule = requireFunc(\"ws\");\r\n    EventSourceModule = requireFunc(\"eventsource\");\r\n}\r\n\r\n/** @private */\r\nexport class HttpConnection implements IConnection {\r\n    private connectionState: ConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private connectionStarted: boolean;\r\n    private readonly httpClient: HttpClient;\r\n    private readonly logger: ILogger;\r\n    private readonly options: IHttpConnectionOptions;\r\n    private transport?: ITransport;\r\n    private startInternalPromise?: Promise<void>;\r\n    private stopPromise?: Promise<void>;\r\n    private stopPromiseResolver!: (value?: PromiseLike<void>) => void;\r\n    private stopError?: Error;\r\n    private accessTokenFactory?: () => string | Promise<string>;\r\n    private sendQueue?: TransportSendQueue;\r\n\r\n    public readonly features: any = {};\r\n    public baseUrl: string;\r\n    public connectionId?: string;\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((e?: Error) => void) | null;\r\n\r\n    private readonly negotiateVersion: number = 1;\r\n\r\n    constructor(url: string, options: IHttpConnectionOptions = {}) {\r\n        Arg.isRequired(url, \"url\");\r\n\r\n        this.logger = createLogger(options.logger);\r\n        this.baseUrl = this.resolveUrl(url);\r\n\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent || false;\r\n\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        } else if (Platform.isNode && !options.WebSocket) {\r\n            if (WebSocketModule) {\r\n                options.WebSocket = WebSocketModule;\r\n            }\r\n        }\r\n\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        } else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof EventSourceModule !== \"undefined\") {\r\n                options.EventSource = EventSourceModule;\r\n            }\r\n        }\r\n\r\n        this.httpClient = options.httpClient || new DefaultHttpClient(this.logger);\r\n        this.connectionState = ConnectionState.Disconnected;\r\n        this.connectionStarted = false;\r\n        this.options = options;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public start(): Promise<void>;\r\n    public start(transferFormat: TransferFormat): Promise<void>;\r\n    public async start(transferFormat?: TransferFormat): Promise<void> {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this.logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n\r\n        if (this.connectionState !== ConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this.connectionState = ConnectionState.Connecting;\r\n\r\n        this.startInternalPromise = this.startInternal(transferFormat);\r\n        await this.startInternalPromise;\r\n\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this.connectionState as any === ConnectionState.Disconnecting) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this.logger.log(LogLevel.Error, message);\r\n\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this.stopPromise;\r\n\r\n            return Promise.reject(new Error(message));\r\n        } else if (this.connectionState as any !== ConnectionState.Connected) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this.logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new Error(message));\r\n        }\r\n\r\n        this.connectionStarted = true;\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        if (this.connectionState !== ConnectionState.Connected) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n\r\n        if (!this.sendQueue) {\r\n            this.sendQueue = new TransportSendQueue(this.transport!);\r\n        }\r\n\r\n        // Transport will not be null if state is connected\r\n        return this.sendQueue.send(data);\r\n    }\r\n\r\n    public async stop(error?: Error): Promise<void> {\r\n        if (this.connectionState === ConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Disconnecting) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this.stopPromise;\r\n        }\r\n\r\n        this.connectionState = ConnectionState.Disconnecting;\r\n\r\n        this.stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this.stopPromiseResolver = resolve;\r\n        });\r\n\r\n        // stopInternal should never throw so just observe it.\r\n        await this.stopInternal(error);\r\n        await this.stopPromise;\r\n    }\r\n\r\n    private async stopInternal(error?: Error): Promise<void> {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this.stopError = error;\r\n\r\n        try {\r\n            await this.startInternalPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this.stopConnection();\r\n            }\r\n\r\n            this.transport = undefined;\r\n        } else {\r\n            this.logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n            this.stopConnection();\r\n        }\r\n    }\r\n\r\n    private async startInternal(transferFormat: TransferFormat): Promise<void> {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this.accessTokenFactory = this.options.accessTokenFactory;\r\n\r\n        try {\r\n            if (this.options.skipNegotiation) {\r\n                if (this.options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this.constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this.startTransport(url, transferFormat);\r\n                } else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            } else {\r\n                let negotiateResponse: INegotiateResponse | null = null;\r\n                let redirects = 0;\r\n\r\n                do {\r\n                    negotiateResponse = await this.getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this.connectionState === ConnectionState.Disconnecting || this.connectionState === ConnectionState.Disconnected) {\r\n                        throw new Error(\"The connection was stopped during negotiation.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n\r\n                    if ((negotiateResponse as any).ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this.accessTokenFactory = () => accessToken;\r\n                    }\r\n\r\n                    redirects++;\r\n                }\r\n                while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n\r\n                await this.createTransport(url, this.options.transport, negotiateResponse, transferFormat);\r\n            }\r\n\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n\r\n            if (this.connectionState === ConnectionState.Connecting) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this.logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this.connectionState = ConnectionState.Connected;\r\n            }\r\n\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this.connectionState = ConnectionState.Disconnected;\r\n            this.transport = undefined;\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async getNegotiationResponse(url: string): Promise<INegotiateResponse> {\r\n        let headers;\r\n        if (this.accessTokenFactory) {\r\n            const token = await this.accessTokenFactory();\r\n            if (token) {\r\n                headers = {\r\n                    [\"Authorization\"]: `Bearer ${token}`,\r\n                };\r\n            }\r\n        }\r\n\r\n        const negotiateUrl = this.resolveNegotiateUrl(url);\r\n        this.logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this.httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers,\r\n            });\r\n\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate ${response.statusCode}`));\r\n            }\r\n\r\n            const negotiateResponse = JSON.parse(response.content as string) as INegotiateResponse;\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n            return negotiateResponse;\r\n        } catch (e) {\r\n            this.logger.log(LogLevel.Error, \"Failed to complete negotiation with the server: \" + e);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private createConnectUrl(url: string, connectionToken: string | null | undefined) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n\r\n    private async createTransport(url: string, requestedTransport: HttpTransportType | ITransport | undefined, negotiateResponse: INegotiateResponse, requestedTransferFormat: TransferFormat): Promise<void> {\r\n        let connectUrl = this.createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this.isITransport(requestedTransport)) {\r\n            this.logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this.startTransport(connectUrl, requestedTransferFormat);\r\n\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n\r\n        const transportExceptions: any[] = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate: INegotiateResponse | undefined = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this.resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed: ${transportOrError}`);\r\n            } else if (this.isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this.getNegotiationResponse(url);\r\n                    } catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this.createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this.startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                } catch (ex) {\r\n                    this.logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(`${endpoint.transport} failed: ${ex}`);\r\n\r\n                    if (this.connectionState !== ConnectionState.Connecting) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this.logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new Error(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new Error(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n\r\n    private constructTransport(transport: HttpTransportType): ITransport {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this.options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.WebSocket);\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this.options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false, this.options.EventSource);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this.httpClient, this.accessTokenFactory, this.logger, this.options.logMessageContent || false);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n\r\n    private startTransport(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        this.transport!.onreceive = this.onreceive;\r\n        this.transport!.onclose = (e) => this.stopConnection(e);\r\n        return this.transport!.connect(url, transferFormat);\r\n    }\r\n\r\n    private resolveTransportOrError(endpoint: IAvailableTransport, requestedTransport: HttpTransportType | undefined, requestedTransferFormat: TransferFormat): ITransport | Error {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this.logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        } else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this.options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this.options.EventSource)) {\r\n                        this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new Error(`'${HttpTransportType[transport]}' is not supported in your environment.`);\r\n                    } else {\r\n                        this.logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            return this.constructTransport(transport);\r\n                        } catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            } else {\r\n                this.logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new Error(`'${HttpTransportType[transport]}' is disabled by the client.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private isITransport(transport: any): transport is ITransport {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n\r\n    private stopConnection(error?: Error): void {\r\n        this.logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this.connectionState}.`);\r\n\r\n        this.transport = undefined;\r\n\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this.stopError || error;\r\n        this.stopError = undefined;\r\n\r\n        if (this.connectionState === ConnectionState.Disconnected) {\r\n            this.logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Connecting) {\r\n            this.logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection hasn't yet left the in the connecting state.`);\r\n            return;\r\n        }\r\n\r\n        if (this.connectionState === ConnectionState.Disconnecting) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this.stopPromiseResolver();\r\n        }\r\n\r\n        if (error) {\r\n            this.logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        } else {\r\n            this.logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n\r\n        if (this.sendQueue) {\r\n            this.sendQueue.stop().catch((e) => {\r\n                this.logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this.sendQueue = undefined;\r\n        }\r\n\r\n        this.connectionId = undefined;\r\n        this.connectionState = ConnectionState.Disconnected;\r\n\r\n        if (this.connectionStarted) {\r\n            this.connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            } catch (e) {\r\n                this.logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private resolveUrl(url: string): string {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n\r\n        if (!Platform.isBrowser || !window.document) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n\r\n        this.logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n\r\n    private resolveNegotiateUrl(url: string): string {\r\n        const index = url.indexOf(\"?\");\r\n        let negotiateUrl = url.substring(0, index === -1 ? url.length : index);\r\n        if (negotiateUrl[negotiateUrl.length - 1] !== \"/\") {\r\n            negotiateUrl += \"/\";\r\n        }\r\n        negotiateUrl += \"negotiate\";\r\n        negotiateUrl += index === -1 ? \"\" : url.substring(index);\r\n\r\n        if (negotiateUrl.indexOf(\"negotiateVersion\") === -1) {\r\n            negotiateUrl += index === -1 ? \"?\" : \"&\";\r\n            negotiateUrl += \"negotiateVersion=\" + this.negotiateVersion;\r\n        }\r\n        return negotiateUrl;\r\n    }\r\n}\r\n\r\nfunction transportMatches(requestedTransport: HttpTransportType | undefined, actualTransport: HttpTransportType) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    private buffer: any[] = [];\r\n    private sendBufferedData: PromiseSource;\r\n    private executing: boolean = true;\r\n    private transportResult?: PromiseSource;\r\n    private sendLoopPromise: Promise<void>;\r\n\r\n    constructor(private readonly transport: ITransport) {\r\n        this.sendBufferedData = new PromiseSource();\r\n        this.transportResult = new PromiseSource();\r\n\r\n        this.sendLoopPromise = this.sendLoop();\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        this.bufferData(data);\r\n        if (!this.transportResult) {\r\n            this.transportResult = new PromiseSource();\r\n        }\r\n        return this.transportResult.promise;\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this.executing = false;\r\n        this.sendBufferedData.resolve();\r\n        return this.sendLoopPromise;\r\n    }\r\n\r\n    private bufferData(data: string | ArrayBuffer): void {\r\n        if (this.buffer.length && typeof(this.buffer[0]) !== typeof(data)) {\r\n            throw new Error(`Expected data to be of type ${typeof(this.buffer)} but was of type ${typeof(data)}`);\r\n        }\r\n\r\n        this.buffer.push(data);\r\n        this.sendBufferedData.resolve();\r\n    }\r\n\r\n    private async sendLoop(): Promise<void> {\r\n        while (true) {\r\n            await this.sendBufferedData.promise;\r\n\r\n            if (!this.executing) {\r\n                if (this.transportResult) {\r\n                    this.transportResult.reject(\"Connection stopped.\");\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            this.sendBufferedData = new PromiseSource();\r\n\r\n            const transportResult = this.transportResult!;\r\n            this.transportResult = undefined;\r\n\r\n            const data = typeof(this.buffer[0]) === \"string\" ?\r\n                this.buffer.join(\"\") :\r\n                TransportSendQueue.concatBuffers(this.buffer);\r\n\r\n            this.buffer.length = 0;\r\n\r\n            try {\r\n                await this.transport.send(data);\r\n                transportResult.resolve();\r\n            } catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static concatBuffers(arrayBuffers: ArrayBuffer[]): ArrayBuffer {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass PromiseSource {\r\n    private resolver?: () => void;\r\n    private rejecter!: (reason?: any) => void;\r\n    public promise: Promise<void>;\r\n\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this.resolver, this.rejecter] = [resolve, reject]);\r\n    }\r\n\r\n    public resolve(): void {\r\n        this.resolver!();\r\n    }\r\n\r\n    public reject(reason?: any): void {\r\n        this.rejecter!(reason);\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { CompletionMessage, HubMessage, IHubProtocol, InvocationMessage, MessageType, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\n\r\nconst JSON_HUB_PROTOCOL_NAME: string = \"json\";\r\n\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol implements IHubProtocol {\r\n\r\n    /** @inheritDoc */\r\n    public readonly name: string = JSON_HUB_PROTOCOL_NAME;\r\n    /** @inheritDoc */\r\n    public readonly version: number = 1;\r\n\r\n    /** @inheritDoc */\r\n    public readonly transferFormat: TransferFormat = TransferFormat.Text;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    public parseMessages(input: string, logger: ILogger): HubMessage[] {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n\r\n        if (!input) {\r\n            return [];\r\n        }\r\n\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message) as HubMessage;\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this.isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this.isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this.isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n\r\n        return hubMessages;\r\n    }\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    public writeMessage(message: HubMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n\r\n    private isInvocationMessage(message: InvocationMessage): void {\r\n        this.assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n\r\n        if (message.invocationId !== undefined) {\r\n            this.assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n\r\n    private isStreamItemMessage(message: StreamItemMessage): void {\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n\r\n    private isCompletionMessage(message: CompletionMessage): void {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        if (!message.result && message.error) {\r\n            this.assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        this.assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n\r\n    private assertNotEmptyString(value: any, errorMessage: string): void {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { IHubProtocol } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { HttpTransportType } from \"./ITransport\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n\r\n// tslint:disable:object-literal-sort-keys\r\nconst LogLevelNameMapping = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\n\r\nfunction parseLogLevel(name: string): LogLevel {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    } else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    /** @internal */\r\n    public protocol?: IHubProtocol;\r\n    /** @internal */\r\n    public httpConnectionOptions?: IHttpConnectionOptions;\r\n    /** @internal */\r\n    public url?: string;\r\n    /** @internal */\r\n    public logger?: ILogger;\r\n\r\n    /** If defined, this indicates the client should automatically attempt to reconnect if the connection is lost. */\r\n    /** @internal */\r\n    public reconnectPolicy?: IRetryPolicy;\r\n\r\n    /** Configures console logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel} logLevel The minimum level of messages to log. Anything at this level, or a more severe level, will be logged.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logLevel: LogLevel): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {ILogger} logger An object implementing the {@link @microsoft/signalr.ILogger} interface, which will be used to write all log messages.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logger: ILogger): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {string} logLevel A string representing a LogLevel setting a minimum level of messages to log.\r\n     *    See {@link https://docs.microsoft.com/en-us/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     */\r\n    public configureLogging(logLevel: string): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel | string | ILogger} logging A {@link @microsoft/signalr.LogLevel}, a string representing a LogLevel, or an object implementing the {@link @microsoft/signalr.ILogger} interface.\r\n     *    See {@link https://docs.microsoft.com/en-us/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder;\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder {\r\n        Arg.isRequired(logging, \"logging\");\r\n\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        } else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        } else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * The transport will be selected automatically based on what the server and client support.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified HTTP-based transport to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {HttpTransportType} transportType The specific transport to use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, transportType: HttpTransportType): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {IHttpConnectionOptions} options An options object used to configure the connection.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, options: IHttpConnectionOptions): HubConnectionBuilder;\r\n    public withUrl(url: string, transportTypeOrOptions?: IHttpConnectionOptions | HttpTransportType): HubConnectionBuilder {\r\n        Arg.isRequired(url, \"url\");\r\n\r\n        this.url = url;\r\n\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        } else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    public withHubProtocol(protocol: IHubProtocol): HubConnectionBuilder {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     * By default, the client will wait 0, 2, 10 and 30 seconds respectively before trying up to 4 reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {number[]} retryDelays An array containing the delays in milliseconds before trying each reconnect attempt.\r\n     * The length of the array represents how many failed reconnect attempts it takes before the client will stop attempting to reconnect.\r\n     */\r\n    public withAutomaticReconnect(retryDelays: number[]): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {IRetryPolicy} reconnectPolicy An {@link @microsoft/signalR.IRetryPolicy} that controls the timing and number of reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(reconnectPolicy: IRetryPolicy): HubConnectionBuilder;\r\n    public withAutomaticReconnect(retryDelaysOrReconnectPolicy?: number[] | IRetryPolicy): HubConnectionBuilder {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        } else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        } else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    public build(): HubConnection {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n\r\n        return HubConnection.create(\r\n            connection,\r\n            this.logger || NullLogger.instance,\r\n            this.protocol || new JsonHubProtocol(),\r\n            this.reconnectPolicy);\r\n    }\r\n}\r\n\r\nfunction isLogger(logger: any): logger is ILogger {\r\n    return logger.log !== undefined;\r\n}\r\n","// Copyright (c) .NET Foundation. All rights reserved.\r\n// Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.\r\n\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\nexport const VERSION: string = \"0.0.0-DEV_BUILD\";\r\n\r\n// Everything that users need to access must be exported here. Including interfaces.\r\nexport { AbortSignal } from \"./AbortController\";\r\nexport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nexport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nexport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nexport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nexport { HubConnection, HubConnectionState } from \"./HubConnection\";\r\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\r\nexport { MessageType, MessageHeaders, HubMessage, HubMessageBase, HubInvocationMessage, InvocationMessage, StreamInvocationMessage, StreamItemMessage, CompletionMessage,\r\n    PingMessage, CloseMessage, CancelInvocationMessage, IHubProtocol } from \"./IHubProtocol\";\r\nexport { ILogger, LogLevel } from \"./ILogger\";\r\nexport { HttpTransportType, TransferFormat, ITransport } from \"./ITransport\";\r\nexport { IStreamSubscriber, IStreamResult, ISubscription } from \"./Stream\";\r\nexport { NullLogger } from \"./Loggers\";\r\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nexport { Subject } from \"./Subject\";\r\nexport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\n"],"sourceRoot":""}